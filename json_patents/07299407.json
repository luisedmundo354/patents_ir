{
    "title": "Marking and annotating electronic documents",
    "abstract": "A user can highlight text and provide accompanying annotations. Highlighted text, accompanying annotations, and time-stamp information are stored in a user profile that is maintained locally with a web browser, at the client side. A retrieved web page is presented to a user with annotations of some form, based upon the user profile. The retrieved web page may typically be annotated through marked or highlighted portions of text, so that the user can readily locate this information in the web page, and assess the relevance of the retrieved page.",
    "inventors": [
        "Joshi",
        "Mohania"
    ],
    "document_number": "07299407",
    "publication_date": "20071120",
    "assignees": [
        "International Business Machines Corporation"
    ],
    "claims": [
        {
            "claim_number": "CLM-00001",
            "preamble": "1. A method for marking and annotating an electronic document, said method comprising:",
            "components": [
                {
                    "component": "at a client side, a user highlighting text in a web page, and providing comments accompanying the highlighted text in order to provide a user context of said highlighted text, relating to user interests in a first electronic document;",
                    "subcomponents": []
                },
                {
                    "component": "a text extractor extracting the highlighted text from said web page and creating text strings associated with said highlighted text;",
                    "subcomponents": []
                },
                {
                    "component": "said text extractor sending said text string to an annotator;",
                    "subcomponents": []
                },
                {
                    "component": "said user using said annotator to annotate said text relating to said user interests, wherein said annotating comprises using said user context of said highlighted text to distinguish between different possible meanings of said highlighted text;",
                    "subcomponents": []
                },
                {
                    "component": "storing the annotations, the highlighted text, and the accompanying comments at said client side as a user profile based upon said annotations;",
                    "subcomponents": []
                },
                {
                    "component": "retrieving said web page by a hypertext transfer protocol (HTTP) client via a web server;",
                    "subcomponents": []
                },
                {
                    "component": "providing said web page to a profiler;",
                    "subcomponents": []
                },
                {
                    "component": "said profiler reading said user profiler established for a particular user;",
                    "subcomponents": []
                },
                {
                    "component": "said profiler retrieving a list of all annotations in said user profiler;",
                    "subcomponents": []
                },
                {
                    "component": "for each annotation in said list, said profiler:",
                    "subcomponents": [
                        "retrieving a list of all corresponding highlighted text; and",
                        "querying an ontology plug-in component to retrieve a list of all synonyms for said each annotation;"
                    ]
                },
                {
                    "component": "retrieving a list of all corresponding highlighted text; and",
                    "subcomponents": []
                },
                {
                    "component": "querying an ontology plug-in component to retrieve a list of all synonyms for said each annotation;",
                    "subcomponents": []
                },
                {
                    "component": "said profiler passing said list of all synonyms, said list of all corresponding highlighted text, said each annotation, and said web page to a match finder;",
                    "subcomponents": []
                },
                {
                    "component": "said match finder passing said list of all corresponding highlighted text and said web page to a pattern locator;",
                    "subcomponents": []
                },
                {
                    "component": "said pattern locator finding a position of each text element of said list of all corresponding highlighted text in said web page;",
                    "subcomponents": []
                },
                {
                    "component": "said pattern locator returning back a first list of position pairs providing beginning and ending positions of a sentence in the retrieved web page in which said text strings were approximately matched;",
                    "subcomponents": []
                },
                {
                    "component": "said match finder storing said first list of position pairs;",
                    "subcomponents": []
                },
                {
                    "component": "said match finder passing said list of all synonyms, said each annotation, and said web page to said pattern locator;",
                    "subcomponents": []
                },
                {
                    "component": "said pattern locator performing an exact string matching process for each of the strings in all synonyms and said each annotation in said web page;",
                    "subcomponents": []
                },
                {
                    "component": "said pattern locator returning back a second list of position pairs providing beginning and ending positions of a sentence in said retrieved web page in which said text strings were exactly matched;",
                    "subcomponents": []
                },
                {
                    "component": "said match finder merging said first list of position pairs and said second list of position pairs and removing duplicate entries in the merged list;",
                    "subcomponents": []
                },
                {
                    "component": "for each entry in said merged list, said match finder augmenting said each annotation and storing a resulting triplet in a pattern list;",
                    "subcomponents": []
                },
                {
                    "component": "said match finder sending a signal to said profiler that said match finder has updated said pattern list for said each annotation;",
                    "subcomponents": []
                },
                {
                    "component": "said profiler sending a signal to said match finder that all annotations have been processed;",
                    "subcomponents": []
                },
                {
                    "component": "said profiler sending said match finder said web page and said list of all annotations;",
                    "subcomponents": []
                },
                {
                    "component": "said match finder sending said web page, said list of all annotations, and said pattern list to a page composer; and",
                    "subcomponents": []
                },
                {
                    "component": "said page composer performing:",
                    "subcomponents": [
                        "for each annotation in said list of all annotations, assigning a unique combination of foreground and background colors;",
                        "for each said triplet in said pattern list, obtaining a starting position and ending position of the sentence in said web page and then inserting Hypertext Markup Language (HTML) tags at the starting and ending positions so that the text of said sentence appears in bold with said foreground and background colors corresponding to said annotation;",
                        "inserting a tag so that said annotation is shown as a tip when a user rolls a mouse over the sentence text; and",
                        "presenting a modified web page to said user."
                    ]
                },
                {
                    "component": "for each annotation in said list of all annotations, assigning a unique combination of foreground and background colors;",
                    "subcomponents": []
                },
                {
                    "component": "for each said triplet in said pattern list, obtaining a starting position and ending position of the sentence in said web page and then inserting Hypertext Markup Language (HTML) tags at the starting and ending positions so that the text of said sentence appears in bold with said foreground and background colors corresponding to said annotation;",
                    "subcomponents": []
                },
                {
                    "component": "inserting a tag so that said annotation is shown as a tip when a user rolls a mouse over the sentence text; and",
                    "subcomponents": []
                },
                {
                    "component": "presenting a modified web page to said user.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00002",
            "preamble": "2. A computer program product for annotating an electronic document comprising computer software recorded on a computer-readable medium for performing a method for marking and annotating an electronic document, said method composing:",
            "components": [
                {
                    "component": "at a client side, a user highlighting text in a web page, and providing comments accompanying the highlighted text in order to provide a user context of said highlighted text, relating to user interests in a first electronic document;",
                    "subcomponents": []
                },
                {
                    "component": "a text extractor extracting the highlighted text from said web page and creating text strings associated with said highlighted text;",
                    "subcomponents": []
                },
                {
                    "component": "said text extractor sending said text string to an annotator;",
                    "subcomponents": []
                },
                {
                    "component": "said user using said annotator to annotate said text relating to said user interests, wherein said annotating comprises using said user context of said highlighted text to distinguish between different possible meanings of said highlighted text;",
                    "subcomponents": []
                },
                {
                    "component": "storing the annotations, the highlighted text, and the accompanying comments at said client side as a user profile based upon said annotations;",
                    "subcomponents": []
                },
                {
                    "component": "retrieving said web page by a hypertext transfer protocol (HTTP) client via a web server;",
                    "subcomponents": []
                },
                {
                    "component": "providing said web page to a profiler;",
                    "subcomponents": []
                },
                {
                    "component": "said profiler reading said user profiler established for a particular user;",
                    "subcomponents": []
                },
                {
                    "component": "said profiler retrieving a list of all annotations in said user profiler;",
                    "subcomponents": []
                },
                {
                    "component": "for each annotation in said list, said profiler:",
                    "subcomponents": [
                        "retrieving a list of all corresponding highlighted text; and",
                        "querying an ontology plug-in component to retrieve a list of all synonyms for said each annotation;"
                    ]
                },
                {
                    "component": "retrieving a list of all corresponding highlighted text; and",
                    "subcomponents": []
                },
                {
                    "component": "querying an ontology plug-in component to retrieve a list of all synonyms for said each annotation;",
                    "subcomponents": []
                },
                {
                    "component": "said profiler passing said list of all synonyms, said list of all corresponding highlighted text, said each annotation, and said web page to a match finder;",
                    "subcomponents": []
                },
                {
                    "component": "said match finder passing said list of all corresponding highlighted text and said web page to a pattern locator;",
                    "subcomponents": []
                },
                {
                    "component": "said pattern locator finding a position of each text element of said list of all corresponding highlighted text in said web page;",
                    "subcomponents": []
                },
                {
                    "component": "said pattern locator returning back a first list of position pairs providing beginning and ending positions of a sentence in the retrieved web page in which said text strings were approximately matched;",
                    "subcomponents": []
                },
                {
                    "component": "said match finder storing said first list of position pairs;",
                    "subcomponents": []
                },
                {
                    "component": "said match finder passing said list of all synonyms, said each annotation, and said web page to said pattern locator;",
                    "subcomponents": []
                },
                {
                    "component": "said pattern locator performing an exact string matching process for each of the strings in all synonyms and said each annotation in said web page;",
                    "subcomponents": []
                },
                {
                    "component": "said pattern locator returning back a second list of position pairs providing beginning and ending positions of a sentence in said retrieved web page in which said text strings were exactly matched;",
                    "subcomponents": []
                },
                {
                    "component": "said match finder merging said first list of position pairs and said second list of position pairs and removing duplicate entries in the merged list;",
                    "subcomponents": []
                },
                {
                    "component": "for each entry in said merged list, said match finder augmenting said each annotation and storing a resulting triplet in a pattern list;",
                    "subcomponents": []
                },
                {
                    "component": "said match finder sending a signal to said profiler that said match finder has updated said pattern list for said each annotation;",
                    "subcomponents": []
                },
                {
                    "component": "said profiler sending a signal to said match finder that all annotations have been processed;",
                    "subcomponents": []
                },
                {
                    "component": "said profiler sending said match finder said web page and said list of all annotations;",
                    "subcomponents": []
                },
                {
                    "component": "said match finder sending said web page, said list of all annotations, and said pattern list to a page composer; and",
                    "subcomponents": []
                },
                {
                    "component": "said page composer performing:",
                    "subcomponents": [
                        "for each annotation in said list of all annotations, assigning a unique combination of foreground and background colors;",
                        "for each said triplet in said pattern list, obtaining a starting position and ending position of the sentence in said web page and then inserting Hypertext Markup Language (HTML) tags at the starting and ending positions so that the text of said sentence appears in bold with said foreground and background colors corresponding to said annotation;",
                        "inserting a tag so that said annotation is shown as a tip when a user rolls a mouse over the sentence text; and",
                        "presenting a modified web page to said user."
                    ]
                },
                {
                    "component": "for each annotation in said list of all annotations, assigning a unique combination of foreground and background colors;",
                    "subcomponents": []
                },
                {
                    "component": "for each said triplet in said pattern list, obtaining a starting position and ending position of the sentence in said web page and then inserting Hypertext Markup Language (HTML) tags at the starting and ending positions so that the text of said sentence appears in bold with said foreground and background colors corresponding to said annotation;",
                    "subcomponents": []
                },
                {
                    "component": "inserting a tag so that said annotation is shown as a tip when a user rolls a mouse over the sentence text; and",
                    "subcomponents": []
                },
                {
                    "component": "presenting a modified web page to said user.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00003",
            "preamble": "3. A computer system for annotating electronic documents comprising computer software recorded on a computer-readable medium, said computer system comprising:",
            "components": [
                {
                    "component": "a client side comprising a user highlighting text in a web page and providing comments accompanying the highlighted text in order to provide a user context of said highlighted text, relating to user interests in a first electronic document;",
                    "subcomponents": []
                },
                {
                    "component": "a text extractor extracting the highlighted text from said web page and creating text strings associated with said highlighted text;",
                    "subcomponents": []
                },
                {
                    "component": "said text extractor sending said text string to an annotator;",
                    "subcomponents": []
                },
                {
                    "component": "said user using said annotator to annotate said text relating to said user interests, wherein said annotating comprises using said user context of said highlighted text to distinguish between different possible meanings of said highlighted text;",
                    "subcomponents": []
                },
                {
                    "component": "a user profile adapted to store the annotations, the highlighted text, and the accompanying comments based upon said annotations;",
                    "subcomponents": []
                },
                {
                    "component": "a hypertext transfer protocol (HTTP) client adapted to retrieve said web page by via a web server;",
                    "subcomponents": []
                },
                {
                    "component": "a profiler adapted to receive said web page, wherein said profiler is adapted to:",
                    "subcomponents": [
                        "read said user profiler established for a particular user;",
                        "retrieve a list of all annotations in said user profiler;",
                        "for each annotation in said list, said profiler further adapted to:",
                        "retrieve a list of all corresponding highlighted text; and",
                        "query an ontology plug-in component to retrieve a list of all synonyms for said each annotation;",
                        "pass said list of all synonyms, said list of all corresponding highlighted text, said each annotation, and said web page to a match finder;"
                    ]
                },
                {
                    "component": "read said user profiler established for a particular user;",
                    "subcomponents": []
                },
                {
                    "component": "retrieve a list of all annotations in said user profiler;",
                    "subcomponents": []
                },
                {
                    "component": "for each annotation in said list, said profiler further adapted to:",
                    "subcomponents": [
                        "retrieve a list of all corresponding highlighted text; and",
                        "query an ontology plug-in component to retrieve a list of all synonyms for said each annotation;"
                    ]
                },
                {
                    "component": "retrieve a list of all corresponding highlighted text; and",
                    "subcomponents": []
                },
                {
                    "component": "query an ontology plug-in component to retrieve a list of all synonyms for said each annotation;",
                    "subcomponents": []
                },
                {
                    "component": "pass said list of all synonyms, said list of all corresponding highlighted text, said each annotation, and said web page to a match finder;",
                    "subcomponents": []
                },
                {
                    "component": "wherein said match finder is adapted to pass said list of all corresponding highlighted text and said web page to a pattern locator;",
                    "subcomponents": []
                },
                {
                    "component": "wherein said pattern locator is adapted to:",
                    "subcomponents": [
                        "find a position of each text element of said list of all corresponding highlighted text in said web page; and",
                        "return back a first list of position pairs providing beginning and ending positions of a sentence in the retrieved web page in which said text strings were approximately matched;"
                    ]
                },
                {
                    "component": "find a position of each text element of said list of all corresponding highlighted text in said web page; and",
                    "subcomponents": []
                },
                {
                    "component": "return back a first list of position pairs providing beginning and ending positions of a sentence in the retrieved web page in which said text strings were approximately matched;",
                    "subcomponents": []
                },
                {
                    "component": "wherein said match finder is adapted to store said first list of position pairs;",
                    "subcomponents": []
                },
                {
                    "component": "said match finder passing said list of all synonyms, said each annotation, and said web page to said pattern locator;",
                    "subcomponents": []
                },
                {
                    "component": "wherein said pattern locator is further adapted to:",
                    "subcomponents": [
                        "perform an exact string matching process for each of the strings in all synonyms and said each annotation in said web page;",
                        "return back a second list of position pairs providing beginning and ending positions of a sentence in said retrieved web page in which said text strings were exactly matched;"
                    ]
                },
                {
                    "component": "perform an exact string matching process for each of the strings in all synonyms and said each annotation in said web page;",
                    "subcomponents": []
                },
                {
                    "component": "return back a second list of position pairs providing beginning and ending positions of a sentence in said retrieved web page in which said text strings were exactly matched;",
                    "subcomponents": []
                },
                {
                    "component": "wherein said match finder is further adapted to:",
                    "subcomponents": [
                        "merge said first list of position pairs and said second list of position pairs and removing duplicate entries in the merged list;",
                        "for each entry in said merged list, augment said each annotation and storing a resulting triplet in a pattern list;",
                        "send a signal to said profiler that said match finder has updated said pattern list for said each annotation;"
                    ]
                },
                {
                    "component": "merge said first list of position pairs and said second list of position pairs and removing duplicate entries in the merged list;",
                    "subcomponents": []
                },
                {
                    "component": "for each entry in said merged list, augment said each annotation and storing a resulting triplet in a pattern list;",
                    "subcomponents": []
                },
                {
                    "component": "send a signal to said profiler that said match finder has updated said pattern list for said each annotation;",
                    "subcomponents": []
                },
                {
                    "component": "wherein said profiler is further adapted to:",
                    "subcomponents": [
                        "send a signal to said match finder that all annotations have been processed;",
                        "send said match finder said web page and said list of all annotations;"
                    ]
                },
                {
                    "component": "send a signal to said match finder that all annotations have been processed;",
                    "subcomponents": []
                },
                {
                    "component": "send said match finder said web page and said list of all annotations;",
                    "subcomponents": []
                },
                {
                    "component": "wherein said match finder is further adapted to send said web page, said list of all annotations, and said pattern list to a page composer;",
                    "subcomponents": []
                },
                {
                    "component": "wherein said page composer is adapted to:",
                    "subcomponents": [
                        "for each annotation in said list of all annotations, assign a unique combination of foreground and background colors;",
                        "for each said triplet in said pattern list, obtain a starting position and ending position of the sentence in said web page and then inserting Hypertext Markup Language (HTML) tags at the starting and ending positions so that the text of said sentence appears in bold with said foreground and background colors corresponding to said annotation;",
                        "insert a tag so that said annotation is shown as a tip when a user rolls a mouse over the sentence text; and",
                        "present a modified web page to said user."
                    ]
                },
                {
                    "component": "for each annotation in said list of all annotations, assign a unique combination of foreground and background colors;",
                    "subcomponents": []
                },
                {
                    "component": "for each said triplet in said pattern list, obtain a starting position and ending position of the sentence in said web page and then inserting Hypertext Markup Language (HTML) tags at the starting and ending positions so that the text of said sentence appears in bold with said foreground and background colors corresponding to said annotation;",
                    "subcomponents": []
                },
                {
                    "component": "insert a tag so that said annotation is shown as a tip when a user rolls a mouse over the sentence text; and",
                    "subcomponents": []
                },
                {
                    "component": "present a modified web page to said user.",
                    "subcomponents": []
                }
            ]
        }
    ],
    "description": [
        "The present invention relates to marking and annotating electronic documents, such as Web pages, based on a user's highlighted preferences history.",
        "Web personalization involves tailoring Web content directly to a specific user. This can be accomplished by having the user provide information to the Web site directly, or through tracking of the user's behavior on the site. The software on the Web site then can modify the content to suit the particular user's needs. That is, all the personalization is done at the Web site.",
        "Typically, a Web site maintains profiles of the users that visits the site, and analyzes the information gathered. Based on this analysis, information of interest to each user is delivered.",
        "Explicit or implicit profiling techniques can be used to collect user information, either alone or in combination. Explicit profiling involves asking each user to complete a questionnaire or similar, while implicit profiling involves tracking the behavior of each user, and drawing inferences from such observed behavior.",
        "One form of implicit profiling involves the use of \u201ccookies\u201d that are stored at the browser and updated at each visit, and record browsing patterns.",
        "To present appropriate content to the user and make proper recommendation, rule-based techniques or filtering techniques can be used. Filtering techniques may involve simple filtering, content-based filtering and collaborative filtering. Collaborative-filtering software compares the information gained about one user's behavior against data about other users with similar interests.",
        "None of the techniques described above are entirely satisfactory. Consequently, techniques are sought that have application in navigating electronic content.",
        "A user's interest in a recently viewed web page can be determined automatically from that user's highlighted text and annotation history profiled from the previously viewed web pages. Such annotations typically constitute marked or highlighted portions of text, accompanying comments, or other forms of annotation. This annotation information is maintained in a user profile at the client side. A retrieved web page is presented to a user with annotations of some form, based upon the viewer's user profile. The retrieved web page may typically be annotated through marked or highlighted portions of text, so that the user can readily locate this information in the web page, and assess the relevance of the retrieved page.",
        "A context for the highlighted information is obtained by annotating the text, and can be presented to the user along with the text. A web page presented to the user is marked to indicate the information of interest. When a user rolls the mouse over this text, the annotation is shown at the mouse position. This is the context that applies to the text, which indicates to the user the broad topic to which the marked text relates. Ontology can be represented in any form, and can be stored as a database, and represents relationships between words. A word-net can be used to enhance this gathered information. Information concerning the user's interest can be presented to the user without the need for server-side processing.",
        "Highlighted text, accompanying comments, and time-stamp information are stored in a user profile that is maintained locally with the browser, at the client side. The user profile is updated as the user visits new pages and annotates these web pages. When a user accesses a new web page, text in this page that is, for example, similar to the text stored in the user profile, is automatically marked. Other annotations can also be assigned. Since the marking occurs at the client side, profiles can be shared and used across different sites the user visits.",
        "FIG. 1 is a schematic representation of a system architecture for annotating electronic documents.",
        "FIG. 2 is a schematic representation of components of a preference-enable text marker.",
        "FIG. 3 is a schematic representation of a computer interface having a dialog box for prompting a user to annotate text.",
        "FIG. 4 is Javascript code that can be added to a Web page to faciliate annotation of the highlighted text on the Web page.",
        "FIG. 5 is a schematic representation of a computer interface indicating information of interest to a user.",
        "FIG. 6 is a schematic representation of a computer system suitable for operating the described computer interfaces.",
        "FIG. 1 schematically represents an architecture of the described system. A Web Browser 100 is enabled to create and update a User Profile 130 based on highlighted and annotated text of previous web pages. The Web Browser 100 then marks the text in the retrieved Web Page 150 based on the User Profile 130. The marked Web Page 150 is presented to the user by the Web Browser 100.",
        "The system architecture of FIG. 1 has five components that supplement the Web Browser 100, namely, User Manager 110, Event Listener and Text Extractor 112, Annotator 114, Profile Manager 116 and Preference Enabled Text Marker 118 that supplement the functionality of a conventional web browser. Each of these components is described in turn below. FIG. 2 schematically represents components of the Preference Enabled Text Marker 118, described in further detail below.",
        "User Manager: The main function of the User Manager 110 is to identify the \u201cuserid\u201d of the \u201clogged on\u201d user. The User Manager 110 also creates a User Profile 130, if a User Profile 130 does not already exist. Each user has their own User Profile 130 that stores their preferences. The User Manager 110 maintains the privacy of each user. The security and privacy of the User Profile 130 can be maintained using the file system user privileges provided by the operating system. If the operating system does not provide a way to identify the user, then the system can maintain a single User Profile 130 that is common to all the users of that particular instance of the Web Browser 100.",
        "Event Listener and Text Extractor: The Event Listener and Text Extractor 112 listens to the \u201cmouse-dragged\u201d event. This operating system event gets fired whenever a user highlights particular text in a web page. When the event is fired the Event Listener and Text Extractor 112 extracts the highlighted text from the web page and sends the text string to the Annotator 114, which is described directly below.",
        "Annotator: The Annotator 114 enables the user to annotate the user's highlighted text. This allows the user to associate the context with the highlighted text. When the user annotates a text, the user's annotating comments may either summarize the text or disambiguate the text. This is what meant by giving a context to the text of interest to the user. For example, a particular text about networking might be of interest to one user because the text is about wireless networking, for another user the text may be interesting since the text is about security. So when the user annotates the text with words \u201cnetwork security\u201d, this is the context in which the user looking for further information. Therefore, a particular text might be relevant within different contexts, i.e., the text can have different meanings depending upon how the text is used. Thus, annotation helps the system to distinguish between different possible meanings of the text. The second use of annotation is to summarize a text. For example, the user visits page \u201cA\u201d and highlights the text \u201coptimized to manage large collections of smaller objects such as statements and reports and checks\u201d appearing on page \u201cA\u201d. The system does not in his case receive any information concerning what the information is about. Annotator 114, however, allow the user to mark this information with the annotation of \u201ccontent manager\u201d. Now the system can make use of the annotation to find the information of the user interest in the pages that talk about \u201ccontent manager\u201d. Once the highlighted text is annotated, if any, then the Annotator 114 passes the highlighted text along with accompanying annotation to the Profile Manager 116.",
        "Profile Manager: Profile Manager 116 receives the annotated highlighted text from the Annotator 114. Profile Manager 116 obtains the file system location of the User Profile 130 from the User Manager 110. Profile Manager 116 then stores this highlighted text along with the associated annotation in the User Profile 130. Table 1 below presents the format of the User Profile 130.",
        "TABLE 1\n\n\n\n\n\n\n\nFormat of User Profile 130\n\n\n\n\n\n\n\n\n\n\n\n\nTimestamp of\nTimestamp of\n\n\nHighlighted Text\n\\Annotation\nhighlighting\nExpiry\n\n\n\n\n\n...................\n...................\n...................\n\n\n\n...................\n...................\n...................\n\n\n...................\n...................\n...................",
        "As shown in Table 1 above, the User Profile 130 stores the time when the user highlighted and annotated the relevant text. The fourth row indicates the \u201clife\u201d of each entry in the User Profile 130 (that is, each highlighted text and its annotation). An \u201cExpiry date\u201d can be used to avoid maintaining the history beyond certain time.",
        "The user can set a system parameter that controls how much past history is considered when marking a Web Page 150. The Profile Manager 116 uses this parameter to compute the Timestamp of Expiry for the User Profile 130 entry. Suppose the user sets the parameters to indicate that the user is interested in keeping the history for 30 days. If an entry is made in the user profile, for page A on 1 Jan. 12 p.m. 30 days time is added to the time when the entry is inserted. This is the time of expiry. Time of expiry is 31 Jan. 12.00 pm. Now, on 10 Jan. the user again changes the parameter to contain 20 days of history. The time of expiry for page A is updated by adding 20 days to timestamp of highlighting. Alternatively, after highlighting and annotating the user can be prompted to provide the time duration for which the information is to persist in the User Profile 130. The expiry time for the information is then calculated and stored in the User Profile 130 along with the other information. Profile Manager 116 runs a maintenance algorithm that removes entries in the User Profile 130 that are expired.",
        "Preference-Enabled Text Marker: The Preference Enabled Text Marker 118 receives web pages from the HTTP client 119 in the Web Browser 100, which in turn retrieves web pages from the Web Server 120. The Preference Enabled Text Marker 118 presents web pages to the user in such a way that the information is highlighted and annotated automatically. This highlighting and annotation is based upon the User Profile 130, which contains the history of the highlighted text and annotations from the previously browsed pages. FIG. 2 schematically represents different components of the Preference Enabled Text Marker 118.",
        "Various steps performed by the Preference Enabled Text Marker 118 are now described with reference to the components of the Preference Enabled Text Marker 118 depicted in FIG. 2. Let LA be a list of all annotations (List of Annotations) in the User Profile 130, let Ti be the list of all highlighted text available in the user profile for annotation \u03b1i, and let Si be the list of synonyms of annotation \u03b1i. Table 2 below presents an algorithm performed by the Preference Enabled Text Marker 118.",
        "TABLE 2\n\n\n\n\n\n\n\n1.\nA page W retrieved by the HTTP client 119 from the Web Server 120 is provided\n\n\n\nto the Profiler 216.\n\n\n2.\nThe Profiler 216 then reads the User Profile 130 of that user and retrieves LA\n\n\n3.\nFor each annotation ai in the list LA\n\n\n\n\n\n\n\n\n\n\na.\nProfiler 216 retrieves a list of all the corresponding highlighted\n\n\n\n\ntext entries Ti.\n\n\n\nb.\nProfiler 216 queries an Ontology Plug-in 140 to get Si.\n\n\n\nc.\nProfiler 216 passes Si, Ti, ai and W to the Match Finder 212.\n\n\n\nd.\nMatch Finder 212 passes Ti and W to Pattern Locator 210.\n\n\n\ne.\nPattern Locator 210 finds the position of each text element of\n\n\n\n\nTi in W, and returns back a list denoted by Pi of position pairs\n\n\n\n\n<bi, ei> providing beginning and ending positions of the\n\n\n\n\nsentence in the retrieved web page in which the strings were\n\n\n\n\napproximately matched.\n\n\n\nf.\nMatch Finder 212 stores this list Pi and then passes Si, ai and W\n\n\n\n\nto the Pattern Locator 210.\n\n\n\ng.\nPattern Locator 210 performs exact string matching for each of\n\n\n\n\nthe string in Si and ai in W. Pattern Locator 210 returns back a\n\n\n\n\nlist denoted Pj of position pairs <bi, ei> of the beginning and\n\n\n\n\nending positions of the sentence in the retrieved web page in\n\n\n\n\nwhich the strings were exactly matched.\n\n\n\nh.\nMatch Finder 212 now merges Pi and Pj and removes\n\n\n\n\nduplicates, if there are any. For each entry <bi, ei> in this\n\n\n\n\nmerged list, Match Finder 212 augments the annotation ai and\n\n\n\n\nstores the resulting triplet <bi, ei, ai> in pattern list LP.\n\n\n\ni.\nMatch Finder 212 sends a signal to Profiler 216 that Match\n\n\n\n\nFinder 212 has updated the pattern list for annotation ai.\n\n\n\n\n\n\n\n\n4.\nProfiler 216 sends a signal to Match Finder 212 that all the annotations have\n\n\n\nbeen processed and sends it W and LA.\n\n\n5.\nMatch Finder 212 then sends W, LA and pattern list LP to the Page Composer\n\n\n\n214.\n\n\n6.\nPage Composer 214 performs the following steps\n\n\n\n\n\n\n\n\n\n\na.\nFor each ai in LA. Page Composer 214 assigns a unique combination of\n\n\n\n\nforeground and background colors.\n\n\n\nb.\nFor each triplet <bi, ei, ai> in LP, the Page Composer 214 obtains the\n\n\n\n\nstarting position bi and ending position ei of the sentence in the Web\n\n\n\n\npage and then inserts Hypertext Markup Language (HTML) tags at the\n\n\n\n\nstarting and ending position so that the text of the sentence appears in\n\n\n\n\nbold with the foreground and background colors corresponding to ai.\n\n\n\n\nThis operation performs the marking for the text matching with the\n\n\n\n\nuser's preferences. Also Page Composer 214 inserts a special tag so that\n\n\n\n\nthe annotation ai is shown as a \u201ctip\u201d when user rolls the mouse over the\n\n\n\n\nsentence text.\n\n\n\n\n\n\n\n\n7.\nThe Page Composer 214 then presents this modified page to the user.",
        "The Pattern Locator 210 used by the Preference Enabled Text Marker 118 uses a module to perform approximate string matching in step 3e of Table 2, using any suitable approximate string matching algorithm. A suitable algorithm is described in Cole, R., Hariharan, R., \u201cApproximate String Matching: A simpler faster algorithm\u201d, SIAM Journal on Computing, Volume 31, Number 6, pages 1761-1782, 2002, the content of which is hereby incorporated by reference.",
        "FIG. 3 schematically represents a typical user experience while using the system. A user interface window 310 displays text 340. When a user highlights a portion of text 350, Event Listener and Text Extractor 112 is activated and extracts the highlighted text, which is passed to the Annotator 114. Annotator 114 then prompts the user to provide an accompanying comment 330 for the highlighted text 350 using a dialog box 320.",
        "Web Browser Implementations",
        "A web browser having the functionality described herein can be constructed by adding appropriate components to a conventional browser. The browser needs to read the User Profile 130, which is created by the user. The user appropriately creates the User Profile 130 in the right (system) directory structure with the right schema so that the browser can read the User Profile 130, and take appropriate action in marking and annotating documents automatically.",
        "Alternatively, an implementation can be achieved without adding components to a Web browser, but by achieving equivalent functionality using code embedded in the actual Web pages. FIG. 4 presents Javascript code, which is interpreted by compatible browsers, and which can be used for this purpose.",
        "The web page is downloaded, and the User Manager 110 is invoked to identify the user and the appropriate user profile location. Javascript code can be added to the web page to provide the simulation for the Event Listener and Text Extractor 112, Annotator 114 and Profile Manager 116. The \u201cPreference Enabled Text Marker\u201d algorithm described above is then applied to the page, and the page is presented to the user through a web browser.",
        "A maintenance algorithm, which removes entries in the User Profile 130, is activated by the Profile Manager 116 and runs as a daemon in the background. To understand the working of the simulator, assume that the user \u201cxyz\u201d starts using the simulated system for the first time. The User Manager 110 identifies the user and creates the User Profile 130. Initially, the User Profile 130 is empty. If the user wants to browse the page www.abc.com the browser downloads the relevant page. The Javascript code of FIG. 4 is added to the downloaded page, either by including appropriate Javascript to the downloaded web page, or by using a suitable browser plugin for the browser.",
        "Since the user is using the system for the first time, the code for the \u201cPreference Enabled Text Marker\u201d presents the page to the user without alteration. When the user highlights and annotates information in this presented page, these annotations are stored in the User Profile 130. When the user sends a request to the simulator to browse another page, the same steps as mentioned above are carried out for this requested page. When the page is passed to Preference Enabled Text Marker 118, this page is passed to its various components and the simulator presents the final composed page to the user.",
        "Annotations to Browsed Documents",
        "FIG. 5 represents a page in which annotations are made based upon a user profile. In this example, when the user brings the mouse on top of the first line of text, a entry \u201cData Warehouse\u201d is displayed as the highlighted line is annotated by \u201cData Warehouse\u201d in FIG. 3, as recorded in the User Profile 130. In FIG. 3, the user annotates this same text, which is associated with this annotation in the User Profile 130. When a new page is fetched, the User Profile 130 is automatically applied on the fetched page and the text is automatically highlighted and annotated.",
        "Computer Hardware",
        "FIG. 6 is a schematic representation of a computer system 600 of a type that is suitable for executing computer software for annotating electronic documents in the manner described herein. Computer software executes under a suitable operating system installed on the computer system 600, and may be thought of as comprising various software code means for achieving particular steps.",
        "The components of the computer system 600 include a computer 620, a keyboard 610 and mouse 615, and a video display 690. The computer 620 includes a processor 640, a memory 650, input/output (I/O) interfaces 660, 665, a video interface 645, and a storage device 655.",
        "The processor 640 is a central processing unit (CPU) that executes the operating system and the computer software executing under the operating system. The memory 650 includes random access memory (RAM) and read-only memory (ROM), and is used under direction of the processor 640.",
        "The video interface 645 is connected to video display 690 and provides video signals for display on the video display 690. User input to operate the computer 620 is provided from the keyboard 610 and mouse 615. The storage device 655 can include a disk drive or any other suitable storage medium.",
        "Each of the components of the computer 620 is connected to an internal bus 630 that includes data, address, and control buses, to allow components of the computer 620 to communicate with each other via the bus 630.",
        "The computer system 600 can be connected to one or more other similar computers via a input/output (I/O) interface 665 using a communication channel 685 to a network, represented as the Internet 680.",
        "The computer software may be recorded on a portable storage medium, in which case, the computer software program is accessed by the computer system 600 from the storage device 655. Alternatively, the computer software can be accessed directly from the Internet 680 by the computer 620. In either case, a user can interact with the computer system 600 using the keyboard 610 and mouse 615 to operate the programmed computer software executing on the computer 620.",
        "Other configurations or types of computer systems can be equally well used to execute computer software that assists in implementing the techniques described herein.",
        "Various alterations and modifications can be made to the techniques and arrangements described herein, as would be apparent to one skilled in the relevant art."
    ],
    "citations": [
        "6269189",
        "6551357",
        "6571295",
        "6728760",
        "6928425",
        "2004/0034832",
        "2004/0078757",
        "2005/0160355"
    ],
    "us_classification": "715512",
    "international_classifications": [
        {
            "classification_level": "A",
            "section": "G",
            "classification_class": "06",
            "subclass": "F",
            "main_group": "17",
            "subgroup": "21"
        }
    ]
}