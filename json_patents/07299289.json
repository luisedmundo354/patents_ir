{
    "title": "Method, system, and article of manufacture for integrating streaming content and a real time interactive dynamic user interface over a network",
    "abstract": "A method and system is provided which allows for integrating streaming content and a real time interactive dynamic user interface on a network, such as the Internet. The system includes a web browser for receiving a user interface from a content server. The user interface, among other functions, detects an embedded code in a media file from a streaming content server. Based on the embedded code, the user interface spawns a Common Gateway Interface (CGI) process which retrieves information from a data store. The information in the data store may include rules for altering the displayed user interface. The system and method results in an interactive user interface which may be easily modified by altering the contents of the data store rather than altering and reindexing the media file.",
    "inventors": [
        "Lorenz",
        "Newman",
        "Pitts",
        "Gilman"
    ],
    "document_number": "07299289",
    "publication_date": "20071120",
    "assignees": [
        "Accordent Technologies, Inc."
    ],
    "claims": [
        {
            "claim_number": "CLM-00001",
            "preamble": "1. A method for obtaining streaming content from a processing device network, comprising:",
            "components": [
                {
                    "component": "requesting an interface program from a first processing device in the processing device network;",
                    "subcomponents": []
                },
                {
                    "component": "downloading the interface program to a second processing device in the processing device network;",
                    "subcomponents": []
                },
                {
                    "component": "displaying a user interface on a display of the second processing device;",
                    "subcomponents": []
                },
                {
                    "component": "requesting by the interface program a streaming media file from a third processing device on the processing device network;",
                    "subcomponents": []
                },
                {
                    "component": "downloading the streaming media file to the second processing device, wherein the streaming media file includes an embedded code;",
                    "subcomponents": []
                },
                {
                    "component": "detecting the embedded code that includes information that represents an address to a remote common gateway interface process;",
                    "subcomponents": []
                },
                {
                    "component": "spawning the remote common gateway interface process that retrieves an object from a data store in response to the information that represents the address to the remote common gateway interface process;",
                    "subcomponents": []
                },
                {
                    "component": "parsing the embedded code into a plurality of code segments by the remote common gateway interface process;",
                    "subcomponents": []
                },
                {
                    "component": "querying a memory location in the data store responsive to a code segment in the plurality of code segments; and,",
                    "subcomponents": []
                },
                {
                    "component": "responding to the object including rules in the memory location,",
                    "subcomponents": []
                },
                {
                    "component": "wherein the displayed user interface includes at least a first window and a second window,",
                    "subcomponents": []
                },
                {
                    "component": "wherein the embedded code is a metadata time code having a format of the address to the remote common gateway interface process, a variable and a target destination, and",
                    "subcomponents": []
                },
                {
                    "component": "wherein the common gateway interface process uses the variable to provide content to the first window identified by the target destination.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00002",
            "preamble": "2. The method of claim 1 , wherein the rules include updating the displayed user interface with a high resolution image stored in the data store and providing video responsive to the streaming media file.",
            "components": []
        },
        {
            "claim_number": "CLM-00003",
            "preamble": "3. The method of claim 1 , wherein the first processing device and the second processing device are different process devices.",
            "components": []
        },
        {
            "claim_number": "CLM-00004",
            "preamble": "4. The method of claim 1 , wherein the second processing device is a personal computer having a web browser.",
            "components": []
        },
        {
            "claim_number": "CLM-00005",
            "preamble": "5. The method of claim 1 , wherein the second processing device is a box coupled to a television.",
            "components": []
        },
        {
            "claim_number": "CLM-00006",
            "preamble": "6. The method of claim 1 , wherein the streaming media file is a advanced streaming format (.ASF) file.",
            "components": []
        },
        {
            "claim_number": "CLM-00007",
            "preamble": "7. The method of claim 1 , wherein the streaming media file is a real network media (.RM) file.",
            "components": []
        },
        {
            "claim_number": "CLM-00008",
            "preamble": "8. A method of claim 1 , wherein the third processing device is a media server.",
            "components": []
        },
        {
            "claim_number": "CLM-00009",
            "preamble": "9. The method of claim 1 , wherein the downloading step includes buffering a portion of the streaming media file.",
            "components": []
        },
        {
            "claim_number": "CLM-00010",
            "preamble": "10. The method of claim 1 , wherein the responding step includes updating the user interface display.",
            "components": []
        },
        {
            "claim_number": "CLM-00011",
            "preamble": "11. The method of claim 1 , further comprising changing an object, image, text and/or multimedia file in the data store while leaving the embedded code unchanged.",
            "components": []
        },
        {
            "claim_number": "CLM-00012",
            "preamble": "12. A system, comprising:",
            "components": [
                {
                    "component": "a first processing device having a web browser;",
                    "subcomponents": []
                },
                {
                    "component": "a data store to store an object; and,",
                    "subcomponents": []
                },
                {
                    "component": "a second processing device coupled to the first processing device to provide the first processing device with (1) a displayed user interface and (2) a streaming media file having an embedded code including a metadata time code having a format of a process identification, a variable and a target destination; wherein the displayed user interface detects the metadata time code during a streaming media file download to the first processing device and, wherein the displayed user interface spawns a remote common gateway interface process that parses the metadata time code the remote common gateway interface process accesses the object and uses the variable to provide content to a first window identified by the target destination in the displayed user interface while the streaming media file is used to display a video in a second window of the displayed user interface.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00013",
            "preamble": "13. The system of claim 12 , wherein the first and second processing devices are computers.",
            "components": []
        },
        {
            "claim_number": "CLM-00014",
            "preamble": "14. The system of claim 12 , wherein the first processing device and the second processing device are coupled to the Internet.",
            "components": []
        },
        {
            "claim_number": "CLM-00015",
            "preamble": "15. The system of claim 12 , wherein the first processing device and the second processing device are coupled to an intranet.",
            "components": []
        },
        {
            "claim_number": "CLM-00016",
            "preamble": "16. The system of claim 12 , wherein an object, image, text and/or multimedia file in the data store is changed while leaving the embedded code unchanged.",
            "components": []
        },
        {
            "claim_number": "CLM-00017",
            "preamble": "17. An article of manufacture, including a computer readable memory, comprising:",
            "components": [
                {
                    "component": "a first software component to provide a streaming media file to a client;",
                    "subcomponents": []
                },
                {
                    "component": "a second software component to detect an embedded code including a metadata time code having a format of a process identification, a variable and a target destination; and",
                    "subcomponents": []
                },
                {
                    "component": "a remote common gateway interface process identified by the process identification that parses the metadata time code the remote common gateway accesses an object in a data store and uses the variable to provide content to a first window identified by the target destination in a user interface while providing video responsive to the streaming media file in a second window of the user interface.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00018",
            "preamble": "18. The article of claim 17 , wherein an object, image, text and/or multimedia file in the data store is changed while leaving the embedded code unchanged.",
            "components": []
        },
        {
            "claim_number": "CLM-00019",
            "preamble": "19. A method for providing content, comprising:",
            "components": [
                {
                    "component": "storing an object in a data store;",
                    "subcomponents": []
                },
                {
                    "component": "downloading a streaming media file having an metadata time code including a process identification to a remote common gateway interface process, a variable and a target destination;",
                    "subcomponents": []
                },
                {
                    "component": "detecting the metadata time code;",
                    "subcomponents": []
                },
                {
                    "component": "parsing the metadata time code;",
                    "subcomponents": []
                },
                {
                    "component": "passing the variable of the embedded code to the remote common gateway interface process;",
                    "subcomponents": []
                },
                {
                    "component": "retrieving the object from the data store;",
                    "subcomponents": []
                },
                {
                    "component": "downloading information, by the remote common gateway interface process using the variable and the object, to provide content to a first window identified by the target destination in a user interface while displaying video in a second window of the user interface in response to the streaming media file.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00020",
            "preamble": "20. The method of claim 19 , further comprising changing an object, image, text and/or multimedia file in the data store while leaving the metadata time code unchanged.",
            "components": []
        }
    ],
    "description": [
        "The present invention relates, in general, to information systems and, in particular, to facilitating a real time dynamic user interface within interactive streaming content over a network.",
        "As the developments of networked processing systems, such as the Internet, continue to advance more computing power and features are available to users. For example, information that historically has been limited to TV and Radio broadcasts on home appliances is now being made available through on-line computing services. The combination of networked computers and multimedia interactive graphic user interfaces permits the access and display of textual and graphic information in a manner, and at a speed, not previously known in the industry.",
        "As a result of these advancements in technology, various streaming content application solutions now exist to facilitate the transfer of streaming content over the Internet, such as Microsoft's Windows Media Technologies available from Microsoft Corporation located at Redmond, Wash. and Real Network's Streaming Media Solutions available from Real Networks located at Seattle, Wash.",
        "While these solutions have made streaming media content possible, they are neither designed to, nor sufficient to, support a real time interactive dynamic user interface. For example in the prior art, universal resource locator (URL) commands are used in combination with streaming media to change the user interface in a browser. For example, a media file containing a song may be downloaded or streamed to a user and at the end of media file, a URL command may be included to direct the browser to a site to purchase the song. These systems use static commands or URLs in the encoded content stream that need to be indexed prior to delivery to the displayed user interface. It is necessary to index streaming media every time a modification is made to a non-streaming element of video or audio. As a result, the displayed user interface is neither dynamic nor real time and cannot be modified \u201con the fly\u201d to incorporate new high resolution images or DHTML. This requirement of indexing a static command with streaming video limits flexibility. For example, if information, such as a price or image, is changed often, the media file must be constantly reindexed. Thus, an e-commerce site may have to constantly index a media file.",
        "Therefore, there is a desire for a method, system and article of manufacture for integrating streaming content and a real time interactive dynamic user interface on a processing device network.",
        "In an embodiment of the present invention, a method, system and article of manufacture synchronizes streaming video, high-resolution images, text and DHTML in a user interface. The user interface can detect an embedded code in a media file being downloaded which will allow for dynamically changing information, such as images and DHTML, without requiring timely re-encoding and reindexing of the media file. The displayed user interface may be updated with new information, such as new high resolution images and/or DHTML, by accessing the new information in a database responsive to the embedded code.",
        "According to an embodiment of the present invention, the system includes: a) a media server utilizing media streaming technology for providing video stored in a media file; b) a user interface which may utilize DHTML, JavaScript, and VBScript and is displayed by a browser; and c) a Common Gateway Interface (\u201cCGI\u201d) accessible from a content server used to call objects stored in a database. The objects may contain rules for transferring information, such as a new high resolution image or price to the displayed user interface.",
        "The media file and embedded time code is indexed once, yet the displayed user interface can be modified \u201con the fly\u201d to accommodate new DHTML and high resolution images, among other information, without requiring reindexing. The images and rules in an object stored in a database can be changed in real time allowing for a modified displayed user interface without requiring reindexing of the media file.",
        "According to an aspect of the present invention, a method for obtaining streaming content from a processing device network is provided. The method comprises a step of requesting an interface program from a first processing device in the processing device network. The interface program is downloaded to a second processing device in the processing device network. A user interface is displayed on the second processing device. The interface program requests a media file from a third processing device in the processing device network. The media file, including an embedded code, is then downloaded to the second processing device. The interface program spawns a process responsive to the embedded code. The embedded code is parsed into a plurality of code segments by the process. A memory location in a data store is queried responsive to the embedded code segment. The second processing device responds to the rules in the memory location.",
        "According to an aspect of the present invention, the rules include updating the displayed user interface with a high resolution image stored in the data store.",
        "According to another embodiment of the present invention, the first processing device and the second processing device are different processing devices.",
        "According to another aspect of the present invention, the second processing device is a personal computer having a web browser.",
        "According to another aspect of the present invention, the second processing device is a set-top box coupled to a television.",
        "According to another aspect of the present invention, the media file is an advanced streaming format (\u201c.ASF\u201d) file or a real network media (\u201c.RN\u201d) file.",
        "According to another embodiment of the present invention, the displayed user interface includes a first window, a second window and a third window. Video is provided in the first window; a high resolution image is provided in the second window; and text is provided in the third window.",
        "According to another embodiment of the present invention, the third processing device is a media server.",
        "According to another embodiment of the present invention, the process is a common gateway interface (\u201cCGI\u201d) process.",
        "According to another embodiment of the present invention, the embedded code is a metadata time code.",
        "According to another embodiment of the present invention, the responding step includes updating the user interface display with a high resolution image stored in the data store.",
        "According to another embodiment of the present invention, a system for providing streaming content and a real time interactive dynamic user interface is provided. The system includes a first processing device having a web browser and a data store for storing information. A second processing device is coupled to the first processing device and the data store. The second processing device provides the first processing device with (1) a user interface and (2) a media file having an embedded code. The user interface detects the embedded code during a media file download to the first processing device. The second processing device creates a process for retrieving the information from the data store which is used to alter a displayed user interface.",
        "According to another aspect of the present invention, the first and second processing devices are computers.",
        "According to another aspect of the present invention, the data store is a disk drive.",
        "According to another aspect of the present invention, the embedded code is a metadata time code.",
        "According to another aspect of the present invention, the first processing device and the second processing device is coupled to the Internet.",
        "According to another aspect of the present invention, the first processing device and the second processing device are coupled to an intranet.",
        "According to still another aspect of the present invention, an article of manufacture including a computer readable memory is provided. The article of manufacture includes a first software program for providing content to a client. A second software program provides streaming media to a client. A third software program detects an embedded code in the streaming media. And a fourth software program accesses a data store responsive to the embedded code.",
        "According to still another aspect of the present invention, the data store includes a software object having rules and the rules are used to update a user interface.",
        "Other aspects and advantages of the present invention can be seen upon review of the figures, the detailed description, and the claims which follow. In the figures, like reference numerals indicate like components.",
        "FIG. 1 is a high-level hardware block diagram of an embodiment of the present invention and illustrates the interaction between the end user processing device, content provider processing device, media processing device, and data store.",
        "FIG. 2 is a high level software block diagram of an embodiment of the present invention showing the interaction between the end user processing device, content provider processing device, media processing device, and data store.",
        "FIG. 3 illustrates a displayed user interface according to an embodiment of the present invention.",
        "FIGS. 4-7 are control flow diagrams of a method executable by the software and hardware illustrated in FIGS. 1 and 2 according to an embodiment of the present invention.",
        "FIG. 1 illustrates a high level block diagram of system 90 according to an embodiment of the present invention. System 90 includes end user processing device 101, content provider processing device 102, data store 103, and media processing device 104, which are coupled to processing device network 100.",
        "Processing device network 100 may include both wired and wireless connections, either singly or in a combination thereof. In an embodiment of the present invention, the processing device network 100 is the Internet (a.k.a. the world wide web). In alternate embodiments of the present invention, processing device network 100 is a cellular network, a television network, or an intranet, singly or in a combination thereof.",
        "Processing devices illustrated in FIG. 1 may include, but are not limited to, computers, information appliances, cellular telephones, digital cameras, printers, copiers, facsimile machines, television set-top boxes, personal digital assistants, or equivalents thereof.",
        "In an exemplary embodiment, processing device 102 is a Dell\u00ae Dimensions\u00ae XPS B series desktop computer (Dell Computer Company, Round Rock, Tex.) having typical software and hardware components as known by one of ordinary skill in the art. For example, processing device 102 includes a central processing unit, persistent storage, I/O devices including a display and keyboard, a network interface and an operating system.",
        "Software in processing devices of FIG. 1 may be stored in a computer readable medium such as read-only memory (\u201cROM\u201d), random access memory (\u201cRAM\u201d), virtual memory or other memory technologies, singly or in combination thereof.",
        "In an embodiment, data store 103 is computer readable memory, such as a magnetic hard disk drive, floppy disk, optical disk, or other read-write data storage technologies, singly or in combination thereof.",
        "FIG. 2 illustrates a high level software block diagram of system 90 illustrated in FIG. 1. In an embodiment of the present invention, end user processing device 101 stores browser 204 and user interface client 205a in memory. In an embodiment of the present invention, browser 204 is Internet Explorer 5.00 available from Microsoft Corporation located at Redmond, Wash.",
        "In an embodiment of the present invention, software components such as CGI interface 208 and user interface 205 are stored on a computer readable medium.",
        "Content provider processing device 102 includes multiple software programs. In an embodiment of the present invention, Common Gateway Interface (\u201cCGI\u201d) software 208 is stored in memory of processing device 102. In an embodiment, CGI software 208 includes at least one CGI process. CGI software allows scripts or programs to run on processing device 102. Typically, CGI scripts are implemented to control users interactions with a web site. Similarly, processing device 102 includes content server 209 and user interface 205. A server is a software program that provides service or content to users accessing processing device 102 through network 100. In addition, user interface 205 provides user interface client 205a to processing device 101.",
        "Data store 103 as described above is coupled to processing device network 100. In an embodiment of the present invention, data store 103 includes a relational database which is accessed by a structured query language (\u201cSQL\u201d). Data store 103 includes a memory location 103a. In an embodiment of the present invention, object 210 is stored at memory location 103a and may include rules which will be discussed below. Further, data store 103 may also include high resolution images digitally represented by Graphical Interface Format (\u201cGIF\u201d) files and/or Joint Photographic Experts Group (\u201cJPEG\u201d) files. In an alternate embodiment, other multimedia file formats may be stored.",
        "Media processing device 104 stores streaming video server 200 and media file 201 in memory. Media file 201 includes an embedded metadata time code 203.",
        "In an alternate embodiment of the present invention, streaming video server 200 and media file 201 are stored in memory on content provider processing device 102.",
        "In an alternate embodiment, data store 103 is coupled to content processing device 102.",
        "When an end user desires to access information available on processing device network 100, such as the Internet, the user initiates a connection through web browser 204. Web browser 204 then may request user interface client 205a from content provider processing device 102. In an embodiment of the present invention, this may be accomplished by entering into browser 204 a universal resource locator (\u201cURL\u201d) address of the web site provided by content server 209. A user then may download the user interface client 205a from the web site. The connection from processing device 101 to processing device network 100 may be established through an Internet service provider (\u201cISP\u201d). The ISP is a service that allows an end user to connect to processing device network 100 usually through a modem.",
        "After user interface client 205a is downloaded to processing device 101 from processing device 102, a user interface display 300 is provided on processing device 101 as illustrated in FIG. 3. User interface display 300 is provided by processing device 102 downloading content, and in particular, a dynamic hypertext mark up language (\u201cDHTML\u201d) page to processing device 101. Browser 204 reads the DHTML page and requests the rest of user interface client 205a from content server 209. Content server 209 is a software program which provides information, such as a DHTML page, to processing devices requesting such information. User interface client 205a in an embodiment of the present invention includes: a) HTML tags and text; b) images in a GIF and/or JPEG file format; c) JAVA script; and d) references to objects, such as an address to object 210 in data store 103.",
        "FIG. 3 illustrates a user interface display 300 at processing device 101. User interface display 300 includes windows 301, 302 and 303. In addition, user interface display 300 includes controls 307, such as play, pause, stop, rewind, forward, volume, mute and display size control buttons. In an embodiment of the present invention, window 301 provides video 304, such as video of a room. Window 302 includes a high resolution image 305, such as an image of a chair for sale, and window 303 includes text 306, such as dimensions and price of the chair.",
        "After user interface display 300 is provided to processing device 101, user interface client 205a requests media from media processing device 104. Media may include audio, video or combination thereof. In an embodiment of the present invention, video is provided to window 301 from media file 201 stored in processing device 104. As described in detail below, media file 201 is provided by streaming video server 200. As video 304 is provided to processing device 101, user interface client 205a detects an embedded code, and in particular, a metadata time code 203. Generally, the user interface client 205a spawns a CGI process which is used to access object 210 in data store 103. Information in object 210 is then used to update user interface display 300 in an embodiment of the present invention. For example, object 210 may include rules to display high resolution image 305 in window 302 or provide text, such as a price in window 303.",
        "In an embodiment of the present invention, electronic representations of high resolution image 305 and text 306 (price) are stored as files 305a and 306a in data store 103. In alternate embodiments, object 210 may implement other actions. For example, object 210 may include code to display a web page or code to be executed.",
        "The end user also has the ability to interactively change the contents of user interface display 300. The user may click the DHTML driven buttons in controls 307.",
        "Multimedia file 201 in an embodiment of the present invention is a digitized format of video. In an embodiment, video footage is captured using a video work station such as a Media 100, Inc., located in Marlbor, Mass., Matrox's Digisuite, located in Borval, Canada, or Pinnacle System's DV500, located in Mountain View, Calif. Media file 201 is a compressed file in an embodiment of the present invention.",
        "The embedded code of media file 201 may be indexed using a variety of technologies. For example, if media file 201 is an .ASF file, Stream Anywhere, available from Sonic Foundry, located in Madison, Wis., inserts code 203 at predetermined set intervals in order to alter user interface display 300. In an embodiment of the present invention, media file 201 may include a plurality of codes 203 at predetermined time intervals. The format of metadata time code 203 may include, for example, \u201cFrame4.cgi?WebID=1234567&&frame3\u201d.",
        "The time code includes a number of fields to be parsed and processed. For example, \u201cFrame4.cgi\u201d represents an address of a CGI process which will process the time code information. The CGI process may be located in CGI 208. \u201c?\u201d identifies that the following field is a variable to be passed to the CGI process. \u201c1234567\u201d is a unique time index number used by the CGI process. \u201c&&\u201d identifies that the following information is the target address or destination of the information obtained by the CGI process. For example, \u201cframe3\u201d identifies that the CGI process should display information such as chair image 305 in window 302 illustrated in FIG. 3.",
        "User interface client 205, in an embodiment of the present invention, uses Active X Com objects to encrypt and access data store 103. The user interface client 205a and Active X Com objects are programmed using Microsoft's Visual Basic according to an embodiment of the present invention. Some functions used in interface client 205a exist in the data store as stored procedures. This was done to gain optimum performance of the data for access as known in the art. The complete functionality of the video index GUI is to keep the metadata time code commands in a manageable real-time environment.",
        "FIGS. 4-7 are control flow diagrams of a method 350 executed by software, hardware, or a user, singly or in combination thereof, illustrated in FIGS. 1 and 2 according to an embodiment of the present invention. FIGS. 4-7 illustrate a sequence of logic steps represented by logic blocks. In alternative embodiments of the present invention, additional logic blocks may be included and illustrated logic blocks may be omitted.",
        "The method 350 initiates as illustrated by logic block 400. An end user requests a user interface client 205 from content server 209 stored on processing device 102 as illustrated by logic block 401. Content server 209 then transfers the user interface client 205a to processing device 201 as illustrated by logic block 402. User interface client 205 then requests interface components such as images and code to display initial user interface as illustrated by logic block 403a. User interface display is then displayed as illustrated by logic block 404. For example, user interface display 300 as illustrated in FIG. 3 is provided to end user processing device 101. User interface client 205a then requests media from streaming media server 200 on media processing device 104 as illustrated by logic block 405. Streaming video server 200 then begins to provide video to end user interface client 205a stored in end user processing device 101 as illustrated by logic block 406. In an embodiment of the present invention, end user interface client 205a buffers streaming media for a few seconds as illustrated by logic block 407. Video such as video 304 in FIG. 3 is then provided in window 301 as illustrated in FIG. 3 and described in logic block 408.",
        "A unique embedded code in media file 201 or metadata time code 203 is then provided by streaming video server 200 and media processing device 104 and as illustrated in logic block 501 of FIG. 5. User interface client 205a then receives the code 203 as illustrated by logic block 502. Interface client 205a then determines whether code 203 is a valid command as illustrated by logic block 503. If the code 203 is not a valid command, logic transitions back to logic block 501. If the command is valid, interface client 205a spawns a process to handle the command in code 203 as illustrated by logic block 504. In an embodiment of the present invention, interface client 205a spawns a CGI process. The CGI process parses the metadata time code command 203 as illustrated by logic block 505. A segment of the code 203 is then used to perform a query on data store 103. In an embodiment of the present invention, a segment of code 203 is used in an SQL query to a relational database in data store 103. In an embodiment of the present invention, the query determines the contents of object 210 in data store 103. Object 210 may include rules for updating user interface display 300. For example, object 210 may include rules for displaying image 305 and text 306.",
        "Data store 103 receives a command from CGI process as illustrated in logic block 604. The commands could include an SQL query or update command. A determination is then made by the data store whether or not the command is recognized as illustrated in logic block 606. If the data store recognizes the command, control transitions to logic block 607 where the data store searches for the results based on the command. Otherwise, logic transitions to logic block 610 where the data store returns a negative result and control then passes to logic block 611. If control transitions from logic block 607, a determination is made whether data search is positive as illustrated by logic block 608. If the data store search is not positive, control transitions to logic block 610. Otherwise, control transitions to logic block 609. The data store returns a positive search result as illustrated by logic block 609. These results could include software code or images. The result of the command is then returned to the CGI process as illustrated by logic block 611. A determination is made whether the CGI process updates the interface in logic block 507. Logic block 509 represents the CGI process action which is used to update user display interface 300. If the CGI process does not change user interface display, logic transitions to logic block 508.",
        "User interface client 205a then receives the command from CGI process to update user interface display 300 as illustrated by logic block 600 in FIG. 6. User interface client 205a then requests needed components, such as an image, to update user interface display 300 from content server 209 as illustrated by logic block 601. Content server 209 then sends user interface client 205 the needed components, such as images or code, as illustrated by logic block 602. The end user interface display 300 is then updated as illustrated by logic block 603.",
        "FIG. 7 illustrates a control flow diagram for the operation of control functions 307 illustrated in FIG. 3. An end user activates an interface function such as a play button in control buttons 307 as illustrated by logic block 700. Interface client 205a then checks if the function is valid as illustrated by logic block 701. If the function is not valid, the logic transitions to the end 705. Otherwise, the user interface client 205a calls the function as illustrated in logic block 702. These functions include: playing the video, pausing the video, stopping the video, rewinding the video, fast forwarding the video, increasing volume, decreasing volume, muting volume and increasing display size. The function then executes as illustrated by logic block 703. Interface then reflects the function execution as illustrated in logic block 704 and control ends as illustrated by logic block 705.",
        "While certain preferred embodiments of the invention have been described, these embodiments have been presented by way of example only, and are not intended to limit the scope of the present invention.",
        "Although the present invention solves the problem of providing a real time interactive dynamic user interface with streaming content, its possible implementations are not limited to this. Using similar systems and methods described herein, the streaming content unique time code can be easily integrated into various other solutions. e.g. e-commerce systems, enterprise resource planning systems, and any other real time database driven systems.",
        "The foregoing description of the preferred embodiments of the present invention has been provided for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Obviously, many modifications and variations will be apparent to practitioners skilled in the art. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications, thereby enabling others skilled in the art to understand the invention for various embodiments and with the various modifications as are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the following claims and their equivalents."
    ],
    "citations": [
        "6006265",
        "6061738",
        "6125402",
        "6205485",
        "6389463",
        "6434535",
        "6477550",
        "6487663",
        "6489954",
        "6553410",
        "6557042",
        "6560651",
        "6622171",
        "6708217",
        "6711622",
        "6751776",
        "6789123",
        "6931600"
    ],
    "us_classification": "709231",
    "international_classifications": [
        {
            "classification_level": "A",
            "section": "G",
            "classification_class": "06",
            "subclass": "F",
            "main_group": "15",
            "subgroup": "16"
        }
    ]
}