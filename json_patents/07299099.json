{
    "title": "Programmable logic controller contained on a chip",
    "abstract": "Various embodiments of a programmable logic controller and a system for programming a programmable logic controller are disclosed. One PLC embodiment comprises an I/O component, a processor, a memory component and a kernel, all contained within a chip.",
    "inventors": [
        "Divelbiss",
        "Divelbiss"
    ],
    "document_number": "07299099",
    "publication_date": "20071120",
    "assignees": [
        "Divelbiss Corporation"
    ],
    "claims": [
        {
            "claim_number": "CLM-00001",
            "preamble": "1. A programmable logic controller comprising:",
            "components": [
                {
                    "component": "at least one input/output component;",
                    "subcomponents": []
                },
                {
                    "component": "at least one processor in communication with the at least one input/output component;",
                    "subcomponents": []
                },
                {
                    "component": "at least one memory component in communication with the at least one processor and adapted to store a PLC application program; and",
                    "subcomponents": []
                },
                {
                    "component": "an operating system kernel stored in the at least one memory component and providing the at least one processor with an interface layer to run the PLC application program, monitor any inputs associated with the at least one input/output component, and control any outputs associated with the at least one input/output component in response to the PLC application program and the monitored inputs;",
                    "subcomponents": []
                },
                {
                    "component": "wherein the at least one input/output component, the at least one processor, and the at least one memory component are contained within a chip.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00002",
            "preamble": "2. The programmable logic controller of claim 1 , the at least one input/output component including:",
            "components": [
                {
                    "component": "at least one of a digital input, a digital output, an analog input, and an analog output.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00003",
            "preamble": "3. The programmable logic controller of claim 1 , the at least one input/output component including:",
            "components": [
                {
                    "component": "a system watchdog output; and",
                    "subcomponents": []
                },
                {
                    "component": "a controls check monitor.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00004",
            "preamble": "4. The programmable logic controller of claim 1 , the at least one input/output component including:",
            "components": [
                {
                    "component": "at least one of a programming port, a serial port, a CAN port, and an Ethernet interface.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00005",
            "preamble": "5. The programmable logic controller of claim 1 , the at least one processor including:",
            "components": [
                {
                    "component": "a plurality of processors.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00006",
            "preamble": "6. The programmable logic controller of claim 5 wherein the plurality of processors work in parallel.",
            "components": []
        },
        {
            "claim_number": "CLM-00007",
            "preamble": "7. The programmable logic controller of claim 1 , the at least one memory component including:",
            "components": [
                {
                    "component": "at least one of a flash memory module, an EEPROM memory module, a volatile RAM memory module, and a non-volatile RAM memory module.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00008",
            "preamble": "8. The programmable logic controller of claim 1 , the operating system kernel including:",
            "components": [
                {
                    "component": "a plurality of logical components associated with running the PLC application program.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00009",
            "preamble": "9. The programmable logic controller of claim 1 , the operating system kernel including:",
            "components": [
                {
                    "component": "an interpreter for interpreting the PLC application program in conjunction with running the PLC application program.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00010",
            "preamble": "10. The programmable logic controller of claim 1 , the operating system kernel including:",
            "components": [
                {
                    "component": "a dynamically linked library for use in conjunction with running the PLC application program.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00011",
            "preamble": "11. The programmable logic controller of claim 1 , the operating system kernel including:",
            "components": [
                {
                    "component": "a compiler for compiling a PLC application software package to form the PLC application program.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00012",
            "preamble": "12. The programmable logic controller of claim 11 wherein the at least one memory component is adapted to store the PLC application software package.",
            "components": []
        },
        {
            "claim_number": "CLM-00013",
            "preamble": "13. The programmable logic controller of claim 1 , the chip including:",
            "components": [
                {
                    "component": "a flat pack package.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00014",
            "preamble": "14. The programmable logic controller of claim 13 , the flat pack package including:",
            "components": [
                {
                    "component": "any one of the group formed by a quad flat pack package, a low profile quad flat pack package, and a thin quad flat pack package.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00015",
            "preamble": "15. The programmable logic controller of claim 1 , the chip including:",
            "components": [
                {
                    "component": "any one of the group formed by a grid array package, a small outline integrated circuit package, a dual in-line package, and a die package.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00016",
            "preamble": "16. A programmable logic controller comprising:",
            "components": [
                {
                    "component": "an input/output component;",
                    "subcomponents": []
                },
                {
                    "component": "a processor in communication with the input/output component;",
                    "subcomponents": []
                },
                {
                    "component": "a plurality of memory modules in communication with the processor and adapted to store a PLC application program; and",
                    "subcomponents": []
                },
                {
                    "component": "a kernel logic stored in at least one of the plurality of memory modules and providing the processor with an interface layer to run the PLC application program, monitor any inputs associated with the input/output component, and control any outputs associated with the input/output component in response to the PLC application program and the monitored inputs;",
                    "subcomponents": []
                },
                {
                    "component": "wherein the input/output component, the processor and the plurality of memory modules are contained within a chip.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00017",
            "preamble": "17. The programmable logic controller of claim 16 , the plurality of memory modules including:",
            "components": [
                {
                    "component": "at least one of a flash memory module, an EEPROM memory module, a volatile RAM memory module, and a non-volatile RAM memory module.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00018",
            "preamble": "18. The programmable logic controller of claim 16 , the input/output component including:",
            "components": [
                {
                    "component": "a system watchdog output; and",
                    "subcomponents": []
                },
                {
                    "component": "a controls check monitor.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00019",
            "preamble": "19. The programmable logic controller of claim 16 , the input/output component including:",
            "components": [
                {
                    "component": "at least one of a programming port, a serial port, a CAN port, and an Ethernet interface.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00020",
            "preamble": "20. The programmable logic controller of claim 16 , the kernel logic including:",
            "components": [
                {
                    "component": "a plurality of logical components associated with running the PLC application program.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00021",
            "preamble": "21. The programmable logic controller of claim 16 , the chip including:",
            "components": [
                {
                    "component": "a flat pack package.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00022",
            "preamble": "22. The programmable logic controller of claim 21 , the flat pack package including:",
            "components": [
                {
                    "component": "any one of the group formed by a quad flat pack package, a low profile quad flat pack package, and a thin quad flat pack package.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00023",
            "preamble": "23. A system for programming a programmable logic controller contained within a chip, comprising:",
            "components": [
                {
                    "component": "a computing device electronically communicating with the programmable logic controller; and",
                    "subcomponents": []
                },
                {
                    "component": "application software creation logic, running on the computing device, for creating a PLC application program for running on the programmable logic controller, such that the programmable logic controller runs the PLC application program, monitors any inputs associated with the chip, and controls any outputs associated with the chip in response to the PLC application program and the monitored inputs;",
                    "subcomponents": []
                },
                {
                    "component": "wherein the PLC application program is electronically communicated by the computing device to the programmable logic controller for execution.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00024",
            "preamble": "24. The system of claim 23 , the application software creation logic including:",
            "components": [
                {
                    "component": "a graphical ladder interface providing a user with access to the computing device to create, edit, or modify the PLC application program.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00025",
            "preamble": "25. The system of claim 24 wherein the graphical ladder interface allows the user to create, edit, or modify the PLC application program by creating, editing, or modifying a ladder diagram.",
            "components": []
        },
        {
            "claim_number": "CLM-00026",
            "preamble": "26. The system of claim 25 wherein the graphical ladder interface allows the user to create, edit, or modify the ladder diagram by pointing, clicking, and dragging objects.",
            "components": []
        },
        {
            "claim_number": "CLM-00027",
            "preamble": "27. The system of claim 23 , further including:",
            "components": [
                {
                    "component": "a programmable logic controller, including:",
                    "subcomponents": [
                        "a first input/output component and at least one additional input/output component;",
                        "a processor in communication with the each input/output component;",
                        "at least one memory component in communication with the processor and adapted to store the PLC application program; and",
                        "an operating system kernel stored in the at least one memory component and providing the processor with an interface layer to run the PLC application program, monitor any inputs associated with the at least one additional input/output component, and control any outputs associated with the at least one additional input/output component in response to the PLC application program and the monitored inputs;",
                        "wherein the first input/output component, the at least one additional input/output component, the processor, and the at least one memory component are contained within the chip;"
                    ]
                },
                {
                    "component": "a first input/output component and at least one additional input/output component;",
                    "subcomponents": []
                },
                {
                    "component": "a processor in communication with the each input/output component;",
                    "subcomponents": []
                },
                {
                    "component": "at least one memory component in communication with the processor and adapted to store the PLC application program; and",
                    "subcomponents": []
                },
                {
                    "component": "an operating system kernel stored in the at least one memory component and providing the processor with an interface layer to run the PLC application program, monitor any inputs associated with the at least one additional input/output component, and control any outputs associated with the at least one additional input/output component in response to the PLC application program and the monitored inputs;",
                    "subcomponents": []
                },
                {
                    "component": "wherein the first input/output component, the at least one additional input/output component, the processor, and the at least one memory component are contained within the chip;",
                    "subcomponents": []
                },
                {
                    "component": "wherein the application software creation logic is also for editing or modifying the PLC application program and the computing device is adapted to communicate the PLC application program to the programmable logic controller via the first input/output component.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00028",
            "preamble": "28. The system of claim 27 further including a compiler for compiling the application program.",
            "components": []
        },
        {
            "claim_number": "CLM-00029",
            "preamble": "29. The system of claim 28 wherein the compiler is disposed within the computing device and associated with the application software creation logic.",
            "components": []
        },
        {
            "claim_number": "CLM-00030",
            "preamble": "30. The system of claim 28 wherein the compiler is disposed within the programmable logic controller and associated with the operating system kernel.",
            "components": []
        },
        {
            "claim_number": "CLM-00031",
            "preamble": "31. The system of claim 27 further including an interpreter for interpreting the application program.",
            "components": []
        },
        {
            "claim_number": "CLM-00032",
            "preamble": "32. The system of claim 31 wherein the interpreter is disposed within the computing device and associated with the application software creation logic.",
            "components": []
        },
        {
            "claim_number": "CLM-00033",
            "preamble": "33. The system of claim 31 wherein the interpreter is disposed within the programmable logic controller and associated with the operating system kernel.",
            "components": []
        },
        {
            "claim_number": "CLM-00034",
            "preamble": "34. The system of claim 27 , the first input/output component including:",
            "components": [
                {
                    "component": "at least one of a programming port, a serial port, a CAN port, and an Ethernet interface.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00035",
            "preamble": "35. The system of claim 27 , the operating system kernel including:",
            "components": [
                {
                    "component": "a plurality of logical components associated with running the PLC application program.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00036",
            "preamble": "36. The system of claim 27 wherein the operating system kernel and the application software creation logic interact to optimize the PLC application program for operation of the programmable logic controller.",
            "components": []
        }
    ],
    "description": [
        "This application claims the benefit of U.S. Provisional Patent Application No. 60/545,644, filed Feb. 18, 2004.",
        "A programmable logic controller, or a \u201cPLC,\u201d is a small computer generally used for automation of real-world processes, such as, e.g., control of machinery on factory assembly lines. Modern PLC's are microprocessor-based devices with input/output (\u201cI/O\u201d) functionality (usually input/output circuitry) which oftentimes monitors the status of field connected sensor inputs and controls certain output actuators according to user-created logic.",
        "PLC's are generally modular devices, composed of separate parts such as, e.g., commercially available processor(s), memory chips, I/O devices, etc. As machinery and machine controllers continue to decrease in size, many PLC's have similarly decreased in size. In this light, many parts of a PLC have been integrated into a single package such as, e.g., I/O circuitry integral with a processor in a single integrated circuit or integrated circuit package (\u201cchips,\u201d as defined herein). Integration of multiple parts into a single chip, however, has been limited.",
        "The user-created logic which drives a PLC has evolved along with the size and integration of components. Such logic is typically stored in non-volatile memory communicating with or integral to the PLC's processor. User-created logic is typically created on a separate computing device, such as a personal computer or a workstation, and then transferred to the PLC's memory. This allows a stream-lining of the internal logic which controls the PLC. While such streamlining is beneficial in terms of conserving storage space, the cost of such streamlining is limiting the internal logic to low-level processing. Such low-level processing is undesirable as it forces a user to either program the user-created logic at a low level, which is time consuming and requires a user knowledgeable regarding such low-level programming, or to perform high-level programming on the separate computing device, translate the programming to a lower-level, and transfer the logic to the PLC.",
        "In accordance with one embodiment of the present invention, a programmable logic controller is provided. The programmable logic controller includes an input/output component, a processor, at least one memory component and a kernel, all contained within a chip.",
        "In accordance with another embodiment of the present invention, a programmable logic controller is provided. The programmable logic controller includes an input/output component, a processor, a plurality of memory modules and kernel logic, all contained within a single chip.",
        "In accordance with another embodiment of the present invention, a system for programming a PLC is provided. The system includes a computing device and application software creation logic electronically communicating with the PLC.",
        "FIG. 1 is an exemplary block diagram of a PLC contained within a chip.",
        "FIG. 2 is an exemplary block diagram of a component of a PLC contained within a chip.",
        "FIG. 3 is an exemplary diagram of a system for programming a PLC contained within a chip.",
        "The following includes definitions of exemplary terms used throughout the disclosure. Both singular and plural forms of all terms fall within each meaning. Except where noted otherwise, capitalized and non-capitalized forms of all terms fall within each meaning:",
        "As used herein, \u201cchip\u201d is used generically and includes but is not limited to an integrated circuit package and/or an integrated circuit.",
        "As used herein, \u201ccomponent\u201d is used generically. A \u201ccomponent\u201d of a chip is a physical or logic part of the chip which performs one or more functions. For example, an I/O device which is a component of a chip is optionally embodied in electrical circuitry which communicates with other components of the chip, such as, e.g., a processor and/or memory. The component is optionally embodied in circuitry, logic (e.g., within the logic of the chip) and/or in a physical device integral with the chip (e.g., a pin or a node). In an additional example, chips embodied in integrated circuit packages include components such as, e.g., I/O, one or more processors, and one or more memory modules. Exemplary components include, but are not limited to, a processor (e.g., a microprocessor), memory (e.g., flash, RAM, EEPROM) and I/O (e.g., serial port, CAN port).",
        "As used herein, \u201ckernel\u201d is used generically and includes but is not limited to the core component of an operating system which performs at least basic functions such as allocating hardware resources and/or supporting basic session services required to transfer data and/or establish or release connections.",
        "As used herein, \u201clogic\u201d is used generically and includes but is not limited to hardware, software and/or combinations of both to perform a function.",
        "As used herein, \u201csoftware\u201d is used generically and includes but is not limited to one or more computer executable instructions, routines, algorithms, modules or programs including separate applications or from dynamically linked libraries for performing functions as described herein. Software can be maintained on various computer readable mediums as known in the art.",
        "With reference to FIG. 1, an embodiment of a PLC on a chip 100 is shown. In this embodiment, PLC on a chip 100 includes at least one I/O component 120, at least one processor 130, at least one memory component 140 and a kernel 150 all contained within a chip 110.",
        "Chip 110 is any chip capable of containing I/O component 120, processor 130, memory component 140 and kernel 150. Exemplary suitable chips 110 are any of the chips used in the PLC on a Chip available from Divelbiss Corporation of 9778 Mt. Gilead Road, Fredericktown, Ohio 43019. Any exemplary such chip is a 112LQFP Package Integrated Circuit. Other exemplary suitable chips 110 include, but are not limited to, QFP, BGA, LGA, SOIC, TQFP, DIP, PGA, die packages and other suitable packages. It will be appreciated that chip 110 is optionally an integrated circuit and further optionally an integrated circuit package.",
        "I/O component 120 is any I/O device or component which facilitates input and/or output with the PLC. Exemplary I/O components 120 include, but are not limited to, digital inputs, digital outputs, analog inputs, PWM outputs, analog outputs, system watchdog output and controls check monitor, programming port(s) (e.g., com) and serial ports. It will be appreciated that any suitable I/O device or combination of I/O devices may be used. I/O component 120 is optionally embodied in logic, circuitry, physically (e.g., pins) or combinations thereof.",
        "Processor 130 is any microprocessor which is capable of executing logical instructions for controlling the PLC. Exemplary processors 130 include, but are not limited to, the Freescale HCS08 family, the Freescale HCS12 family, the Freescale Coldfire family and the Freescale PowerPC family. While processor 130 has been described herein as a single processor, it will be appreciated that a plurality of processors 130 is optionally included (e.g., working in parallel). Processor 130 electrically communicates with I/O component(s) 120 in any suitable manner.",
        "Memory component 140 is any memory module or combination of memory modules which are capable of storing logical instructions and/or data. Exemplary memory components 140 include, but are not limited to, flash memory (e.g., sizes 64 K, 128 K, 256 K, 512 K, etc.), EEPROM memory (e.g., sizes 1 K, 2 K, 4 K, etc.), RAM (e.g., sizes 4 K, 8 K, 12 K, 14 K, etc.) and non-volatile RAM. One memory component 140 or, optionally, a plurality of memory components 140, is/are used. For example, in an embodiment, three memory modules are used: one flash memory, one EEPROM memory and one RAM. Each module stores different data or instructions, such as, e.g., a kernel (described below), user-created logic, data, etc. It will be appreciated that processor 130, I/O components 120 and memory component(s) 140 electrically communicate in any suitable manner.",
        "Kernel 150 resides in one or more memory components 140. With reference to FIG. 2, Kernel 150 includes kernel logic 200. Kernel logic 200 includes any suitable steps, methods, processes and/or software for performing one or more (and/or combinations thereof) of the logical components set forth in Table 1:",
        "TABLE 1\n\n\n\n\n\n\n\n\n\nEthernet logic\n\n\n\nModbus logic\n\n\n\nLINBus logic\n\n\n\nJ1939 logic\n\n\n\nJ1850 logic\n\n\n\nI2C logic\n\n\n\nSPI logic\n\n\n\nGraphic interface logic\n\n\n\nKeypad/board interface logic\n\n\n\nDisplay/interface logic\n\n\n\nCAN logic\n\n\n\nReal time clock logic\n\n\n\nQuadrature counters logic\n\n\n\nAbsolute value function logic\n\n\n\nACOS arc cosine logic\n\n\n\nADD function logic\n\n\n\nAND function logic\n\n\n\nASIN arc sine function logic\n\n\n\nAVG average function logic\n\n\n\nATAN arc tangent function logic\n\n\n\nBOOLEAN function converts the real/integer input into a Boolean\n\n\n\noutput logic\n\n\n\nCEIL function provides a rounded-up output logic\n\n\n\nCMP compare function logic\n\n\n\nCOS cosine function logic\n\n\n\nDirect coil logic\n\n\n\nDirect contact logic\n\n\n\nDIV divides function logic\n\n\n\nDown counter logic\n\n\n\nEqual to logic\n\n\n\nEXP natural exponential function logic\n\n\n\nEXPT provides exponentiation function logic\n\n\n\nFalling edge detector logic\n\n\n\nFlog logic\n\n\n\nFLOOR function provides a rounded-down output logic\n\n\n\nGet date logic\n\n\n\nGet time logic\n\n\n\nGreater than (>)logic\n\n\n\nGreater than or equal to (>=)logic\n\n\n\nHyster logic\n\n\n\nInteger logic\n\n\n\nInverted coil logic\n\n\n\nInverted contact logic\n\n\n\nLess than (<)logic\n\n\n\nLess than or equal to (<=)logic\n\n\n\nLIMIT function provides a minimum and maximum output logic\n\n\n\nLN function calculates the natural logarithm value logic\n\n\n\nLOG function calculates the logarithm logic\n\n\n\nMAX maximum function logic\n\n\n\nMAVG moving average logic\n\n\n\nMIN minimum function logic\n\n\n\nMOD modulo value logic\n\n\n\nMULT multiplies function logic\n\n\n\nMUX function acts as a selector for multiple inputs logic\n\n\n\nMAVG moving average function logic\n\n\n\nNOT function proves bit to bit negation logic\n\n\n\nNot equal to (<>)logic\n\n\n\nOff delay timer logic\n\n\n\nOn delay timer logic\n\n\n\nOR logic\n\n\n\nPulse timer logic\n\n\n\nRANDOM seed random value logic\n\n\n\nREAL function coverts the P input into a real output logic\n\n\n\nRising edge detector logic\n\n\n\nROL logic\n\n\n\nROR right bit rotation function logic\n\n\n\nRS reset dominant bistable function logic\n\n\n\nSEED function provides the number which the RANDOM function\n\n\n\nuses logic\n\n\n\nSEL selection function logic\n\n\n\nSet date logic\n\n\n\nSet time logic\n\n\n\nSHL left bit shift function logic\n\n\n\nSHR right bit shift function logic\n\n\n\nSIN sine function logic\n\n\n\nSQRT square roof value function logic\n\n\n\nSR set dominant bistable function logic\n\n\n\nSUB subtract function logic\n\n\n\nTAN tangent function logic\n\n\n\nUp counter logic\n\n\n\nUp/down counter logic\n\n\n\nXOR bitwise exclusive function logic\n\n\n\nTouch screen logic\n\n\n\nPID logic\n\n\n\nFuzzy logic\n\n\n\nDrum Seq. logic\n\n\n\nShift Reg. logic\n\n\n\nModem/cell phone interface logic\n\n\n\nNetwork drivers logic\n\n\n\nInternal control relays logic\n\n\n\nRetentive control relays, timers, counters and drum sequencers\n\n\n\nlogic\n\n\n\nUser math function block logic",
        "Each kernel logic component set forth in Table 1 includes any suitable steps, methods, processes and/or software for performing the function which identifies the component (e.g., \u201cgreater than,\u201d \u201cget date,\u201d \u201cCAN,\u201d \u201cdisplay/interface,\u201d \u201cEthernet\u201d) according to industry standards relating to each such function. For example, \u201cEthernet logic\u201d includes any suitable steps, methods, processes and/or software for facilitating network communication under industry Ethernet standards. In an additional example, \u201cget date\u201d logic includes any suitable steps, methods, processes and/or software for obtaining the current date. In yet another example, \u201cgreater than\u201d logic includes any suitable steps, methods, processes and/or software for comparing two values and determining whether one value is greater than the other.",
        "In an embodiment, kernel logic 200 includes any suitable steps, methods, processes and/or software for providing PLC functionality. For example, as discussed below, application logic for a PLC of the current invention is optionally created on a personal computer or workstation, then compiled (or interpreted) into a format that is executable by the PLC. Kernel logic 200 provides PLC functionality for facilitating execution of the compiled (or interpreted) logic. Kernel logic 200 acts as a lower layer, an interface between the hardware components of the PLC and the upper layer application program (e.g., the compiled logic), and further runs the application program as necessary. In an embodiment wherein an application creation program (e.g., application software creation logic, as described below) provides a high-level user GUI (such as a graphical ladder interface), kernel logic 200 includes any suitable steps, methods, processes and/or software for running the application software created by such creation software (by either compilation or interpretation) in the PLC and provides PLC functionality to facilitate such running.",
        "With reference again to FIG. 1, PLC on a chip 100 further optionally integrates one or more (or combinations thereof) of the following components/features contained within chip 110: CAN, network interfaces, programmable logic, closed loop control, interrupts, ability to interface to external memory, counters, interface for diagnostics, timers, peripheral communications interface, security, low voltage reset, low voltage interrupt, low power modes (stop mode, pseudo stop mode, and wait mode), wake up interrupt inputs, on board voltage regulation and wide temperature operating range. PLC on a chip 100 further optionally includes one or more external program interfaces, including but not limited to: ladder diagram and function block compiler (described herein), instruction list, structured text, sequential function chart, flow chart, monitor, reverse compiler, timing diagrams and data logging.",
        "With reference to FIG. 3, in an embodiment, a system for programming a PLC contained in a chip is shown. PLC on a chip 100 electronically communicates 330 with a computing device 320 running therein application software creation logic 300. Electronic communication 330 is accomplished via any suitable interface, including but not limited to I/O described herein. Computing device 320 is any computing device capable of executing application software creation logic 300, including but not limited to a personal computer and a workstation.",
        "Application software creation logic 300 includes any suitable steps, methods, processes and/or software for creating one or more applications (or \u201cuser-created logic\u201d) which are performable on PLC on a chip 100. Application software creation logic 300 optionally includes a compiler 310 for compiling an application created with application software creation logic 300 into a format executable by PLC on a chip 100. An exemplary suitable application software creation logic 300 including a complier 310 is the EZ LADDER suite and compiler available from Divelbiss Corporation. Alternatively and/or additionally, application software creation logic 300 optionally includes an interpreter (not shown) for interpreting such an application created with application software logic 300. It will be appreciated that for applications which are interpreted, the interpreter is physically and/or logically located in any suitable place (i.e., in the kernel, in the application software creation logic, etc).",
        "A user accesses application software creation logic 300 to create, edit or modify an application for PLC on a chip 100, and further to compile (or interpret) the application for execution on PLC on a chip 100. In the EZ LADDER suite example, a user is given a graphical ladder interface and the ability to point, click and drag objects to create or modify a ladder diagram. The ladder diagram is complied into a form executable via kernel 150 on PLC on a chip 100, and the executable application is communicated 330 to the PLC, wherein it is stored in a memory component 140.",
        "It will be appreciated that kernel logic 200 (with reference to FIG. 2) is optionally adapted to work with application software creation logic 300 and compiler 310 to optimize application logic components. In this embodiment, application software creation logic 300 and compiler 310 convert user input into an executable application which is optimized for execution by kernel logic 200. The application may thus be streamlined to, e.g., take up less memory space in the PLC. Furthermore, programming capabilities allows a user to program the PLC without needing an in-depth understanding of low-level programming. While the above examples have described a system wherein a ladder diagram is used to create an application, it will be appreciated that application software creation logic 300 optionally uses any suitable method to facilitate creation of an application, and this disclosure is thus not limited to use of a ladder diagram.",
        "While the present invention has been illustrated by the description of embodiments thereof, and while the embodiments have been described in considerable detail, the scope of the appended claims should not be restricted or in any way limited to such detail. Additional advantages and modifications will readily appear to those skilled in the art. Therefore, the invention, in its broader aspects, is not limited to the specific details, the representative systems, and illustrative examples shown and described. Accordingly, departures may be made from such details without departing from the spirit or scope of the invention disclosed herein."
    ],
    "citations": [
        "4680698",
        "4704678",
        "4724717",
        "4967326",
        "5031092",
        "5243698",
        "5491359",
        "5506437",
        "5854907",
        "6414368",
        "7102384",
        "7102391",
        "2005/0237083"
    ],
    "us_classification": "700 18",
    "international_classifications": [
        {
            "classification_level": "A",
            "section": "G",
            "classification_class": "05",
            "subclass": "B",
            "main_group": "11",
            "subgroup": "01"
        }
    ]
}