{
    "title": "Systems and methods for using statistical techniques to reason with noisy data",
    "abstract": "Systems and methods are presented that enable logical reasoning even in the presence of noisy (inconsistent) data. The knowledge base is processed in order to make it consistent and is also compiled. This processing includes checking and correcting spelling, removing stopwords, performing, grouping words of similar and related meaning, and compacting the knowledge base. A robot can use the processed knowledge base to perform many different types of tasks, such as answering a query, determining a course of action that is designed to achieve a particular goal, and determining its own location.",
    "inventors": [
        "Gupta",
        "Kochenderfer"
    ],
    "document_number": "07299110",
    "publication_date": "20071120",
    "assignees": [
        "Honda Motor Co., Ltd."
    ],
    "claims": [
        {
            "claim_number": "CLM-00001",
            "preamble": "1. A method for processing a knowledge base, the knowledge base comprising a plurality of statements and a plurality of rules, a rule linking two statements, the method comprising:",
            "components": [
                {
                    "component": "grouping words of related meanings comprise one of latent semantic analysis, spectral clustering, and principal component analysis; and",
                    "subcomponents": []
                },
                {
                    "component": "determining a set of relevant rules.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00002",
            "preamble": "2. The method of claim 1 , further comprising the step of:",
            "components": [
                {
                    "component": "generalizing the knowledge base by replacing a statement associated with a first object with a statement associated with a second object, the second object being a hypernym of the first object.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00003",
            "preamble": "3. The method of claim 1 , further comprising the step of:",
            "components": [
                {
                    "component": "inferencing using the knowledge base.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00004",
            "preamble": "4. The method of claim 3 wherein inferencing using the knowledge base comprises the step of:",
            "components": [
                {
                    "component": "inferencing using an object not present in the knowledge base.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00005",
            "preamble": "5. The method of claim 4 wherein the object not present in the knowledge base is one of a hypernym and a synonym of an object that is present in the knowledge base.",
            "components": []
        },
        {
            "claim_number": "CLM-00006",
            "preamble": "6. The method of claim 3 , further comprising the step of one of answering a query, determining how to perform a task, and determining how to fulfill a desire.",
            "components": []
        },
        {
            "claim_number": "CLM-00007",
            "preamble": "7. The method of claim 3 , further comprising the step of one of determining consensus knowledge and determining common sense knowledge.",
            "components": []
        },
        {
            "claim_number": "CLM-00008",
            "preamble": "8. The method of claim 3 , further comprising the step of determining a location of a robot.",
            "components": []
        },
        {
            "claim_number": "CLM-00009",
            "preamble": "9. The method of claim 1 , further comprising the step of:",
            "components": [
                {
                    "component": "correcting a spelling of a word in the knowledge base, responsive to a determination that the spelling is incorrect.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00010",
            "preamble": "10. The method of claim 1 , further comprising the step of:",
            "components": [
                {
                    "component": "removing a word, responsive to a determination that the word is on a list of stopwords.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00011",
            "preamble": "11. The method of claim 1 , further comprising the step of:",
            "components": [
                {
                    "component": "replacing a word with a root form of the word, responsive to a determination that the word is not in root form.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00012",
            "preamble": "12. An apparatus for processing a knowledge base, the knowledge base comprising a plurality of statements and a plurality of rules, a rule linking two statements, the apparatus comprising:",
            "components": [
                {
                    "component": "a grouping module, configured to group words of related meanings comprise one of latent semantic analysis, spectral clustering, and principal component analysis; and",
                    "subcomponents": []
                },
                {
                    "component": "a relevancy module, configured to determine a set of relevant rules.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00013",
            "preamble": "13. The apparatus of claim 12 , further comprising:",
            "components": [
                {
                    "component": "a generalization module, configured to generalize the knowledge base by replacing a statement associated with a first object with a statement associated with a second object, the second object being a hypernym of the first object.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00014",
            "preamble": "14. The apparatus of claim 12 , further comprising:",
            "components": [
                {
                    "component": "an inference module, configured to inference using the knowledge base.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00015",
            "preamble": "15. The apparatus of claim 14 wherein inferencing using the knowledge base comprises:",
            "components": [
                {
                    "component": "inferencing using an object not present in the knowledge base.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00016",
            "preamble": "16. The apparatus of claim 15 wherein the object not present in the knowledge base is one of a hypernym and a synonym of an object that is present in the knowledge base.",
            "components": []
        },
        {
            "claim_number": "CLM-00017",
            "preamble": "17. The apparatus of claim 14 , further comprising one of answering a query, determining how to perform a task, and determining how to fulfill a desire.",
            "components": []
        },
        {
            "claim_number": "CLM-00018",
            "preamble": "18. The apparatus of claim 14 , further comprising one of determining consensus knowledge and determining common sense knowledge.",
            "components": []
        },
        {
            "claim_number": "CLM-00019",
            "preamble": "19. The apparatus of claim 14 , further comprising determining a location of a robot.",
            "components": []
        },
        {
            "claim_number": "CLM-00020",
            "preamble": "20. The apparatus of claim 12 , further comprising:",
            "components": [
                {
                    "component": "correcting a spelling of a word in the knowledge base, responsive to a determination that the spelling is incorrect.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00021",
            "preamble": "21. The apparatus of claim 12 , further comprising:",
            "components": [
                {
                    "component": "removing a word, responsive to a determination that the word is on a list of stopwords.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00022",
            "preamble": "22. The apparatus of claim 12 , further comprising:",
            "components": [
                {
                    "component": "replacing a word with a root form of the word, responsive to a determination that the word is not in root form.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00023",
            "preamble": "23. An apparatus for processing a knowledge base, the knowledge base comprising a plurality of statements and a plurality of rules, a rule linking two statements, the apparatus comprising:",
            "components": [
                {
                    "component": "means for grouping words of related meanings comprise one of latent semantic analysis, spectral clustering, and principal component analysis; and",
                    "subcomponents": []
                },
                {
                    "component": "means for determining a set of relevant rules.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00024",
            "preamble": "24. The apparatus of claim 23 , further comprising:",
            "components": [
                {
                    "component": "means for generalizing the knowledge base by replacing a statement associated with a first object with a statement associated with a second object, the second object being a hypernym of the first object.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00025",
            "preamble": "25. The apparatus of claim 23 , further comprising: means for inferencing using the knowledge base.",
            "components": []
        },
        {
            "claim_number": "CLM-00026",
            "preamble": "26. The apparatus of claim 25 wherein inferencing using the knowledge base comprises:",
            "components": [
                {
                    "component": "inferencing using an object not present in the knowledge base.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00027",
            "preamble": "27. The apparatus of claim 26 wherein the object not present in the knowledge base is one of a hypernym and a synonym of an object that is present in the knowledge base.",
            "components": []
        },
        {
            "claim_number": "CLM-00028",
            "preamble": "28. The apparatus of claim 25 , further comprising one of means for answering a query, means for determining how to perform a task, and means for determining how to fulfill a desire.",
            "components": []
        },
        {
            "claim_number": "CLM-00029",
            "preamble": "29. The apparatus of claim 25 , further comprising one of means for determining consensus knowledge and means for determining common sense knowledge.",
            "components": []
        },
        {
            "claim_number": "CLM-00030",
            "preamble": "30. The apparatus of claim 25 , further comprising means for determining a location of a robot.",
            "components": []
        },
        {
            "claim_number": "CLM-00031",
            "preamble": "31. The apparatus of claim 23 , further comprising:",
            "components": [
                {
                    "component": "means for correcting a spelling of a word in the knowledge base, responsive to a determination that the spelling is incorrect.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00032",
            "preamble": "32. The apparatus of claim 23 , further comprising:",
            "components": [
                {
                    "component": "means for removing a word, responsive to a determination that the word is on a list of stopwords.",
                    "subcomponents": []
                }
            ]
        },
        {
            "claim_number": "CLM-00033",
            "preamble": "33. The apparatus of claim 23 , further comprising:",
            "components": [
                {
                    "component": "means for replacing a word with a root form of the word, responsive to a determination that the word is not in root form.",
                    "subcomponents": []
                }
            ]
        }
    ],
    "description": [
        "1. Field of the Invention",
        "The present invention relates to automated reasoning. More particularly, the present invention relates to using statistical techniques in order to enable automated reasoning with noisy data.",
        "2. Description of Background Art",
        "Robots will soon be expected to accomplish tasks within their environments and to satisfy the perceived requests and desires of their users. Determining these desires and reasoning about how they can be accomplished requires common sense. One of the main challenges in the field of robotics is making robots more intelligent by endowing them with common sense. In order for robots to have common sense, they need some amount of general knowledge to use as a basis. They can then reason from this basis to accomplish their tasks and interact with their world intelligently.",
        "Automated reasoning, a topic within the field of artificial intelligence, is concerned with using computers to perform logical reasoning. Logical reasoning, such as deduction, consists of drawing conclusions from facts. Conclusions are formed by applying rules (e.g., implications) to facts. This is also known as inferencing. Logical reasoning systems comprise implications, a basis of facts, and control mechanisms for applying implications to these facts. In automated reasoning systems, facts and implications are stored in a \u201cknowledge base.\u201d Facts are established by, for example, user input (e.g., by typing in \u201cThe stove is hot\u201d) or sensor input (e.g., by placing a heat sensor near the stove). Implications are established by, for example, user input (e.g., by typing in \u201cAn item in a refrigerator is cold\u201d) or machine learning.",
        "For logical reasoning to be sound, an implication must require that its conclusion follow inevitably from the fact from which it is drawn. Depending on the facts and implications that a system starts with, many different conclusions can be reached. In addition, implications can be applied to both facts (originally input into the system) and conclusions (generated by implications). Because of the interactions between facts, implications, and conclusions, it is important that the initially-input facts and implications be correct. If the facts or implications are false or inconsistent with one another, the resulting conclusions may be invalid.",
        "Thus, automated reasoning systems must have self-consistent knowledge bases. Any sound and complete consistency check will require an exponential amount of time based on the number of items in the database. Consistency checks need to be performed each time something is added the knowledge base. The result is that automated reasoning systems are very brittle. Their knowledge bases are frequently handcrafted, and differences in vocabulary are usually not tolerated.",
        "One way to reason with inconsistent knowledge is to revise the knowledge base before performing the reasoning. Any revision process requires, either explicitly or implicitly, the ordering of rules based on priority. This has been proved by \u201cOn the semantics of updates in database\u201d by R. Fagin, J. D. Ullman, M. Y. Vardi, in Principles of Database Systems: Proceedings of the Second ACM SIGACT-SIGMOD Symposium, pp. 352-365, Atlanta, 1983; and \u201cKnowledge in Flux\u2014Modeling the Dynamic of Epistemic States\u201d by P. Gardenfors, Cambridge, Mass., 1988. Alternatively, one can reason with inconsistent knowledge without first revising the knowledge base, as discussed in \u201cHow to infer from inconsistent beliefs without revising?\u201d by S. Benferhat, D. Dubois, and H. Prade, Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, Montreal, Canada, Aug. 20-25, 1995. In general, prior work in this area has been based on logical artificial intelligence techniques rather than on statistical techniques.",
        "Before inferencing from a knowledge base, it is also useful to \u201ccompile\u201d the knowledge base. Compilation of a knowledge base can comprise cleaning, generalizing, and compacting the data in the knowledge base. Compilation can decrease the amount of resources (time, memory, etc.) required by the reasoning process.",
        "What is needed is a way to enable automated reasoning systems to use noisy data, that is, knowledge bases that are not self-consistent. In addition, automated reasoning systems should be able to handle tasks that contain words that are not in the knowledge base.",
        "One of the main challenges in the field of robotics is making robots more intelligent by endowing them with common sense. This common sense can then be used to perform logical reasoning. Common sense is stored in a knowledge base as a set of statements and implications. It is important that the statements and implications be consistent with one another; if they are not, the resulting conclusions may be invalid.",
        "Systems and methods are presented that enable logical reasoning even in the presence of noisy (inconsistent) data. The knowledge base is processed in order to make it consistent and also compiled. This processing includes checking and correcting spelling, removing stopwords, performing stemming, grouping words of similar and related meaning, and compacting the knowledge base.",
        "A robot can use the processed knowledge base to perform many different types of tasks in many different environments. In one embodiment, the robot is a mobile robot used in a home or office environment. Possible tasks include, for example, answering a query, determining a course of action that is designed to achieve a particular goal, and determining its own location.",
        "The invention is illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings in which like reference numerals refer to similar elements.",
        "FIG. 1 illustrates a block diagram of a preferred embodiment of an apparatus for reasoning when noisy data is present.",
        "FIG. 2 illustrates a more detailed block diagram of the contents of the memory unit in FIG. 1.",
        "FIG. 3 illustrates a method for reasoning when noisy data is present.",
        "FIG. 4 illustrates a method for processing a knowledge base.",
        "FIG. 5 illustrates a method for determining a location using Bayesian inferencing.",
        "In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the invention. It will be apparent, however, to one skilled in the art that the invention can be practiced without these specific details. In other instances, structures and devices are shown in block diagram form in order to avoid obscuring the invention.",
        "Reference in the specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the invention. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification are not necessarily all referring to the same embodiment.",
        "Some portions of the detailed descriptions that follow are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here, and generally, conceived to be a self-consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like.",
        "It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise, as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as \u201cprocessing\u201d or \u201ccomputing\u201d or \u201ccalculating\u201d or \u201cdetermining\u201d or \u201cdisplaying\u201d or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission, or display devices.",
        "The present invention also relates to an apparatus for performing the operations herein. This apparatus is specially constructed for the required purposes, or it comprises a general-purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program is stored in a computer readable storage medium, such as, but not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, and magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus.",
        "The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general-purpose systems are used with programs in accordance with the teachings herein, or more specialized apparatus are constructed to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition, the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.",
        "1. Architecture of Reasoning Apparatus",
        "FIG. 1 illustrates a block diagram of a preferred embodiment of an apparatus for reasoning when noisy data is present. Reasoning apparatus 100 preferably includes a processor 110, a main memory 120, a data storage device 130, and an input/output controller 180, all of which are communicatively coupled to a system bus 140. Reasoning apparatus 100 can be, for example, a computer or a robot.",
        "Reasoning apparatus 100 uses statistical reasoning to enable it to reason when noisy data is present. Statistical reasoning, unlike logical reasoning, includes the notion of uncertainty. This uncertainty is expressed through the use of statistics, such as latent semantic analysis, and probability theory, such as Bayesian networks. Statistical reasoning has traditionally been used to work with large text documents in the fields of data retrieval and data mining.",
        "By processing a knowledge base using statistical methods, reasoning apparatus 100 makes the knowledge base unambiguously reflect consensus knowledge. Reasoning apparatus 100 can then reason from the knowledge base without creating invalid results. Statistical reasoning techniques have not been used in this area in the past. One possible reason for this is that in the past, the available data has not been dense enough to leverage statistical techniques.",
        "Reasoning apparatus 100 also uses statistical methods to process queries and commands. This results in reasoning apparatus 100 being able to handle tasks that contain words that are not in the knowledge base.",
        "Processor 110 processes data signals and comprises various computing architectures including a complex instruction set computer (CISC) architecture, a reduced instruction set computer (RISC) architecture, or an architecture implementing a combination of instruction sets. Although only a single processor is shown in FIG. 1, multiple processors may be included.",
        "Main memory 120 stores instructions and/or data that are executed by processor 110. The instructions and/or data comprise code for performing any and/or all of the techniques described herein. Main memory 120 is preferably a dynamic random access memory (DRAM) device, a static random access memory (SRAM) device, or some other memory device known in the art.",
        "Data storage device 130 stores data and instructions for processor 110 and comprises one or more devices including a hard disk drive, a floppy disk drive, a CD-ROM device, a DVD-ROM device, a DVD-RAM device, a DVD-RW device, a flash memory device, or some other mass storage device known in the art.",
        "Network controller 180 links reasoning apparatus 100 to other devices so that reasoning apparatus 100 can communicate with these devices.",
        "System bus 140 represents a shared bus for communicating information and data throughout reasoning apparatus 100. System bus 140 represents one or more buses including an industry standard architecture (ISA) bus, a peripheral component interconnect (PCI) bus, a universal serial bus (USB), or some other bus known in the art to provide similar functionality.",
        "Additional components that may be coupled to reasoning apparatus 100 through system bus 140 include a display device 150, a keyboard 160, and a cursor control device 170. Display device 150 represents any device equipped to display electronic images and data to a local user or maintainer. Display device 150 is a cathode ray tube (CRT), a liquid crystal display (LCD), or any other similarly equipped display device, screen, or monitor. Keyboard 160 represents an alphanumeric input device coupled to reasoning apparatus 100 to communicate information and command selections to processor 110. Cursor control device 170 represents a user input device equipped to communicate positional data as well as command selections to processor 110. Cursor control device 170 includes a mouse, a trackball, a stylus, a pen, cursor direction keys, or other mechanisms to cause movement of a cursor.",
        "It should be apparent to one skilled in the art that reasoning apparatus 100 includes more or fewer components than those shown in FIG. 1 without departing from the spirit and scope of the present invention. For example, reasoning apparatus 100 may include additional memory, such as, for example, a first or second level cache or one or more application specific integrated circuits (ASICs). As noted above, reasoning apparatus 100 may be comprised solely of ASICs. In addition, components may be coupled to reasoning apparatus 100 including, for example, image scanning devices, digital still or video cameras, or other devices that may or may not be equipped to capture and/or download electronic data to/from reasoning apparatus 100.",
        "FIG. 2 illustrates a more detailed block diagram of the contents of the memory unit in FIG. 1. Generally, memory unit 120 comprises several code modules for reasoning when noisy data is present. Specifically, the code modules in memory unit 120 include a main program 200, knowledge base processing program 205, inferencing program 210, spell check module 215, stopword module 220, stemming module 225, latent semantic analysis module 230, WordNet module 235, statistics generation module 240, and knowledge base 245.",
        "All code modules 205, 210, 215, 220, 225, 230, 235, 240, 245 are communicatively coupled to main program 200. Main program 200 centrally controls the operation and process flow of reasoning apparatus 100, transmitting instructions and data to as well as receiving data from each code module 205, 210, 215, 220, 225, 230, 235, 240, 245. Details of its operation will be discussed below with reference to FIG. 3.",
        "Knowledge base processing program 205 processes a knowledge base in order to make it self-consistent and also compiles a knowledge base. Knowledge base processing program 205 accomplishes this by using spell check module 215, stopword module 220, stemming module 225, and latent semantic analysis module 230.",
        "Knowledge base 245 stores a knowledge base comprising facts and implications. As implications are applied to facts, the resulting conclusions are also stored in knowledge base 245.",
        "Spell check module 215 checks and corrects the spelling of words. Stopword module 220 removes particular words from a collection of words. Stemming module 225 maps word variants to the same word. For example, \u201ccooking\u201d, \u201ccooked\u201d, and \u201ccooks\u201d would be mapped to \u201ccook\u201d. Latent semantic analysis module 230 performs latent semantic analysis on a collection of implications to find the most relevant implications. WordNet module 235 compacts data. WordNet module 235 also enables reasoning about words that do not exist in a knowledge base. Inferencing program 210 uses facts and implications stored in a knowledge base and generates conclusions through inferencing. Statistics generation module 240 generates statistics based on data in a knowledge base. Code modules 200-245 will be further discussed below with reference to FIGS. 3 and 4.",
        "2. Usage of Reasoning Apparatus",
        "As noted above, reasoning apparatus 100 can be used in many different contexts to perform many different tasks. FIG. 3 illustrates a method for reasoning when noisy data is present. In one embodiment, this reasoning is based on common sense knowledge.",
        "In the first step, main program 200 begins 300. Main program 200 then loads 305 data into the knowledge base 245. The data consists of statements and implications. In one embodiment, the knowledge base 245 is designed to enable reasoning from common sense knowledge. In this embodiment, a statement is a relation based on a real-world object. A relation is a pair\n\n\u03c6=(o,p)\n\nwhere o is the object and p is a property of the object (an adjective or attribute). For example, one statement is (coffee, heated). A statement can describe the current state of an object (\u201cthe coffee is heated\u201d) or it can describe the desired state of an object (\u201cthe coffee should be heated\u201d). A statement can also represent an action (\u201cdo something to make the coffee heated\u201d).",
        "Common sense knowledge itself is represented by implications. Implications apply to a first statement (the antecedent) and create a second statement (the consequent). In this embodiment, a \u201ccauses implication\u201d encodes the knowledge that one statement implies (or causes) another statement. For example, (coffee, refrigerated) implies (coffee, cold). This is represented symbolically as\n\n\u03c61\u2192\u03c62 where \u03c61=(coffee, refrigerated) and \u03c62=(coffee, cold)\n\nCauses implications can be used to predict the results of actions. The variable F denotes the set of all causes implications in the knowledge base 245.",
        "A \u201cdesires implication\u201d encodes the knowledge that one statement indicates a desire that another statement be true. For example, (stomach, growling) indicates (human, fed). This is represented symbolically as\n\n\u03c61\u2192d\u03c62 where \u03c61=(stomach, growling) and \u03c62=(human, fed)\n\nDesires implications can be used to anticipate human desires. The variable I denotes the set of all desires implications in the knowledge base 245.",
        "The variable S denotes the set of all statements that are true in the current state of the world. The variable S* (the closure of S) is given by the recursive definition\n\nS*=S\u222a{\u03c6:\u03c6\u2032\u2192\u03c6\u03b5F\u03c6\u2032\u03b5S*}\n\nS* is a function of time because the states of objects can change and new knowledge can be inserted into the knowledge base 245.",
        "In one embodiment, the data is loaded into a MySQL\u2122 database from MySQL AB. The following table contains relations that might be used in the database.",
        "Type of Relation\nFields\n\n\n\n\n\n\n\n\n\nStatements\nid, obj, prop, desire\n\n\n\nCauses\nid, obj1, prop1, obj2, prop2\n\n\n\nDesires\nid, obj1, prop1, obj2, prop2\n\n\n\nObjects\nid, name\n\n\n\nUses\nid, obj, vp\n\n\n\nRooms\nid, name\n\n\n\nProximity\nid, obj1, obj2\n\n\n\nLocations\nid, obj, room\n\n\n\n\n\n\n\n\n\n\nThe Statements, Causes, and Desires relations enable inferencing. The Objects, Uses, Rooms, Proximity, and Locations relations are used to accomplish specific tasks. These tasks include goal achievement and parameter determination and will be further discussed below.",
        "The data might have been communicated to reasoning apparatus 100 through the input/output controller 180. Alternatively, the data might have been present in data storage device 130.",
        "Once main program 200 has loaded 305 the data into the knowledge base 245, main program 200 processes 310 the knowledge base 245 using statistical methods. One purpose for this processing is to make the knowledge base self-consistent. One way to ensure that a knowledge base is self-consistent is to handcraft it, making sure that each piece of information is valid and checking that it does not conflict with other information in the knowledge base. Since a knowledge base needs to contain a lot of information in order to be useful, handcrafting one can take a lot of time. It would be preferable if the knowledge base could be made self-consistent without requiring a person to review each piece of information manually. Another purpose for this processing is to compile the knowledge base, generalizing and compacting it so that it requires less storage space and reasoning can be performed on it more quickly.",
        "Step 310 is detailed in FIG. 4. FIG. 4 illustrates a method for processing a knowledge base. In the first step, knowledge base processing program 205 begins 400. Knowledge base processing program 205 then checks 405 and corrects the spelling of the words in the knowledge base 245 by using spell check module 215. Then, knowledge base processing program 205 removes 410 common words from the knowledge base 245, such as \u201ca\u201d, \u201can\u201d, and \u201cthe\u201d, by using stopword module 220. After this, knowledge base processing program 205 performs stemming 415 on the words in the knowledge base 245. Steps 405, 410, and 415 are optional. They increase the value of the knowledge base by standardizing the data within it.",
        "In step 420, knowledge base processing program 205 groups 420 words of similar and related meanings together into notional families. Notional families serve to cluster data and reduce data dimensionality in order to find the most relevant implications. In other words, notional families identify a consensus in the knowledge base, and this consensus serves as the reasoning apparatus' common sense. Notional families were first proposed in \u201cThe automatic derivation of information retrieval encodement from machine readable text\u201d by H. P. Luhn, Information Retrieval and Machine Translation, 3(2), pp. 1021-1028, 1961, which is hereby incorporated by reference.",
        "One way to cluster data and reduce data dimensionality in order to find the most relevant implications is to perform latent semantic analysis on the implications in the knowledge base. Latent semantic analysis is a statistical method that indexes phrases or documents to reflect topic similarity. Topic similarity is based on word co-occurrence, a valid indicator of topic relatedness. In latent semantic space, phrases can have high similarity even if they do not share any terms, so long as their terms are semantically similar according to the co-occurrence analysis. In other words, latent semantic analysis addresses the synonymy problem of people using different words to refer to the same concept. Latent semantic analysis results in a unique consequent statement for each antecedent statement and vice versa.",
        "Here, latent semantic analysis indexes implications leading to each consequent and then applies these indices via singular value decomposition to find the most relevant implications. The time needed to perform singular value decomposition is exponential based on the rank of the statement by implication matrix and the number of singular values that are computed. Latent semantic analysis is described further in \u201cIndexing by Latent Semantic Analysis\u201d by S. C. Deerwester, S. T. Dumais, T. K. Landauer, G. W. Fumas, and R. A. Harshman, Journal of the American Society of Information Science, 41(6), pp. 391-407, 1990; and \u201cFoundations of Statistical Natural Language Processing\u201d by C. D. Manning and H. Schuetze, Chapter: Topics in Information Retrieval: Latent Semantic Indexing, 2001; both of which are hereby incorporated by reference.",
        "Other techniques to cluster data and reduce data dimensionality in order to find the most relevant implications include the statistical methods of spectral clustering and principal component analysis. Spectral clustering methods cluster points using eigenvectors of matrices derived from that data. The basic idea of principal component analysis is to determine the components s1, s2, . . . , sn that explain the maximum amount of variance possible by n linearly transformed components. Spectral clustering is described further in \u201cA Comparison of Spectral Clustering Algorithms\u201d by D. Verma and M. Meila, University of Washington (UW) Computer Science and Engineering (CSE) Technical Report, Mar. 5, 2001; and \u201cOn Clusterings\u2014Good, Bad, and Spectral\u201d by R. Kannan, S. Vempala, and A. Veta, 41st Annual Symposium on Foundations of Computer Science, Nov. 12-14, 2000, Redondo Beach, Calif.; both of which are hereby incorporated by reference. Principal component analysis is described further in Principal Component Analysis by I. T. Jolliffe, Springer-Verlag, 1986, which is hereby incorporated by reference.",
        "In step 425, knowledge base processing program 205 compiles 425 the knowledge base using WordNet module 235. WordNet\u00ae, from Princeton University, is a lexical database for the English language. Nouns, verbs, adjectives, and adverbs are organized into synonym sets. Each set represents one underlying lexical concept (the \u201croot word\u201d), and different relations link the sets.",
        "Each root word is a hypernym of the related synonyms. Hypernymy is a linguistic term for an is-a relationship. For example, since a fork is silverware, \u201csilverware\u201d is a hypernym of \u201cfork.\u201d One example of WordNet synonym sets involves the root word \u201ccan\u201d (as a noun). A first hypernym would be \u201ctin can,\u201d a second hypernym would be \u201ctoilet,\u201d and a third hypernym would be \u201cbathroom.\u201d Synonyms in the \u201ctin can\u201d group would include \u201cmilk can\u201d and \u201coil can,\u201d while synonyms in the \u201cbathroom\u201d group would include \u201crestroom\u201d and \u201cwashroom.\u201d",
        "WordNet module 235 generalizes knowledge in the knowledge base 245 by replacing synonyms with their hypernyms. WordNet module 235 then compacts the knowledge base by associating implications with hypernyms rather than with synonyms. Then, when a synonym is encountered, the hypernym can be determined and the hypernym's implications can be used. For example, if the knowledge base does not have any implications about \u201cfork,\u201d it can use implications about \u201csilverware.\u201d Without the WordNet synonym sets, a \u201cfork\u201d antecedent would not match any implications, and no consequent would be determined. The WordNet synonym sets also save memory by storing each implication once (at the hypernym level), rather than storing each implication multiple times (at the synonym level). Also, better reasoning results can be obtained by first pruning irrelevant hypernyms from the WordNet synonym sets based on the real-world context.",
        "If the synonyms co-occurred in the knowledge base, then they would have already been clustered together by latent semantic analysis or a similar technique. WordNet has the added benefit of clustering synonyms together even if they do not occur in the knowledge base. An alternative is to assemble a list of synonyms for a term and then use the synonyms as part of the feature vector for latent semantic analysis. Step 425 is optional, but compiling the knowledge base enables more implications to be used, saves storage space, and increases the speed of the reasoning process.",
        "After knowledge base processing program 205 has compiled 425 the knowledge base 245 using WordNet module 235, knowledge base processing program 205 ends 430. This also ends the processing of the knowledge base 245 (step 310 in FIG. 3).",
        "At this point, the knowledge base is self-consistent. It is preferably completely self-consistent, but in one embodiment, it is substantially self-consistent. In addition, there is a unique implication leading to each consequent, which means that there is a unique antecedent for each consequent. The next step is to actually use the reasoning apparatus 100. A person submits a command to the reasoning apparatus 100, and main program 200 receives 315 the command.",
        "Reasoning apparatus 100 can process a command even if the command contains a word that is not in the knowledge base. For example, one query is \u201cWhere might I find a carafe?\u201d The knowledge base has the following two pieces of information: 1) Bottles and refrigerators are found together; and 2) Refrigerators are found in the kitchen. First, main program 200 uses WordNet module 235 to prune out irrelevant senses of \u201cbottle\u201d in the context of an indoor environment. From the remaining senses, main program 200 determines that \u201cbottle\u201d is a hypernym for \u201ccarafe.\u201d Since \u201cbottle\u201d is a hypernym for \u201ccarafe,\u201d knowledge about bottles also applies to carafes. Thus, carafes and refrigerators are found together. Since refrigerators are found in the kitchen, so are carafes.",
        "After main program 200 has received 315 the command, it performs 320 the task specified by the command. After main program 200 has performed 320 the task, it ends 325.",
        "Reasoning apparatus 100 can be used in many different contexts. The discussion below focuses on using reasoning apparatus 100 in conjunction with a mobile robot in an indoor home or office environment. However, reasoning apparatus 100 could also be used without a robot and in environments other than a home or office. Reasoning apparatus 100 can also be used to perform many different types of tasks. One task is to answer a query. In one situation, reasoning apparatus 100 may be able to answer the query using information already in the knowledge base. In another situation, answering a query may also require inferencing based on that information.",
        "2.1 Sample Task: Goal Achievement",
        "Another task is to determine a course of action that is designed to achieve a particular goal. This goal can be directly input by a user, or its desirability can be deduced by the reasoning apparatus 100 based on the knowledge base and inferencing. Once the goal is known, reasoning apparatus 100 can determine a course of action to perform in order to achieve the goal. The course of action would be determined by backward chaining implications starting at the goal situation.",
        "In this embodiment, the variable D denotes the set of all statements that are explicitly desired. The variable D* denotes the set of all statements that are desired, either explicitly or by implication. D* is given by the recursive definition\n\nD*=D\u222a{\u03c6:\u03c6\u2032\u2192d\u03c6\u03b5I\u03c6\u2032\u03b5S*}\n\nD* is a function of time because the states of objects can change and new knowledge can be inserted into the knowledge base 245. The variable C denotes the set of all statements that are capable of being directly accomplished by the robot. The variable C* denotes the set of all statements that are capable of being accomplished by the robot, either directly or indirectly (i.e., by implication). C* is given by the recursive definition\n\nC*=C\u222a{\u03c6:\u03c6\u2032\u2192\u03c6\u03b5F\u03c6\u2032\u03b5C*}\n\nC* is a function of time because the states of objects can change and new knowledge can be inserted into the knowledge base 245.",
        "For example, assume that reasoning apparatus 100 is used in conjunction with a robot. The first step is for reasoning apparatus 100 to determine a goal. The robot touches a soda can and senses that it is warm. Main program 200 then performs inferencing over \u201c(soda-can, warm)\u201d using inferencing program 210. Inferencing program 210 checks whether \u201c(soda-can, warm)\u201d is the antecedent of any desires implications. If there is more than one matching desires implication, inferencing program 210 chooses the implication with the closest meaning (based on latent semantic analysis or a similar technique). Eventually, inferencing program 210 chooses the implication\n\n\u03c61\u2192d\u03c62 where \u03c61=(soda-can, warm) and \u03c62=(soda-can, chilled)\n\nSince this is a desires implication, the consequent is the goal. Thus, inferencing program 210 has just determined the goal \u201c(soda-can, chilled)\u201d without any user input.",
        "The next step is for reasoning apparatus 100 to determine a course of action to perform in order to achieve the goal. Main program 200 performs inferencing over the goal using inferencing program 210. This time, however, inferencing program 210 checks whether \u201c(soda-can, chilled)\u201d is the consequent of any causes implications.",
        "In one embodiment, inferencing program 210 uses the following action-selection algorithm. The algorithm uses state knowledge and common sense to determine a list of actions to take. Given the implications (I and F), the current state (S and D) and the capabilities of the robot (C), the following algorithm computes the actions that the robot should take:",
        "GETACTIONS(I, F, S, D, C)\n\n\n\n\n\n\n\n\n\nA \u2190 0\n\n\n\nQ \u2190 S\n\n\n\nR \u2190 D\n\n\n\nwhile Q \u2260 <>\n\n\n\n\n\n\n\n\n\ndo \u03c6 \u2190 Q.pop_front\n\n\n\n\n\n\n\n\n\nR \u2190 R \u222a {\u03c6\u2032 : \u03c6 \u2192d \u03c6\u2032 \u2208 I}\n\n\n\nQ.push_back(<\u03c6\u2032 : \u03c6 \u2192 \u03c6\u2032 \u2208 F>)\n\n\n\n\n\n\n\n\n\nfor each \u03c6d in R\n\n\n\n\n\n\n\n\n\ndo Q \u2190 <\u03c6 : \u03c6 \u2192 \u03c6d \u2208 F>\n\n\n\n\n\n\n\n\n\nwhile Q \u2260 <>\n\n\n\n\n\n\n\n\n\ndo \u03c6 \u2190 Q.pop_front\n\n\n\n\n\n\n\n\n\nif \u03c6 \u2208 C\n\n\n\n\n\n\n\n\n\nthen A \u2190 A \u222a {\u03c6}\n\n\n\n\n\n\n\n\n\nQ.push_back(<\u03c6\u2032 : \u03c6\u2032 \u2192 \u03c6 \u2208 F>)\n\n\n\n\n\n\n\n\n\nreturn A\n\n\n\n\n\n\n\n\n\n\nNote that this exact algorithm is not required. The same inferencing can be performed using, for example, a theorem prover or general purpose inferencing engine like SNARK\u2122 (SRI's New Automated Reasoning Kit) from SRI International.",
        "Eventually, inferencing program 210 finds the implication\n\n\u03c61\u2192\u03c62 where \u03c61=(soda-can, refrigerated) and \u03c62=(soda-can, chilled)\n\nSince this is a causes implication, the course of action to achieve the goal is the antecedent. Thus, inferencing program 210 has just determined the necessary course of action. Note that the inferencing necessary to determine the goal and the inferencing necessary to determine the course of action required only one step. Inferencing program 210 can also determine goals and courses of action where more than one inferencing step is necessary.",
        "Once the course of action has been determined, the reasoning apparatus 100 can proceed to carry out those actions in order to achieve the goal (e.g., if the reasoning apparatus 100 were used in conjunction with a robot). Reasoning apparatus 100 directs the robot to perform these actions, the actions are performed, and the goal is achieved. In this embodiment, the knowledge base 245 would also contain information about objects themselves (the Objects relation) and how various objects are used (the Uses relation). The robot would use this information to determine how to accomplish various tasks. The knowledge base 245 might also contain information about in what types of rooms particular objects are usually found (the Locations relation) and which objects are usually found together (the Proximity relation). The robot would use this information to determine where to find a particular object that it needs to perform a task. Each of these relations was discussed above with reference to a possible database implementation.",
        "2.2 Sample Task: Location Determination",
        "Reasoning apparatus 100 can also use its observations of the environment and its common sense knowledge about objects and locations to determine its own location. Location determination is helpful when, for example, reasoning apparatus 100 is used in conjunction with a mobile robot. A related task is to label rooms and open areas in a home or office given 1) a two-dimensional map, 2) location knowledge, and 3) simulated objects and room labels. In order for the robot and people to have natural interactions, it is helpful for the robot to possess knowledge of the surrounding space, such as a layout of rooms. Map structure can be generated using common sense constraints such as 1) an office is owned by an individual; 2) a gallery and a walkway are not owned by an individual; and 3) a reception area is located at an entrance to an office.",
        "Map layout information, such as labels of objects and rooms, can then be incorporated into sentences and modified map layouts to reflect sentential information. This is further discussed in \u201cReasoning with Analogical Representations\u201d by K. Myers and K. Konolige, in Principles of Knowledge Representation and Reasoning: Proceedings of the Third International Conference (KR92) (B. Nebel, C. Rich, and W. Swartout, eds.), San Mateo, Calif., 1992, which is hereby incorporated by reference. Note that a map does not have to be human-generated; it can also be generated by laser data. Laser data can also be extracted from cameras to build a sparse map of the unknown environment.",
        "FIG. 5 illustrates a method for determining a location using Bayesian inferencing. For example, a robot is located in one room (a)) of a set of rooms (\u03c9): \u03c9\u03b5\u03a9. Reasoning apparatus 100 determines the type of the room based on 1) which objects are probably present in the room, 2) which of these objects is usually found in each type of room, and 3) how common these objects are in general. When these probabilities are used with Bayes' theorem, the type of room with the highest probability can be calculated.",
        "After the method begins 500, reasoning apparatus 100 determines 505 which objects are in the room. The robot collects knowledge (D) about objects in the room using one or more methods. These methods include, for example, direct user input (e.g., by typing in \u201cThis room contains a bed\u201d) or speech recognition (e.g., by hearing a person say \u201cThis room contains a bed\u201d and then processing the speech). Ideally, a mobile robot should be able to associate human terms with sensory data by receiving a running description of its immediate surroundings as it explores a new home or office. These human-provided labels could be room types (e.g., \u201cThis is a kitchen\u201d) or objects (\u201cThis is a chair\u201d). Another possibility is for reasoning apparatus 100 to use object recognition (e.g., by taking a picture of the room and then processing the picture).",
        "Based on this knowledge, the robot determines whether certain objects (x) are present in the room. If the robot's knowledge were perfect, then it would know with 100% certainty which objects were present. However, each of the methods discussed above has a different inherent confidence value (level of certainty). While direct user input might have close to 100% certainty, speech recognition probably has less certainty, perhaps only 91%. This means that if speech recognition determines that there is a bed in the room, the probability that there is actually a bed in the room might be 91%. Since the level of certainty differs based on the method used, the probability that particular objects have been observed is the conditional probability distribution P(xi|D) over the objects xi\u2208X.",
        "Next, reasoning apparatus 100 determines 510 which of these objects is usually found in each type of room. This is represented symbolically as P(xi|\u03c9). One way to calculate this value is to count the number of entries in the knowledge base wherein a particular object xi is mentioned as being in a particular room \u03c9 and then divide by the number of entries of wherein any object x is mentioned as being in that particular room \u03c9. This can be represented symbolically as\n\nP(xi|\u03c9)=C(xi,\u03c9)/C(\u03c9), where xi is a particular object and \u03c9 is a particular room",
        "Reasoning apparatus 100 then determines 515 how common these objects are in general. This is represented symbolically as P(xi). One way to calculate this value is to count the number of entries in the knowledge base wherein a particular object xi is mentioned and then divide by the total number of entries in the knowledge base.",
        "Lastly, reasoning apparatus 100 determines 520 the location of the robot. The room in which the robot is located is given by",
        "\u03c9\n          \u2032\n        \n        =\n        \n        \u2062\n        \n          arg\n          \u2062\n          \n            \n              max\n              \u03c9e\u03a9\n            \n            \u2062\n            \n              P\n              \u2062\n              \n                \n              \n              \u2062\n              \n                (\n                \n                  \u03c9\n                  \u2758\n                  D\n                \n                )\n              \n            \n          \n        \n      \n    \n  \n  \n    \n      \n        =\n        \n        \u2062\n        \n          arg\n          \u2062\n          \n            \n          \n          \u2062\n          \n            \n              max\n              \u03c9e\u03a9\n            \n            \u2062\n            \n              \n                \u2211\n                x\n                \n                  \n                \n              \n              \u2062\n              \n                \n              \n              \u2062\n              \n                P\n                \u2061\n                \n                  (\n                  \n                    \u03c9\n                    ,\n                    \n                      x\n                      \u2758\n                      D\n                    \n                  \n                  )\n                \n              \n            \n          \n        \n      \n    \n  \n  \n    \n      \n        =\n        \n        \u2062\n        \n          arg\n          \u2062\n          \n            \n          \n          \u2062\n          \n            \n              max\n              \u03c9e\u03a9\n            \n            \u2062\n            \n              \n                \u2211\n                x\n                \n                  \n                \n              \n              \u2062\n              \n                \n                  \n                    P\n                    \u2061\n                    \n                      (\n                      \u03c9\n                      )\n                    \n                  \n                  \u2062\n                  \n                    P\n                    \u2061\n                    \n                      (\n                      \n                        x\n                        \u2758\n                        \u03c9\n                      \n                      )\n                    \n                  \n                  \u2062\n                  \n                    P\n                    \u2061\n                    \n                      (\n                      \n                        x\n                        \u2758\n                        D\n                      \n                      )\n                    \n                  \n                \n                \n                  P\n                  \u2061\n                  \n                    (\n                    x\n                    )\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n  \n    \n      \n        =\n        \n        \u2062\n        \n          arg\n          \u2062\n          \n            \n          \n          \u2062\n          \n            \n              max\n              \u03c9e\u03a9\n            \n            \u2062\n            \n              \n                P\n                \u2061\n                \n                  (\n                  \u03c9\n                  )\n                \n              \n              \u2062\n              \n                \n                  \u2211\n                  \n                    \n                  \n                \n                \n                  x\n                  1\n                \n                \n                  \n                \n              \n              \u2062\n              \n                \n                  \n                    P\n                    \u2061\n                    \n                      (\n                      \n                        \n                          x\n                          1\n                        \n                        \u2758\n                        \u03c9\n                      \n                      )\n                    \n                  \n                  \u2062\n                  \n                    P\n                    \u2061\n                    \n                      (\n                      \n                        \n                          x\n                          1\n                        \n                        \u2758\n                        D\n                      \n                      )\n                    \n                  \n                \n                \n                  P\n                  \u2061\n                  \n                    (\n                    \n                      x\n                      1\n                    \n                    )\n                  \n                \n              \n              \u2062\n              \u2026\n              \u2062\n              \n                \n                  \u2211\n                  \n                    \n                      \n                        P\n                        \u2061\n                        \n                          (\n                          \n                            \n                              x\n                              n\n                            \n                            \u2758\n                            \u03c9\n                          \n                          )\n                        \n                      \n                      \u2062\n                      \n                        P\n                        \u2061\n                        \n                          (\n                          \n                            \n                              x\n                              n\n                            \n                            \u2758\n                            D\n                          \n                          )\n                        \n                      \n                    \n                    \n                      P\n                      \u2061\n                      \n                        (\n                        \n                          x\n                          n\n                        \n                        )\n                      \n                    \n                  \n                \n                \n                  x\n                  n\n                \n                \n                  \n                \n              \n            \n          \n        \n      \n    \n  \n  \n    \n      \n        =\n        \n        \u2062\n        \n          \n            arg\n            \u2062\n            \n              \n                max\n                \u03c9e\u03a9\n              \n              \u2062\n              \n                ln\n                \u2062\n                \n                  \n                \n                \u2062\n                \n                  P\n                  \u2061\n                  \n                    (\n                    \u03c9\n                    )\n                  \n                \n              \n            \n          \n          +\n          \n            \n              \n                \u2211\n                \n                  \n                \n              \n              \n                i\n                =\n                1\n              \n              n\n            \n            \u2062\n            \n              \n            \n            \u2062\n            ln\n            \u2062\n            \n              \n                \u2211\n                \n                  x\n                  i\n                \n                \n                  \n                \n              \n              \u2062\n              \n                \n              \n              \u2062\n              \n                \n                  \n                    P\n                    \u2061\n                    \n                      (\n                      \n                        \n                          x\n                          i\n                        \n                        \u2758\n                        \u03c9\n                      \n                      )\n                    \n                  \n                  \u2062\n                  \n                    P\n                    \u2061\n                    \n                      (\n                      \n                        \n                          x\n                          i\n                        \n                        \u2758\n                        D\n                      \n                      )\n                    \n                  \n                \n                \n                  P\n                  \u2061\n                  \n                    (\n                    \n                      x\n                      i\n                    \n                    )\n                  \n                \n              \n            \n          \n        \n      \n    \n  \n\n\n\n\nVector x indicates the presence or absence of the objects. Each object xi is associated with an index i. If the value of x at index i is 1, then object xi is present; if the value is 0, then object xi is not present. Since x contains only binary values, the computational complexity is linear in the number of possible objects. In order to calculate the above value, we assume a generative Bayesian model where \u03c9 influences x and x influences D and calculate the joint distribution",
        "P\n          \u2061\n          \n            (\n            \n              \u03c9\n              ,\n              x\n              ,\n              D\n            \n            )\n          \n        \n        =\n        \n        \u2062\n        \n          \n            P\n            \u2061\n            \n              (\n              \u03c9\n              )\n            \n          \n          \u2062\n          \n            P\n            \u2061\n            \n              (\n              \n                x\n                \u2758\n                \u03c9\n              \n              )\n            \n          \n          \u2062\n          \n            P\n            \u2061\n            \n              (\n              \n                D\n                \u2758\n                x\n              \n              )\n            \n          \n        \n      \n    \n  \n  \n    \n      \n        =\n        \n        \u2062\n        \n          \n            \n              P\n              \u2061\n              \n                (\n                \u03c9\n                )\n              \n            \n            \u2062\n            \n              P\n              \u2061\n              \n                (\n                \n                  x\n                  \u2758\n                  \u03c9\n                \n                )\n              \n            \n            \u2062\n            \n              P\n              \u2061\n              \n                (\n                \n                  x\n                  \u2758\n                  D\n                \n                )\n              \n            \n            \u2062\n            \n              P\n              \u2061\n              \n                (\n                D\n                )\n              \n            \n          \n          \n            P\n            \u2061\n            \n              (\n              x\n              )",
        "Although the invention has been described in considerable detail with reference to certain embodiments thereof, other embodiments are possible as will be understood to those skilled in the art."
    ],
    "citations": [
        "4839853",
        "5442792",
        "6088731",
        "6292771",
        "6466695",
        "6625315",
        "6757646",
        "6850252",
        "7089226",
        "2002/0077726",
        "2003/0004915",
        "2003/0217052",
        "2005/0021517",
        "1 284 461",
        "1 363 200"
    ],
    "us_classification": "700246",
    "international_classifications": [
        {
            "classification_level": "A",
            "section": "G",
            "classification_class": "05",
            "subclass": "B",
            "main_group": "19",
            "subgroup": "04"
        }
    ]
}