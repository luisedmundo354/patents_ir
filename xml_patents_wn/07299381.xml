<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299381-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299381</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10801588</doc-number>
<date>20040317</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>598</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>11</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>714 25</main-classification>
<further-classification>714718</further-classification>
<further-classification>365201</further-classification>
</classification-national>
<invention-title id="d0e53">Discrete tests for weak bits</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4335457</doc-number>
<kind>A</kind>
<name>Early</name>
<date>19820600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714745</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6006339</doc-number>
<kind>A</kind>
<name>McClure</name>
<date>19991200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713500</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6105152</doc-number>
<kind>A</kind>
<name>Duesman et al.</name>
<date>20000800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714718</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6754116</doc-number>
<kind>B2</kind>
<name>Janik et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>365201</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6795788</doc-number>
<kind>B2</kind>
<name>Thatcher et al.</name>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>702119</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2004/0044935</doc-number>
<kind>A1</kind>
<name>Vancura</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714718</main-classification></classification-national>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>JP</country>
<doc-number>05-002896</doc-number>
<date>19930100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>JP</country>
<doc-number>06-076594</doc-number>
<date>19940300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>JP</country>
<doc-number>06-324125</doc-number>
<date>19941100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>JP</country>
<doc-number>10-150163</doc-number>
<date>19980600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>JP</country>
<doc-number>2000-207899</doc-number>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>JP</country>
<doc-number>2001-167598</doc-number>
<date>20010600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>JP</country>
<doc-number>2001-189098</doc-number>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00014">
<document-id>
<country>JP</country>
<doc-number>2002-175700</doc-number>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00015">
<document-id>
<country>JP</country>
<doc-number>2003-045197</doc-number>
<date>20030200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00016">
<document-id>
<country>JP</country>
<doc-number>2003-308700</doc-number>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00017">
<othercit>Data Sheet: “Synchronous DRAM,” Micron Technology, Inc. © 2002, Micron Technology, Inc.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00018">
<othercit><i>Digital Integrated Circuits, A Design Perspective </i>Chapter 10, “Designing Memory and Array Structures,” © 1996 Pretice Hall, Inc., pp. 551-583.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00019">
<othercit><i>Testing Semiconductor Memories, Theory and Practice</i>, A.J. van de Goor, Chapter 4, “Functional RAM chip testing”, © 1991 John Wiley &amp; Sons, pp. 93-105.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00020">
<othercit>Official Notice of Rejection mailed Aug. 3, 2007.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>36</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>714718</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714 25</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714 29</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>6</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20050210334</doc-number>
<kind>A1</kind>
<date>20050922</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Tandjoeng</last-name>
<first-name>Soeparto</first-name>
<address>
<city>Hyogo</city>
<country>JP</country>
</address>
</addressbook>
<nationality>
<country>JP</country>
</nationality>
<residence>
<country>JP</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Dickstein Shapiro LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Micron Technology, Inc.</orgname>
<role>02</role>
<address>
<city>Boise</city>
<state>ID</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Wilson</last-name>
<first-name>Yolanda L</first-name>
<department>2113</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A testing method for semiconductor memory that selects memory cells adjacent to the periphery of the memory array and to a memory twist. These memory cells are subjected to a more demanding test voltage and write recovery time to further stress the memory cells and reveal weak or marginally good memory cells.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="174.33mm" wi="131.66mm" file="US07299381-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="235.97mm" wi="147.66mm" file="US07299381-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="240.71mm" wi="180.09mm" file="US07299381-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="232.33mm" wi="163.83mm" orientation="landscape" file="US07299381-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="232.41mm" wi="132.67mm" file="US07299381-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="233.17mm" wi="169.59mm" orientation="landscape" file="US07299381-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="246.46mm" wi="174.24mm" file="US07299381-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0002" num="0001">The present invention relates generally to semiconductor memory devices and, more particularly, to a method and apparatus for testing a memory device.</p>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">Memory in integrated circuits must be tested to ensure reliability. Typically, integrated circuits are extensively tested both during and after production and, in some cases, routinely during use after they have been installed in products. For example, memory devices, such as DRAMs, are tested during production at the wafer level and after packaging. They are also routinely tested each time a computer system using the DRAMs executes a power-up routine when power is initially applied to the computer system. DRAMs are generally tested by writing known data to each location in the memory and then reading data from each memory location to determine if the read data matches the written data. As the capacity of DRAMs and other memory devices continues to increase, the time required to write and then read data from all memory locations continues to increase, even though memory access times continue to decrease.</p>
<p id="p-0004" num="0003"><figref idref="DRAWINGS">FIG. 1</figref> shows a block diagram of a conventional semiconductor memory device <b>100</b> having an array <b>140</b> of eight memory blocks <b>145</b>. The memory array <b>140</b> includes row decoder and access circuits <b>125</b> and column decoder and access circuits <b>135</b>. The memory device <b>100</b> also includes peripheral circuit <b>440</b> which includes, for example, the mode register of the memory device. Peripheral circuit <b>440</b> controls how the memory array <b>140</b>, and correspondingly, the memory blocks <b>145</b>, are accessed (e.g., burst type, burst length, read/write delays). Although not shown, peripheral circuit <b>440</b> is coupled to each row decoder and access circuitry <b>125</b> and column decoder and access circuitry <b>135</b>. It is known that the number of memory blocks <b>145</b> that comprise memory array <b>140</b> may vary depending on the implementation. Test controller <b>450</b> is coupled to the memory device <b>100</b> through line <b>451</b>. Test controller <b>450</b> provides signal information to memory device <b>100</b>, peripheral circuit <b>440</b>, and decoder and access circuits <b>135</b>, <b>125</b> to perform testing on memory device <b>100</b>. For example, test controller <b>450</b> will provide location signal information, read/write signal information, and other signal information used to implement testing operations on memory device <b>100</b>.</p>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 2</figref> shows the configuration of the memory device <b>100</b> of <figref idref="DRAWINGS">FIG. 1</figref> in greater detail. As shown, memory device <b>100</b> includes a memory array <b>140</b> having eight memory blocks <b>145</b> (<figref idref="DRAWINGS">FIG. 1</figref>), although only one memory block <b>145</b> is shown in <figref idref="DRAWINGS">FIG. 2</figref>. Memory block <b>145</b> is composed of two memory sub-blocks <b>155</b>. Although described with one memory array <b>140</b>, eight memory blocks <b>145</b>, and two sub-blocks <b>155</b>, the number of memory arrays <b>140</b>, memory blocks <b>145</b>, and memory sub-blocks <b>155</b> in device <b>100</b> can vary depending on the implementation. Each memory block <b>145</b> includes bit lines that extend through the sub-blocks <b>155</b>. Bit lines <b>112</b>, <b>114</b> are representative of the many bitlines in block <b>145</b>.</p>
<p id="p-0006" num="0005">Memory block <b>145</b> has 1024 rows, M columns, and two sub-blocks <b>155</b>, where each sub-block <b>155</b> has 512 rows. Conventionally, each row of memory block <b>145</b> is numbered sequentially starting with row number <b>0</b> as the first row in the memory block <b>145</b> and row number <b>1023</b> being the last row in the memory block <b>145</b>. Row number <b>511</b> is the last row in the upper sub-block <b>155</b> and row number <b>512</b> is the first row in the lower sub-block <b>155</b>. Although described with reference to memory block having 1024 rows of memory, the number of rows of memory may vary depending on the implementation.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 3</figref> shows a memory sub-block <b>155</b> of <figref idref="DRAWINGS">FIG. 2</figref> in greater detail. Memory sub-block <b>155</b> has a plurality of memory cells <b>170</b>, for example, DRAM cells, that are arranged in rows <b>120</b> and columns <b>130</b>, e.g., as an x-y grid. Conductive bit lines <b>112</b>, <b>114</b>, <b>116</b>, <b>118</b> extend the length of the memory array <b>140</b> and connect bit line contacts of respective memory cells <b>170</b> within the columns. Word lines <b>102</b>, <b>104</b>, <b>106</b>, <b>107</b>, <b>108</b>, <b>109</b>, <b>110</b> extend the width of memory sub-block <b>155</b> and connect control terminals of the access transistors in the memory cells of their respective rows. Known peripheral column and row decoder and access circuitry <b>135</b>, <b>125</b> (<figref idref="DRAWINGS">FIG. 1</figref>) determine, in accordance with supplied address data, selected bit lines and word lines upon which to propagate data and enable signals respectively. Although not shown in <figref idref="DRAWINGS">FIG. 3</figref>, each word line <b>102</b>, <b>104</b>, <b>106</b>, <b>107</b>, <b>108</b>, <b>109</b>, <b>110</b> is coupled to the row decoder and access circuitry <b>125</b>, and each bit line <b>112</b>, <b>114</b>, <b>116</b>, <b>118</b> is coupled to the column decoder and access circuitry <b>135</b>. The location of memory cells can vary depending on the implementation. For example, although <figref idref="DRAWINGS">FIG. 2</figref> shows memory cells located at some, but not all, of the intersections of row and column lines of the memory sub-block, other implementations may have memory cells at every intersection.</p>
<p id="p-0008" num="0007">As indicated above, memory block <b>145</b> has 1024 rows of memory, M columns, and two sub-blocks <b>155</b>, where each sub-block <b>155</b> has 512 rows of memory. Dummy rows, e.g., rows <b>102</b>, <b>110</b>, are not counted as part of the rows of memory. If memory sub-block <b>155</b> is the first of the two memory sub-blocks <b>155</b> (<figref idref="DRAWINGS">FIG. 2</figref>), then word line <b>104</b> represents the row line adjacent to the top periphery of the memory sub-block <b>155</b> and the top of the memory block <b>145</b>, i.e., row number <b>0</b>. Word lines <b>107</b>, <b>109</b> represent the row lines adjacent to the twist <b>160</b> of the memory sub-block <b>155</b>, e.g., row numbers <b>254</b>, <b>255</b>, <b>256</b>, and <b>257</b>. Word line <b>108</b> represents the row line adjacent to the bottom periphery of the memory sub-block <b>155</b>, i.e., row number <b>510</b>, <b>511</b>.</p>
<p id="p-0009" num="0008">If memory sub-block <b>155</b> is the second of the two memory sub-blocks <b>155</b> (<figref idref="DRAWINGS">FIG. 2</figref>), then word line <b>104</b> represents the row line adjacent to the top periphery of the memory sub-block <b>155</b>, i.e., row number <b>512</b>, <b>513</b>. Word lines <b>107</b>, <b>109</b> represent the row lines adjacent to the twist <b>160</b> of the memory sub-block <b>155</b>, e.g., row numbers <b>766</b>, <b>767</b>, <b>768</b>, and <b>769</b>. Word line <b>108</b> represents the row line adjacent to the bottom periphery of the memory sub-block <b>155</b> and the bottom of the memory block <b>145</b>, i.e., row number <b>1023</b>.</p>
<p id="p-0010" num="0009">Bit line <b>114</b> represents the column line adjacent to the left periphery of the memory sub-block <b>155</b>, i.e., column <b>0</b>, <b>1</b>. Bit line <b>118</b> represents the column line adjacent to the right periphery of the memory sub-block <b>155</b>, i.e., column M-<b>1</b>, M-<b>2</b> if there are M columns in the memory sub-block <b>155</b>. The bit lines extend through the memory block <b>145</b>, therefore passing through each sub-block <b>155</b> in memory block <b>145</b> although not shown.</p>
<p id="p-0011" num="0010">One known method of testing a memory device requires what is known as a brute force approach of testing the entire memory array <b>140</b>. During such testing, zeroes are written to all the memory cells <b>170</b> in the memory array <b>140</b>. This is followed by reading each memory cell <b>170</b> to ensure that the zeroes were correctly written and stored. Then ones are written in all the memory cells <b>170</b>, which are then read to ensure that the ones were correctly written and stored.</p>
<p id="p-0012" num="0011">Another known memory test is the checkerboard test, where the memory cells <b>170</b> of an array <b>140</b> are divided into two groups. The first group of memory cells <b>170</b> form the checkerboard, the second group of memory cells <b>170</b> is formed from the remaining cells also forms a similar checkerboard. In the first step of the test, ones are written to all the memory cells <b>170</b> of the first group and zeroes are written to all the memory cells <b>170</b> of the second group. In the second step, all of the memory cells <b>170</b> are read to verify that the values were correctly written to and stored by the memory cells <b>170</b>. In the third step of the test, zeroes are written to all the memory cells <b>170</b> of the first group and ones are written to all the memory cells <b>170</b> of the second group. In the fourth step, all of the memory cells <b>170</b> are read to verify that the values were correctly written to and stored by the memory cells <b>170</b>. The above described checkerboard approach also serves to test the memory cell-to-memory cell isolation between memory cells <b>170</b> of an array <b>140</b>.</p>
<p id="p-0013" num="0012">Two significant values in the testing process are Vcc and tWR. Vcc is the supply, or rail, voltage used for writing to (and refreshing) a memory cell <b>170</b>. Typical testing circuitry uses a standard Vcc (e.g., 2.5V) as the full logic level, i.e., a “one.” Typical performance requirements of a semiconductor memory may be seen, for example, in the Micron datasheet 256 mb DRAM specifications at (http://download.micron.com/pdf/datasheets/dram/256MSDRAM_E.pdf).</p>
<p id="p-0014" num="0013">tWR stands for Write (data) Recovery time. As is known, burst length is the word size of data that is written at a time. Burst length may be, for example, one, two, or four. Generally, tWR is referred to as the time necessary to store data into a memory cell <b>170</b> before a pre-charge can occur. If burst length is programmed to be greater than one, then tWR is the time necessary to store the last piece of data into a memory cell <b>170</b> before a pre-charge can occur. tWR is the necessary time/minimum time to guarantee that data in the write buffer can be fully written into the memory cell <b>170</b>. If tWR is not satisfied, e.g., if tWR is not sufficiently long enough to store data in a memory cell <b>170</b>, then the full data is not stored and a read failure, e.g., an inaccurate read, can result. Testing circuitry generally uses a standard tWR substantially similar to the tWR used in the actual performance of the memory. For example, according to the datasheet specification for the Micron 256 mb DRAM, tWR is 12 ns.</p>
<p id="p-0015" num="0014">As the size of memory arrays (e.g., <b>140</b>) increases, so does the time required to test the arrays. Various proposals have been made to decrease the time required to test memory arrays <b>140</b>. The time required to write known data to memory array <b>140</b> has been reduced by such approaches as simultaneously writing the same data to each column of each array one row at a time. However, some types of testing require that the word lines be kept at a fixed positive voltage for an extended period of time, such as tens of milliseconds. When there are thousands of word lines in one memory device, the memory testing takes long periods of time since only one word line in each block of the memory array <b>140</b> may be accessed at a time.</p>
<p id="p-0016" num="0015">An additional problem in memory testing arises because there are memory cells <b>170</b> in certain regions of a memory block <b>145</b> that are more susceptible to faults or errors. As seen in <figref idref="DRAWINGS">FIG. 3</figref> memory block <b>145</b> has an area of memory cells <b>170</b> adjacent to the periphery of the memory sub-block <b>155</b> that form a fringe area. An area is adjacent if it is next to or nearby another area. The fringe area may include the first row e.g., rows <b>104</b>, <b>108</b>, adjacent to the dummy rows, e.g., rows <b>102</b>. Further the fringe area may include the first column, e.g., columns <b>114</b>, <b>118</b>, adjacent to dummy columns, e.g., columns <b>112</b>. A memory sub-block <b>155</b> having a folded digitline <b>160</b> (<figref idref="DRAWINGS">FIG. 3</figref>), e.g., a twist, has another area of memory cells <b>170</b> adjacent to the twist <b>160</b> that forms another fringe area. For example, the fringe area adjacent to twist <b>160</b> may include the rows, e.g., rows <b>107</b>, <b>109</b>, that are adjacent to the dummy rows, e.g., rows <b>110</b>, that are located adjacent to the twist <b>160</b>. A memory cell <b>170</b> in a fringe geographic region has inherent influences that can affect the reliability of the memory cell.</p>
<p id="p-0017" num="0016">An edge in a memory cell implies those memory cells located adjacent to or nearby the physical boundaries of a subarray/a block/a bank. In other words, an edge includes memory cells that either are adjacent to the dummy memory cells or have strongest interference with the dummy memory cells. Edge memory cells can be affected by the physics and/or electronics of the corresponding dummy cells. Edge memory rows are rows located adjacent to or nearby the physical boundary of a subarray/a block/a bank. Edge memory rows are not necessarily limited to the closest row to the physical boundary and may include several rows close to the physical boundary. Similarly, edge memory columns are rows located adjacent to or nearby the physical boundary of a subarray/a block/a bank. Edge memory columns are not necessarily limited to the closest column to the physical boundary and may include several columns close to the physical boundary. Edge subarrays, or edge blocks, are subarrays located adjacent to or nearby the physical boundary of a memory bank.</p>
<p id="p-0018" num="0017">It is known to provide dummy memory cells around the periphery of a memory sub-block <b>155</b> in order to assist process uniformity during fabrication of the memory block <b>145</b>. For example, in <figref idref="DRAWINGS">FIG. 3</figref> memory cells <b>170</b> disposed on word lines <b>102</b> and memory cells <b>170</b> disposed on bit lines <b>112</b> are dummy memory cells. Further, in a memory sub-block <b>155</b> having a folded digitline <b>160</b>, it is known to provide dummy cells around the periphery of a folded digitline <b>160</b> in order to assist process uniformity during fabrication of the memory sub-block <b>155</b>. Thus, memory cells <b>170</b> disposed on bit lines <b>110</b> are also dummy cells.</p>
<p id="p-0019" num="0018">Memory cells located in certain areas of a memory block <b>145</b> tend to be weaker than other memory cells. For example, memory cells located close to an edge of the memory block <b>145</b>, or edge of a sub-block <b>155</b>, tend to be weaker or have a smaller margin of operation (i.e., “marginal”) than memory cells not located close to an edge. Further, memory cells located close to a folded digitline of the memory block <b>145</b>, or sub-block <b>155</b>, tend to be weaker than memory cells not located close to twist <b>160</b>.</p>
<p id="p-0020" num="0019">It is also more difficult to test memory cells located in certain areas of a memory block <b>145</b>. Memory cells located close to an edge of a memory block <b>145</b>, or sub-block <b>155</b>, are typically separated from the edge by a dummy cell. Dummy cells typically have their word line grounded to disable their associated access transistors. Additionally, dummy cells adjacent a peripheral column of the array have their bit line coupled to an intermediate voltage. Therefore, dummy cells located close to an edge of a memory block, or sub-block, are not able to receive full voltages. Consequently, a dummy cell can influence the margin of operation of an adjacent memory cell and also the testing of the adjacent memory cell. Similarly, dummy cells located adjacent to a digitline twist affects the margin and testability of memory cells adjacent to these dummy cells.</p>
<p id="p-0021" num="0020">Therefore, it is desirable to have a testing method that can effectively test discrete areas of a memory array. More specifically, it is desirable to have a testing method for testing the margin of the memory cells located in the fringe areas of a memory block, such as memory cells <b>170</b> near the periphery of the memory array <b>140</b> (or memory block <b>145</b> or sub-block <b>155</b>) and memory cells near folded digitlines <b>160</b>.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0022" num="0021">The present invention addresses the problems described above with testing memory arrays and provides a memory testing method that tests discrete regions of memory arrays that are generally known to be weak or marginally good.</p>
<p id="p-0023" num="0022">Memory cells in the fringe areas of a memory array are tested under more demanding testing requirements. For example, every memory cell in each row adjacent to the periphery of the memory array, or sub-array, is written to and read from using more demanding write characteristics. These more demanding write characteristics include using lower than standard voltage levels and less than standard tWR times. The use of more demanding testing specifications provides greater reliability in identifying weak or only marginally good memory cells.</p>
<p id="p-0024" num="0023">Although the testing method may be used in addition to conventional testing methods, the disclosed testing method may also be used in lieu of conventional testing. Moreover, testing selective, representational memory cells from the memory array can reduce testing time.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0025" num="0024">These and other features and advantages of the invention will be more readily understood from the following detailed description of the invention which is provided in connection with the accompanying drawings, in which:</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 1</figref> is a simplified block diagram of a conventional memory array and associated circuitry;</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 2</figref> shows a portion of the <figref idref="DRAWINGS">FIG. 1</figref> memory array in greater detail;</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 3</figref> shows a portion of the <figref idref="DRAWINGS">FIG. 1</figref> memory array in even greater detail;</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart of a test process in accordance with an exemplary embodiment of the invention;</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 5</figref> shows a portion of a memory array under test in accordance with an exemplary embodiment of the invention; and</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 6</figref> is a flow chart showing the test process of <figref idref="DRAWINGS">FIG. 4</figref> in greater detail.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0032" num="0031">In the following detailed description, reference is made to the accompanying drawings, which form a part hereof, and in which is shown by way of illustration specific embodiments in which the invention may be practiced. These embodiments are described in sufficient detail to enable those of ordinary skill in the art to make and use the invention, and it is to be understood that structural, logical, or procedural changes may be made to the specific embodiments disclosed without departing from the spirit and scope of the present invention.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart of a process <b>199</b> for carrying out the testing of a region in a memory device, in accordance with an exemplary embodiment of the invention. The process <b>199</b> is done in a column/row-wise fashion, testing memory cells in certain rows of the fringe areas of a sub-block <b>155</b>. Testing a memory sub-block <b>155</b> occurs in several iterations, where each iteration has sub-iterations. Each iteration of the memory test selects a different column of the sub-block <b>155</b> for testing. The process is reiterated for all of the columns of the memory sub-block <b>155</b>. Each sub-iteration of the memory test selects a different row of the memory sub-block <b>155</b> for testing. The memory cells being tested correspond to the selected row and selected column. Although the process <b>199</b> is described in reference to one sub-block <b>155</b>, the illustrated testing process <b>199</b> is representational and in a preferred embodiment, the process <b>199</b> is applied to all sub-blocks <b>155</b> in the memory array <b>145</b> simultaneously. For example, memory row number <b>0</b> in all sub-blocks are selected and tested simultaneously.</p>
<p id="p-0034" num="0033">In segment P<b>1</b>, the first column of the memory sub-block is selected. In segment P<b>2</b>, the first row of the memory sub-block is selected. The memory cell at the selected row and column is tested.</p>
<p id="p-0035" num="0034">In segment P<b>3</b>, the last row of the memory sub-block is selected. The memory cell at the selected row and column is tested.</p>
<p id="p-0036" num="0035">In segment P<b>4</b>, the row of the memory below the twist in the memory sub-block is selected. The memory cell at the selected row and column is tested.</p>
<p id="p-0037" num="0036">In segment P<b>5</b>, the row of the memory below the twist in the sub-block is selected. The memory cell at the selected row and column is tested.</p>
<p id="p-0038" num="0037">In segment P<b>6</b>, if the currently selected column is the last row of the memory sub-block, then there are no more columns to be tested and the process ends. Otherwise, the process continues to segment P<b>7</b>, where the sequentially next column becomes the selected column. The process continues at segment P<b>2</b>.</p>
<p id="p-0039" num="0038">When testing process <b>199</b> is completed, the first row of memory, the last row of memory, the row above a memory twist and the row below the memory twist have been tested. Thus, the fringe areas of memory sub-block <b>155</b> have been tested.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 5</figref> depicts a system that tests memory sub-block <b>155</b> of a memory array <b>140</b> in accordance with an exemplary embodiment of the invention. Although only one sub-block <b>155</b> of a memory block <b>145</b> (e.g., of <figref idref="DRAWINGS">FIG. 2</figref>) of a memory array <b>140</b> (e.g., of <figref idref="DRAWINGS">FIG. 2</figref>) is shown, the testing of memory sub-block <b>155</b> is representational of every memory sub-block <b>155</b> in the memory array <b>140</b>.</p>
<p id="p-0041" num="0040">As in <figref idref="DRAWINGS">FIGS. 1-3</figref>, test controller <b>450</b> is coupled to the memory device that includes memory sub-block <b>155</b> through line <b>451</b>. Test controller <b>450</b> is, however, programmed through appropriate software, firmware, or hardware to provide signals to the memory device, its peripheral circuitry, and its decoder and access circuit. By providing the signals, test controller <b>450</b> performs the testing as in <figref idref="DRAWINGS">FIG. 4</figref> and, in more detail, in <figref idref="DRAWINGS">FIG. 6</figref>. For that purpose, test controller <b>450</b> can be a microprocessor, microcontroller, or any other component programmable to provide suitable signals to test devices.</p>
<p id="p-0042" num="0041">Initially, in a column/row-wise fashion, for example, the first column, i.e., column <b>270</b>—column number <b>0</b>, and the first row, i.e., row <b>280</b>—row number <b>0</b>, of the sub-block are selected. The memory cell corresponding to the selected column and selected row is tested. In the next sub-iteration, the last row, i.e., row <b>282</b>, of the sub-block is selected. Then the memory cell corresponding to the selected column and selected rows is tested. In the next sub-iteration, the row of memory below the folded digitline is selected, i.e., row <b>284</b>. Then the memory cell corresponding to the selected column and selected row is tested. In the next sub-iteration, the row of memory above the folded digitline is selected, i.e., row <b>286</b>. Then the memory cell corresponding to the selected column and selected row is tested. The selected column is changed to a new selected column and the testing process is repeated and the selected row starts again at the first row of each sub-block. Preferably, columns are selected incrementally, i.e., column number one, i.e., column <b>272</b>, is selected after column number zero. When the last column of the memory block <b>145</b> has been tested, the test is completed.</p>
<p id="p-0043" num="0042">Should a memory cell <b>170</b> fail a test, then the location of the memory cell <b>170</b> that failed is stored and the testing of the remainder of the memory array <b>140</b> continues. The testing process tallies the number of memory cell failures. If a predetermined number of memory cells <b>170</b> fail, then the testing process quits. In another aspect, at a later time using the stored locations, accommodations can be made for the memory cells <b>170</b> that failed, e.g., redundant rows can be enabled, or if possible, the memory cell <b>170</b> can be repaired.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart of a process <b>200</b> showing the process <b>199</b> of <figref idref="DRAWINGS">FIG. 4</figref> in greater detail. The testing process <b>200</b> differs from the testing process <b>199</b> described above in that testing process <b>200</b> is described with reference to testing the entire memory array <b>140</b>. In this example, the test is performed on an exemplary Micron 256 mb SDRAM memory array having at least one memory block <b>145</b> having 1024 rows, each sub-block <b>155</b> having 512 rows, and one folded digitline per 256 rows. The exemplary process <b>200</b> starts by writing ones to the entire memory block <b>145</b>. Then the process selects a single column at a time and selects and tests memory cells associated with different rows, beginning with column number zero and proceeding sequentially until the last column is tested. Progression to a next segment in the test process assumes that the previous process segment was successfully completed.</p>
<p id="p-0045" num="0044">In segment S<b>1</b>, the memory blocks <b>145</b> within the memory array <b>140</b> are initialized. Every memory array <b>140</b> has a specific manner in which it is provided with power and initialized. For example, see Micron datasheet (referred to above), page 12, which specifies the appropriate manner to initialize the Micron 256 mb SDRAM memory. Therefore, exact execution of segment S<b>1</b> is dependent upon the particular memory being tested.</p>
<p id="p-0046" num="0045">In segment S<b>2</b>, the mode register of the memory array <b>140</b> (<figref idref="DRAWINGS">FIG. 1</figref>) is programmed to indicate how data will be read from or written to the memory device. The mode register is used to define the specific mode of operation of the memory device. The read latency (e.g., the column-address strobe (“CAS”) latency) is the delay, in clock cycles, between the registration of a READ command and the availability of the first piece of output data and can be set to two or three clock cycles. To execute the test program, the read latency is programmed to be equivalent to two. Read and write access to the memory device are burst oriented, the burst length is the maximum number of column locations that can be accessed for a given READ or WRITE command. For the testing process <b>200</b>, the burst length is programmed to be equivalent to one (i.e., a single column). The first column is designated as the selected column.</p>
<p id="p-0047" num="0046">In segment S<b>3</b>, the logic value of a logic one—Vtest (where Vtest is substantially equivalent to 2.2 volts), is written to every memory cell in the memory array. The first row in each memory sub-block is designated as the selected row. In segment S<b>4</b>, the selected row in each sub-block is activated. In segment S<b>5</b>, a zero is written to each memory cell corresponding to the selected column and the selected rows. During the write operation, a loose tWR is used (e.g., twelve ns).</p>
<p id="p-0048" num="0047">In segment S<b>6</b>, program remains idle for a period of time (e.g., “NOP” instruction). The no operation command is used to prevent unwanted commands from being registered during idle or wait states. Operations already in progress are not affected.</p>
<p id="p-0049" num="0048">In segment S<b>7</b>, a precharge occurs. A precharge is used to deactivate the selected row in each memory sub-block. The sub-block will be available for subsequent row access a specified time period after the precharge command is issued. (once a sub-block has been precharged, the sub-block is in an idle state and must be activated prior to any READ or WRITE commands being issued to that sub-block).</p>
<p id="p-0050" num="0049">In segment S<b>8</b>, the selected row in each memory sub-block is reactivated.</p>
<p id="p-0051" num="0050">In segment S<b>9</b>, a Raslo pause occurs. A Raslo is where the row address signal is of low logic level. The program keeps the low RAS signal logic level for a specific period of time, which is intended to allow the zero to settle in the memory cells. In other embodiments of the invention, the Raslo pause is shorter to further stress the memory cell. A Raslo may also be used to discharge dummy cells.</p>
<p id="p-0052" num="0051">In segment S<b>10</b>, the selected row in each memory sub-block activated in segment S<b>4</b> is activated. The reactivation segment is to ensure that the selected rows are active before writing the opposite data to the memory cells. In segment S<b>11</b>, a logic level of one is written to the selected memory cells, i.e., those memory cells corresponding to the selected column and selected rows. During the write operation, a more demanding, shorter tWR and a more demanding Vtest are used, as described above.</p>
<p id="p-0053" num="0052">In segment S<b>12</b>, the data is read from the selected memory cells. If the data from each memory cell is not substantially equivalent to one, then the test process <b>200</b> records this failure. If a predetermined number of memory cells fail the test, then the test process is aborted. Otherwise, process <b>200</b> execution continues at segment S<b>13</b>.</p>
<p id="p-0054" num="0053">In segment S<b>13</b>, segments S<b>4</b>-<b>12</b> are potentially repeated for the last row in each memory sub-block. If the currently selected row is the first row of memory in each sub-block, then the last row of memory (e.g., row number <b>511</b>) in each memory sub-block is designated as the selected row and the process continues to segment S<b>4</b>. Otherwise, process <b>200</b> execution continues at segment S<b>14</b>.</p>
<p id="p-0055" num="0054">In segment S<b>14</b>, segments S<b>4</b>-<b>12</b> are potentially repeated for the row below the twist in each memory sub-block. If the currently selected row is the last row of memory in each memory sub-block, then the row of memory below the twist in each sub-block (e.g., row number <b>256</b>) is designated as the selected row and process <b>200</b> continues at segment S<b>4</b>. Otherwise, process <b>200</b> continues at segment S<b>15</b>.</p>
<p id="p-0056" num="0055">In segment S<b>15</b>, segments S<b>4</b>-<b>12</b> are potentially repeated for the row above twist in each memory sub-block. If the currently selected row is the row of memory below the twist in each memory sub-block, then the row of memory above the memory twist (e.g., row number <b>255</b>) in each memory sub-block is designated as the selected row and process <b>200</b> continues at segment S<b>4</b>. Otherwise, process <b>200</b> continues at segment S<b>16</b>.</p>
<p id="p-0057" num="0056">In segment S<b>16</b>, segments S<b>3</b>-<b>12</b> are potentially repeated for the next column. If the selected column is the last column in the memory array, then process is complete. Otherwise, the selected column is incremented by one and process <b>200</b> execution returns to segment S<b>3</b>. Segment S<b>16</b> determines if all of the columns have been tested.</p>
<p id="p-0058" num="0057">At the completion of process <b>200</b>, selected memory cells located at the fringe areas of the memory array <b>140</b> have been tested. Since only a portion of an entire memory array <b>140</b> is tested, the test process <b>200</b> of the invention reduces the amount of time to test a memory array <b>140</b>.</p>
<p id="p-0059" num="0058">Thus, a testing process is provided that reduces the number of memory cells that are tested, as well as the time required to test the memory array. The testing process also identifies memory cells that are weak or only marginally good and enables the opportunity to identify, and if desirable, repair those problematic memory cells.</p>
<p id="p-0060" num="0059">The above-described method tests memory cells in fringe regions of a memory array or a memory device (e.g., memory cells near the periphery and memory cells near the folded digitline). Since memory cells in the fringe regions may be more marginal, the memory cells are more sensitive to the Vcc level. Therefore, a more demanding voltage level (i.e., Vtest) is used for the test which is different from the typically used Vcc values of, e.g., 2.5V. For example, Vtest is set to a voltage lower than 2.5V (e.g., 2.2V+/−0.1 volts). In an exemplary preferred embodiment, Vtest is within approximately 88-92% of the Vcc. For example, if Vcc is 2.5V, then the Vtest is within approximately 2.2V to 2.3V. Marginal memory cells are also more sensitive to the length of the tWR time, a tWR for testing is used which is different from, and more demanding than, the standard tWR. A tWR is established having a shorter time delay than the standard 12 ns tWR. A short, i.e., a tight, tWR test is supposed to guard a memory cell that will have a problem retaining information when information is written to the memory cell. In a preferred embodiment, the tWR test is between approximately 79-96% of the standard tWR. For example, if the standard tWR is 11.5 ms, then the tWR test is within approximately 9.09 to 11.04 ms. With the use of the lower Vtest and shorter tWR, the testing process should reveal those memory cells that are weak or marginally good memory cells <b>170</b>.</p>
<p id="p-0061" num="0060">While the invention has been described and illustrated with reference to specific exemplary embodiments, it should be understood that many modifications and substitutions could be made without departing from the spirit and scope of the invention. For example, although the invention is described in reference to testing particular memory features, i.e., tWR and voltage levels, other memory features may be tested as well. Further, although the invention is described with reference to testing particular voltages and/or particular tWR times, the invention is not so limited. Additionally, the invention can be applied to the testing of redundant memory elements, whether the redundant elements are located between dummy elements and the standard memory elements, or if the redundant elements are located in a different location, and not adjacent to the standard memory elements.</p>
<p id="p-0062" num="0061">In another embodiment of the invention, memory array <b>140</b> does not include folded digitlines. Consequently, the testing process according to this embodiment would differ from the embodiment described with reference to <figref idref="DRAWINGS">FIG. 5</figref> in that there would not be any testing of rows adjacent to a memory twist.</p>
<p id="p-0063" num="0062">In yet another embodiment of the invention, memory cells in rows adjacent to the edges of the sub-block and memory cells in columns adjacent to edges of the sub-block are selected for testing.</p>
<p id="p-0064" num="0063">In yet another embodiment of the invention, memory cells in rows adjacent to the edges of the sub-block, memory cells in rows adjacent to the twists of the sub-block, and memory cells in columns adjacent to edges of the sub-block are selected for testing.</p>
<p id="p-0065" num="0064">In yet another embodiment of the invention, memory cells in columns adjacent to edges of the sub-block is selected for testing.</p>
<p id="p-0066" num="0065">In another embodiment of the invention, the memory array <b>140</b> is tested in a column-wise fashion, instead of the process above which is tested in a row-wise fashion. In the embodiment, the fringe regions of the memory array are also tested.</p>
<p id="p-0067" num="0066">In yet another embodiment, the testing process of the invention is applied to a memory wafer, where the dies on the periphery of the wafer are selected for testing.</p>
<p id="p-0068" num="0067">In other aspects of the different embodiments of the invention, more than one row in a sub-block adjacent to a fringe is selected to be concurrently tested. For example, memory cells in the first and second rows of a sub-block are tested, then memory cells in the last and second to last rows of the sub-block are tested. Similarly, more than one column of memory cells may be selected to be tested concurrently.</p>
<p id="p-0069" num="0068">Accordingly, the invention is not to be considered as limited by the foregoing description but is only limited by the scope of the claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed as new and desired to be protected by Letters Patent of the United States is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of testing a memory device, the method comprising:
<claim-text>selecting a memory cell to be tested from a fringe region of an array of the memory device; and</claim-text>
<claim-text>testing said selected memory cell using at least one test parameter that is different than a test parameter to be used for memory cells not in the fringe region.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said act of selecting comprises selecting the memory cell from a region that is adjacent to a periphery of said array.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said act of selecting comprises selecting the memory cell from a region that is adjacent to a folded bitline of said array.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said at least one parameter is a first voltage level that is different from a voltage level used to test memory cells not in the fringe.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein said first voltage level is different than a supply voltage.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, where said first voltage level is less than approximately 2.5V.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said act of testing comprises testing said selected memory cell using at least one test parameter more demanding than said test parameter to be used for memory cells not in the fringe region.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said at least one parameter is a first write recovery time that is different from a second write recovery time used to test memory cells not in the fringe.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein said first write recovery time is shorter than approximately 12 ns.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein said first write recovery time is between approximately 79-96% of the second write recovery time.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A method of testing a memory device, the method comprising:
<claim-text>selecting a column of a memory array of said memory device to be tested;</claim-text>
<claim-text>selecting a row of said memory array to be tested, said selected column and row defining a memory cell in a fringe region of said memory array;</claim-text>
<claim-text>writing first data to each said memory cell in said memory array;</claim-text>
<claim-text>activating said selected row for reading and writing;</claim-text>
<claim-text>providing second data to a memory cell corresponding to said selected row and selected column, said second data being different from said first data;</claim-text>
<claim-text>precharging said selected row for deactivating said selected row for reading and writing;</claim-text>
<claim-text>activating said selected row for reading and writing;</claim-text>
<claim-text>re-activating said selected row for reading and writing;</claim-text>
<claim-text>providing said first data to said memory cell corresponding to said selected row and selected column, where said first data is provided at a lower voltage than a voltage to be used to provide test data to memory cells not in the fringe region, where said first data is provided at a shorter write release time than a write release time to be used to provide test data to memory cells not in the fringe region;</claim-text>
<claim-text>reading test data from said memory cell; and</claim-text>
<claim-text>determining if said test data is correct.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:
<claim-text>initializing the memory array for access and storage.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising:
<claim-text>loading a mode register associated with said memory array to establish the write mode.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the lower voltage is between approximately 88% and approximately 92% of the voltage used to provide test data to memory cells not in the fringe region.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the shorter write release time is between approximately 79% and approximately 96% of the write release time used to provide test data to memory cells not in the fringe region.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A method of testing an integrated circuit memory, said method comprising:
<claim-text>identifying a first plurality of memory cells of a fringe region of said integrated circuit memory for testing; and</claim-text>
<claim-text>determining if said first plurality of memory cells are weak cells using at least one test parameter that is different than a test parameter to be used for memory cells not in the fringe region.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein said act of determining comprises stressing said identified first plurality of memory cells to determine if they are weak cells.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein said act of stressing comprises applying a test voltage at a level below a test voltage used for other memory cells of said integrated circuit memory.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein said act of stressing comprises applying a shorter than standard write release time.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein said first plurality of memory cells comprises memory cells located in a row adjacent to a top edge of said memory.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein said first plurality of memory cells comprises memory cells located in a row adjacent to a bottom edge of said memory.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein said first plurality of memory cells comprises memory cells located in a row adjacent to a folded digitline of said memory.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein said first plurality of memory cells comprises memory cells located in a column adjacent to at least one of a right edge and a left edge of said memory.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein said first plurality of memory cells comprises memory cells located in at least one of a first and second row of memory adjacent to an edge of said memory.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The method of <claim-ref idref="CLM-00024">claim 24</claim-ref>, wherein said second row of memory is adjacent to said first row of memory.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The method of <claim-ref idref="CLM-00024">claim 24</claim-ref>, wherein said second row of memory is not adjacent to said first row of memory.</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The method of <claim-ref idref="CLM-00024">claim 24</claim-ref>, wherein said edge of said memory is a top edge of said memory.</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The method of <claim-ref idref="CLM-00024">claim 24</claim-ref>, wherein said edge of said memory is a bottom edge of said memory.</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein said first plurality of memory cells comprises memory cells located in at least one of a first and second column of memory adjacent to an edge of said memory.</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. The method of <claim-ref idref="CLM-00029">claim 29</claim-ref>, wherein said second column of memory is adjacent to said first column of memory.</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. The method of <claim-ref idref="CLM-00029">claim 29</claim-ref>, wherein said second column of memory is not adjacent to said first column of memory.</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. The method of <claim-ref idref="CLM-00029">claim 29</claim-ref>, wherein said edge of said memory is a right edge of said memory.</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. The method of <claim-ref idref="CLM-00029">claim 29</claim-ref>, wherein said edge of said memory is a left edge of said memory.</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. A system for testing memory devices, comprising:
<claim-text>test control circuitry; and</claim-text>
<claim-text>connecting circuitry that connects the test control circuitry to a memory device under test;</claim-text>
</claim-text>
<claim-text>the test control circuitry providing signals through the connecting circuitry to:
<claim-text>select a memory cell to be tested from a fringe region of an array of the memory device; and</claim-text>
<claim-text>test said selected memory cell using at least one test parameter that is different than a test parameter to be used for memory cells not in the fringe region.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00035" num="00035">
<claim-text>35. A system for testing memory devices, comprising:
<claim-text>test control circuitry; and</claim-text>
<claim-text>connecting circuitry that connects the test control circuitry to a memory device under test;</claim-text>
</claim-text>
<claim-text>the test control circuitry providing signals through the connecting circuitry to:
<claim-text>select a column of a memory array of said memory device to be tested;</claim-text>
<claim-text>select a row of said memory array to be tested, said selected column and row defining a memory cell in a fringe region of said memory array;</claim-text>
<claim-text>write first data to each said memory cell in said memory array;</claim-text>
<claim-text>activate said selected row for reading and writing;</claim-text>
<claim-text>provide second data to a memory cell corresponding to said selected row and selected column, said second data being different from said first data;</claim-text>
<claim-text>precharge said selected row for deactivating said selected row for reading and writing;</claim-text>
<claim-text>activate said selected row for reading and writing;</claim-text>
<claim-text>re-activate said selected row for reading and writing;</claim-text>
<claim-text>provide said first data to said memory cell corresponding to said selected row and selected column, where said first data is provided at a lower voltage than a voltage to be used to provide test data to memory cells not in the fringe region, where said first data is provided at a shorter write release time than a write release time to be used to provide test data to memory cells not in the fringe region;</claim-text>
<claim-text>read test data from said memory cell; and</claim-text>
<claim-text>determine if said test data is correct.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00036" num="00036">
<claim-text>36. A system for testing memory devices, comprising:
<claim-text>test control circuitry; and</claim-text>
<claim-text>connecting circuitry that connects the test control circuitry to a memory device under test;</claim-text>
</claim-text>
<claim-text>the test control circuitry providing signals through the connecting circuitry to:
<claim-text>identify a first plurality of memory cells of a fringe region of said integrated circuit memory for testing; and</claim-text>
<claim-text>determine if said first plurality of memory cells are weak cells using at least one test parameter that is different than a test parameter to be used for memory cells not in the fringe region.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
