<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298799-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298799</doc-number>
<kind>B1</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10795817</doc-number>
<date>20040308</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>657</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>27</main-group>
<subgroup>06</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>375343</main-classification>
</classification-national>
<invention-title id="d0e53">All-tap fractionally spaced, serial rake combiner apparatus and method</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6026115</doc-number>
<kind>A</kind>
<name>Higashi et al.</name>
<date>20000200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6192066</doc-number>
<kind>B1</kind>
<name>Asanuma</name>
<date>20010200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6507604</doc-number>
<kind>B1</kind>
<name>Kuo</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6529545</doc-number>
<kind>B2</kind>
<name>Tiirola et al.</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6556634</doc-number>
<kind>B1</kind>
<name>Dent</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6560488</doc-number>
<kind>B1</kind>
<name>Crawford</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6614836</doc-number>
<kind>B1</kind>
<name>Halford et al.</name>
<date>20030900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6647077</doc-number>
<kind>B1</kind>
<name>Shan et al.</name>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6650694</doc-number>
<kind>B1</kind>
<name>Brown et al.</name>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6661857</doc-number>
<kind>B1</kind>
<name>Webster et al.</name>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6674740</doc-number>
<kind>B1</kind>
<name>Siala</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2003/0012270</doc-number>
<kind>A1</kind>
<name>Zhou et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375150</main-classification></classification-national>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2004/0170238</doc-number>
<kind>A1</kind>
<name>Matsuyama et al.</name>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375343</main-classification></classification-national>
</citation>
<citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2004/0240486</doc-number>
<kind>A1</kind>
<name>Venkatesh et al.</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370537</main-classification></classification-national>
</citation>
<citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2006/0133456</doc-number>
<kind>A1</kind>
<name>Ettore et al.</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375148</main-classification></classification-national>
</citation>
<citation>
<nplcit num="00016">
<othercit>“Peformance of a Spread Spectrum Rays Reveiver Design” IEEE Second Intl Symposium on Spread Spectrum Techniques &amp; Applications, Nov. 29-Dec. 2, 1992, By Grant, Power &amp; Privilege, Japan.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00017">
<othercit>“A Novel Method of Characterization and Equalization in Spread Spectrum Based WLAN ” By Barman &amp; Reddy, Hellosoft, India, http://www.hellosoft.com/products/awlan/papers/:cpwc2002.equalizer.pd.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00018">
<othercit>IEEE STD 802.116—1999, Institute of Electrical &amp; Electronic Engineers, http://www.ieee.org.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>105</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>375140</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375142</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375143</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375145</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375149</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375150</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375152</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375343</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>37039062</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370507</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>455265</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>702 89</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713345</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713400</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>10</number-of-drawing-sheets>
<number-of-figures>26</number-of-figures>
</figures>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Venkatesh</last-name>
<first-name>Narasimhan</first-name>
<address>
<city>Hyderabad</city>
<country>IN</country>
</address>
</addressbook>
<nationality>
<country>IN</country>
</nationality>
<residence>
<country>IN</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Sailaja</last-name>
<first-name>Sankabathula Dharani Naga</first-name>
<address>
<city>Vijayawada</city>
<country>IN</country>
</address>
</addressbook>
<nationality>
<country>IN</country>
</nationality>
<residence>
<country>IN</country>
</residence>
</applicant>
<applicant sequence="003" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Sarathy</last-name>
<first-name>Murali Partha</first-name>
<address>
<city>Hyderabad</city>
<country>IN</country>
</address>
</addressbook>
<nationality>
<country>IN</country>
</nationality>
<residence>
<country>IN</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Chesavage</last-name>
<first-name>Jay A.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<orgname>File-EE-Patents.com</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Redpine Signals, Inc.</orgname>
<role>02</role>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Ahn</last-name>
<first-name>Sam K.</first-name>
<department>2611</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A decision processor for 802.11b codewords for 1 Mb and 2 Mb data rates includes a sliding correlator for the acquisition of correlation peaks. During a training interval, these correlation peaks are summed into a channel profile memory. The correlation peaks corresponding to a codeword are added into the channel profile memory, and correlation peaks corresponding to the inverse of this codeword are inverted and added into the channel profile memory during the training interval. After the training interval, a decision interval follows whereby correlation peaks are multiplied by the complex conjugate of the contents of the channel profile memory. The multiplication results are accumulated over a codeword window interval to produce a decision output.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="181.78mm" wi="257.64mm" file="US07298799-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="158.75mm" wi="185.00mm" file="US07298799-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="253.15mm" wi="195.50mm" orientation="landscape" file="US07298799-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="259.50mm" wi="172.80mm" orientation="landscape" file="US07298799-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="238.00mm" wi="184.91mm" orientation="landscape" file="US07298799-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="246.21mm" wi="166.54mm" file="US07298799-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="259.08mm" wi="182.96mm" orientation="landscape" file="US07298799-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="247.73mm" wi="198.63mm" file="US07298799-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="254.00mm" wi="194.73mm" file="US07298799-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="259.42mm" wi="191.18mm" orientation="landscape" file="US07298799-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="256.71mm" wi="188.38mm" orientation="landscape" file="US07298799-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0002" num="0001">The present invention is related to the reduction of multi-path interference in direct sequence spread spectrum (DSSS) signals whereby a primary signal is received along with a plurality of delayed, or reflected, signals. The received symbols may form a codeword, and in the case of spread spectrum IEEE 802.11b 1 Mb and 2 Mb data rates, the codeword may be a Barker codeword for which a decision needs to be made as to whether the codeword for a one (1) or a negative one (−1) was received. In wireless communications systems, the received signal comprises the signal traveling the shortest path accompanied by a plurality of reflected, phase shifted, and later-arriving copies of the original signal. The invention is more specifically directed to spread spectrum wireless communications links such as IEEE 802.11b which operate in the presence of multi-path reflections.</p>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">Prior art wireless communication systems are defined in IEEE protocols for 802.11b. IEEE 802.11b is an example of a spread spectrum wireless protocol whereby a transmitter emits a typically isotropic or multidirectional transmission of a sequence of baseband codewords translated in frequency to a carrier frequency, where the codewords are phase modulated according to a known sequence, which is referred to as a chipping code. For 1 Mb and 2 Mb IEEE 802.11b data rates, the chipping code is a Barker code, which has the properties of maximum self-correlation and minimum cross-correlation. When a typical IEEE 802.11b receiver is placed within a reception distance from the source, it is common for a plurality of signals to arrive at the receiver. These signals may consist of a first signal which travels a shortest path, followed by a plurality of reflected signals which have path lengths longer than the shortest path. Occasionally, the shortest path will be through an attenuating medium, such that the shortest path does not correspond to the strongest signal. The receiver then must recover this plurality of signals and apply some method of filtering or reconstruction to regenerate the transmitted codeword. One prior art method uses channel sounding, whereby the communications channel is characterized by sending a known signal such as a preamble. Then applying an inverse filter function compensates the channel for the reflections, thereby restoring the channel. The process for generating the inverse filter coefficients such as in a finite impulse response (FIR) filter typically involves identifying the plurality of received signals, applying a delay and a weight to each signal, and performing the signal reconstruction with an FIR filter. Since the coefficients of an FIR filter must be computed from the delays and weights, this may require extensive computation complexity and computation time, and may not be achievable during the short preamble time of the incoming packet, where the coefficients must be computed before the packet data arrives.</p>
<p id="p-0004" num="0003"><figref idref="DRAWINGS">FIG. 1</figref> shows a wireless Local Area Network (LAN) operating in a typical office environment, wherein two mobile stations may be transmitting and receiving data through the wireless medium. While both station <b>100</b> and station <b>102</b> are typically transmitting and receiving wireless signals, for simplicity of analysis, station <b>100</b> is shown as a transmitter and station <b>102</b> is shown as a receiver. In the figure, receiver <b>102</b> receives a first signal from an attenuated path R<b>1</b> <b>112</b> r<b>1</b> <b>114</b> with an attenuating barrier <b>106</b>, followed by the next signal with the path length R<b>2</b> <b>108</b> and reflection r<b>2</b> <b>220</b>, followed by the next signal with the path length R<b>3</b> <b>116</b> and reflection r<b>3</b> <b>118</b>. In this figure, a small number of such path reflections are shown, however as a practical matter, an infinite number of such reflection paths exist, shown generally by path R<sub>n </sub><b>120</b> and reflected path r<sub>n </sub><b>222</b>. In the wireless IEEE 802.11b protocol, the use of spread spectrum transmission and reception techniques improves the bit error rate (BER) in the presence of multi-path reflections to the receiver. However, the BER can be greatly reduced if the various reflections (r<sub>1 </sub>to r<sub>n</sub>) are used to make a decision at the receiver demodulator, rather than using the strongest (relatively) signal only, ignoring all other multi-path reflections present. Moreover, the absence of a direct path in such communications (as shown by path R<b>1</b>-r<b>1</b>) means that the information is highly dispersed and arrives strongly attenuated and through various path lengths so that the single correlation peak energy is spread out over many correlation peaks arriving at later times. A temporal Maximal Ratio Combiner (MRC) operating on the spread spectrum correlation peaks would give a much higher BER than a simple decision based on a single maximum peak. The combining of signal energy arriving at different times associated with the transmission of data is the basic principle on which the rake combiners for spread spectrum receivers operate. A plurality of weighted delays in the form of a Feed Forward Filter (FFF) is used to cause the various correlation peaks associated with the delayed arrival of a plurality of multipath reflections of a given codeword to recombine into a single peak. Additionally, since the multipath reflections cause the rotation of incoming codeword symbols out of their original quadrature channels, an additional function of the MRC is to apply phase compensation to rotate these symbols back in to the original quadrature channels, so that received signal energy is rotated back into the proper I and Q channels, thereby adding to the signal that is received on the direct path.</p>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 2</figref> shows a decision block for a direct sequence spread spectrum receiver <b>140</b> that includes a sliding correlator <b>130</b> which correlates the Barker codeword <b>131</b> with the signed incoming quadrature symbol stream <b>142</b>. The incoming quadrature symbol stream <b>142</b> comprises an analytic signal formed by receiver quadrature mixing using the relationship e<sup>jφ(t)</sup>=cos(φ(t))+j*sin(φ(t)), where the first term represents in-phase (I) information in the real channel and the second term represents quadrature (Q) symbol information in the imaginary channel. Each channel of the incoming symbol stream is digitized using an Analog to Digital Converter into positive and negative values N-bit wide (where N is the width of the converter outputs), where the positive and negative values of the input stream contain Barker codewords:</p>
<p id="p-0006" num="0005">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="168pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>I channel</entry>
<entry>1 = {+1, −1, +1, +1, −1, +1, +1, +1, −1, −1, −1};</entry>
</row>
<row>
<entry/>
<entry/>
<entry>0 = {−1, +1, −1, −1, +1, −1, −1, −1, +1, +1, +1}</entry>
</row>
<row>
<entry/>
<entry>Q channel</entry>
<entry>1 = {+j, −j, +j, +j, −j, +j, +j, +j, −j, −j, −j};</entry>
</row>
<row>
<entry/>
<entry/>
<entry>0 = {−j, +j, −j, −j, +j, −j, −j, −j, +j, +j, +j}</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0006">where the Q channel codewords are simply the I channel codewords multiplied by j. A phase rotator function in the aforementioned receiver digital signal processing causes the symbols to be rotated into the I or Q channels of the correlator input <b>142</b>.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0007" num="0007">For an 11 bit Barker code, the soft (N-bit wide) I and Q channels are cross-correlated with the respective Barker codewords for 1. This cross-correlation of the input stream containing Barker codes for 1 produces the impulsive value +11, while the cross correlation of the input stream containing 0 produces the impulsive value −11. In this manner, the cross-correlation of the incoming data against the Barker codewords produces I and Q values which have a peak impulsive positive response for the 1 codeword, a peak impulsive negative response for the 0 codeword, and approximately 0 at all other times. Because of the impulsive nature of the cross correlation response, the incoming quadrature signal <b>142</b> is typically presented as an over-sampled signal at twice the bit rate, or 22 Mhz, so that information for compensating timing drift between the transmit and receive DAC and ADC clocks is retained in the digitized signal. Additionally as mentioned above, the incoming quadrature symbol stream is multi-valued rather than binary, so the correlation outputs <b>138</b> and <b>139</b> are an over-sampled, multi-valued quadrature data stream. The code acquisition function <b>132</b> maintains a correlation output history and determines the peak correlation points, which are used to produce a synchronization pulse accompanied by an indication for the start and end of the codeword window. Once codeword acquisition is achieved, the baseband Direct Sequence Spread Spectrum (DSSS) codewords <b>142</b> are presented to a simpler fixed window correlator <b>134</b>, which performs a correlation <b>137</b> of the incoming quadrature symbol stream <b>142</b> to the Barker codeword <b>143</b>. The multi-valued quadrature result of this cross correlation output <b>139</b> is stored in memory <b>135</b> at a synchronization time determined by code acquisition function <b>132</b>, which presents a pulse at the point of maximum positive or negative signal, as described earlier. Decision block <b>136</b> examines the positive or negative value stored in memory <b>135</b>, and decides whether a Barker codeword for 1 or 0 was received. For a 2 Mb data rate, the fixed window correlator <b>134</b> is separately correlating the I and Q streams with the Barker codeword, thereby storing in memory <b>135</b> 1 bit of decision data from the I and Q stream for each 1 us codeword interval. For a 1 Mbps data rate, the phase encoding is in the I (or Q) channel alone, and the Q (or I) channel contains only correlation and thermal noise. For the 2 Mbps data rate, the number of possibilities double since now the receiver can get (1,0), (−1,0), (0,1) or (0,−1) in each 1 us duration, i.e., 2-bits of information every microsecond. The spread spectrum signal comprises one of the two 11 bit Barker codewords occurring within 1 us boundaries for IEEE 802.11b wireless communication systems. Examining the codeword output <b>138</b>, the code acquisition function <b>132</b> of <figref idref="DRAWINGS">FIG. 2</figref> stores several windows of samples and extracts a synchronization signal <b>144</b>. This synchronization pulse and a window signal (shown as timing <b>151</b> in <figref idref="DRAWINGS">FIG. 3</figref>) to establish the framing of codewords is sent to the fixed window correlator <b>134</b> and to the decision function <b>136</b> which determines which chip code is the closest approximation. In direct sequence spread spectrum (DSSS) signals, chip codes that are dependant on the particular 802.11b data rates are used for encoding and decoding. These chip codes are Differential Binary Phase Shift Keying ((D)BPSK) using Barker codes for 1 Mbps, and Differential Quadrature Phase Shift Keying ((D)QPSK) using Barker codes for 2 Mbps. The higher data rates of 5.5 Mb and 11 Mb use Complementary Code Keying (CCK). In the present invention, we are concerned with 1 Mbps and 2 Mbps data rates using 11 bit Barker codes. It is essential that the decision block for a direct sequence spread spectrum receiver <b>140</b> of <figref idref="DRAWINGS">FIG. 2</figref> properly synchronize to the peak and window of the 11 bit codewords, done during the preamble interval of the packet with sliding correlator <b>130</b>. An unsynchronized stream of incoming codewords <b>142</b> is referred to as a symbol stream, and once the synchronization to the 11 bit codewords is accomplished, this is referred to as a codeword stream. The codeword stream is then converted into binary values comprising a data stream <b>148</b>. Examining the quadrature multi-valued output of the sliding correlator <b>130</b>, a datum point may be defined as the strongest correlation response of the present symbol. Pre-cursors are signals received prior to the datum point, and post-cursors are signals received after the datum point. The sample window includes pre-cursors, the datum point, post-cursors, and has a duration equal to a symbol length. Directly received signal in the presence of attenuation followed by multi-path reflection produces correlation output <b>138</b> which comprises pre-cursors, followed by the strongest correlation response of the present symbol earlier referred to as a datum point, and finally post-cursors representing the multipath reflections. In combination, these signals represent the total signal power available for use by the decision processor. Although received at different times, the sum of these signals in the channel represent the total signal power available. In one prior art receiver, the strongest correlation response is selected for synchronization signal <b>144</b> and the pre-cursors and post-cursors are ignored, which results in reduced signal to noise, since the noise level is constant while the signal power associated with the pre-cursor symbols and post-cursor symbols is discarded. It is desired to use a plurality of symbols including pre-cursors and post-cursors to generate a composite signal which uses the pre-cursors and post-cursors so that the signal to noise ratio is improved.</p>
<p id="p-0008" num="0008"><figref idref="DRAWINGS">FIG. 3</figref> shows waveform <b>150</b> of output <b>138</b> of the sliding correlator <b>130</b>, both from <figref idref="DRAWINGS">FIG. 2</figref>, for a Barker codeword 1 followed by a Barker codeword 0 presented to the input <b>142</b> from <figref idref="DRAWINGS">FIG. 2</figref>. In the absence of multi-path reflection or noise, the sliding correlator <b>130</b> output <b>138</b> would appear as shown in curve <b>150</b> of <figref idref="DRAWINGS">FIG. 3</figref>. Every sample time, the incoming symbol stream <b>142</b> of Barker codes for 1 followed by 0 is correlated <b>133</b> with Barker codeword <b>131</b> in the sliding correlator <b>130</b>, which produces the positive peak <b>152</b><i>a </i>followed by a negative peak <b>152</b><i>b</i>. These peaks are detected by code acquisition function <b>132</b>, which uses an algorithm for defining a window comprising the timing points <b>0</b> through <b>10</b> <b>151</b> of <figref idref="DRAWINGS">FIG. 3</figref>, as shown. Once this synchronization is achieved, the timing of the remainder of the Barker codewords may be maintained by the precision of the clock oscillators of the receiver and transmitter. The synchronization signal <b>144</b> is applied to fixed window correlator <b>134</b>, which selects one of two codewords in the I (or Q) channel for a 1 Mb data rate, or one of four codeword combinations in the I and Q channel for a 2 Mb data rate. In the absence of noise or multi-path reflections, the decision block <b>140</b> for a direct sequence spread spectrum receiver <b>140</b> of <figref idref="DRAWINGS">FIG. 2</figref> performs well, and the cross correlation of the Barker codeword <b>131</b> with the incoming symbol stream produces the correlator output <b>150</b> as shown in <figref idref="DRAWINGS">FIG. 3</figref>. In the presence of multi-path reflections, degradation of the cross correlation output <b>138</b> occurs. For example, given the signal paths shown in <figref idref="DRAWINGS">FIG. 1</figref>, an attenuated signal traveling path r<b>1</b> <b>114</b> followed by a stronger reflected signal r<b>2</b> <b>220</b>, followed by a weaker reflected signal r<b>3</b> <b>118</b> would produce signal <b>154</b> comprising the attenuated response r<b>1</b> <b>156</b><i>a</i>, reflected and phase shifted maximum signal r<b>2</b> <b>158</b><i>a</i>, and reflected and attenuated signal r<b>3</b> <b>160</b><i>a </i>respectively as shown in <figref idref="DRAWINGS">FIG. 4</figref>. The phase rotator (not shown) which performs phase rotation of the incoming signal stream prior to delivery as stream <b>142</b> uses maximum level signals as the datum for this phase rotation. In <figref idref="DRAWINGS">FIG. 4</figref>, the phase rotation causes maximum responses <b>158</b><i>a </i>and <b>158</b><i>b </i>to be rotated in phase until they are aligned in the I channel. Using maximum response only, the code acquisition function <b>132</b> could incorrectly determine that r<b>2</b> <b>158</b><i>a </i>is code position <b>0</b> based on purely amplitude considerations, when the actual synchronization time is r<b>1</b>, as shown by the alignment with the time interval <b>0</b> <b>155</b>. <figref idref="DRAWINGS">FIG. 4</figref> shows the I and Q components of the incoming signal, which have been phase rotated by the phase shifter (not shown), such that the strongest signal <b>158</b><i>a </i>has been shifted exclusively into the I channel, and precursor <b>156</b><i>a </i>is shifted in phase, as is postcursor reflection <b>160</b><i>a</i>, as evidenced by the shifting of energy into the Q channel for <b>156</b><i>a </i>and <b>160</b><i>a</i>. Similarly, for the 0 symbol, strongest signal <b>158</b><i>b </i>is only seen in the I channel, while precursor <b>156</b><i>b </i>and postcursor reflection <b>160</b><i>b </i>is shifted in phase.</p>
<p id="p-0009" num="0009"><figref idref="DRAWINGS">FIG. 5</figref> shows a prior art rake combiner <b>190</b> with the rake having three fingers. This allows for improved signal to noise performance and multi-path reflection reduction, and implements a function known as temporal maximal ratio combining (MRC). An MRC identifies a finite number of strongest signals, and combines them to rearrange the signal power of each of the delayed signals into a single signal with maximum power such that there is maximum likelihood of decoding the signal correctly. In <figref idref="DRAWINGS">FIG. 5</figref>, the baseband signal stream <b>194</b> is comprised of the <figref idref="DRAWINGS">FIG. 4</figref> signals r<b>1</b> <b>156</b><i>a</i>, r<b>2</b> <b>158</b><i>a </i>occurring τ<b>1</b> later, and r<b>3</b> <b>160</b><i>a </i>occurring τ<b>2</b> thereafter. The code acquisition <b>162</b> generates a synchronization pulse <b>196</b> from the output of the sliding correlator <b>192</b>, similar to sliding correlator <b>130</b> of <figref idref="DRAWINGS">FIG. 2</figref>, but delayed by τ<b>1</b>+τ<b>2</b>. The baseband symbol stream <b>194</b> is provided to correlator <b>168</b>, and the same signal is provided to correlator <b>166</b> delayed by τ<b>2</b>, and to correlator <b>164</b> delayed by τ<b>1</b>+τ<b>2</b>. In this manner, at the instant of synchronization pulse <b>196</b>, correlator <b>164</b> is providing signal associated with r<b>1</b> in <figref idref="DRAWINGS">FIG. 4</figref>, correlator <b>166</b> is providing signal associated with r<b>2</b> in <figref idref="DRAWINGS">FIG. 4</figref>, and correlator <b>168</b> is providing signal associated with r<b>3</b> in <figref idref="DRAWINGS">FIG. 4</figref>. These signals are multiplied by a conjugated series of complex coefficients α<b>0</b>, α<b>1</b>, and α<b>2</b>, respectively. The conjugated complex coefficients α<b>0</b> <b>174</b>, α<b>1</b> <b>176</b>, and α<b>2</b> <b>178</b> are a linear array of complex numbers with a length equal to the length of the incoming signal stream window, repeated continuously, as it known to one skilled in the art of finite impulse response filters operating on periodic signals. The correlators <b>164</b>, <b>166</b> and <b>168</b> are multiplied by the complex conjugate of the linear array of conjugated complex coefficients α<b>0</b> <b>174</b>, α<b>1</b> <b>176</b>, and α<b>2</b> <b>178</b>, respectively. The conjugated complex coefficients α<b>0</b> <b>174</b>, α<b>1</b> <b>176</b>, and α<b>2</b> <b>178</b> reverses the sign of the imaginary part of the coefficient. For example, the complex conjugate of (a+jb) is (a−jb), and vice-versa. Multiplying a value by its complex conjugate has the effect of converting all of the signals in the imaginary channel into the real channel. The complex multi-valued outputs of multipliers <b>180</b>, <b>182</b>, and <b>184</b> are summed respectively by adder <b>186</b>, and provided to decision block <b>188</b>, which performs in the same manner as decision block <b>136</b> of <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0010" num="0010"><figref idref="DRAWINGS">FIG. 6</figref> shows a maximal ratio combiner processor <b>201</b>, where the signals and later reflections are delayed and multiplied by a linear array of conjugated complex coefficients α<b>0</b> <b>208</b>, α<b>1</b> <b>210</b>, and α<b>2</b> <b>212</b>, then summed to form a signal containing maximum combined signal power. Similarly to the rake combining signal processing system of <figref idref="DRAWINGS">FIG. 5</figref>, the function of the MRC processor <b>201</b> is to delay pre-cursor signal <b>156</b><i>a </i>of <figref idref="DRAWINGS">FIG. 4</figref> with delay element <b>204</b> and to delay the strongest symbol <b>158</b><i>a </i>of <figref idref="DRAWINGS">FIG. 4</figref> with delay element <b>206</b> such that these signals align in time with post-cursor <b>160</b><i>b </i>of <figref idref="DRAWINGS">FIG. 4</figref>. The MRC processor <b>201</b> then multiplies each stream of pre-cursors, the strongest signal, and post-cursors separately with a linear array of conjugated complex coefficients α<b>0</b> <b>208</b>, α<b>1</b> <b>210</b>, and α<b>2</b> <b>212</b>, respectively, and then sums the aligned and multiplied streams in adder <b>220</b>, thereby producing reflection-compensated output <b>228</b>. This reflection-compensated output <b>228</b> is then fed to correlator <b>222</b>, which is gated by synchronization pulse <b>226</b> similar to synchronization pulse <b>196</b> in <figref idref="DRAWINGS">FIG. 5</figref>. The effect of multiplying by the conjugated complex coefficients α<b>0</b> <b>208</b>, α<b>1</b> <b>210</b>, and α<b>2</b> <b>212</b> is the phase rotation of reflected multi-path signals back into the proper channel. For both of the maximal ratio combiners in <figref idref="DRAWINGS">FIGS. 5 and 6</figref>, the computation of delay coefficients for delay elements <b>170</b> and <b>172</b> of <figref idref="DRAWINGS">FIG. 5</figref>, delay elements <b>204</b> and <b>206</b> of <figref idref="DRAWINGS">FIG. 6</figref>, as well as the linear arrays of conjugated complex coefficients α<b>0</b> <b>174</b>, α<b>1</b> <b>176</b>, and α<b>2</b> <b>178</b> in <figref idref="DRAWINGS">FIG. 5</figref>, and the linear arrays of conjugated complex coefficients α<b>0</b> <b>208</b>, α<b>1</b> <b>210</b>, and α<b>2</b> <b>212</b> in <figref idref="DRAWINGS">FIG. 6</figref>, are done based on the strongest correlation signals. These conjugated complex coefficients must be computed based on the amplitude and the phase of the particular pre-cursors and post-cursors present, which depends upon the nature of multipath present.</p>
<p id="p-0011" num="0011"><figref idref="DRAWINGS">FIG. 7</figref> shows the waveform for time-shifted cross correlation (normalized so that peak is one) for the 256 possible complementary code keying (CCK) codewords used in the 11 Mbps data rate of IEEE 802.11b wireless communication systems. It can be seen that the cross-correlation response (with time shifts of +/−7 symbols) of up to 0.4 times the peak (autocorrelation) rules out any major multipath tolerance of a system using the autocorrelation properties of CCK codewords to do an MRC combining. This has the additional implication that the maximal ratio combiner <b>201</b> of <figref idref="DRAWINGS">FIG. 6</figref> could be placed in the signal processing stream for both the Barker and CCK codewords. This would not be possible with the rake combining signal processing system <b>190</b> of <figref idref="DRAWINGS">FIG. 5</figref>, since the multiplication and summing is done post-correlation. But <figref idref="DRAWINGS">FIG. 7</figref> shows the CCK codeword response for cross-correlation is poor and hence any system relying on such an MRC combining for multipath tolerance would fail for the CCK rates under multipath.</p>
<p id="p-0012" num="0012"><figref idref="DRAWINGS">FIG. 8</figref> shows a waveform for the sliding correlation output for Barker codewords. The figure shows the 1 us timing and response of a noise-free signal presented to a sliding correlator operating at twice the bit rate, or 22 Mhz. <figref idref="DRAWINGS">FIG. 9</figref> shows the waveform for the sliding correlation output for noise input—noise that would ordinarily be present with the signal of <figref idref="DRAWINGS">FIG. 8</figref>.</p>
<heading id="h-0003" level="1">OBJECTS OF THE INVENTION</heading>
<p id="p-0013" num="0013">A first object of the invention is a system for maximum ratio combining whereby a sliding correlator provides window and synchronization information which is used to generate a training decision signal which is then used to invert the received codewords for 0 and not invert codewords for 1, and to sum these with the contents of a channel profile memory.</p>
<p id="p-0014" num="0014">A second object of the invention is to use the values stored in a channel profile memory by synchronizing them to the incoming stream of correlated signals which are stored in the channel profile memory, then conjugated and multiplied with the incoming correlation stream to produce a first output, which is accumulated and added to produce a rake combined output during a window. The rake combined output thereby includes signal power from all post-cursors and pre-cursors, thereafter using the accumulated output to make a decision on which value was received.</p>
<p id="p-0015" num="0015">A third object of the invention is the generation of channel profile values from a stream of correlation peaks, each bounded by a window, whereby a channel profile memory having a length equal to said window is initialized, thereafter adding to the channel profile memory each stream of incoming correlation peaks during said window, the accumulation of data into the channel profile memory known as a training time, which is followed by a decision time, whereby said stream of correlation peaks is synchronized with said channel profile RAM, and the correlation peaks are multiplied by a complex conjugate of the contents of the channel profile memory, thereby accumulating the sum of all such multiplications during said window, and making a decision on the value of the symbol at the end of each said window.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0016" num="0016">During a training interval, a stream of baseband symbols from a wireless spread spectrum receiver is correlated with one or more codeword symbols into positive and negative correlation peaks. These correlation peaks are averaged into a channel profile Random Access Memory (RAM), and also generate a periodic window signal, during which window the pre-cursors and post-cursors for the present symbol are contained. After the training interval, a decision interval results in the contents of the channel profile RAM being conjugated and multiplied with the correlation peaks, producing a multiplier output. The multiplier output is fed to an accumulator, which initializes at the beginning of the window, and then adds each subsequent multiplier output during the window period, and finally is sampled at the end of the period to produce a decision output. This decision output includes the signal power from all the pre-cursors and post-cursors of the present codeword, and thereby provides a stream of decisions. The window interval may be chosen to allow approximately 20% precursors compared to the largest correlation signal, and 80% post-cursors, or any ratio of precursors and post-cursors which characterizes the operating condition of the receiver.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0017" num="0017"><figref idref="DRAWINGS">FIG. 1</figref> shows a transmitter coupled to a receiver through a plurality of reception paths.</p>
<p id="p-0018" num="0018"><figref idref="DRAWINGS">FIG. 2</figref> shows a prior art decision block for a direct sequence spread spectrum receiver.</p>
<p id="p-0019" num="0019"><figref idref="DRAWINGS">FIG. 3</figref> shows a waveform for a sliding correlator without multi-path reflections.</p>
<p id="p-0020" num="0020"><figref idref="DRAWINGS">FIG. 4</figref> shows the waveform for a sliding correlator with multi-path reflections.</p>
<p id="p-0021" num="0021"><figref idref="DRAWINGS">FIG. 5</figref> shows the block diagram for rake combining signal processing system, a type of maximal ratio combiner, with a plurality of fixed-window correlators.</p>
<p id="p-0022" num="0022"><figref idref="DRAWINGS">FIG. 6</figref> shows the block diagram for a maximum ratio combiner as an FIR filter before a single fixed window correlator.</p>
<p id="p-0023" num="0023"><figref idref="DRAWINGS">FIG. 7</figref> shows the waveform for the normalized, time-shifted cross correlation output for complementary code keying (CCK) codewords.</p>
<p id="p-0024" num="0024"><figref idref="DRAWINGS">FIG. 8</figref> shows the waveform for the sliding correlation output for Barker codewords.</p>
<p id="p-0025" num="0025"><figref idref="DRAWINGS">FIG. 9</figref> shows the waveform for the sliding correlation output for noise input.</p>
<p id="p-0026" num="0026"><figref idref="DRAWINGS">FIG. 10</figref> shows the block diagram for an all-tap, fractionally-spaced serial rake combiner processor.</p>
<p id="p-0027" num="0027"><figref idref="DRAWINGS">FIG. 10</figref><i>a </i>shows an alternate function for the demultiplexer of <figref idref="DRAWINGS">FIG. 10</figref>.</p>
<p id="p-0028" num="0028"><figref idref="DRAWINGS">FIG. 11</figref><i>a </i>shows the waveform for Barker chip codes for an 00010 data pattern.</p>
<p id="p-0029" num="0029"><figref idref="DRAWINGS">FIG. 11</figref><i>b </i>shows the I output of a sliding correlator operating at 11 Mhz when presented with the data of <figref idref="DRAWINGS">FIG. 11</figref><i>a. </i></p>
<p id="p-0030" num="0030"><figref idref="DRAWINGS">FIG. 11</figref><i>c </i>shows the Q output of a sliding correlator operating at 11 Mhz when presented with the data of <figref idref="DRAWINGS">FIG. 11</figref><i>a. </i></p>
<p id="p-0031" num="0031"><figref idref="DRAWINGS">FIG. 11</figref><i>d </i>shows the I output of a sliding correlator operating at 22 Mh when presented with the data of <figref idref="DRAWINGS">FIG. 11</figref><i>a. </i></p>
<p id="p-0032" num="0032"><figref idref="DRAWINGS">FIG. 11</figref><i>e </i>shows the Q output of a sliding correlator operating at 22 Mhz when presented with the data of <figref idref="DRAWINGS">FIG. 11</figref><i>a. </i></p>
<p id="p-0033" num="0033"><figref idref="DRAWINGS">FIG. 11</figref><i>f </i>show the I output of a sliding correlator operating at 22 Mhz when presented with multi-path reflections of the data of <figref idref="DRAWINGS">FIG. 11</figref><i>a. </i></p>
<p id="p-0034" num="0034"><figref idref="DRAWINGS">FIG. 11</figref><i>g </i>show the Q output of a sliding correlator operating at 22 Mhz when presented with multi-path reflections of the data of <figref idref="DRAWINGS">FIG. 11</figref><i>a. </i></p>
<p id="p-0035" num="0035"><figref idref="DRAWINGS">FIGS. 12</figref><i>a </i>and <b>12</b><i>b </i>show the waveforms for sliding correlator I and Q outputs with multi-path reflections.</p>
<p id="p-0036" num="0036"><figref idref="DRAWINGS">FIGS. 12</figref><i>c </i>and <b>12</b><i>d </i>show the waveforms for the window output and decision output of the training decision block during the training interval.</p>
<p id="p-0037" num="0037"><figref idref="DRAWINGS">FIGS. 13</figref><i>a </i>and <b>13</b><i>b </i>show the I and Q channel memory contents during the training period.</p>
<p id="p-0038" num="0038"><figref idref="DRAWINGS">FIGS. 14</figref><i>a </i>and <b>14</b><i>b </i>show the waveforms for the operation of the all-tap fractionally spaced serial combiner of <figref idref="DRAWINGS">FIG. 10</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0039" num="0039"><figref idref="DRAWINGS">FIG. 10</figref> shows an all-tap, fractionally-spaced serial rake combiner processor <b>284</b>. Its operation is best understood in combination with the waveforms of <figref idref="DRAWINGS">FIGS. 11</figref><i>a </i>through <b>11</b><i>g</i>. As with the maximal ratio combiners of <figref idref="DRAWINGS">FIGS. 5 and 6</figref>, a stream of incoming quadrature baseband symbols <b>286</b> comprising multi-valued I channel and a Q channel from the output of the baseband conversion radio frequency (RF) section (not shown) are provided to sliding correlator <b>250</b>. Sliding correlator <b>250</b> then performs a complex cross-correlation <b>251</b> of the stream of incoming quadrature baseband symbols <b>286</b> with the I and Q Barker codewords <b>253</b> to produce a stream of correlation peaks <b>258</b>. During a training interval which may occur during the preamble time of the received packet, these correlation peaks <b>258</b> are fed to a training decision function <b>252</b>. This training decision function <b>252</b> then examines the previous samples of correlation peaks <b>258</b> by using a decision processor <b>285</b> to generate a window signal <b>288</b>. This window signal <b>288</b> indicates the extent and framing of each codeword and decision signal, as well as a training decision output <b>256</b> which is a decision made on each codeword which is used during the training interval. The decision processor <b>285</b> may formulate a decision on the current codeword and codeword window by selecting the largest peak, and then framing the window function to allow for 20% precursors and 80% post-cursors about the largest peak. This may be similarly done with any other window function which includes pre-cursors and post-cursors. Decision processor <b>285</b> may use any other method known in the art of framing and synchronizing a multi-path received signal. Storage element <b>293</b> used in conjunction with decision processor <b>285</b> may rely on a single maximum value as a datum point for windowing pre-cursors and post-cursors, or it may store the entire received window of correlation output data for data analysis to determine the window signal. <figref idref="DRAWINGS">FIG. 11</figref><i>a </i>shows the Barker codeword for 0 of 01001000111, and the Barker codeword for 1 of 10110111000, and the serial stream for data word 00010. The Barker codewords have the property of producing −1 when auto-correlated except for location <b>0</b> in autocorrelation, where they produces a maximum output of 11. Additionally, in a typical system, the individual 1s and 0s of each Barker codeword are received as amplitude values which include noise and multi-path reflections, and are represented as 6-8 bit values for the channels I and Q, as is commonly understood in digital signal processing. <figref idref="DRAWINGS">FIG. 11</figref><i>b </i>shows the result of correlating the incoming symbol stream against the Barker codewords 01001000111 and 10110111000, for the I channel of the sliding correlator <b>250</b> of <figref idref="DRAWINGS">FIG. 10</figref>. A single position in the 11 bit sequence causes a positive peak for a 1, and a negative peak for a 0, thereby establishing a synchronization window and the value of the codeword. Since the incoming baseband RF is typically phase rotated to produce an output in the I channel, the Q channel shown in <figref idref="DRAWINGS">FIG. 11</figref><i>c </i>is silent. In order to satisfy the Nyquist rate for sampling, the actual sampling speed is set to 22 Mhz, which is twice the bit rate of the symbols at 11 Mhz. Results of sampling at this rate are shown in <figref idref="DRAWINGS">FIGS. 11</figref><i>d </i>and <b>11</b><i>e </i>in the absence of multi-path reflections. For a 1 Mb wireless data rate, the Barker codewords are carried only in the I channel, and for a 2 Mb data rate, the 11 bit codewords are carried simultaneously in the I and Q channels. The effect of multi-path reflections is phase rotation of the analytic baseband signal, so that some of the reflected energy from the I channel codewords may appear at a different time, and partially rotated into a different channel, as shown in <figref idref="DRAWINGS">FIGS. 11</figref><i>f </i>and <b>11</b><i>g</i>. The larger amplitude reflection occurs in the same position as the pure reflection shown in <figref idref="DRAWINGS">FIGS. 11</figref><i>d </i>and <b>11</b><i>e</i>, and a second reflection appears in the I and Q channels shown in <figref idref="DRAWINGS">FIGS. 11</figref><i>f </i>and <b>11</b><i>g</i>. In terms relative to the largest amplitude signal within a window, signals which are part of the codeword that appear before the largest amplitude signal are called pre-cursors, and reflections which occur later are called post-cursors, as was described for <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0040" num="0040"><figref idref="DRAWINGS">FIGS. 12</figref><i>a </i>and <b>12</b><i>b </i>show the 22 Mhz sampled I and Q channels in the presence of a single multi-path reflection, whereby the post-cursor occurs near the middle of the symbol window and appears in the I and Q channels. <figref idref="DRAWINGS">FIG. 12</figref><i>d </i>shows the training decision output <b>256</b> of <figref idref="DRAWINGS">FIG. 10</figref>, which is centered within a window that includes a provision for pre-cursors and post-cursors. Since most of the signals which follow the strongest signal are post-cursors, it is acceptable to define the window to include 5-10% pre-cursors, and 90-95% post-cursors from the largest sliding correlator output, as shown in <figref idref="DRAWINGS">FIG. 12</figref><i>a. </i></p>
<p id="p-0041" num="0041"><figref idref="DRAWINGS">FIG. 13</figref><i>a </i>shows the contents of the channel profile memory <b>220</b> from <figref idref="DRAWINGS">FIG. 10</figref> during the training interval. In <figref idref="DRAWINGS">FIG. 10</figref>, the channel profile memory <b>220</b> comprises memory <b>223</b> and memory controller <b>221</b>. During the initial part of the training interval, the D(clr) output of memory controller <b>221</b> is asserted to the Din of memory <b>223</b>. At the same time, the read/write (R/W) signal is asserted as the write and addresses (A) are cycled, thereby writing a 0 value into all locations. In this manner, the contents of memory <b>223</b> are initialized at the beginning of the training sequence using the learn/decide signal <b>262</b>. The channel profile memory <b>220</b> comprises a number of locations equal to the number of samples in a codeword window. For a 22 Mhz sampling rate and 11 bit symbols, the channel profile memory <b>220</b> comprises 22 locations for each I and Q channel. The channel profile memory may have from 2 to 20 samples of data where 6 bit data is collected and accumulated. The width of each I and Q channel location depends on the number of samples and size of each sample to be added. In general, the memory <b>223</b> width is d+log<sub>2</sub>(n), where n is the number of averages, or number of times the training values are added in, and d is the intrinsic sample resolution of the correlation peaks <b>258</b>. The contents of the memory <b>223</b> may be truncated to a lower number of bits for economy. Initially, the contents of the channel profile memory <b>223</b> is cleared as described earlier, and once the training decision block determines a suitable window, the channel profile memory controller <b>221</b> synchronizes the storage of correlation peaks <b>258</b> with this window. When the correlation peaks <b>258</b> contain a codeword that the training decision indicates is the Barker 1 codeword 10110111000, this correlation sequence is added directly to the channel profile memory <b>220</b> as a complex value. When the Barker 0 codeword of 01001000111 is received, this value is inverted and added to the channel profile memory <b>220</b>. This is done for perhaps 20 cycles synchronized with each window, each time adding the current correlation peaks <b>258</b> to the previous correlation peaks already present in memory <b>223</b>. Each additional cycle produces a growing value for the I channel of the channel profile memory <b>220</b> as shown in <figref idref="DRAWINGS">FIG. 13</figref><i>a </i>and for the Q channel of the channel profile memory <b>220</b> as shown in <figref idref="DRAWINGS">FIG. 13</figref><i>b</i>. In this manner, the channel profile memory <b>220</b> in <figref idref="DRAWINGS">FIG. 10</figref> contains the correlation peaks associated with the average channel response over the training interval, and each new correlation peak is synchronized and added to the previous correlation peak.</p>
<p id="p-0042" num="0042">After the training interval, the demultiplexer <b>260</b> in <figref idref="DRAWINGS">FIG. 10</figref> delivers no additional codewords to the channel profile memory, and the memory controller <b>221</b> prevents additional data from being written using learn/decide signal <b>262</b>. The contents of channel profile memory <b>223</b> are sequentially read by memory controller <b>221</b> in synchronism with the incoming correlation peaks using window signal <b>288</b>. The contents of channel profile memory <b>223</b> which are now synchronized with the incoming correlation peaks <b>258</b>, are conjugated by complex conjugator <b>272</b>. This conjugation nullifies the channel effects due to varying phase of the reflected signals. This conjugation changes the sign of the imaginary part of the complex contents of memory <b>223</b>. The output of the complex conjugator <b>272</b> is multiplied with the correlation peaks <b>258</b> within complex multiplier <b>278</b>. These aforementioned correlation peaks <b>258</b> are selected by the demultiplexer <b>260</b> using the learn/decide signal <b>262</b>, and the multiplier <b>278</b> output is delivered to an accumulator <b>294</b>. The memory <b>289</b> within the accumulator <b>294</b> is initialized at the beginning of the window signal <b>288</b>, and incoming multiplier output values are summed with the present value of memory <b>289</b> using adder <b>287</b>. At the end of the window as indicated by signal <b>288</b>, the values of the I and Q channels of the accumulator are examined. Since the pre-cursors and post-cursors have been added into these resulting values for I and Q, the resulting contents of memory <b>289</b> is then compared <b>291</b> with a threshold(0) to determine if the value is 1 or 0 in each of the I and Q channels. In this manner, the accumulations of all pre-cursors and post-cursors in the window belonging to a particular codeword are provided to the I and Q channel outputs, and a decision is made on these symbols. The ability to make a decision on these symbols generated in the described manner has reduced complexity and increased performance compared to prior art solutions.</p>
<p id="p-0043" num="0043">Comparing the functionality and complexity of the combiner of <figref idref="DRAWINGS">FIG. 10</figref> to the prior art of <figref idref="DRAWINGS">FIG. 5</figref> or <b>6</b>, a clear reduction in complexity has been achieved with no loss in functionality. The various delayed signals enter <figref idref="DRAWINGS">FIG. 5</figref> input <b>194</b>, and a plurality of separate delays and multiplication coefficients are calculated, conjugated, multiplied, and summed to the final result. A full implementation of the signal processor <b>190</b> on a 22 sample per symbol incoming rate would require 22 such channels, each with a complex multiplier. Typically, a much smaller number of channels are implemented, such as the 3 shown in <figref idref="DRAWINGS">FIGS. 5 &amp; 6</figref>, and these channels operate on a few large signals which are selected for phase correction. The decision <b>188</b> is made on this small number of signals. In the present invention shown in <figref idref="DRAWINGS">FIG. 10</figref>, all of the signal reflections are contained in the channel profile memory <b>220</b> of <figref idref="DRAWINGS">FIG. 10</figref>, and each sample interval, a current channel memory content value is conjugated, multiplied by incoming correlation peaks <b>258</b>, and summed in accumulator <b>294</b>. In this manner, every sample is used to produce the final accumulated result stored in memory <b>289</b>, in contrast with the finite number of delay paths associated with <figref idref="DRAWINGS">FIG. 5</figref> or <b>6</b>. For a system of <figref idref="DRAWINGS">FIG. 5</figref> or <b>6</b> to achieve this performance at 22 samples per symbol, 22 delay elements (<b>170</b> and <b>172</b>) and 22 multipliers (<b>180</b>, <b>182</b>, and <b>184</b>) would be required. The system of <figref idref="DRAWINGS">FIG. 10</figref> achieves this same functionality with a single multiplier <b>278</b>. The reference to the present invention as an “all-tap” combiner makes reference to the equivalent functionality of a 22 tap FIR filter <b>203</b> of <figref idref="DRAWINGS">FIG. 6</figref> being achieved in the single multiplier circuit of <figref idref="DRAWINGS">FIG. 10</figref>.</p>
<p id="p-0044" num="0044">An additional advantage of the present invention compared to the prior art of <figref idref="DRAWINGS">FIG. 5</figref> or <b>6</b> is simplified circuitry allows operation at twice the incoming sample rate. The incoming 11 Mbps data stream may be sampled at 22 Mhz as presented in the data stream <b>286</b> of <figref idref="DRAWINGS">FIG. 10</figref>. The peaks of the correlator outputs in 1 us duration are used to create the channel profile, which is averaged over many cycles to reduce the noise content. When the channel profile memory contents are multiplied by the incoming data stream at 22 Mhz, the phase offsets associated with initial timing offsets are cancelled. If the rake training is continued throughout the packet such that the channel memory <b>220</b> continues to add new correlation peak data <b>258</b> over the duration of packet reception, as opposed to stopping the learning process after the preamble, the need for a timing-tracking loop (not shown) to track drifts between the transmitter oscillator (not shown) and received data clock is eliminated, as the slow phase change of the incoming data is compensated by the slow phase change of the contents of the channel profile memory.</p>
<p id="p-0045" num="0045"><figref idref="DRAWINGS">FIG. 10</figref><i>a </i>shows the alternate functionality, where the incoming correlation peaks <b>258</b> are delivered to multiplexer <b>280</b><i>a</i>, which always sends the peaks to channel profile memory <b>264</b>, and the memory controller <b>221</b> of <figref idref="DRAWINGS">FIG. 10</figref> is always adding incoming data to the channel profile memory <b>223</b>, regardless of the state of learn/decide signal <b>262</b>, which now controls switch <b>261</b>, enabling data to the complex multiplier <b>278</b> when the learn/decide signal <b>262</b> is in the decide state. As both the channel profile memory and incoming data slowly rotate in phase together because of slow drifts in clock, the result of conjugation and multiplication of the channel profile memory with the incoming correlation peaks is the rotation of the multiplication product back into the correct I and Q channels.</p>
<p id="p-0046" num="0046"><figref idref="DRAWINGS">FIGS. 14</figref><i>a </i>and <b>14</b><i>b </i>show the overall operation of the all-tap, fractionally-spaced serial rake combiner processor <b>284</b> in <figref idref="DRAWINGS">FIG. 10</figref>. In <figref idref="DRAWINGS">FIGS. 14</figref><i>a </i>and <b>14</b><i>b</i>, learning interval <b>300</b> is followed by a decision interval <b>302</b>. During the learning interval <b>300</b>, sliding correlator outputs <b>1314</b> and Q <b>320</b> are generated by sliding correlator <b>250</b> of <figref idref="DRAWINGS">FIG. 10</figref>, and then as also shown in <figref idref="DRAWINGS">FIG. 10</figref>, training decision function <b>252</b> generates training decision output <b>256</b> and window signal <b>288</b>. When the training decision output <b>256</b> of <figref idref="DRAWINGS">FIG. 10</figref> which is illustrated by the waveform <b>304</b> of <figref idref="DRAWINGS">FIG. 14</figref><i>a </i>is 1, multiplexer <b>292</b> selects the correlation peaks <b>258</b> through demultiplexer <b>260</b>. When the training decision output <b>256</b> is 0, the correlation peak values are inverted with inverter <b>290</b> during the duration of the window signal <b>288</b>, and inverted values are selected through multiplexer <b>292</b>. In this manner, same-polarity symbols including multi-path reflections are successively added into the channel profile memory <b>220</b> using adder <b>268</b> of <figref idref="DRAWINGS">FIG. 10</figref>. Waveform <b>306</b> of <figref idref="DRAWINGS">FIG. 14</figref><i>a </i>shows the same-polarity training multiplexer output found at the multiplexer <b>292</b> of <figref idref="DRAWINGS">FIG. 10</figref>. This same-polarity training multiplexer output is either the original sliding correlator output when the training decision <b>304</b> is 1, or the negated value when the training decision <b>304</b> is 0. Waveform <b>308</b> of <figref idref="DRAWINGS">FIG. 14</figref><i>a </i>shows the contents of channel profile memory <b>220</b> of <figref idref="DRAWINGS">FIG. 10</figref>, which initialize to 0 at the start of the training interval, and grow with each successive addition <b>268</b> from the multiplexer <b>292</b>. This multiplexer <b>292</b> output is illustrated in waveform <b>306</b> of <figref idref="DRAWINGS">FIG. 14</figref><i>a</i>. At the end of the learning interval <b>300</b> of <figref idref="DRAWINGS">FIG. 14</figref><i>a</i>, the channel profile memory <b>220</b> of <figref idref="DRAWINGS">FIG. 10</figref> has the additive contribution of signals from each cycle, while the random noise component tends to average out. This averaging thereby achieves an improved signal to noise version of the correlation peak to use as a template during the resulting decision interval <b>302</b> of <figref idref="DRAWINGS">FIG. 14</figref><i>a. </i></p>
<p id="p-0047" num="0047"><figref idref="DRAWINGS">FIG. 14</figref><i>b </i>shows the contents of channel profile memory <b>220</b> of <figref idref="DRAWINGS">FIG. 10</figref> during the learning interval <b>300</b> illustrated by waveform <b>308</b>/<b>322</b>. During the learning interval <b>300</b>, the window waveform <b>310</b> is used by the channel profile memory controller <b>221</b> of channel profile memory <b>220</b> to establish synchronization between incoming data from multiplexer <b>292</b> and training window data stored in channel profile memory. During decision interval <b>302</b>, window waveform <b>310</b> defines the boundaries of each codeword and indicates the beginning and end of each accumulator <b>294</b> of <figref idref="DRAWINGS">FIG. 10</figref> window. The window <b>310</b> and training decision <b>304</b> waveforms are asserted at the earliest point that the training decision function <b>252</b> of <figref idref="DRAWINGS">FIG. 10</figref> is able to ascertain the largest signal to use as a datum reference, as was described earlier. The output of the complex multiplier <b>278</b> of <figref idref="DRAWINGS">FIG. 10</figref>, is illustrated by waveform <b>322</b> of <figref idref="DRAWINGS">FIG. 14</figref><i>b</i>. Waveform <b>322</b> shows the result of multiplying the incoming sliding correlator output <b>314</b>/<b>210</b> by the complex conjugate of the channel profile memory waveform <b>308</b> of <figref idref="DRAWINGS">FIG. 14</figref><i>a</i>. The window signal <b>288</b> of <figref idref="DRAWINGS">FIG. 10</figref> and window waveform <b>310</b> of <figref idref="DRAWINGS">FIG. 14</figref><i>a </i>have been centered by the training decision function <b>252</b> of <figref idref="DRAWINGS">FIG. 10</figref> about the strongest correlation peak to include some pre-cursors, and the majority of post-cursors. This window waveform <b>310</b> of <figref idref="DRAWINGS">FIG. 14</figref><i>a </i>is used to reset the accumulator <b>294</b> of <figref idref="DRAWINGS">FIG. 10</figref> at the beginning of each window. After the multiplier output values are accumulated during the acquisition window, the value is sampled at the end of the acquisition window and a decision is made, as shown in the decision values of waveform <b>324</b> of <figref idref="DRAWINGS">FIG. 14</figref><i>b</i>. This accumulation and sampling operation is performed on the I and Q channels of the accumulator <b>294</b> of <figref idref="DRAWINGS">FIG. 10</figref>.</p>
<p id="p-0048" num="0048">As the result of the aforementioned process, a decision can be made from a stream of quadrature input signals which conform to the IEEE 802.11b wireless data rates of 1 Mb and 2 Mb comprising Barker codes. It is clear to one skilled in the art of digital signal processing and wireless encoding systems that the steps of training a channel profile memory require the Barker code for 0 be inverted compared to the value of the Barker code for 1. Within the system described, it is possible to do this for the I and Q channels, thereby collecting an averaged Barker codeword for the channel. The system described comprises, as illustrated in <figref idref="DRAWINGS">FIG. 10</figref>, a sliding correlator <b>250</b> for the recovery of codewords which may include reflected codewords and a training decision function <b>252</b> for generation of a window signal for framing the codewords. The system also includes a training decision output <b>256</b> for determining whether the codeword for 0 or 1 was sent to accumulate same-polarity symbols into the channel profile memory <b>220</b>, which contains a sum of responses.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>We claim:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A combiner processor comprising:
<claim-text>a sliding correlator for correlating a serial stream of baseband symbols against a first codeword and forming a correlation peak output;</claim-text>
<claim-text>a training decision function coupled to said correlation peak output and generating a window output that is asserted at the start of an interval and unasserted at the end of said interval and also a training decision output;</claim-text>
<claim-text>a demultiplexer coupled to said correlation peak output and having a learn control input whereby when said demultiplexer learn control input is asserted:</claim-text>
<claim-text>said correlation peak output is coupled to a channel profile memory such that said correlation peak output is added to the contents of said channel profile memory when said training decision output is true and said correlation peak output is inverted and added to the contents of said channel profile memory when said training decision output is false;</claim-text>
<claim-text>and when said demultiplexer learn control input is not asserted:</claim-text>
<claim-text>said correlation peak output is multiplied with the complex conjugate of the contents of said channel profile memory and coupled to an accumulator which adds said multiplier result when said window output is asserted and generates a decision output when said window output is unasserted.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said first codeword is 11 bits.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> where said first codeword is a Barker codeword.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said first codeword is {+1, −1, +1, +1, −1, +1, +1, +1, −1, −1, −1}.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said first codeword is {−1, +1, −1, −1, +1, −1, −1, −1, +1, +1, +1}.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said serial stream of baseband symbols includes Barker codewords.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said serial stream of baseband symbols includes an in-phase component and a quadrature component.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The combiner processor of <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein said serial stream of quadrature symbols includes an I channel and a Q channel.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The combiner processor of <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein said serial stream of quadrature phase symbols includes an I channel and a Q channel.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The combiner processor of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein said complex conjugate comprises negating the value of said Q channel.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said training decision function window output is asserted for a duration substantially equal to the duration of said codeword.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said training decision function window output is asserted when pre-cursor symbols are arriving prior to the largest said correlation peak in said window output asserted duration.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said training decision function window includes post-cursor symbols arriving after the largest said correlation peak in said window output asserted duration.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said training decision output indicates which said codeword was received during said window output asserted duration.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said demultiplexer learn input is asserted during a first interval.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The combiner processor of <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein said first interval occurs during the preamble of a received packet.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The combiner processor of <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein said first interval is greater than 10 said codeword symbols.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said baseband symbols have an in-phase component and a quadrature component and said complex conjugate comprises negating the value of said quadrature component.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said channel profile memory is synchronized to said training decision function window output.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said channel profile memory comprises a random access memory and a memory controller coupled to said random access memory.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said correlation peak output has an in-phase component and a quadrature component, and said channel profile memory has associated in-phase storage and quadrature storage such that said correlation peak output in-phase component is added to said in-phase storage and said correlation peak output quadrature component is added in said quadrature storage when said demultiplexer learn input is asserted.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said channel profile memory is initialized when said demultiplexer learn control input is first asserted.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said channel profile memory has a number of locations equal to the number of samples in said codeword.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said accumulator includes a memory which is initialized at the start of each said window.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said accumulator includes a memory and an adder which adds the current said multiplier output to said memory contents.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said decision output compares said accumulated value against a threshold at the end of said window.</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The combiner processor of <claim-ref idref="CLM-00026">claim 26</claim-ref> wherein said threshold is 0.</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The combiner processor of <claim-ref idref="CLM-00026">claim 26</claim-ref> wherein said threshold is 0.</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. The combiner processor of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said codewords are used for direct sequence spread spectrum communications.</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. A combiner processor having two states:
<claim-text>a training state whereby a serial stream of baseband symbols is correlated against a first codeword, thereby producing a correlation peak output, said correlation peaks examined by a training decision function to generate a window output indicating the extent of said symbol and a decision output which is either true or false, said correlation peaks added to a channel profile memory when said decision output is true and inverted and added to said channel profile memory when said decision output is false;</claim-text>
<claim-text>a decision state whereby said correlation peak output is multiplied by the complex conjugate of the contents of said channel profile memory to produce a multiplier output;</claim-text>
<claim-text>an accumulator coupled to said multiplier output wherein said accumulator is reset at the start of said window, accumulates the output of said multiplier during said window, and generates a binary output value at the end of said window.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said first codeword is 11 bits.</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said first codeword is a Barker codeword.</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said first codeword is {+1, −1, +1, +1, −1, +1, +1, +1, −1, −1, −1}.</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said first codeword is {−1, +1, −1, −1, +1, −1, −1, −1, +1, +1, +1}.</claim-text>
</claim>
<claim id="CLM-00035" num="00035">
<claim-text>35. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said serial stream of baseband symbols includes Barker codewords.</claim-text>
</claim>
<claim id="CLM-00036" num="00036">
<claim-text>36. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said serial stream of baseband symbols is two streams of symbols in quadrature phase.</claim-text>
</claim>
<claim id="CLM-00037" num="00037">
<claim-text>37. The combiner processor of <claim-ref idref="CLM-00036">claim 36</claim-ref> wherein said serial stream of quadrature phase symbols includes an I channel and a Q channel.</claim-text>
</claim>
<claim id="CLM-00038" num="00038">
<claim-text>38. The combiner processor of <claim-ref idref="CLM-00037">claim 37</claim-ref> wherein said complex conjugate comprises negating the value of said Q channel.</claim-text>
</claim>
<claim id="CLM-00039" num="00039">
<claim-text>39. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said training decision function window output has a duration equal to the duration of said codeword.</claim-text>
</claim>
<claim id="CLM-00040" num="00040">
<claim-text>40. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said training decision function window output includes pre-cursor symbols arriving prior to the largest said correlation peak in said window.</claim-text>
</claim>
<claim id="CLM-00041" num="00041">
<claim-text>41. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said training window includes post-cursor symbols arriving after the largest said correlation peak in said window.</claim-text>
</claim>
<claim id="CLM-00042" num="00042">
<claim-text>42. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said training decision output indicates which said codeword was received during said window.</claim-text>
</claim>
<claim id="CLM-00043" num="00043">
<claim-text>43. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said training state occurs during a first interval.</claim-text>
</claim>
<claim id="CLM-00044" num="00044">
<claim-text>44. The combiner processor of <claim-ref idref="CLM-00043">claim 43</claim-ref> wherein said first interval occurs during the preamble of a received packet.</claim-text>
</claim>
<claim id="CLM-00045" num="00045">
<claim-text>45. The combiner processor of <claim-ref idref="CLM-00043">claim 43</claim-ref> wherein said first interval is greater than 10 said codeword symbols.</claim-text>
</claim>
<claim id="CLM-00046" num="00046">
<claim-text>46. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said channel profile memory is synchronized to said training decision function window output.</claim-text>
</claim>
<claim id="CLM-00047" num="00047">
<claim-text>47. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said channel profile memory comprises a random access memory and a memory controller coupled to said random access memory.</claim-text>
</claim>
<claim id="CLM-00048" num="00048">
<claim-text>48. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said channel profile memory adds quadrature said correlation peak output when said demultiplexer learn input is asserted.</claim-text>
</claim>
<claim id="CLM-00049" num="00049">
<claim-text>49. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said channel profile memory is initialized at the beginning of said training state.</claim-text>
</claim>
<claim id="CLM-00050" num="00050">
<claim-text>50. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said channel profile memory has a number of locations equal to the number of samples in said codeword.</claim-text>
</claim>
<claim id="CLM-00051" num="00051">
<claim-text>51. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said accumulator includes a memory which is initialized at the start of each said window.</claim-text>
</claim>
<claim id="CLM-00052" num="00052">
<claim-text>52. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said accumulator includes a memory and an adder which adds the current said multiplier output to said memory contents.</claim-text>
</claim>
<claim id="CLM-00053" num="00053">
<claim-text>53. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said binary output compares said accumulated value against a threshold at the end of said window.</claim-text>
</claim>
<claim id="CLM-00054" num="00054">
<claim-text>54. The combiner processor of <claim-ref idref="CLM-00053">claim 53</claim-ref> wherein said threshold is 0.</claim-text>
</claim>
<claim id="CLM-00055" num="00055">
<claim-text>55. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said decision state occurs during a second interval.</claim-text>
</claim>
<claim id="CLM-00056" num="00056">
<claim-text>56. The combiner processor of <claim-ref idref="CLM-00030">claim 30</claim-ref> wherein said codewords are used for direct sequence spread spectrum communications.</claim-text>
</claim>
<claim id="CLM-00057" num="00057">
<claim-text>57. A process for generating a decision output from a serial stream of baseband symbols, said process comprising:
<claim-text>a first learning step comprising:</claim-text>
<claim-text>correlating said incoming serial stream with one or more codewords to generate a correlation output, examining said correlation output to generate a training decision which is positive or negative, and also generating a window signal indicating the start and end of said incoming serial symbols, said incoming symbols added to the contents of a channel profile memory when said training decision is positive, and inverting said incoming symbols and adding to the contents of said channel profile memory when said training decision is negative;</claim-text>
<claim-text>a second decision step comprising:</claim-text>
<claim-text>multiplying said correlation peaks with the complex conjugate of said channel profile memory contents, thereby forming a multiplier output and accumulating said multiplier output during said window signal start time to said window signal end time to form a decision value, and comparing said decision value at the said window signal end time to form said decision output.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00058" num="00058">
<claim-text>58. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said first codeword is 11 bits.</claim-text>
</claim>
<claim id="CLM-00059" num="00059">
<claim-text>59. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said first codeword is a Barker codeword.</claim-text>
</claim>
<claim id="CLM-00060" num="00060">
<claim-text>60. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said first codeword is {+1, −1, +1, +1, −1, +1, +1, +1, −1, −1, −1}.</claim-text>
</claim>
<claim id="CLM-00061" num="00061">
<claim-text>61. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said first codeword is {−1, +1, −1, −1, +1, −1, −1, −1, +1, +1, +1}.</claim-text>
</claim>
<claim id="CLM-00062" num="00062">
<claim-text>62. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said serial stream of baseband symbols includes Barker codewords.</claim-text>
</claim>
<claim id="CLM-00063" num="00063">
<claim-text>63. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said serial stream of baseband symbols has quadrature phase separation.</claim-text>
</claim>
<claim id="CLM-00064" num="00064">
<claim-text>64. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said window output has duration equal to the duration of said codeword.</claim-text>
</claim>
<claim id="CLM-00065" num="00065">
<claim-text>65. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said window output includes pre-cursor symbols arriving prior to the largest said correlation peak in said window.</claim-text>
</claim>
<claim id="CLM-00066" num="00066">
<claim-text>66. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said window includes post-cursor symbols arriving after the largest said correlation peak in said window.</claim-text>
</claim>
<claim id="CLM-00067" num="00067">
<claim-text>67. The combiner processor of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said training decision output indicates which said codeword was received during said window.</claim-text>
</claim>
<claim id="CLM-00068" num="00068">
<claim-text>68. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said learning step precedes said decision step.</claim-text>
</claim>
<claim id="CLM-00069" num="00069">
<claim-text>69. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said learning step occurs during the preamble of a received packet.</claim-text>
</claim>
<claim id="CLM-00070" num="00070">
<claim-text>70. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said learning step uses more than 10 said codeword symbols.</claim-text>
</claim>
<claim id="CLM-00071" num="00071">
<claim-text>71. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said channel profile memory is synchronized to said window.</claim-text>
</claim>
<claim id="CLM-00072" num="00072">
<claim-text>72. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said channel profile memory comprises a random access memory and a memory controller coupled to said random access memory.</claim-text>
</claim>
<claim id="CLM-00073" num="00073">
<claim-text>73. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said correlation output has an in-phase component and a quadrature component, and said channel profile memory has in-phase storage and quadrature storage such that said correlation output in-phase component is added to said in-phase storage and said correlation output quadrature component is added to said quadrature storage during said learning step.</claim-text>
</claim>
<claim id="CLM-00074" num="00074">
<claim-text>74. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said channel profile memory is initialized at the beginning of said learning step.</claim-text>
</claim>
<claim id="CLM-00075" num="00075">
<claim-text>75. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said channel profile memory has a number of locations equal to the number of samples in said codeword.</claim-text>
</claim>
<claim id="CLM-00076" num="00076">
<claim-text>76. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said accumulation includes a memory which is initialized at the start of each said window.</claim-text>
</claim>
<claim id="CLM-00077" num="00077">
<claim-text>77. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said accumulation includes a memory and an adder which adds the current said multiplier output to said memory contents.</claim-text>
</claim>
<claim id="CLM-00078" num="00078">
<claim-text>78. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said decision value compares said accumulated value against a threshold at the end of said window.</claim-text>
</claim>
<claim id="CLM-00079" num="00079">
<claim-text>79. The process of <claim-ref idref="CLM-00057">claim 57</claim-ref> wherein said codewords are used for direct sequence spread spectrum communications.</claim-text>
</claim>
<claim id="CLM-00080" num="00080">
<claim-text>80. A combiner processor comprising:
<claim-text>a sliding correlator for correlating a serial stream of baseband symbols against a first codeword and forming a correlation peak output;</claim-text>
<claim-text>a training decision function coupled to said correlation peak output and generating a window output that is asserted during an interval, and unasserted at other times, the training decision function also generating a training decision output;</claim-text>
<claim-text>said correlation peak output is coupled to a channel profile memory such that said correlation peak output is added to said channel profile memory when said training decision output is true and said correlation peak output is inverted and added to said channel profile memory when said training decision output is false; and</claim-text>
<claim-text>a decision control input whereby when said decision control input is asserted, said correlation peak output is multiplied with the complex conjugate of said channel profile memory and coupled to an accumulator which adds said multiplier result when said window output is asserted and generates a decision output when said window output is unasserted.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00081" num="00081">
<claim-text>81. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said first codeword is 11 bits.</claim-text>
</claim>
<claim id="CLM-00082" num="00082">
<claim-text>82. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said first codeword is a Barker codeword.</claim-text>
</claim>
<claim id="CLM-00083" num="00083">
<claim-text>83. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said first codeword is {+1, −1, +1, +1, −1, +1, +1, +1, −1, −1, −1}.</claim-text>
</claim>
<claim id="CLM-00084" num="00084">
<claim-text>84. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said first codeword is {−1, +1, −1, −1, +1, −1, −1, −1, +1, +1, +1}.</claim-text>
</claim>
<claim id="CLM-00085" num="00085">
<claim-text>85. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said serial stream of baseband symbols includes Barker codewords.</claim-text>
</claim>
<claim id="CLM-00086" num="00086">
<claim-text>86. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said serial stream of baseband symbols is two streams of symbols in quadrature phase.</claim-text>
</claim>
<claim id="CLM-00087" num="00087">
<claim-text>87. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said serial stream of quadrature symbols includes an I channel and a Q channel.</claim-text>
</claim>
<claim id="CLM-00088" num="00088">
<claim-text>88. The combiner processor of <claim-ref idref="CLM-00087">claim 87</claim-ref> wherein said complex conjugate comprises negating the value of said Q channel.</claim-text>
</claim>
<claim id="CLM-00089" num="00089">
<claim-text>89. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said training decision function window output has duration equal to the duration of said codeword.</claim-text>
</claim>
<claim id="CLM-00090" num="00090">
<claim-text>90. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said training decision function window output duration of assertion includes pre-cursor symbols which arrive prior to the largest said correlation peak in said window output asserted duration.</claim-text>
</claim>
<claim id="CLM-00091" num="00091">
<claim-text>91. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said training decision function window output duration of assertion includes post-cursor symbols arriving after the largest said correlation peak in said window output asserted duration.</claim-text>
</claim>
<claim id="CLM-00092" num="00092">
<claim-text>92. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said training decision output indicates which said codeword was received during said window output asserted duration.</claim-text>
</claim>
<claim id="CLM-00093" num="00093">
<claim-text>93. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said decision input is not asserted during a first interval.</claim-text>
</claim>
<claim id="CLM-00094" num="00094">
<claim-text>94. The combiner processor of <claim-ref idref="CLM-00093">claim 93</claim-ref> wherein said first interval occurs during the preamble of a received packet.</claim-text>
</claim>
<claim id="CLM-00095" num="00095">
<claim-text>95. The combiner processor of <claim-ref idref="CLM-00093">claim 93</claim-ref> wherein said first interval is greater than 10 said codeword symbols.</claim-text>
</claim>
<claim id="CLM-00096" num="00096">
<claim-text>96. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said channel profile memory is synchronized to said training decision function window output asserted duration.</claim-text>
</claim>
<claim id="CLM-00097" num="00097">
<claim-text>97. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said channel profile memory comprises a random access memory and a memory controller coupled to said random access memory.</claim-text>
</claim>
<claim id="CLM-00098" num="00098">
<claim-text>98. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said channel profile memory has an in-phase part and a quadrature part, and said combiner processor adds an in-phase component of said correlation peak output to said in-phase channel profile memory and also adds a quadrature phase component of said correlation peak output to said channel profile memory quadrature part.</claim-text>
</claim>
<claim id="CLM-00099" num="00099">
<claim-text>99. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said channel profile memory is initialized.</claim-text>
</claim>
<claim id="CLM-00100" num="00100">
<claim-text>100. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said channel profile memory has a number of locations equal to the number of samples in said codeword.</claim-text>
</claim>
<claim id="CLM-00101" num="00101">
<claim-text>101. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said accumulator includes a memory which is initialized at the start of each said window output assertion.</claim-text>
</claim>
<claim id="CLM-00102" num="00102">
<claim-text>102. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said accumulator includes a memory and an adder which adds the current said multiplier output to said memory contents.</claim-text>
</claim>
<claim id="CLM-00103" num="00103">
<claim-text>103. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said decision output compares said accumulated value against a threshold at the end of said window output assertion.</claim-text>
</claim>
<claim id="CLM-00104" num="00104">
<claim-text>104. The combiner process of <claim-ref idref="CLM-00103">claim 103</claim-ref> wherein said threshold is 0.</claim-text>
</claim>
<claim id="CLM-00105" num="00105">
<claim-text>105. The combiner processor of <claim-ref idref="CLM-00080">claim 80</claim-ref> wherein said codewords are used for direct sequence spread spectrum communications.</claim-text>
</claim>
</claims>
</us-patent-grant>
