<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298798-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298798</doc-number>
<kind>B1</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10227080</doc-number>
<date>20020821</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>751</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>03</class>
<subclass>D</subclass>
<main-group>1</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>27</main-group>
<subgroup>06</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>03</class>
<subclass>M</subclass>
<main-group>3</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>375341</main-classification>
<further-classification>37524024</further-classification>
<further-classification>375262</further-classification>
<further-classification>375265</further-classification>
<further-classification>341143</further-classification>
</classification-national>
<invention-title id="d0e53">Method and system for decoding block codes</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5014275</doc-number>
<kind>A</kind>
<name>Shimoda et al.</name>
<date>19910500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714791</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5301209</doc-number>
<kind>A</kind>
<name>Wei</name>
<date>19940400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375265</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5323424</doc-number>
<kind>A</kind>
<name>Fazel et al.</name>
<date>19940600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375329</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5434886</doc-number>
<kind>A</kind>
<name>Kazawa et al.</name>
<date>19950700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375262</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5497384</doc-number>
<kind>A</kind>
<name>Fredrickson et al.</name>
<date>19960300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714792</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5717471</doc-number>
<kind>A</kind>
<name>Stewart</name>
<date>19980200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>348726</main-classification></classification-national>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>5841813</doc-number>
<kind>A</kind>
<name>van Nee</name>
<date>19981100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>5862182</doc-number>
<kind>A</kind>
<name>Awater et al.</name>
<date>19990100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>5875001</doc-number>
<kind>A</kind>
<name>Kwak</name>
<date>19990200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>348607</main-classification></classification-national>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6005840</doc-number>
<kind>A</kind>
<name>Awater et al.</name>
<date>19991200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6141384</doc-number>
<kind>A</kind>
<name>Wittig et al.</name>
<date>20001000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>37524025</main-classification></classification-national>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6233273</doc-number>
<kind>B1</kind>
<name>Webster et al.</name>
<date>20010500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>6233286</doc-number>
<kind>B1</kind>
<name>Wei</name>
<date>20010500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375265</main-classification></classification-national>
</citation>
<citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>6269129</doc-number>
<kind>B1</kind>
<name>Rhee et al.</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375341</main-classification></classification-national>
</citation>
<citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>6301209</doc-number>
<kind>B2</kind>
<name>Fujinami</name>
<date>20011000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>369 4715</main-classification></classification-national>
</citation>
<citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>6324224</doc-number>
<kind>B1</kind>
<name>Ikeda</name>
<date>20011100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375341</main-classification></classification-national>
</citation>
<citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>6327317</doc-number>
<kind>B1</kind>
<name>Chennakeshu et al.</name>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375341</main-classification></classification-national>
</citation>
<citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>6734920</doc-number>
<kind>B2</kind>
<name>Ghosh et al.</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>348614</main-classification></classification-national>
</citation>
<citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>6907084</doc-number>
<kind>B2</kind>
<name>Jeong</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375261</main-classification></classification-national>
</citation>
<citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>2003/0231709</doc-number>
<kind>A1</kind>
<name>Pare et al.</name>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375233</main-classification></classification-national>
</citation>
<citation>
<patcit num="00021">
<document-id>
<country>EP</country>
<doc-number>0413 505</doc-number>
<kind>A1</kind>
<date>19910200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00022">
<document-id>
<country>EP</country>
<doc-number>1148 677</doc-number>
<kind>A2</kind>
<date>20011000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00023">
<othercit>Halford, Karen et al., “Complementary Code Keying for Rake-Based Indoor Wireless Communication,” <i>Proceedings of the 1999 IEEE International Symposium on Circuits and Systems</i>, Orlando, Florida, May 30-Jun. 2, 1999, vol. 4 of 6, pp. 427-430.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00024">
<othercit>“Part 11: Wireless LAN Medium Access Control (MAC) and Physical Layer (PHY) specifications: Higher-Speed Physical Layer Extension in the 2.4 GHz Band,” <i>IEEE Standard 802.11B-1999 </i>(<i>Supplement to ANSI/IEEE Standard 802.11, 1999 Edition</i>), The Institute of Electrical and Electronics Engineers, Inc., New York, New York, published Jan. 20, 2000, pp. 1-89.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00025">
<othercit>Pearson, Bob, “Complementary Code Keying Made Simple,” <i>Intersil</i>™, Application Note 9850, 200l, pp. 1-6.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00026">
<othercit>Sun, Jian, “Complementary Code Keying Modulation,” (http://www.csee.wvu.edu/˜jian/ck.htm, Lane Department of Electrical Engineering, West Virginia University, printed Jun. 24, 2002, 3 pages.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00027">
<othercit>Swaminathan, Sriram et al., “A Dynamically Reconfigurable Adaptive Viterbi Decoder,” Department of Electrical and Computer Engineering, University of Massachusetts, Amherst, MA, <i>FPGA '02</i>, Feb. 24-26, 2002, 10 pages.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00028">
<othercit>Viterbi, Andrew J., “Error Bounds for Convolutional Codes and an Asymptotically Optimum Decoding Algorithm,” <i>IEEE Transactions on Information Theory</i>, vol. IT-13, No. 2, Apr. 1967, pp. 260-269.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00029">
<othercit>Viterbi Decoder Coprocessor User's Guide, Texas Instruments, Inc., copyright © 2001, pp. 1-36.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>28</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>37524024</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375262</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375265</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375316</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375341</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>3752401</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>37524011</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>341143</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>455102</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>455130</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>455 91</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>11</number-of-drawing-sheets>
<number-of-figures>13</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60395288</doc-number>
<kind>00</kind>
<date>20020712</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60314757</doc-number>
<kind>00</kind>
<date>20010824</date>
</document-id>
</us-provisional-application>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Chao</last-name>
<first-name>Chi Chao</first-name>
<address>
<city>Hsinchu</city>
<country>TW</country>
</address>
</addressbook>
<nationality>
<country>TW</country>
</nationality>
<residence>
<country>TW</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Chiu</last-name>
<first-name>Mao Ching</first-name>
<address>
<city>Hsinchu</city>
<country>TW</country>
</address>
</addressbook>
<nationality>
<country>TW</country>
</nationality>
<residence>
<country>TW</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Thomas, Kayden, Horstemeyer &amp; Risley</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Mediatek, Inc.</orgname>
<role>03</role>
<address>
<city>Hsin-Chu</city>
<country>TW</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Payne</last-name>
<first-name>David C.</first-name>
<department>2611</department>
</primary-examiner>
<assistant-examiner>
<last-name>Wong</last-name>
<first-name>Linda</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method and system are disclosed for decoding block codes using a single decoder and trellis diagram. The signal can include at least one block code, and the block code can be modulated using at least one of a plurality of modulation modes. The block code contained in the signal can be selectively decoded based on the modulation mode for the block code using a trellis diagram corresponding to the modulation mode for the block code, for example, a low and high-rate CCK modulation mode or a differential quadrature phase shift keying (DQPSK) Baker sequence modulation mode and a differential binary phase shift keying (DBPSK) Barker sequence modulation mode. The trellis diagram can have multiple embedded subtrellis diagrams in the trellis diagram. In this manner, multiple types of block codes and be decoded using a single decoder and trellis diagram.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="163.32mm" wi="157.65mm" file="US07298798-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="229.53mm" wi="156.46mm" orientation="landscape" file="US07298798-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="188.04mm" wi="163.15mm" orientation="landscape" file="US07298798-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="183.22mm" wi="161.71mm" orientation="landscape" file="US07298798-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="198.46mm" wi="156.80mm" orientation="landscape" file="US07298798-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="241.22mm" wi="182.71mm" orientation="landscape" file="US07298798-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="166.54mm" wi="65.70mm" orientation="landscape" file="US07298798-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="224.28mm" wi="120.65mm" orientation="landscape" file="US07298798-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="251.21mm" wi="166.88mm" file="US07298798-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="184.74mm" wi="168.23mm" file="US07298798-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="243.50mm" wi="168.99mm" orientation="landscape" file="US07298798-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="224.96mm" wi="159.17mm" file="US07298798-20071120-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application claims priority to U.S. Provisional Application No. 60/314,757, entitled “METHOD AND APPARATUS FOR A COMMUNICATION SYSTEM USING COMPLEMENTARY CODE KEYING AND BARKER SEQUENCE MODULATION,” filed on Aug. 24, 2001, and to U.S. Provisional Application No. 60/395,288, entitled “METHOD AND SYSTEM FOR DECODING CCK CODEWORDS BY CALCULATING A BRANCH METRIC ACCORDING TO A DECISION FEEDBACK SEQUENCE ESTIMATION ALGORITHM,” filed on Jul. 12, 2002, which are hereby expressly incorporated by reference. This application is also related to U.S. Patent Application Ser. No. 10/227,093, entitled “METHOD AND SYSTEM FOR DECODING BLOCK CODES BY CALCULATING A PATH METRIC ACCORDING TO A DECISION FEEDBACK SEQUENCE ALGORITHM,” filed on Aug. 21, 2002, which is hereby expressly incorporated herein by reference and commonly owned by the same assignee of this application.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">FIELD</heading>
<p id="p-0003" num="0002">This invention relates generally to wireless communications and, more particularly, to a method and system for decoding block codes.</p>
<heading id="h-0003" level="1">BACKGROUND</heading>
<p id="p-0004" num="0003">The wide spread use of wireless devices in a network environment has increased the demand for wireless local area networks (“WLANs”) to provide high data rates at low cost. Complementary Code Keying (CCK) is one communication technique that can be used to meet this demand. CCK uses complementary polyphase codes for modulating digital information, which has been adopted by IEEE 802.11b as the modulation scheme for WLANs operating at 5.5 Mbit/s and 11 Mbit/s data rates in a 2.4 GHz band. These types of codes provide complementary sequences (“symbols”) having phase parameters, and possess symmetry ideal for transmitting digital information. Typically, at a high data rate of 11 Mbit/s, the codes are grouped as “codewords” having 8-chips or a code length of 8. These codewords are a type of block code (“block codewords”). In this case, 256 possible combinations of codewords may be used. Communication systems can thus extract digital information from a received signal modulated with CCK codewords by decoding the CCK codewords.</p>
<p id="p-0005" num="0004">One prior complementary code decoder is described in U.S. Pat. Nos. 5,841,813 to van Nee and 5,862,182 to Awater et al., which extracts information data of a CCK codeword by correlating different samples of the received signal. For such a decoder, the signal-to-noise ratios degrade significantly after the differential correlators. Additionally, the decoder is not applicable for transmission of CCK codes in multipath environments.</p>
<p id="p-0006" num="0005">One possible decoding scheme for block codes is to match the received signal with all possible code patterns by correlators. A disadvantage of such a decoding scheme is that its complexity increases if the size of the block code is too large. Furthermore, this is an inefficient manner of decoding block codes such as CCK code. A low-complexity decoder for CCK was introduced by M. Webster and C. Andren, Harris/Lucent CCK description: additional cover code and fast transform detail, IEEE 802.11-98/331, September 1998, in which only a subset of CCK codewords are required to be correlated with the received signal by using a fast Walsh transform. However, this type of low-complexity decoder does not adequately address the problems caused by interference in multipath environments when decoding CCK codes.</p>
<p id="p-0007" num="0006">For instance, in multipath environments such as inside an office building, the delay spread of a received signal can cause interference during decoding of CCK codes and symbols within each CCK codeword contained in the received signal. In particular, multipath distortion caused by signals being reflected off of walls within the building can result in propagation delay of the received signal. This type of distortion or interference regarding CCK codewords is referred to as inter-symbol interference (ISI). Two types of ISI can occur: inter-codeword interference and intra-codeword interference. Inter-codeword interference is signal interference between codewords. Intra-codeword interference is signal interference between symbols within a codeword.</p>
<p id="p-0008" num="0007">One prior receiver is described in U.S. Pat. No. 6,233,273 to Webster et al. that deals with inter-codeword and intra-codeword interference. This receiver is a channel-matched correlation receiver (“RAKE”) that uses a decision feedback equalizer to mitigate the effects of multipath distortion. A disadvantage of this receiver is that it requires high signal-to-noise ratios, but a low-signal-to-noise ratios error propagation in the decision feedback equalizer causes chip errors to occur in bursts. This degrades the reliability of decoding CCK codewords. Thus, to handle low signal-to-noise ratios, the RAKE receiver is required to examine all received codeword chips prior to making a codeword decision, which is an inefficient manner of decoding CCK codewords.</p>
<p id="p-0009" num="0008">One prior decoding technique has been introduced to decode and correct errors found in a signal encoded by a convolutional code. Convolutional code, unlike CCK codewords, is a continuous stream of data such as satellite data. This technique is commonly referred to as “Viterbi Decoding” that uses a trellis diagram to find a maximum-likelihood path recursively over the trellis diagram to decode convolutional data, as described in A. J. Viterbi, Error bounds for convolutional codes and an asymptotically optimum decoding algorithm, IEEE Transactions on Information Theory, vol. IT-13, pp. 260-269, April 1967.</p>
<p id="p-0010" num="0009">Thus, what is needed is a block code decoder that can use Viterbi decoding techniques in order to reduce the computational complexity for decoding block codes and to handle multipath distortion in multipath environments or on multiple types of channels.</p>
<heading id="h-0004" level="1">SUMMARY</heading>
<p id="p-0011" num="0010">According to one aspect of the invention, a method is disclosed for processing a signal containing at least one block code. The block code is modulated using at least one of a plurality of modulation modes in the received signal. The block code contained in the signal is selectively decoded based on the modulation mode for the block code using a trellis diagram corresponding to the modulation mode for the block code.</p>
<p id="p-0012" num="0011">According to another aspect of the invention, a communication system is disclosed comprising a receiver and a decoder. The receiver receives a signal containing at least one block code. The block code is modulated using at least one of a plurality of modulation modes. The decoder selectively decodes the block code contained in the signal based on the modulation mode for the block code using a trellis diagram corresponding to the modulation mode of the block code.</p>
<p id="p-0013" num="0012">According to another aspect of the invention, a method for processing a signal is disclosed in which a signal is received. The signal includes at least one codeword modulated therein. The codeword is decoded by using a trellis diagram having a plurality of subtrellis diagrams, wherein the decoding includes deriving a codeword candidate for each of the subtrellis diagrams, and selecting one of the derived codeword candidates as the decoded codeword.</p>
<p id="p-0014" num="0013">According to another aspect of the invention, a communication device is disclosed for processing a signal comprising a receiver and a decoder. The receiver receives the signal including at least one codeword modulated therein. The decoder decodes the codeword by using a trellis diagram having a plurality of subtrellis diagrams. The decoder includes a plurality of subdecoding units to derive a codeword candidate for each of the subtrellis diagrams and to select one of the derived codeword candidates as the decoded codeword.</p>
<p id="p-0015" num="0014">According to another aspect of the invention, a method is disclosed for processing a signal in which a signal is received that includes at least one codeword modulated therein. A decoding mode is selected for the codeword. The decoding mode is based on a plurality of modulation modes for the codeword. The codeword is decoded based on the selected decoding mode using a trellis diagram based on the selected decoding mode.</p>
<p id="p-0016" num="0015">According to another aspect of the invention, an apparatus is disclosed comprising a receiver and a decoder. The receiver codeword data. The decoder is selectively configurable to decode the codeword data in at least one of a low-rate CCK modulation mode, high-rate CCK modulation mode, differential quadrature phase shift (DQPSK) Barker sequence modulation mode, and differential binary phase shift keying (DBPSK) Barker sequence modulation mode.</p>
<p id="p-0017" num="0016">According to another aspect of the invention, a receiver is disclosed for processing a signal in a CCK modulation mode comprising a plurality of processing structures for receiving codeword data contained in the signal and deriving from the codeword data a plurality of respective codewords from respective subtrellis diagrams within a single trellis diagram. The receiver also includes a selecting circuit for selecting one of the plurality of the respective codewords as a decoded codeword output.</p>
<p id="p-0018" num="0017">According to another aspect of the invention, a method of processing data in a system employing a CCK modulation scheme is disclosed. For the method, a first plurality of codewords is produced in a high-rate CCK modulation mode. A second plurality of codewords is produced in a low-rate CCK modulation mode, and a codeword output is obtained from at least one of the first and the second plurality of codewords.</p>
<p id="p-0019" num="0018">According to another aspect of the invention, an apparatus for processing data in a system employing a CCK modulation scheme is disclosed comprising a first circuit, second circuit, and a selector. The first circuit produces a first plurality of codewords in a high-rate CCK modulation mode. The second circuit produces a plurality of codewords in a low-rate CCK modulation mode. The selector obtains a desired codeword output in response to at least one of: 1) the first plurality of codewords and 2) the second plurality of codewords.</p>
<p id="p-0020" num="0019">According to another aspect of the invention, a method of processing a signal in a selected CCK modulation mode is disclosed. For the method, a signal is received to be processed. The received signal is processed in the selected CCK modulation mode utilizing a CCK trellis diagram for representing a plurality of associated CCK codewords of the signal, and wherein a selected one of the plurality of associated CCK codewords is represented as a path in the CCK trellis.</p>
<p id="p-0021" num="0020">Other features and advantages of the invention will be apparent from the accompanying drawings, and from the detailed description, which follows below.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0022" num="0021">The accompanying drawings, which are incorporated in, and constitute a part of, this specification illustrate exemplary implementations of the invention and, together with the detailed description, server to explain the principles of the invention. In the drawings,</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an exemplary block diagram of a transmitter and receiver in which the invention can be implemented;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 2</figref> illustrates one example detailed block diagram of the receiver in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an exemplary high-rate CCK trellis diagram;</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an exemplary low-rate CCK trellis diagram;</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIGS. 5A and 5B</figref> illustrate exemplary Barker sequence trellis diagram for DQPSK and DBPSK modulation, respectively;</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 6</figref> illustrates exemplary concatenated trellis diagrams;</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an exemplary subtrellis diagram;</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 8</figref> illustrates one example detailed block diagram of the block code encoder of <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 9</figref> illustrates an exemplary block diagram of a subdecoding unit for the subtrellis diagram of <figref idref="DRAWINGS">FIG. 7</figref>;</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 10</figref> illustrates an exemplary block diagram of the decoder in <figref idref="DRAWINGS">FIG. 1</figref> for decoding CCK codewords over multiple subtrellis diagrams;</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 11</figref> illustrates an exemplary block diagram of the decoder of <figref idref="DRAWINGS">FIG. 1</figref> for decoding CCK codewords and Barker sequence codewords over multiple subtrellis diagrams; and</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 12</figref> illustrates one example block diagram of the timing/phase tracking module in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0035" num="0034">Reference will now be made in detail to implementations of the invention, examples of which are illustrated in the accompanying drawings. Wherever possible, the same reference numbers will be used throughout the drawings to refer to the same or like parts.</p>
<p id="p-0036" num="0035">The following implementations allow block codes contained in signal to be decoded using a single decoder and trellis diagram. The signal can include at least one block code, and the block code can be modulated using at least one of a plurality modulation modes. The block code contained in the signal can be selectively decoded based on the modulation mode for the block code using a trellis diagram corresponding to the modulation mode for the block code. For example, the modulation mode can be a low and high-rate CCK modulation mode or a DQPSK Barker sequence modulation mode and a DBPSK Barker sequence modulation mode. In this manner, multiple types of block codes can be decoded using a single decoder and trellis diagram.</p>
<p id="p-0037" num="0036">In the following description, a “block code” can refer to any type of block code having a collection of codewords of a fixed length. For example, a CCK codeword can be one type of block code of length 8 thereby providing 256 possible combinations of codewords for high-rate CCK modulation. Other types of codewords are described below. Additionally, source information bits can be mapped to one codeword within a specific block code. For example, 8 bits of source information can be mapped to a high-rate CCK codeword, which can have up to 256 distinct codewords for high-rate CCK modulated codes.</p>
<heading id="h-0007" level="1">Exemplary Block Codewords</heading>
<p id="p-0038" num="0037">The following implementations and examples are described for decoding block codes such as CCK codes and Barker sequence codes using a trellis diagram for each type of code. However, any type of block code can be decoded using a trellis diagram representing all possible combinations of codewords for that type of block code.</p>
<p id="p-0039" num="0038">In the following description, a CCK codeword can be a block codeword having a code length of eight (8) at a chip rate of f<sub>chip</sub>, and can be denoted as c=(c<sub>1</sub>, c<sub>2</sub>, c<sub>3</sub>, c<sub>4</sub>, c<sub>5</sub>, c<sub>6</sub>, c<sub>7</sub>, c<sub>8</sub>) where c<sub>l </sub>represents the ith symbol of the CCK codeword c. Each symbol can represent a complex number. Nevertheless, the following implementations are not limited to a block codeword length of 8 and can be implemented for codewords having any block codeword length such that a trellis diagram is provided with a path for each possible combination of the codeword. The following formula can be used to derive the CCK codeword c at a 5.5 Mbit/s low-rate modulation and a 11 Mbit/s high-rate modulation:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>c=</i>(e<sup>j(φ</sup><sub>1</sub>+φ<sub>2</sub>+φ<sub>3</sub>+φ<sub>4</sub>), e<sup>j(φ</sup><sub>1</sub>+φ<sub>3</sub>+φ<sub>4</sub>), e<sup>j(φ</sup><sub>1</sub>+φ<sub>2</sub>+φ<sub>4</sub>),−e<sup>j(φ</sup><sub>1</sub>+φ<sub>4</sub>), e<sup>j(φ</sup><sub>1</sub>+φ<sub>2</sub>+φ<sub>3</sub>), e<sup>j(φ</sup><sub>1</sub>+φ<sub>3</sub>),−e<sup>j(φ</sup><sub>1</sub>+φ<sub>2</sub>), e<sup>jφ</sup><sub>1</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where φ<sub>i </sub>for i=1,2,3,4 belong to quadrature phase-shift keying (QPSK) phases, i.e., φ<sub>i</sub>ε{0,π/2,π,3π/2} for i=1,2,3,4. Thus, there are two types of CCK modulation modes or types: high-rate CCK modulation and low-rate CCK modulation.
</p>
<heading id="h-0008" level="1">High-rate CCK Modulation</heading>
<p id="p-0040" num="0039">For high-rate CCK modulation, 8 information bits (d<sub>0 </sub>to d<sub>7</sub>) are carried by each transmitted codeword. In this manner, 256 possible codeword combinations can be modulated in a signal. The codewords can be generated by having φ<sub>1</sub>, φ<sub>2</sub>, φ<sub>3</sub>, and φ<sub>4 </sub>range over all possible QPSK phases, i.e.,φ<sub>1</sub>ε{0,π/2,π, 3π/2{, for i=1,2,3,4. The four phases φ<sub>1</sub>, φ<sub>2</sub>, φ<sub>3</sub>, and φ<sub>4 </sub>can be encoded by the 8 information bits d<sub>0 </sub>to d<sub>7</sub>. For example, φ<sub>1 </sub>may be encoded from (d<sub>0</sub>,d<sub>1</sub>) based on the DQPSK modulation scheme, and φ<sub>2</sub>, φ<sub>3</sub>, and φ<sub>4 </sub>may be encoded from (d<sub>2</sub>,d<sub>3</sub>), (d<sub>4</sub>,d<sub>5</sub>), and (d<sub>6</sub>,d<sub>7</sub>), respectively, based on the QPSK modulation scheme.</p>
<heading id="h-0009" level="1">Low-rate CCK Modulation</heading>
<p id="p-0041" num="0040">For the low-rate CCK modulation, 4 information bits (d<sub>0 </sub>to d<sub>3</sub>) can be carried by each transmitted codeword. In this manner, 16 codeword combinations can be provided for low-rate CCK modulation. The 16 possible codewords can be generated with φ<sub>1</sub>, φ<sub>2</sub>, φ<sub>3</sub>, and φ<sub>4 </sub>ranging the possible phases specified by the following phase values:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>φ<sub>1 </sub>ε{0,π/2,π,3π/2}<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>φ<sub>2 </sub>ε{π/2,3π/2}<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>φ<sub>3 </sub>=0<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>φ<sub>4 </sub>ε{0,π}<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0042" num="0041">The four phases φ<sub>1</sub>, φ<sub>2</sub>, φ<sub>3</sub>, and φ<sub>4 </sub>are encoded by the 4 information bits d<sub>0 </sub>to d<sub>3</sub>. For example, φ<sub>1 </sub>may be encoded from (d<sub>0</sub>,d<sub>1</sub>) based on DQPSK modulation, and φ<sub>2</sub>, φ<sub>3</sub>, and φ<sub>4 </sub>can be encoded from (d<sub>2</sub>,d<sub>3</sub>) based on the following equations:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>φ<sub>2 </sub>=(d<sub>2</sub>×π)+π/2<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>φ<sub>3 </sub>=0<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>φ<sub>4 </sub>=d<sub>3</sub>×π<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0043" num="0042">Thus, each CCK codeword can include 8 complex pulses (“chips”) to carry 8 bits of information at a high-rate of 11 Mbit/s for transmitting the source data. At a low-rate of 5.5 Mbit/s, 4 bits of information can be mapped to the CCK codeword for transmitting the source data.</p>
<heading id="h-0010" level="1">Phase Representation</heading>
<p id="p-0044" num="0043">The set of all possible phases Ω={0,π/2,π,3π/2} for a CCK codeword can be represented as a set of integers Z<sub>4</sub>={0,1,2,3}. The mapping from Z<sub>4 </sub>to Ω can then be defined as λ(u)=uπ/2, for u ε Z<sub>4</sub>. A phase addition is then equivalent to a modulo-4 addition in Z<sub>4</sub>. If the following is set for u<sub>1 </sub>to u<sub>4</sub>,
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>u<sub>1</sub>=2φ<sub>1</sub>/π<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>u<sub>2</sub>=2φ<sub>2</sub>/π<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>u<sub>3</sub>=2φ<sub>3</sub>/π<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>u<sub>4</sub>=2φ<sub>4</sub>/π<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
then u<sub>1</sub>,u<sub>2</sub>, u<sub>3</sub>, u<sub>4 </sub>ε Z<sub>4</sub>. In such a manner, a CCK codeword can be represented as:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>c=(e</i><sup>jp</sup><sub>1</sub>π/<b>2</b>, e<sup>jp</sup><sub>2</sub>π/<b>2</b>, e<sup>jp</sup><sub>3</sub>π/<b>2</b>, e<sup>jp</sup><sub>4</sub>π/<b>2</b>, e<sup>jp</sup><sub>5</sub>π/<b>2</b>, e<sup>jp</sup><sub>6</sub>π/<b>2</b>, e<sup>jp</sup><sub>7</sub>π/<b>2</b>, e<sup>jp</sup><sub>8</sub>π/<b>2</b>)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where p=(p<sub>1</sub>,p<sub>2</sub>,p<sub>3</sub>,p<sub>4</sub>,p<sub>5</sub>,p<sub>6</sub>,p<sub>7</sub>,p<sub>8</sub>) is the phase representation of the codeword and can be determined by:
</p>
<p id="p-0045" num="0044">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
<mrow>
  <mi>p</mi>
  <mo>=</mo>
  <mrow>
    <mrow>
      <mrow>
        <mo>(</mo>
        <mrow>
          <msub>
            <mi>u</mi>
            <mn>1</mn>
          </msub>
          <mo>,</mo>
          <msub>
            <mi>u</mi>
            <mn>2</mn>
          </msub>
          <mo>,</mo>
          <msub>
            <mi>u</mi>
            <mn>3</mn>
          </msub>
          <mo>,</mo>
          <msub>
            <mi>u</mi>
            <mn>4</mn>
          </msub>
        </mrow>
        <mo>)</mo>
      </mrow>
      <mo>⁡</mo>
      <mrow>
        <mo>[</mo>
        <mtable>
          <mtr>
            <mtd>
              <mn>11111111</mn>
            </mtd>
          </mtr>
          <mtr>
            <mtd>
              <mn>10101010</mn>
            </mtd>
          </mtr>
          <mtr>
            <mtd>
              <mn>11001100</mn>
            </mtd>
          </mtr>
          <mtr>
            <mtd>
              <mn>11110000</mn>
            </mtd>
          </mtr>
        </mtable>
        <mo>]</mo>
      </mrow>
    </mrow>
    <mo>+</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <mn>0</mn>
        <mo>,</mo>
        <mn>0</mn>
        <mo>,</mo>
        <mn>0</mn>
        <mo>,</mo>
        <mn>2</mn>
        <mo>,</mo>
        <mn>0</mn>
        <mo>,</mo>
        <mn>0</mn>
        <mo>,</mo>
        <mn>2</mn>
        <mo>,</mo>
        <mn>0</mn>
      </mrow>
      <mo>)</mo>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
<br/>
where all the additions are modulo-4 additions.
</p>
<heading id="h-0011" level="1">Barker Sequence Code Modulation</heading>
<p id="p-0046" num="0045">The following implementations can be used to modulate codes using a Direct Sequence Spread Spectrum (DS-SS) modulation technique in which user data can be represented by a sequence of pulses or “chips” at a much higher chip rate than the original data bits. For DS-SS, and 11-chip Barker sequence can be used according to DQPSK and DBPSK modulation techniques. The Barker sequence can be formed using the following sequence codes:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>+1, −1, +1, +1, −1, +1, +1, +1, −1, −1, −1<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0047" num="0046">The leftmost chip “+1” can be outputted first in time. For example, the first chip can be aligned at the start of a transmitted DQPSK or DBPSK signal in which the signal period is 11 chips. The modulated Barker sequence can represent a “Barker codeword.” For DQPSK modulation, there are four possible Barker codeword combinations, which are as follows:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(+1, −1, +1, +1, −1, +1, +1, +1, −1, −1, −1)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(<i>+j, −j, +j, +j, −j, +j, +j, +j, −j, −j, −j</i>)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(−1, +1, −1, −1, +1, −1, −1, −1, +1, +1, +1)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
and for DBPSK modulation there are two possible Barker codeword combinations, which are the first and third codewords as shown above.
</p>
<p id="p-0048" num="0047">The above block codes for CCK codewords and Barker codewords can be represented in separate or combined trellis diagrams, which is described in further detail below. The decoder described herein can decode CCK codewords and Barker codewords contained or embedded in a received signal using one or more trellis diagrams.</p>
<heading id="h-0012" level="1">Exemplary Communication System</heading>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an exemplary block diagram of a transmitter <b>50</b> and a receiver <b>100</b> in which the invention can be implemented. The transmitter <b>50</b> and receiver <b>100</b> can be implemented for CCK codes and Barker sequence modulated codes. The transmitter <b>50</b> includes a block code encoder <b>20</b>, signal processing logic <b>30</b>, and radio frequency (RF) transmitter <b>40</b>.</p>
<p id="p-0050" num="0049">Referring to FIG <b>1</b>. the block code encoder <b>20</b> receives data bits from a message source <b>10</b> and can encode the data bits into a low or high-rate CCK codeword or a DQPSK or DBPSK Barker sequence codeword for modulation in a carrier signal. The encoder <b>20</b> can use, e.g., the above formulas to encode the data bits into a CCK codeword c having eighty symbols (i.e., complex numbers) represented as (c<sub>1</sub>, c<sub>2</sub>, c<sub>3</sub>, c<sub>4</sub>, c<sub>5</sub>, c<sub>6</sub>, c<sub>7</sub>, c<sub>8</sub>} for low and high-rate CCK codewords, or into one of the four Barker sequence codewords for DQPSK modulation or one of the two Barker sequence codewords for BBPSK modulation.</p>
<p id="p-0051" num="0050">The encoder <b>20</b> can output two symbols (c<sub>2k−1 </sub>and c<sub>2k</sub>) of a codeword, which can by symbols for even and odd phases of the codeword. The encoder <b>20</b> is described in further detail regarding <figref idref="DRAWINGS">FIG. 8</figref>. The signal processing logic <b>30</b> can include any number of processing logic to convert the individual symbols into an analog component and to generate a carrier signal for modulating the block codeword having signal properties derived from the analog components. The RF transmitter <b>40</b> amplifies the carrier signal for transmitting the signal to the receiver <b>100</b>. For a CCK codeword, the carrier signal can be modulated and transmitted, e.g., at a high-rate of 11 Mbit/s or a low-rate 5 Mbit/s in accordance with the requirements of IEEE 802.11b for WLANs.</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 2</figref> illustrates a detailed block diagram of the receiver <b>100</b> of <figref idref="DRAWINGS">FIG. 1</figref>. The receiver <b>100</b> includes a RF receiver <b>101</b>, analog-to-digital (A/D) converter <b>102</b>, interpolator <b>103</b>, phase compensator <b>104</b>, chip matched filter <b>105</b>, down sampler <b>106</b>, block code decoder <b>108</b>, channel estimator <b>109</b>, and timing/phase tracking module <b>110</b>.</p>
<p id="p-0053" num="0052">Referring to <figref idref="DRAWINGS">FIG. 2</figref>, the RF receiver <b>101</b> receives the modulated carrier signal from the RF transmitter <b>40</b> of the transmitter <b>50</b>. The receiver <b>101</b> can receive a carrier signal being modulated with CCK codes or Barker sequence codes, as described above. The received signal from RF receiver <b>101</b> can be sampled by a free running clock (not shown). Each sampled received signal can include an in-phase (I) component and a quadrature (Q) component, which can be represented by a complex number. For example, a received signal r<sub>n </sub>can be denoted as a sampled signal of r(t). The received signal r<sub>n </sub>can then be represented mathematically as r<sub>n</sub>=Re{r<sub>n</sub>}+jIm{r<sub>n</sub>}, where the real part of r<sub>n </sub>represents the I component and the imaginary part represents the Q component.</p>
<p id="p-0054" num="0053">The A/D converter <b>102</b> converts the received signal into a discrete-time digital signal for processing by interpolator <b>103</b>. The interpolator <b>103</b> can compensate for timing drifts between a local sampling clock and a transmitted clock, and can operate at a rate f<sub>sample</sub>. For example, if the timing difference between the two clocks is larger than a certain value, the interpolator <b>103</b> can adjust the sampling phase of the received signal so that the sampled point can be at proper positions. The resolution of the interpolator <b>103</b> can be configured for T<sub>res</sub>=T<sub>sample</sub>/μ, where μ is a positive interger and T<sub>sample</sub>=1/f<sub>sample</sub>. The output from interpolator <b>103</b> can be expressed approximately as r(nT<sub>sample</sub>+mT<sub>res</sub>), where m is an integer which is controlled by the timing/phase tracking module <b>110</b>.</p>
<p id="p-0055" num="0054">The phase compensator <b>104</b> compensates for a phase error Δθ. The phase compensator <b>104</b> can operate at a rate f<sub>sample</sub>. The phase error Δη can be obtained from the timing/phase tracking <b>110</b>, which is described in further detail below. In one example, a complex-number multiplier can be used to remove the phase error Δθ by multiplying the received signal e<sup>−jΔθ</sup>. The chip matched filter <b>105</b> operates as a finite-impulse response (FIR) filter for filtering the signal from the phase compensator <b>104</b>, and can operate at rate f<sub>sample</sub>. The down sampler <b>106</b>, which can operate at a rate f<sub>chip</sub>, down samples the signal from the chip matched filter <b>105</b> by a factor of R. This results in a signal with a sampling rate f<sub>chip</sub>.</p>
<p id="p-0056" num="0055">The block code decoder <b>108</b> receives the down sampled signal from the down sampler <b>106</b> for decoding codewords contained in the down sampled signal or received signal. The decoder <b>108</b>, which can operate at a rate of f<sub>chip</sub>, can decode CCK codewords and Barker codewords contained in the down sampled signal using a trellis diagram. As described in further detail below, a single trellis diagram can have embedded a plurality of trellis diagrams wherein each trellis diagram can be used for decoding a particular type of block code, e.g., low and high-rate CCK codes and DQPSK and DBPSK Barker codes. Accordingly, a single decoder <b>108</b> can be configured or a mode selected for decoding high-rate CCK codes, low-rate CCK codes, DQPSK Barker sequence codes, and DBPSK Barker sequence codes.</p>
<p id="p-0057" num="0056">The timing/phase tracking module <b>110</b>, which can operate at rate f<sub>sample</sub>, tracks variations of both timing and phase errors. That is, because a sampling clock frequency is determined from a free running clock (not shown), timing drifts can occur between remote and local clocks during decoding or detection of blocks codes. Furthermore, due to frequency offset and random phase error, a received signal can suffer from a phase rotation in both constant and random fashions. The timing/phase tracking module <b>110</b> outputs a decision of the timing error back to the interpolator <b>103</b>, which can cause the sampling phase of the interpolator <b>103</b> to move forward the sampling point m (e.g., increase m by 1) or move backward the sampling point m (e.g., decrease m by 1) or stay at the current point (e.g., m remains unchanged) with the resolution of T<sub>res</sub>. The timing/phase tracking module <b>110</b> outputs a decision of the phase error back to the phase compensator <b>104</b>, which can cause the current compensating phase to increase Δ0, decrease Δθ, or remain the same. To make such decisions, the timing/phase tracking module <b>110</b> uses decoded codewords from the block codeword decoder <b>108</b> and the output of the channel estimator <b>109</b>, which provides the estimate of the channel impulse response.</p>
<heading id="h-0013" level="1">Exemplary Trellis Diagrams</heading>
<p id="p-0058" num="0057">The following exemplary trellis diagrams represent trellis diagram for CCK codes and Barker sequence codes. Such exemplary trellis diagrams can be used to represent the set of all possible codeword combinations for a particular type of code. Data relating to the following trellis diagrams can be stored in one or more memory devices and used by decoder <b>108</b> to perform the decoding techniques described herein.</p>
<p id="p-0059" num="0058">Each trellis diagram includes a plurality of paths traversing any number of branches between states in the trellis diagram. Each path from an initial state to a final state can represent a codeword combination. Thus, a trellis diagram can be provided for any number of paths to represent any number of codeword combinations. The trellis diagrams can also depict state transitions of a finite state machine with its state s<sub>k </sub>displayed at each time k. Each possible state transition from s<sub>k−1 </sub>to s<sub>k </sub>is represented by a branch in the trellis diagram. As a result, a trellis diagram can provide a one-to-one correspondence between a path in the trellis diagram and a possible codeword combination.</p>
<heading id="h-0014" level="1">High-rate CCK Trellis Diagram</heading>
<p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an exemplary high-rate CCK trellis diagram. This diagram represents possible high-rate CCK codeword combinations. In the example of <figref idref="DRAWINGS">FIG. 3</figref>, the values of u<sub>1</sub>,u<sub>2</sub>, u<sub>3</sub>, and u<sub>4 </sub>can take all four possible values in Z<sub>4 </sub>in which 256 codeword combinations are possible for high-rate CCK modulation.</p>
<p id="p-0061" num="0060">Referring to <figref idref="DRAWINGS">FIG. 3</figref>, the high-rate CCK trellis diagram contains four sections <b>302</b>, <b>304</b>, <b>306</b>, <b>308</b> and each section can contain pairs of symbols of the CCK codeword. The first section <b>302</b> correspond to the phase representation (p<sub>1</sub>, p<sub>2</sub>) of the codeword. The second section <b>304</b> corresponds to the phase representation (p<sub>3</sub>, p<sub>4</sub>) of the codeword. The third section <b>306</b> corresponds to the phase representation (p<sub>5</sub>, p<sub>6</sub>) of the codeword. The fourth section <b>308</b> corresponds to the phase representation (p<sub>7</sub>, p<sub>8</sub>) of the codeword. Each branch in each section can represent two CCK codeword symbols. Thus, all paths starting from the left zero state <b>301</b> (“initial state <b>301</b>”) and terminating at the right zero state <b>309</b> (“final state <b>309</b>”) correspond to all the possible CCK codeword combinations. The trellis diagram in <figref idref="DRAWINGS">FIG. 3</figref> can represent 256 distinct paths that start from the initial state <b>301</b> and terminate at the final state <b>309</b> for each possible high-rate CCK codeword combination.</p>
<p id="p-0062" num="0061">The three intermediate states, s<sub>1</sub>, s<sub>2</sub>, and s<sub>3</sub>, (<b>303</b>, <b>305</b>, and <b>307</b>) can be represented as s<sub>1</sub>=(a<sub>1</sub>, a<sub>2</sub>), s<sub>2</sub>=(a<sub>3</sub>, a<sub>2</sub>), and s<sub>3</sub>=(a<sub>4</sub>, a<sub>2</sub>). The variables a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, and a<sub>4 </sub>can be functions of u<sub>1</sub>, u<sub>2</sub>, u<sub>3</sub>, and u<sub>4 </sub>and defined by:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>a</i><sub>1</sub><i>=u</i><sub>1</sub><i>+u</i><sub>2</sub><i>+u</i><sub>3</sub><i>+u</i><sub>4</sub><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>a<sub>2</sub>=u<sub>2</sub><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>a<sub>3</sub>=u<sub>3</sub><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>a<sub>4</sub>=u<sub>1</sub><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where all the additions are modulo-4 additions. There can be 16 possible values for each s<sub>k</sub>, k=1,2,3, as indicated in <figref idref="DRAWINGS">FIG. 3</figref>. The initial state <b>301</b> is defined as s<sub>0</sub>=0 (<b>301</b>) and the final state is defined as s<sub>4</sub>=0 (<b>309</b>).
</p>
<p id="p-0063" num="0062">As shown in <figref idref="DRAWINGS">FIG. 3</figref>, each branch is labeled by two CCK symbols. For example, the branch between s<sub>0 </sub>and s<sub>1 </sub>is labeled by (p<sub>1</sub>, p<sub>2</sub>) or equivalently (c<sub>1</sub>, c<sub>2</sub>)=(e<sup>jp,π/2</sup>,e<sup>jp2π/2</sup>). In this example, each branch is labeled by using phase representation. The branch label (p<sub>2k−1</sub>,p<sub>2k</sub>) on the branch between two states s<sub>k−1 </sub>and state s<sub>k </sub>is a function of s<sub>k−1 </sub>and s<sub>k </sub>for k=1,2,3,4. In particular, the functions can be represented as follows:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(<i>p</i><sub>1</sub><i>,p</i><sub>2</sub>)=(<i>a</i><sub>1</sub><i>,a</i><sub>1</sub>+3<i>a</i><sub>2</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(<i>p</i><sub>3</sub><i>,p</i><sub>4</sub>)=(<i>a</i><sub>1</sub>+3<i>a</i><sub>3</sub><i>,a</i><sub>1</sub>+3<i>a</i><sub>2</sub>+3<i>a</i><sub>3</sub>+2)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(<i>p</i><sub>5</sub><i>,p</i><sub>6</sub>)=(<i>a</i><sub>2</sub><i>+a</i><sub>3</sub><i>+a</i><sub>4</sub><i>,a</i><sub>3</sub><i>+a</i><sub>4</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where all the additions are modulo-4 additions.
</p>
<heading id="h-0015" level="1">Low-rate CCK Trellis Diagram</heading>
<p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an exemplary low-rate CCK trellis diagram. This diagram represents possible low-rate CCK codeword combinations. In the example of <figref idref="DRAWINGS">FIG. 4</figref>, the values for u<sub>1</sub>, u<sub>2</sub>, u<sub>3</sub>, and u<sub>4</sub>, can be represented as u<sub>1</sub>ε{0,1,2,3}, u<sub>2</sub>ε {1, 3}, u<sub>3</sub>=0, and u<sub>4 </sub>ε {0,2}. This provides for 4×2×2=16 possible low-rate CCK codeword combinations. The three intermediate states, s<sub>1</sub>, s<sub>2</sub>, and s<sub>3 </sub>can be defined as s<sub>1</sub>=(a<sub>1</sub>, a<sub>2</sub>), s<sub>2</sub>=(a<sub>5</sub>, a<sub>2</sub>), s<sub>3</sub>=(a<sub>4</sub>, a<sub>2</sub>), where a<sub>1</sub>, a<sub>2</sub>, a<sub>4</sub>, and a<sub>5 </sub>are functions of u<sub>1</sub>, u<sub>2</sub>, u<sub>3</sub>, and u<sub>4</sub>, defined as:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>a</i><sub>1</sub><i>=u</i><sub>1</sub><i>+u</i><sub>2</sub><i>+u</i><sub>3</sub><i>+u</i><sub>4</sub><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>a<sub>2</sub>=u<sub>2</sub><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>a<sub>4</sub>=u<sub>1</sub><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>a</i><sub>5</sub>=(<i>u</i><sub>1</sub><i>+u</i><sub>3</sub><i>+u</i><sub>4</sub>) mode 2<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0065" num="0064">Referring to <figref idref="DRAWINGS">FIG. 4</figref>, a low-rate CCK trellis diagram can be embedded in a high-rate trellis diagram as shown by the solid lines, which represent paths for the low-rate CCK codeword combinations. The branch label (p<sub>2k−1</sub>, p<sub>2k</sub>) on the branch between state s<sub>k−1 </sub>and state s<sub>k </sub>is a function of s<sub>k−1 </sub>and s<sub>k </sub>for k=1,2,3,4. For example, the branch labels can be determined as follows:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(<i>p</i><sub>1</sub><i>,p</i><sub>2</sub>)=(<i>a</i><sub>1</sub><i>,a</i><sub>1</sub>+3<i>a</i><sub>2</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(<i>p</i><sub>3</sub><i>,p</i><sub>4</sub>)=(<i>a</i><sub>a</sub><i>,a</i><sub>1</sub>+3<i>a</i><sub>2</sub>+2)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(<i>p</i><sub>5</sub><i>,p</i><sub>6</sub>)=(<i>a</i><sub>2</sub><i>+a</i><sub>4</sub><i>,a</i><sub>4</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(<i>p</i><sub>7</sub><i>,p</i><sub>8</sub>)=(<i>a</i><sub>2</sub><i>+a</i><sub>4</sub>+2<i>,a</i><sub>4</sub>).<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0066" num="0065">As shown in <figref idref="DRAWINGS">FIG. 4</figref>, because the low-rate CCK trellis diagram can be embedded in the high-rate CCK trellis diagram, multi-mode decoding of codewords of different modulation modes can be implemented, as described in further detail below. For example, depending on the modulation mode for the codewords, certain states or branches can be disabled during decoding of the codeword. Thus, a decoder for decoding high-rate CCK codewords can also decode low-rate CCK codewords. The decoder can further be configured or a mode selected for decoding Barker codewords, as will be further described below.</p>
<heading id="h-0016" level="1">Barker Sequence Trellis Diagrams</heading>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIGS. 5A and 5B</figref> illustrate exemplary Barker sequence trellis diagrams for DQPSK and DBPSK modulation, respectively. The trellis diagrams shown in <figref idref="DRAWINGS">FIGS. 5A and 5B</figref> can also be embedded in a high-rate CCK trellis diagram such as that shown in <figref idref="DRAWINGS">FIG. 3</figref> or <b>4</b>. Accordingly, a single trellis diagram can be used for multiple types of codes in which the label on the branches for such a trellis diagram may correspond to different trellis diagrams for different types of codes. In the decoder, for example, a metric calculation can be performed for determining paths in the trellis diagram. This metric calculation can be the same for all types of codes.</p>
<p id="p-0068" num="0067">As described above, the 11-chip Barker sequence used for DQPSK and DBPSK modulation are: +1, −1, +1, +1, −1, +1, +1, +1, −1, −1, −1. The four possible Barker codewords for DQPSK modulation is: (+1, −1, +1, +1, −1, +1, +1, +1, −1, −1, −1); (+j, −j, +j, +j, −j, +j, +j, +j, −j, −j, −j); (−1, +1, −1, −1, +1, −1, −1, −1, +1, +1, +1) and (−j, +j, −j, −j, +j, −j, −j, −j, +j, +j, +j). The two possible Barker codewords for DBPSK modulation are the first and third codewords of the possible codeword combination noted above.</p>
<p id="p-0069" num="0068">The DQPSK and DBPSK Barker sequence trellis diagrams contain six sections. Each section can have two symbols and the last section can have one symbol. These Barker sequence trellis diagrams can be embedded in a high-rate CCK trellis diagram. As will be described in further detail below, a single decoder can be used to decode the different types of block codes using a single trellis diagram having paths for high and low-rate CCK codewords and Barker sequence codewords.</p>
<p id="p-0070" num="0069">For the Barker sequence trellis diagrams, there are four disjoint paths for DQPSK modulation (<figref idref="DRAWINGS">FIG. 5A</figref>) and two disjoint paths for DBPSK modulation (<figref idref="DRAWINGS">FIG. 5B</figref>) that start from the left zero state (“initial state”) and terminate at the right zero state (“final state”) for DQPSK and DBPSK modulation, respectively. By extending the length of the high-rate CCK trellis diagram, the DQPSK and DBPSK Barker sequence trellis diagrams can be embedded into the high-rate CCK trellis diagram of <figref idref="DRAWINGS">FIG. 3</figref> or <b>4</b>.</p>
<heading id="h-0017" level="1">Exemplary Decoding Algorithms</heading>
<p id="p-0071" num="0070">The following exemplary decoding algorithms can be implemented by decoder <b>108</b> in <figref idref="DRAWINGS">FIG. 1</figref>. As described in further detail below, the decoder <b>108</b> can decode CCK codes and Barker codes on additive white Gaussian noise (AWGN) channels, flat fading channels, and ISI channels. For purposes of explanation, the following algorithms are described with respect to CCK codes. Nevertheless, the following algorithms can be implemented for Barker sequence codes in the same manner.</p>
<heading id="h-0018" level="1">Decoding Algorithm for AWGN Channels</heading>
<p id="p-0072" num="0071">The set of all possible CCK codewords can be denoted as C in which <o ostyle="single">c</o>=( <o ostyle="single">c</o><sub>1</sub>, <o ostyle="single">c</o><sub>2</sub>, . . . , <o ostyle="single">c</o><sub>8</sub>) can represent a transmitted CCK codeword. For AWGN channels, the received signal y<sub>n </sub>from the chip matched filter <b>105</b> can be expressed as y<sub>n</sub>= <o ostyle="single">c</o><sub>n</sub>+η<sub>n </sub>where η<sub>n </sub>is the additive white Gaussian noise.</p>
<p id="p-0073" num="0072">To decode C, the decoder <b>108</b> can find a codeword c′ in C that is “nearest” to the received signal y<sub>n </sub>based on a distance measurement such as, for example, the squared Euclidean distance of</p>
<p id="p-0074" num="0073">
<maths id="MATH-US-00002" num="00002">
<math overflow="scroll">
<mrow>
  <msup>
    <mi>c</mi>
    <mi>′</mi>
  </msup>
  <mo>=</mo>
  <mrow>
    <munder>
      <mi>arg</mi>
      <mi>c</mi>
    </munder>
    <mo>⁢</mo>
    <mstyle>
      <mspace width="0.3em" height="0.3ex"/>
    </mstyle>
    <mo>⁢</mo>
    <mrow>
      <munder>
        <mi>min</mi>
        <mrow>
          <mi>c</mi>
          <mo>∈</mo>
          <mi>C</mi>
        </mrow>
      </munder>
      <mo>⁢</mo>
      <mrow>
        <munderover>
          <mo>∑</mo>
          <mrow>
            <mi>n</mi>
            <mo>=</mo>
            <mn>1</mn>
          </mrow>
          <mn>8</mn>
        </munderover>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.3em" height="0.3ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mrow>
          <msup>
            <mrow>
              <mo></mo>
              <mrow>
                <msub>
                  <mi>y</mi>
                  <mi>n</mi>
                </msub>
                <mo>-</mo>
                <msub>
                  <mi>c</mi>
                  <mi>n</mi>
                </msub>
              </mrow>
              <mo></mo>
            </mrow>
            <mn>2</mn>
          </msup>
          <mo>.</mo>
        </mrow>
      </mrow>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
<br/>
In one example, the computation complexity for determining c′ is approximately equal to |C|, where |C| denotes the number of codewords in C. This, however, requires evaluating 256 possible CCK codewords for high-rate CCK modulation by computing, e.g., the squared Euclidean distance between each CCK codeword and the received signal.
</p>
<p id="p-0075" num="0074">Such a process can be avoided by using a trellis diagram, e.g., the trellis diagram as shown in <figref idref="DRAWINGS">FIG. 3</figref>, and finding the minimum-distance path in the trellis diagram using Viterbi decoding techniques. For example, referring to <figref idref="DRAWINGS">FIG. 3</figref>, the variable S<sub>k </sub>can represent the set of all possible states s<sub>k </sub>in kth section of the CCK trellis diagram. Associated with each state s<sub>k</sub>ε S<sub>k</sub>, is a path metric M<sub>k</sub>(s<sub>k</sub>) that is stored in a memory. This path metric can represent the minimum distance of the path and can be referred to as the “surviving path.” The surviving path terminates at s<sub>k </sub>with the initial condition M<sub>0</sub>(s<sub>0</sub>)=0. In addition, for each state s<sub>k</sub>ε S<sub>k</sub>, the path information for the surviving path can be stored, which contains the labels associated with the branches on the surviving path. Then, for k=0,1,2,3, the path metric of state s<sub>k+1 </sub>can be obtained as:</p>
<p id="p-0076" num="0075">
<maths id="MATH-US-00003" num="00003">
<math overflow="scroll">
<mrow>
  <mrow>
    <msub>
      <mi>M</mi>
      <mrow>
        <mi>k</mi>
        <mo>+</mo>
        <mn>1</mn>
      </mrow>
    </msub>
    <mo>⁡</mo>
    <mrow>
      <mo>(</mo>
      <msub>
        <mi>s</mi>
        <mrow>
          <mi>k</mi>
          <mo>+</mo>
          <mn>1</mn>
        </mrow>
      </msub>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mrow>
      <munder>
        <mi>min</mi>
        <mrow>
          <mrow>
            <mo>{</mo>
            <msub>
              <mi>s</mi>
              <mi>k</mi>
            </msub>
            <mo>}</mo>
          </mrow>
          <mo>-&gt;</mo>
          <msub>
            <mi>s</mi>
            <mrow>
              <mi>k</mi>
              <mo>+</mo>
              <mn>1</mn>
            </mrow>
          </msub>
        </mrow>
      </munder>
      <mo>⁢</mo>
      <mrow>
        <mrow>
          <mo>(</mo>
          <mrow>
            <mrow>
              <msub>
                <mi>M</mi>
                <mi>k</mi>
              </msub>
              <mo>⁡</mo>
              <mrow>
                <mo>(</mo>
                <msub>
                  <mi>s</mi>
                  <mi>k</mi>
                </msub>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>+</mo>
            <mrow>
              <msub>
                <mi>B</mi>
                <mi>k</mi>
              </msub>
              <mo>⁡</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <msub>
                    <mi>s</mi>
                    <mi>k</mi>
                  </msub>
                  <mo>,</mo>
                  <msub>
                    <mi>s</mi>
                    <mrow>
                      <mi>k</mi>
                      <mo>+</mo>
                      <mn>1</mn>
                    </mrow>
                  </msub>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
          </mrow>
          <mo>)</mo>
        </mrow>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mi>for</mi>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mi>all</mi>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>⁢</mo>
        <msub>
          <mi>s</mi>
          <mrow>
            <mi>k</mi>
            <mo>+</mo>
            <mn>1</mn>
          </mrow>
        </msub>
      </mrow>
    </mrow>
    <mo>∈</mo>
    <msub>
      <mi>S</mi>
      <mrow>
        <mi>k</mi>
        <mo>+</mo>
        <mn>1</mn>
      </mrow>
    </msub>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0077" num="0076">The minimization determination is taken over all the possible proceeding states {s<sub>k</sub>} that connect to state s<sub>k+1</sub>, and B<sub>k</sub>(s<sub>k</sub>, s<sub>k+1</sub>) denotes the branch metric of the branch between state s<sub>k </sub>and state s<sub>k+1 </sub>and is formed by summing a square of a magnitude of a first term and a square of a magnitude of a second term. The first term is the summation of a first received signal and a minus value of the first element of the branch label on the branch between s<sub>k </sub>and s<sub>k+1</sub>. The second term is the summation of a second received signal and a minus value of the second element of the branch label on the branch between s<sub>k </sub>and s<sub>k+1</sub>. Such an algorithm or process outputs the decoded block codeword stored in the surviving path that terminates at the right zero state s<sub>4 </sub>in the CCK trellis diagram.</p>
<heading id="h-0019" level="1">Decoding Algorithm for Flat Fading Channels</heading>
<p id="p-0078" num="0077">For flat fading channels, <o ostyle="single">c</o>=( <o ostyle="single">c</o><sub>1</sub>, <o ostyle="single">c</o><sub>2</sub>, . . . , <o ostyle="single">c</o><sub>8</sub>) represents the transmitted CCK codeword, and the received signal the chip matched filter <b>105</b> can be expressed as:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>n</sub><i>=h* <o ostyle="single">c</o></i><sub>n</sub>+ηn<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where h is a complex-value fading gain for the flat fading channel and η<sub>n </sub>is the additive white Gaussian noise, and “*” denotes a complex conjugate operator.
</p>
<p id="p-0079" num="0078">Referring to the trellis diagram of <figref idref="DRAWINGS">FIG. 3</figref>, the path metric of state s<sub>k+1 </sub>can be obtained as:</p>
<p id="p-0080" num="0079">
<maths id="MATH-US-00004" num="00004">
<math overflow="scroll">
<mrow>
  <mrow>
    <msub>
      <mi>M</mi>
      <mrow>
        <mi>k</mi>
        <mo>+</mo>
        <mn>1</mn>
      </mrow>
    </msub>
    <mo>⁡</mo>
    <mrow>
      <mo>(</mo>
      <msub>
        <mi>s</mi>
        <mrow>
          <mi>k</mi>
          <mo>+</mo>
          <mn>1</mn>
        </mrow>
      </msub>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mrow>
      <munder>
        <mi>min</mi>
        <mrow>
          <mrow>
            <mo>{</mo>
            <msub>
              <mi>s</mi>
              <mi>k</mi>
            </msub>
            <mo>}</mo>
          </mrow>
          <mo>-&gt;</mo>
          <msub>
            <mi>s</mi>
            <mrow>
              <mi>k</mi>
              <mo>+</mo>
              <mn>1</mn>
            </mrow>
          </msub>
        </mrow>
      </munder>
      <mo>⁢</mo>
      <mrow>
        <mrow>
          <mo>(</mo>
          <mrow>
            <mrow>
              <msub>
                <mi>M</mi>
                <mi>k</mi>
              </msub>
              <mo>⁡</mo>
              <mrow>
                <mo>(</mo>
                <msub>
                  <mi>s</mi>
                  <mi>k</mi>
                </msub>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>+</mo>
            <mrow>
              <msub>
                <mi>B</mi>
                <mi>k</mi>
              </msub>
              <mo>⁡</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <msub>
                    <mi>s</mi>
                    <mi>k</mi>
                  </msub>
                  <mo>,</mo>
                  <msub>
                    <mi>s</mi>
                    <mrow>
                      <mi>k</mi>
                      <mo>+</mo>
                      <mn>1</mn>
                    </mrow>
                  </msub>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
          </mrow>
          <mo>)</mo>
        </mrow>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mi>for</mi>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mi>all</mi>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>⁢</mo>
        <msub>
          <mi>s</mi>
          <mrow>
            <mi>k</mi>
            <mo>+</mo>
            <mn>1</mn>
          </mrow>
        </msub>
      </mrow>
    </mrow>
    <mo>∈</mo>
    <msub>
      <mi>S</mi>
      <mrow>
        <mi>k</mi>
        <mo>+</mo>
        <mn>1</mn>
      </mrow>
    </msub>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0081" num="0080">The minimization determination can be taken over all the possible proceeding states {s<sub>k</sub>} that connect to state s<sub>k+1</sub>, and B<sub>k</sub>(s<sub>k</sub>,s<sub>k+1</sub>) denotes the branch metric of the branch between state s<sub>k </sub>and state s<sub>k+1 </sub>and is formed by summing a square of a magnitude of a first term and a square of a magnitude of a second term. The first term is the summation of the following items: a first received signal and a minus product of the first element of the branch label on the branch between s<sub>k </sub>and s<sub>k+1 </sub>and an estimated fading gain. The second term is the summation of the following items: a second received signal and a minus product of the second element of the branch label on the branch between s<sub>k </sub>and s<sub>k+1 </sub>and an estimated fading gain. This algorithm or process can output the CCK codeword stored in the surviving path that terminates at the right zero state s<sub>4 </sub>in the CCK trellis diagram.</p>
<heading id="h-0020" level="1">Decoding Algorithm for ISI Channels</heading>
<p id="p-0082" num="0081">For ISI channels, which can have intersymbol interference, the channel impulse response of the ISI channel can be represented as h=(h<sub>o</sub>,h<sub>1</sub>, . . . , h<sub>k</sub>). The transmitted CCK code sequence can be represented as <o ostyle="single">x</o>=( <o ostyle="single">c</o><sub>1</sub>, <o ostyle="single">c</o><sub>2</sub>, . . . , <o ostyle="single">c</o><sub>Q</sub>) and each CCK codeword can be represented as <o ostyle="single">c</o><sub>1</sub>=( <o ostyle="single">c</o><sub>1,1</sub>, <o ostyle="single">c</o><sub>1,2</sub>, . . . , <o ostyle="single">c</o><sub>1,8</sub>) for l=1, . . . , Q, where Q denotes the number of consecutive CCK codewords. For ISI channels, the received signal can be expressed as:</p>
<p id="p-0083" num="0082">
<maths id="MATH-US-00005" num="00005">
<math overflow="scroll">
<mrow>
  <msub>
    <mi>y</mi>
    <mi>n</mi>
  </msub>
  <mo>=</mo>
  <mrow>
    <mrow>
      <munderover>
        <mo>∑</mo>
        <mrow>
          <mi>i</mi>
          <mo>=</mo>
          <mn>0</mn>
        </mrow>
        <mi>K</mi>
      </munderover>
      <mo>⁢</mo>
      <mstyle>
        <mspace width="0.3em" height="0.3ex"/>
      </mstyle>
      <mo>⁢</mo>
      <mrow>
        <msub>
          <mover>
            <mi>x</mi>
            <mi>_</mi>
          </mover>
          <mrow>
            <mi>n</mi>
            <mo>-</mo>
            <mi>i</mi>
          </mrow>
        </msub>
        <mo>⁢</mo>
        <msubsup>
          <mi>h</mi>
          <mi>i</mi>
          <mo>*</mo>
        </msubsup>
      </mrow>
    </mrow>
    <mo>+</mo>
    <msub>
      <mi>η</mi>
      <mi>n</mi>
    </msub>
  </mrow>
</mrow>
</math>
</maths>
<br/>
where η<sub>n </sub>represents the additive white Gaussian noise.
</p>
<p id="p-0084" num="0083">Since CCK codewords are transmitted consecutively, all possible super codewords x=(c<sub>1</sub>,c<sub>2</sub>, . . . ,c<sub>Q</sub>) can be determined from concatenated CCK trellis diagrams such as that shown in <figref idref="DRAWINGS">FIG. 6</figref> using the decoding techniques described herein for each CCK trellis diagram.</p>
<p id="p-0085" num="0084">Let ξ<sub>1</sub>,ξ<sub>1</sub>, . . . , ξ<sub>4Q </sub>be the state sequence of the concatenated trellis. It is obvious that ξ<sub>k </sub>ε S<sub>(k mod 4)</sub>. Then, for k=0,1, . . . ,4Q=1, the path metric at the (k+1)th step can be updated as:</p>
<p id="p-0086" num="0085">
<maths id="MATH-US-00006" num="00006">
<math overflow="scroll">
<mrow>
  <mrow>
    <msub>
      <mi>M</mi>
      <mrow>
        <mi>k</mi>
        <mo>+</mo>
        <mn>1</mn>
      </mrow>
    </msub>
    <mo>⁡</mo>
    <mrow>
      <mo>(</mo>
      <msub>
        <mi>ξ</mi>
        <mrow>
          <mi>k</mi>
          <mo>+</mo>
          <mn>1</mn>
        </mrow>
      </msub>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mrow>
      <munder>
        <mi>min</mi>
        <mrow>
          <mrow>
            <mo>{</mo>
            <msub>
              <mi>ξ</mi>
              <mi>k</mi>
            </msub>
            <mo>}</mo>
          </mrow>
          <mo>-&gt;</mo>
          <msub>
            <mi>ξ</mi>
            <mrow>
              <mi>k</mi>
              <mo>+</mo>
              <mn>1</mn>
            </mrow>
          </msub>
        </mrow>
      </munder>
      <mo>⁢</mo>
      <mrow>
        <mrow>
          <mo>(</mo>
          <mrow>
            <mrow>
              <msub>
                <mi>M</mi>
                <mi>k</mi>
              </msub>
              <mo>⁡</mo>
              <mrow>
                <mo>(</mo>
                <msub>
                  <mi>ξ</mi>
                  <mi>k</mi>
                </msub>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mo>+</mo>
            <mrow>
              <msub>
                <mi>B</mi>
                <mi>k</mi>
              </msub>
              <mo>⁡</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <msub>
                    <mi>ξ</mi>
                    <mi>k</mi>
                  </msub>
                  <mo>,</mo>
                  <msub>
                    <mi>ξ</mi>
                    <mrow>
                      <mi>k</mi>
                      <mo>+</mo>
                      <mn>1</mn>
                    </mrow>
                  </msub>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
          </mrow>
          <mo>)</mo>
        </mrow>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mi>for</mi>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mi>all</mi>
        <mo>⁢</mo>
        <mrow>
          <mstyle>
            <mspace width="0.6em" height="0.6ex"/>
          </mstyle>
          <mo>⁢</mo>
          <mstyle>
            <mspace width="0.3em" height="0.3ex"/>
          </mstyle>
        </mrow>
        <mo>⁢</mo>
        <msub>
          <mi>ξ</mi>
          <mrow>
            <mi>k</mi>
            <mo>+</mo>
            <mn>1</mn>
          </mrow>
        </msub>
      </mrow>
    </mrow>
    <mo>∈</mo>
    <msub>
      <mi>S</mi>
      <mrow>
        <mo>(</mo>
        <mrow>
          <mi>k</mi>
          <mo>+</mo>
          <mrow>
            <mn>1</mn>
            <mo>⁢</mo>
            <mrow>
              <mi>mod</mi>
              <mo>⁢</mo>
              <mn>4</mn>
            </mrow>
          </mrow>
        </mrow>
        <mo>)</mo>
      </mrow>
    </msub>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0087" num="0086">The minimization determination can be taken over all the possible proceeding states {ξ<sub>k</sub>} that connect to ξ<sub>k+1</sub>, and B<sub>k</sub>(ξ<sub>k</sub>,ξ<sub>k+1</sub>) denotes the branch metric of the branch between state ξ<sub>k </sub>and state ξ<sub>k+1 </sub>and is formed by summing a square of a magnitude of a first term and a square of a magnitude of a second term. The first term is the summation of the following items: a first received signal; a minus product of the first element of the branch label on the branch between ξ<sub>k </sub>and ξ<sub>k+1 </sub>and a most recent channel estimation from the channel estimator; a minus sum of the products of the labels stored in the surviving path for the state ξ<sub>k </sub>and the channel estimation from the channel estimator. The second term is the summation of the following items: a second received signal and a minus product of the second element of the branch label on the branch between ξ<sub>k </sub>and ξ<sub>k+1 </sub>and a most recent channel estimation from the channel estimator; a minus sum of the products of the labels stored in the surviving path and the channel estimation from the channel estimator <b>109</b>.</p>
<p id="p-0088" num="0087">For alternative implementations, the path and branch metrics for the above decoding algorithms can be obtained using path and branch metric algorithms described in issued U.S. Patent Application No. 10/227093, entitled “METHOD AND SYSTEM FOR DECODING BLOCK CODES BY CALCULATING A PATH METRIC ACCORDING TO A DECISION FEEDBACK SEQUENCE ALGORITHM,” filed on Aug. 21, 2002.</p>
<heading id="h-0021" level="1">Block Code Encoder</heading>
<p id="p-0089" num="0088"><figref idref="DRAWINGS">FIG. 8</figref> illustrates one example detailed block diagram of the block code encoder <b>20</b> in <figref idref="DRAWINGS">FIG. 1</figref>. In the example of <figref idref="DRAWINGS">FIG. 8</figref>, the encoder <b>20</b> can represent a finite state machine to output two symbol components c<sub>2k−1 </sub>and c<sub>2k </sub>that can be modulated in a carrier signal. These symbol components can be used with the trellis diagrams described above for decoder <b>108</b> to decode codewords contained in a received signal. The encoder <b>20</b> includes a phase mapper <b>801</b>, converter <b>802</b>, data processor <b>803</b>, first and second delay elements <b>804</b> and <b>805</b>, first and second coefficient operators <b>806</b> and <b>807</b>, first and second adders <b>808</b> and <b>809</b>, and first and second exponential operators <b>810</b> and <b>811</b>.</p>
<p id="p-0090" num="0089">The phase mapper <b>801</b> receives data bits d<sub>0</sub>, . . . , d<sub>7 </sub>and maps the data bits into four phase representations u<sub>1</sub>, u<sub>2</sub>, u<sub>3</sub>, and u<sub>4</sub>, based on values for φ<sub>1</sub>, φ<sub>2</sub>, φ<sub>3</sub>, and φ<sub>4</sub>. The phase representations u<sub>1</sub>, u<sub>2</sub>, u<sub>3</sub>, and u<sub>4 </sub>can be determined as described above. The phase mapper <b>801</b> outputs the phase representations u<sub>1</sub>, u<sub>2</sub>, u<sub>3</sub>, and u<sub>4 </sub>to converter <b>802</b>. The converter <b>802</b> converts the phase representations u<sub>1</sub>, u<sub>2</sub>, u<sub>3</sub>, and u<sub>4 </sub>into variables a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, and a<sub>4</sub>, which are outputted to the data processor <b>803</b>.</p>
<p id="p-0091" num="0090">The data processor <b>803</b> receives the variables a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, and a<sub>4 </sub>and processes them to output the variables in a selective order. For example, the data processor <b>803</b> can output a first sequence of variables in the order (a<sub>1</sub>,a<sub>3</sub>,a<sub>4</sub>,0) to a first delay element <b>804</b> and first coefficient operator <b>806</b> and a second sequence of variables in the order (a<sub>2</sub>,a<sub>2</sub>,a<sub>2</sub>,0) to a second delay element <b>805</b> and second coefficient operator <b>807</b>. As described above, these variables describe intermediate states of a trellis diagram and be functions of u<sub>1</sub>, u<sub>2</sub>, u<sub>3</sub>, and u<sub>4</sub>, which are used to determine odd-phase and even-phase representations p<sub>2k−1 </sub>and p<sub>2k</sub>, respectively, of an encoded codeword.</p>
<p id="p-0092" num="0091">The first delay element <b>804</b> receives and delays the first sequence of variables (a<sub>1</sub>,a<sub>3</sub>,a<sub>4</sub>,0). Initially, the output of the first delay element <b>804</b> is set to zero. The second delay element <b>805</b> receives and delays the second sequence of variables (a<sub>2</sub>,a<sub>2</sub>,a<sub>2</sub>,0). Initially, the output of the second delay element <b>805</b> is set to zero. The first coefficient operator <b>806</b> receives the delayed first sequence of variables from the first delay element <b>804</b> and the first undelayed sequence of variables from the data processor <b>803</b>. The first coefficient operator <b>806</b> performs a mapping function to transfer the first delayed sequence of variables and the first undelyaed sequence of variables into a first delayed coefficient sequence and a first undelayed coefficient sequence based on the timing order of elements in the first delayed sequence of variables and first undelayed sequence of variables.</p>
<p id="p-0093" num="0092">The second coefficient operator <b>807</b> operates in the same manner as the first coefficient operator <b>806</b> except for processing the second delayed and undelayed sequence variables to perform a mapping function to transfer the second delayed sequence of variables and the second undelayed sequence of variables into a second delayed coefficient sequence and a second undelayed coefficient sequence based on the timing order of element sin the second delayed sequence of variables and the second undelayed sequence of variables.</p>
<p id="p-0094" num="0093">The first adder <b>808</b> sequentially adds the first delayed coefficient sequence with the second delayed coefficient sequence to produce and output the odd-phase representations p<sub>2k−1 </sub>of an encoded codeword. The second adder <b>809</b> sequentially adds the first undelayed coefficient sequence with the second undelayed coefficient sequence to produce and output even-phase representations p<sub>2k </sub>of the encoded codeword. The phase representations (p<sub>2k+1</sub>,p<sub>2k</sub>) can be transformed to the signal format using the transformation of (c<sub>2k−1</sub>,c<sub>2k</sub>)=(e<sup>jpsk−1π/2</sup>,e<sup>jpskπ/2</sup>). The first exponential operator <b>810</b> receives the odd-phase representation p<sub>2k−1 </sub>from the first adder <b>808</b> and generates exponential values of each of the odd-phase representations as odd elements c<sub>2k−1 </sub>for the encoded codeword. The second exponential operator <b>811</b> receives even-phase representation p<sub>2k </sub>and generates exponential values of each of the even-phase representations as even elements c<sub>2k </sub>for the encoded codeword.</p>
<heading id="h-0022" level="1">Exemplary Decoder Hardware Architecture</heading>
<p id="p-0095" num="0094"><figref idref="DRAWINGS">FIG. 9</figref> illustrates an exemplary block diagram of a subdecoding unit for the subtrellis diagram of <figref idref="DRAWINGS">FIG. 7</figref>. The subdecoding unit can represent the internal components for a decoder over a subtrellis #N as shown in <figref idref="DRAWINGS">FIG. 10</figref> or <b>11</b>. The subdecoding unit can determine a path within a subtrellis diagram, which can be used for providing a codeword for the subtrellis diagram. Referring to <figref idref="DRAWINGS">FIG. 10</figref>, for example, the subdecoding unit of <figref idref="DRAWINGS">FIG. 9</figref> can be implemented within each of the decoder over a CCK subtrellis #1 (<b>1001</b>) to decoder over CCK subtrellis #<b>4</b> (<b>1004</b>). Furthermore, the subtrellis diagram of <figref idref="DRAWINGS">FIG. 7</figref> can be embedded in a trellis diagram such as that shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0096" num="0095">Referring back to <figref idref="DRAWINGS">FIG. 3</figref>, the CCK trellis diagram can have four disjoint subtrellis diagrams for decoding CCK codewords using the algorithms noted above. Regarding the disjoint subtrellis diagrams, there is no connection between the subtrellis diagrams except for the initial state and the final state. The four subtrellis diagrams are identical to the subtrellis diagram shown in <figref idref="DRAWINGS">FIG. 7</figref> except for the labels on the branches. Thus, each of the decoder over a CCK subtrellis #<b>1</b> (<b>1001</b>) to decoder over CCK subtrellis #<b>4</b> (<b>1004</b>) in <figref idref="DRAWINGS">FIG. 10</figref> can be used to decode a codeword over a respective subtrellis diagram that can be embedded within a single trellis diagram.</p>
<p id="p-0097" num="0096">Referring to <figref idref="DRAWINGS">FIG. 9</figref>, a decoder over a CCK subtrellis #N (representing any of the decoders in <figref idref="DRAWINGS">FIG. 10</figref>) includes four submodules <b>925</b>, <b>926</b>, <b>927</b>, and <b>928</b>. Each of these submodules can be identical to perform algorithms described herein with respect to a respective subtrellis diagram. Additionally, each of the submodules can output a codeword or codeword candidate. In one example, one of the outputs from the submodules can be chosen as the decoded for a respective subtrellis diagram. The four states in the subtrellis diagrams are indexed by integers 0, 1, 2, and 3. The surviving paths are stored in a bank of registers and register exchanges are performed for surviving path updating. Since a codeword decision is made whenever a zero state is reached, i.e., whenever k=0 (mod <b>4</b>), the tails of all the surviving paths are exactly the same as they first cross the zero state. This part of the surviving paths is called state-independent surviving path.</p>
<p id="p-0098" num="0097">As shown in <figref idref="DRAWINGS">FIG. 9</figref>, a register bank <b>905</b> stores the state-independent surviving path and a plurality of register banks <b>901</b>, <b>902</b>, <b>903</b>, and <b>904</b> store a path representing a codeword in the CCK trellis diagram. The metric calculator <b>920</b> receives previously decoded codewords from a state-independent register bank <b>905</b>, received signals <b>910</b> from the chip matched filter <b>105</b>, fading gains ĥ <b>906</b> from channel estimator <b>109</b>, surviving paths <b>921</b> from register banks <b>901</b>, <b>902</b>, <b>903</b>, and <b>904</b>, and symbol labels <b>908</b> from symbol label tables <b>915</b>, <b>916</b>, <b>917</b>, and <b>918</b>.</p>
<p id="p-0099" num="0098">In the case of k=0 (mod <b>4</b>), the decoder <b>1001</b> delivers the surviving path stored in the zero state as the decoded codeword <b>923</b> and outputs the corresponding branch metric <b>924</b> in the zero state. The metric calculator <b>920</b> outputs sixteen branch metrics <b>922</b>, B<sub>k</sub>(0,0), B<sub>k</sub>(1,0), B<sub>k</sub>(2,0), B<sub>k</sub>(3,0), . . . , for the branches in the trellis section from k to k+1.</p>
<p id="p-0100" num="0099">There are four submodules <b>925</b>, <b>926</b>, <b>927</b>, and <b>928</b>, and can be state processing units (“state processing units <b>925</b> to <b>928</b>”). Each state processing unit includes four adders. For example, state processing unit <b>925</b> includes adders <b>912</b>-<b>1</b>, <b>912</b>-<b>2</b> <b>912</b>-<b>3</b> and <b>912</b>-<b>4</b>. Each adder (e.g., <b>912</b>-n) receives a selected one of the sixteen branch metrics, and selected one of the four path metrics of the previous states. Each adder adds the selected branch metric and selected path metric for generating a sum value of the two input items and outputs a sum value. The minimum value selector (e.g., selector <b>913</b>) receives the sum values from the four adders and determines a minimum value from the inputs as the path metric for the state in question. The selector <b>913</b> also determines a symbol index <b>929</b> indicating the branch label having the minimum value.</p>
<p id="p-0101" num="0100">The delay element (e.g, <b>914</b>) receives the path metric from the minimum value selector <b>913</b> and stores the path metric. The delay element <b>914</b> also outputs the delayed path metric. The symbol label table (e.g., <b>915</b>) receives the symbol index from the minimum value selector <b>913</b> and determines the first element and second element of the branch label on the specified branch. The path selector (e.g., <b>930</b>) receives a plurality of surviving paths from the plurality of register banks <b>901</b>, <b>902</b>, <b>903</b>, and <b>904</b> and the symbol index <b>929</b> from the minimum value selector <b>913</b> for updating the surviving path for the state in question. The state-independent register bank <b>905</b> receives the decoded codewords for storing decoded codewords and outputs the decoded codewords.</p>
<p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. 10</figref> illustrates an exemplary block digram of the decoder <b>108</b> in <figref idref="DRAWINGS">FIG. 1</figref> for decoding codewords over multiple subtrellis diagrams. In the example, decoder <b>108</b> includes four decoders <b>1001</b>, <b>1002</b>, <b>1003</b>, and <b>1004</b>. For of these decoders corresponds to an individual subtrellis diagram. For example, decoder <b>1001</b> uses a first trellis diagram (CCK subtrellis #<b>1</b>) for decoding CCK codewords. The subtrellis diagrams can be a subtrellis diagram as shown in <figref idref="DRAWINGS">FIG. 7</figref>. The outputs from the decoders <b>1001</b> to <b>1004</b> can be selected as the decoded CCK codeword base don a smallest metric value.</p>
<p id="p-0103" num="0102">Referring to <figref idref="DRAWINGS">FIG. 10</figref>, each of the decoders <b>1001</b> through <b>1004</b> (“CCK subtrellis decoders”) receive signal <b>1013</b> and estimated channel impulse value ĥ <b>1012</b> from a channel estimator <b>109</b>. Each of the CCK subtrellis decoders <b>1001</b> to <b>1004</b> outputs a local minimum metric and a CCK codeword corresponding to local minimum metric measurement calculated by the minimum value determining unit <b>1008</b>. The minimum value determining unit <b>1008</b> receives the local minimum metrics <b>1014</b> from the four CCK subtrellis decodes <b>1001</b> to <b>1004</b> and determines a global minimum metric. The global minimum metric is a minimum value of the local minimum metrics <b>1014</b>. The minimum value determining unit <b>1008</b> outputs the corresponding codeword index <b>1015</b> to a selector of multiplexer <b>1007</b>. The selector <b>1007</b> receives the CCK codewords <b>1016</b> corresponding to the local minimum metrics from the four CCK subtrellis decoders <b>1001</b> to <b>1004</b> and selects a CCK codeword <b>1009</b> based on the CCK codeword index <b>1015</b>, which is outputted as the decoded CCK codeword.</p>
<heading id="h-0023" level="1">Exemplary Decoder for CCK Codes and Barker Sequence Codes</heading>
<p id="p-0104" num="0103"><figref idref="DRAWINGS">FIG. 11</figref> illustrates an exemplary block diagram of the decoder in <figref idref="DRAWINGS">FIG. 1</figref> for decoding CCK codes and Barker sequence codes over multiple subtrellis diagrams. In the example of <figref idref="DRAWINGS">FIG. 11</figref>, a high-rate CCK trellis diagram is embedded with a low-rate CCK trellis diagram (e.g., as shown in <figref idref="DRAWINGS">FIG. 4</figref>), a DQPSK Barker sequence trellis diagram, and a DBPSK Barker sequence trellis diagram, as described above. For Barker sequence trellis diagrams as shown in <figref idref="DRAWINGS">FIGS. 5A and 5B</figref>, the length of the high-rate CCK trellis diagram of <figref idref="DRAWINGS">FIG. 3</figref> can be extended such that the Barker sequence trellis diagrams can be embedded in it. For such a single trellis diagram with embedded trellis diagrams, the label on the branches may differ for different trellis diagrams. Additionally, the lengths of the CCK and the Barker trellis diagrams can be different. The metric calculations and updated can be the same for the different trellis diagrams.</p>
<p id="p-0105" num="0104">Referring to <figref idref="DRAWINGS">FIG. 11</figref>, the decoder <b>108</b> includes four decoders over subtrellis #<b>1</b> (<b>1105</b>) to subtrellis #<b>4</b> (<b>1120</b>). The decoders <b>1105</b>, <b>1110</b>, <b>1115</b>, and <b>1120</b> can be designated for decoding high-rate CCK codes, low-rate CCK codes, DQPSK Barker sequence codes, and DBPSK Barker sequence codes. These decoders can operate for different types of subtrellis diagrams by selectively enabling or disabling branches in the high-rate CCK trellis diagram corresponding to its associated subtrellis diagram embedded in the trellis diagram. For example, the decoders <b>1110</b> <b>1120</b> can be designated for the low-rate CCK subtrellis diagram such that some state and branch operations are disabled.</p>
<p id="p-0106" num="0105">As shown, the actuating table <b>1101</b> receives designating or selected decoding modes for determining states and branches with respect to the designated modes. The actuating table <b>1001</b> outputs actuating signals to actuate the states and branches for the designated mode. The branch label table <b>1102</b> receives the designated decoding modes and generates branch labels corresponding to different designated modes and outputs the appropriate branch labels. The decoders <b>1105</b> to <b>1120</b>, selector <b>1125</b>, and minimum value determining unit <b>1130</b> can operate as the same in <figref idref="DRAWINGS">FIG. 10</figref>.</p>
<heading id="h-0024" level="1">Timing/Phase Tracking Module</heading>
<p id="p-0107" num="0106"><figref idref="DRAWINGS">FIG. 12</figref> illustrates one example block diagram of the timing/phase tracking module <b>110</b> in <figref idref="DRAWINGS">FIG. 1</figref>. The timing/phase tracking module <b>110</b> operates as a device that performs metric tests on the received samples with the decoded codewords from the decoder <b>108</b>. This testing function can be based on the metric calculations.</p>
<p id="p-0108" num="0107">The metric tests requires ┌L/<b>8</b>┐ decoded CCK codewords or ┌L/<b>11</b>┐ decoded Barker codewords, where L is the length of the estimated channel impulse response. For purposes of explanation, the CCK modulation scheme is used, but the Barker sequence modulation scheme can also be used. If v=┌L/<b>8</b>┐ and at some k with k=0 (mod <b>4</b>) and l=k/4, lth decoded CCK codeword is delivered from the decoder <b>108</b>. The most recent v decoded codewords can be represented as b=(b<sub>1</sub>, b<sub>2</sub>, . . . , b<sub>8v</sub>)=(ĉ<sub>1−v+1</sub>, . . . , ĉ<sub>1</sub>), where b<sub>i</sub>ε{+1, −1, +j, −j} and ĉ<sub>l </sub>is a decoded codeword. Let β=2Rk and R is an over sampling factor. The received samples can have a sampling rate T<sub>sample</sub>, which can be observed from the chip matched filter <b>105</b> up to z<sub>1</sub>,z<sub>2</sub>, . . . , z<sub>β</sub>,z<sub>α+1</sub>. The chip-rate sampled sequence up to β, denoted as z<sub>r</sub>,z<sub>2R</sub>, . . . , z<sub>β−r</sub>,z<sub>β</sub>, is the input of the decoder <b>108</b> when the lth decoded block codeword is delivered.</p>
<p id="p-0109" num="0108">The input samples to the decoder <b>108</b> should be estimated if the sampled timing is shifted by +T<sub>res </sub>and −T<sub>res</sub>, respectively, where T<sub>res</sub>=T<sub>sample</sub>|μ is the resolution of timing tracking. Three 8-tuple test vectors y(+1), y(0), and y(−1) are formed by interpolating the received samples, with the qth elements as follows:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>q</sub>(+1)=W<sub>2</sub>·Z<sub>b−(8−q)R−1</sub>+w<sub>1</sub>·Z<sub>β−(8−q)R </sub><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>q</sub>(0)=Z<sub>β−(8−q)R </sub><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i><sub>q</sub>(−1)=W<sub>1</sub>·Z<sub>62 −(8−q)R−1</sub>+W<sub>2</sub>·Z<sub>β−(8−q)R+1 </sub><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
for
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>q=</i>1, . . . , <b>8</b>,<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
and where w<sub>1 </sub>and w<sub>2 </sub>are the interpolation coefficients. The interpolated results
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>y(+</i>1)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
and
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>y(</i>−1)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
are simply the estimations of the input samples to the decoder <b>108</b> if the sampled timing are shifted by
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>+T</i><sub>res </sub>and −T<sub>res</sub>, respectively.<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0110" num="0109">The estimated signals can be formed when the phases are shifted by +Δθ or −Δθ. Therefore, the nine vectors that are generated are:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i>′(+1,+1)=<i>y</i>(+1)<i>e</i><sup>+jΔθ</sup><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i>′(0,+1)=<i>y</i>)0)<i>e</i><sup>+jΔθ</sup><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i>′(−1,+1)=<i>y</i>(−1)<i>e</i><sup>+jΔθ</sup><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i>′(+1,0)=<i>y</i>(+1)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i>′(0,0)=<i>y</i>)0)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i>′(−1,0)=<i>y</i>(−1)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i>′(+1,−1)=<i>y</i>(+1)<i>e</i><sup>−Δθ</sup><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i>′(0,−1)=<i>y</i>(0)<i>e</i><sup>−jΔθ</sup><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>y</i>′(−1,−1)=<i>y</i>)−1)<i>e</i><sup>−jΔθ</sup><?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0111" num="0110">The nine vectors represent the estimates of the received signal to the decoder <b>108</b> with all the possible cases of timing and phase shifts. The metrics of all the received estimates are then evaluated. The metric of a received 8-tuple vector is given by:</p>
<p id="p-0112" num="0111">
<maths id="MATH-US-00007" num="00007">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>T</mi>
    <mo>⁡</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <mi>y</mi>
        <mo>,</mo>
        <mi>b</mi>
      </mrow>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <munderover>
      <mo>∑</mo>
      <mrow>
        <mi>q</mi>
        <mo>=</mo>
        <mn>1</mn>
      </mrow>
      <mn>8</mn>
    </munderover>
    <mo>⁢</mo>
    <msup>
      <mrow>
        <mo></mo>
        <mstyle>
          <mspace width="0.3em" height="0.3ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mrow>
          <msub>
            <mi>y</mi>
            <mi>q</mi>
          </msub>
          <mo>-</mo>
          <mrow>
            <munderover>
              <mo>∑</mo>
              <mrow>
                <mi>i</mi>
                <mo>=</mo>
                <mn>0</mn>
              </mrow>
              <mi>L</mi>
            </munderover>
            <mo>⁢</mo>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
            <mo>⁢</mo>
            <mrow>
              <msub>
                <mi>b</mi>
                <mrow>
                  <mrow>
                    <mn>8</mn>
                    <mo>⁢</mo>
                    <mrow>
                      <mo>(</mo>
                      <mrow>
                        <mi>v</mi>
                        <mo>-</mo>
                        <mn>1</mn>
                      </mrow>
                      <mo>)</mo>
                    </mrow>
                  </mrow>
                  <mo>+</mo>
                  <mi>q</mi>
                  <mo>-</mo>
                  <mi>i</mi>
                </mrow>
              </msub>
              <mo>⁢</mo>
              <msubsup>
                <mover>
                  <mi>h</mi>
                  <mo>^</mo>
                </mover>
                <mi>i</mi>
                <mo>*</mo>
              </msubsup>
            </mrow>
          </mrow>
        </mrow>
        <mo></mo>
      </mrow>
      <mn>2</mn>
    </msup>
  </mrow>
</mrow>
</math>
</maths>
<br/>
where ĥ is the estimated channel impulse response. Substituting all the nine test vectors into the above equation, nine metrics T(y′(m<sub>1</sub>,m<sub>2</sub>),b) for all m<sub>1</sub>, m<sub>2</sub>ε{−1,0+1} are generated.
</p>
<p id="p-0113" num="0112">The timing/phase tracking module <b>110</b> makes a decision on timing adjustment after observing J metrics and makes a decision on phase adjustment after observing P metrics by accumulating the metric consecutively J and P times, respectively. The updating of the accumulated metrics can be expressed as:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>Λ<sub>i</sub><sup>(t) </sup>(<i>m</i><sub>1</sub>, <i>m</i><sub>2</sub>) ← Λ<sub>i-1</sub><sup>(t)</sup>(<i>m</i><sub>1</sub>, <i>m</i><sub>2</sub>)+T(y<sup>1</sup>(<i>m</i><sub>1</sub>, <i>m</i><sub>2</sub>),<i>b</i>) for <i>i=<b>1</b></i>, . . . , J<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>Λ<sub>i</sub><sup>(p)</sup>(<i>m</i><sub>1</sub>, <i>m</i><sub>2</sub>) ← Λ<sub>i-1</sub><sup>(p)</sup>(<i>m</i><sub>1</sub>, <i>m</i><sub>2</sub>)+T(y<sup>1</sup>(<i>m</i><sub>1</sub>, <i>m</i><sub>2</sub>),<i>b</i>) for <i>i=<b>1</b></i>, . . . , P<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
for all m<sub>1</sub>,m<sub>2 </sub>ε{−1,0+1}. The final accumulated results of metrics for timing tracking and phase tracking are represented by Λ<sup>(l)</sup><sub>j</sub>(m<sub>1</sub>,m<sub>2</sub>) and Λ<sup>(p)</sup><sub>p</sub>)m<sub>1</sub>,m<sub>2</sub>), respectively.
</p>
<p id="p-0114" num="0113">For timing tracking, the timing/phase tracking module <b>110</b> finds one of the minimum value among Λ<sup>(t)</sup><sub>j</sub>(m<sub>1</sub>,m<sub>2</sub>) for all m<sub>1</sub>,m<sub>2</sub>ε{−1,0−1}. The result is then fed back to the interpolator <b>104</b> for adjusting the sample timing. For example, if Λ<sup>(t)</sup><sub>j</sub>(−1,*) attains the minimum, the timing/phase tracking module <b>110</b> sends a signal to the interpolator <b>103</b> to move the sample point one step backward. Denoting the output of the timing decision as τ; the timing decision can be represented as:</p>
<p id="p-0115" num="0114">
<maths id="MATH-US-00008" num="00008">
<math overflow="scroll">
<mrow>
  <mi>τ</mi>
  <mo>=</mo>
  <mrow>
    <mi>arg</mi>
    <mo>⁢</mo>
    <mstyle>
      <mspace width="0.3em" height="0.3ex"/>
    </mstyle>
    <mo>⁢</mo>
    <mrow>
      <munder>
        <mi>min</mi>
        <msub>
          <mi>m</mi>
          <mn>1</mn>
        </msub>
      </munder>
      <mo>⁢</mo>
      <mrow>
        <mrow>
          <mo>(</mo>
          <mrow>
            <munder>
              <mi>min</mi>
              <msub>
                <mi>m</mi>
                <mn>2</mn>
              </msub>
            </munder>
            <mo>⁢</mo>
            <mrow>
              <msubsup>
                <mi>Λ</mi>
                <mi>J</mi>
                <mrow>
                  <mo>(</mo>
                  <mi>t</mi>
                  <mo>)</mo>
                </mrow>
              </msubsup>
              <mo>⁡</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <msub>
                    <mi>m</mi>
                    <mn>1</mn>
                  </msub>
                  <mo>,</mo>
                  <msub>
                    <mi>m</mi>
                    <mn>2</mn>
                  </msub>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
          </mrow>
          <mo>)</mo>
        </mrow>
        <mo>.</mo>
      </mrow>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0116" num="0115">For phase tracking, the timing/phase tracking module <b>110</b> finds the one of the minimum values among Λ<sup>(p)</sup><sub>p</sub>(m<sub>1</sub>,m<sub>2</sub>) for all m<sub>1</sub>,m<sub>2 </sub>ε{−1,0−1}. The result is then fed back to the phase compensator <b>104</b> to remove the phase error. For example, if Λ<sup>(p)</sup><sub>p</sub>(*, +1) attains the minimum, the timing/phase tracking module <b>110</b> sends a signal to the phase compensator <b>104</b> to increase the compensating phase by +Δθ. Denoting the output of the phase decision as ψ, the phase decision can be represented as:</p>
<p id="p-0117" num="0116">
<maths id="MATH-US-00009" num="00009">
<math overflow="scroll">
<mrow>
  <mi>ψ</mi>
  <mo>=</mo>
  <mrow>
    <mi>arg</mi>
    <mo>⁢</mo>
    <mstyle>
      <mspace width="0.3em" height="0.3ex"/>
    </mstyle>
    <mo>⁢</mo>
    <mrow>
      <munder>
        <mi>min</mi>
        <msub>
          <mi>m</mi>
          <mn>2</mn>
        </msub>
      </munder>
      <mo>⁢</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <munder>
            <mi>min</mi>
            <msub>
              <mi>m</mi>
              <mn>1</mn>
            </msub>
          </munder>
          <mo>⁢</mo>
          <mrow>
            <msubsup>
              <mi>Λ</mi>
              <mi>P</mi>
              <mrow>
                <mo>(</mo>
                <mi>p</mi>
                <mo>)</mo>
              </mrow>
            </msubsup>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <mrow>
                <msub>
                  <mi>m</mi>
                  <mn>1</mn>
                </msub>
                <mo>,</mo>
                <msub>
                  <mi>m</mi>
                  <mn>2</mn>
                </msub>
              </mrow>
              <mo>)</mo>
            </mrow>
          </mrow>
        </mrow>
        <mo>)</mo>
      </mrow>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0118" num="0117">It should be noted that all the values of Λ<sup>(l)</sup><sub>j</sub>(m<sub>1</sub>,m<sub>2</sub>) should be reset to zero whenever a timing decision is made, and all the values of Λ<sup>(p)</sup><sub>P</sub>(m<sub>1</sub>,m<sub>2</sub>) should be reset to zero whenever a phase decision is made.</p>
<p id="p-0119" num="0118">The timing/phase tracking module <b>110</b> includes a buffer <b>1201</b> to account for the decoding delay of the decoder <b>108</b> for buffering data at the input of the received sample. Additionally, the buffer <b>1201</b> output is multiplied by e<sup>+jΔθ</sup> and e<sup>−jΔθ</sup>, forming the estimated received samples with phase shifts +Δθ and −Δθ, respectively. Generally, the three samples are fed into linear interpolators, forming the estimated samples of timing shift. At this stage, nine estimated samples are constructed as descried in further detail. The codeword is fed into a codeword buffer whenever the decoder <b>108</b> delivers a new decoded codeword. A reconstructed signal of the channel output is generated by passing the decoded codeword into FIR filter with coefficients ĥ. Finally, the reconstructed signal is subtracted from the nine estimated samples. The results are then squared and accumulated in the registers for final decisions of phase and timing adjustment.</p>
<p id="p-0120" num="0119">Referring to <figref idref="DRAWINGS">FIG. 12</figref>, the timing/phase tracking module <b>110</b> includes a buffer <b>1201</b> that receives the received samples <b>1202</b> and a codeword buffer <b>1203</b> that receives the decoded codeword <b>1204</b> for buffering the decoded codeword and outputting the buffered decoded codeword to the summing processor <b>1210</b>. A first multiplier <b>1205</b> receives the buffered received samples for positive rotating of received samples with a predetermined phase as positive rotated samples and outputs positive phase rotated samples. A second multiplier <b>1206</b> receives the buffered received samples for negative rotating of received samples with a predetermined phase as negative phase rotated samples and outputs the negative phase rotated samples.</p>
<p id="p-0121" num="0120">First linear interpolators <b>1207</b> receives the positive phase rotated samples for forming three positive phase rotated timing/drift samples by interpolating from three selected consecutive positive phase rotated samples of the plurality of positive phase rotated samples, and outputs the positive phase timing-drift samples. Second linear interpolators <b>1208</b> receives the plurality of received samples for forming three phase non-rotated timing-drift samples by interpolating from three selected consecutive samples of the plurality of received samples, and outputs the three phase non-rotated timing-drift samples. Third linear interpolators <b>1209</b> receives the negative phase rotated samples for forming three negative phase rotated timing-drift samples by interpolating from three selected consecutive negative phase rotated samples of the plurality of negative phase rotated samples, and outputs the negative phase rotated timing-drift samples.</p>
<p id="p-0122" num="0121">The summing processor <b>120</b> receives the previously decoded codewords and an estimated channel impulse response for summing the products of the decoded codewords and the estimated channel impulse response, and outputs a reconstructed signal <b>1215</b>. Nine adding and squaring processors <b>1211</b> subtract the reconstructed signal from predetermined test vectors of three positive phase rotated timing-drift samples, three phase non-rotated timing-drift samples, and three negative phase rotated timing-drift samples from the first, second and third interpolators <b>1207</b>, <b>1208</b>, and <b>1209</b>, respectively, and then square the magnitude of the subtracting result as a squared magnitude value. An accumulation and decision processor <b>1212</b> receives the squared magnitude values from the adding and squaring processor <b>1211</b> for accumulating the squared magnitude values, determining a timing shift responsive to a minimum of said accumulation, outputting said timing shift <b>1213</b>. The accumulation and decision processor <b>1212</b> further determines a phase shift responsive to a minimum of said accumulation, and outputs the phase shift <b>1214</b>.</p>
<p id="p-0123" num="0122">In the above examples, the components for the above decoders can be implemented in hardware such as, for example, an application specific integrated circuit (ASIC) or a field programmable gate array (FPGA) to perform the block code decoding techniques described herein. Alternatively, the above components can be implemented in software in which a digital signal processor (DSP) and one or more memory devices can be used to implement the block code decoding techniques described herein. Additionally, the above decoders can be configured or programmed using a combination of hardware and software to implement the block code decoding techniques described herein.</p>
<p id="p-0124" num="0123">Thus, a method and system for decoding block codes have been described. In the foregoing specification, the invention has been described with reference to specific exemplary implementations. It will, however, be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention as set forth in the appended claims. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001" nb-file="US07298798-20071120-M00001.NB">
<img id="EMI-M00001" he="15.16mm" wi="76.20mm" file="US07298798-20071120-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00002" nb-file="US07298798-20071120-M00002.NB">
<img id="EMI-M00002" he="8.81mm" wi="76.20mm" file="US07298798-20071120-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00003" nb-file="US07298798-20071120-M00003.NB">
<img id="EMI-M00003" he="6.01mm" wi="76.20mm" file="US07298798-20071120-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00004" nb-file="US07298798-20071120-M00004.NB">
<img id="EMI-M00004" he="6.01mm" wi="76.20mm" file="US07298798-20071120-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00005" nb-file="US07298798-20071120-M00005.NB">
<img id="EMI-M00005" he="8.81mm" wi="76.20mm" file="US07298798-20071120-M00005.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00006" nb-file="US07298798-20071120-M00006.NB">
<img id="EMI-M00006" he="9.91mm" wi="76.20mm" file="US07298798-20071120-M00006.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00007" nb-file="US07298798-20071120-M00007.NB">
<img id="EMI-M00007" he="10.92mm" wi="76.20mm" file="US07298798-20071120-M00007.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00008" nb-file="US07298798-20071120-M00008.NB">
<img id="EMI-M00008" he="7.03mm" wi="76.20mm" file="US07298798-20071120-M00008.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00009" nb-file="US07298798-20071120-M00009.NB">
<img id="EMI-M00009" he="7.03mm" wi="76.20mm" file="US07298798-20071120-M00009.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An apparatus for decoding a received signal being modulated using one of a plurality of modulation based on a trellis diagram to output an decoded code, comprising:
<claim-text>a plurality of subdecoding units, each receiving a plurality of symbols of received signal, and an estimate of the channel impulse response for decoding the received signal to output a local minimum metric and a code corresponding to the local minimum metric based on a corresponding subtrellis in the trellis diagram,</claim-text>
<claim-text>a selector for selecting one of the codes from the plurality of subdecoding units as the decoded code based on an index signal,</claim-text>
<claim-text>a minimum value determining unit for receiving the local minimum metrics from the plurality of subdecoding units, and generating the index signal that indicates which local minimum metric is the minimum one among the local minimum metrics,</claim-text>
<claim-text>an actuating unit for receiving a mode indicating signal and determining states and branches in the subtrellis corresponding to each subdecoding unit, and</claim-text>
<claim-text>a branch label generating unit for receiving the mode indicating signal and generating a plurality of branch labels of the subtrellis corresponding to each subdecoding unit,</claim-text>
<claim-text>wherein the received signal contains at least one block code.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the mode indicating signals is used to indicate the modulation mode that can be one of a high-rate complementary code keying (CCK) modulation mode, low-rate CCK modulation mode, differential quadrature phase shift keying (DQPSK) Barker sequence modulation mode, and differential binary phase shift keying (DBPSK) Barker sequence modulation mode.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The apparatus of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the number of the plurality of subdecoding units is 4.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein each subdecoding unit comprises:
<claim-text>a plurality of submodules, each generating a delayed path metric, comprising:</claim-text>
<claim-text>a plurality of adders each adding a selected one of a plurality of branch metrics and a selected one of the delayed path metrics to generate a sum value;</claim-text>
<claim-text>a minimum value selector for selecting the sum values from the plurality of adders as a path metric and generating a label index that indicates the branch label corresponding to the path metric that is selected;</claim-text>
<claim-text>a delay unit for receiving and storing the path metric and outputting a delayed path metric;</claim-text>
<claim-text>a branch label table containing a plurality of label indexes and the corresponding branch labels; and</claim-text>
<claim-text>a surviving path updating unit for receiving the label index, the surviving path in each submodules, and the branch label corresponding to the label index obtained from the branch level table to update the surviving path of the present submodule; and</claim-text>
<claim-text>a metric calculator for receiving previously decoded codes, at least one symbols of received signal, the estimate of the channel impulse response, the surviving path of each submodule, and branch labels obtained from the branch label table in each submodule to generate the plurality of branch metrics respectively corresponding to a plurality of branches in the subtrellis;</claim-text>
<claim-text>wherein after the surviving path is updated for N iterations with N being an integer, the delayed path metric of a specific submodule is outputted as the local minimum metric and the surviving path of the specific submodule is outputted as the code corresponding to the local minimum metric.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The apparatus of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the mode indicating signal is used to indicate the modulation mode that can be one of a high-rate complementary code keying (CCK) modulation mode, low-rate CCK modulation mode, differential quadrature phase shift keying (DQPSK) Barker sequence modulation mode, and differential binary phase shift keying (DBPSK) Barker sequence modulation mode.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The apparatus of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the number of the plurality of submodules is 4.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The apparatus of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein if the mode indicating signal indicates the high-rate CCK modulation mode, the number N=4, the actuating unit activates 4 subdecoding units and determines states s<sub>0</sub>,s<sub>1</sub>,s<sub>3</sub>, s<sub>3 </sub>and s<sub>4 </sub>sequentially from an initial state to a final state in the trellis diagram as:
<claim-text>s<sub>0</sub>=0, s<sub>1</sub>=(a<sub>1</sub>,a<sub>2</sub>),s<sub>2</sub>=(a<sub>3</sub>,a<sub>2</sub>),s<sub>3</sub>=(a<sub>4</sub>,a<sub>2</sub>), and s<sub>4</sub>=0</claim-text>
<claim-text>where a<sub>1</sub>,a<sub>2</sub>,a<sub>3</sub>, and a<sub>4 </sub>are functions of a set of number u<sub>i </sub>determined by</claim-text>
<claim-text>a<sub>1</sub>=u<sub>1</sub>+u<sub>2</sub>+u<sub>3</sub>+u<sub>4 </sub></claim-text>
<claim-text>a<sub>2</sub>=u<sub>2 </sub></claim-text>
<claim-text>a<sub>3</sub>=u<sub>3 </sub></claim-text>
<claim-text>a<sub>4</sub>=u<sub>1 </sub></claim-text>
<claim-text>where the set of number u<sub>i </sub>are defined as u<sub>i</sub>ε55 0,1,2,3} for i=1,2,3,4;</claim-text>
<claim-text>and the branch label generating unit generates the branch labels sequentially from the initial state to the final state as</claim-text>
<claim-text>(p<sub>1</sub>,p<sub>2</sub>)=(a<sub>1</sub>,a<sub>1</sub>+3a<sub>2</sub>)</claim-text>
<claim-text>(p<sub>3</sub>,p<sub>4</sub>)=(a<sub>1</sub>+3a<sub>3</sub>,a<sub>1</sub>+3a<sub>2</sub>+3a<sub>3</sub>+2)</claim-text>
<claim-text>(p<sub>5</sub>,p<sub>6</sub>)=(a<sub>2</sub>+a<sub>3</sub>+a<sub>4</sub>,a<sub>3</sub>+a<sub>4</sub>)</claim-text>
<claim-text>(p<sub>7</sub>,p<sub>8</sub>)=(a<sub>2</sub>+a<sub>4</sub>+2,a<sub>4</sub>)</claim-text>
<claim-text>where all additions are modulo-4 additions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The apparatus of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein if the mode indicating signal indicates the low-rate CCK modulation mode, the number N=4, the actuating unit activates 4 subdecoding units and determines states s<sub>0</sub>, s<sub>1</sub>, s<sub>3</sub>, s<sub>3 </sub>and s<sub>4 </sub>sequentially from an initial state to a final state in the trellis diagram as:
<claim-text>s<sub>0</sub>=0, s<sub>1</sub>=(a<sub>1</sub>,a<sub>2</sub>), s<sub>2</sub>=(a<sub>5</sub>,a<sub>2</sub>), s<sub>3</sub>=(a<sub>4</sub>,a<sub>2</sub>), and s<sub>4</sub>=0 where a<sub>1</sub>, a<sub>2</sub>, a<sub>4</sub>, and a<sub>5 </sub>are functions of a set of number u<sub>i </sub>determined by</claim-text>
<claim-text>a<sub>1</sub>=u<sub>1</sub>u<sub>2</sub>+u<sub>3</sub>+u<sub>4 </sub></claim-text>
<claim-text>a<sub>2</sub>=u<sub>2 </sub>for u<sub>1</sub>ε{0,1,2,3{, u<sub>2</sub>ε{1,3}, u<sub>3</sub>=0, and u<sub>4</sub>ε{0,2};</claim-text>
<claim-text>a<sub>5</sub>=(u<sub>1</sub>+u<sub>3</sub>+u<sub>4</sub>)mod <b>2</b></claim-text>
<claim-text>and the branch label generating unit generates the branch labels sequentially from the initial state of the final state as</claim-text>
<claim-text>(p<sub>1</sub>,p<sub>2</sub>)=(a<sub>1</sub>,a<sub>1</sub>+3a<sub>2</sub>)</claim-text>
<claim-text>(p<sub>3</sub>,p<sub>4</sub>(=(a<sub>1</sub>,a<sub>1</sub>+3a<sub>2</sub>+2)</claim-text>
<claim-text>(p<sub>5</sub>,p<sub>6</sub>)=(a<sub>2</sub>+a<sub>4</sub>,a<sub>4</sub>)</claim-text>
<claim-text>(p<sub>7</sub>,p<sub>8</sub>)=(a<sub>2</sub>+a<sub>4</sub>+2,a<sub>4</sub>)</claim-text>
<claim-text>where all additions are modulo-4 additions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The apparatus of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein if the mode indicating signal indicates the DQPSK Barker sequence modulation mode, the number N=6, the actuating unit actives 4 subdecoding units, the branch label generating unit generates the branch labels sequentially from the initial state to the final state in the four subtrellises corresponding to the 4 subdecoding units respectively as
<claim-text>(p<sub>1</sub>,p<sub>2</sub>)=(+1,−1), (p<sub>3</sub>,p<sub>4</sub>)=(30 1, −1), (p<sub>5</sub>,p<sub>6</sub>)=(−1, +1), (p<sub>7</sub>,p<sub>8</sub>)=(+1, +1), (p<sub>9</sub>,p<sub>10</sub>)=(−1,−1), (p<sub>11</sub>=(−1),</claim-text>
<claim-text>(p<sub>1</sub>,p<sub>2</sub>)=(+j,−j), (p<sub>3</sub>,p<sub>4</sub>)=(+j+j), (p<sub>5</sub>,p<sub>6</sub>)=(−j+j), (p<sub>7</sub>,p<sub>8</sub>)=(+j,+j), (p<sub>9</sub>,p<sub>10</sub>)=(−j,−j), (p<sub>11</sub>)=(−j),</claim-text>
<claim-text>(p<sub>1</sub>,p<sub>2</sub>)=(−1+1), (p<sub>3</sub>,p<sub>4</sub>)=(−1,−1), (p<sub>5</sub>,p<sub>6</sub>)=(+1,−1), (p<sub>7</sub>,p<sub>8</sub>)=(−1,−1), (p<sub>9</sub>,p<sub>10</sub>)=(+1,+1), (p<sub>11</sub>)=(+1),</claim-text>
<claim-text>(p<sub>1</sub>,p<sub>2</sub>)=(−j,+j), (p<sub>3</sub>,p<sub>4</sub>)=(−j,−j), (p<sub>5</sub>,p<sub>6</sub>)=(+j,−j), (p<sub>7</sub>,p<sub>8</sub>)=(−j,−j), (p<sub>9</sub>,p<sub>10</sub>)=(+j+j), (p<sub>11</sub>)=(+j).</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The apparatus of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein if the mode indicating signal indicates the DBPSK Barker sequence modulation mode, the number N=6, actuating unit activates two subdecoding units, and the branch label generating unit generates the branch labels sequentially from the initial state to the final state in the two subtrellises corresponding to the two subdecoding units respectively as
<claim-text>(p<sub>1</sub>,p<sub>2</sub>)=(+1,−1), (p<sub>3</sub>,p<sub>4</sub>)=(+1,+1), (p<sub>5</sub>,p<sub>6</sub>)=(−1,+1), (p<sub>7</sub>,p<sub>8</sub>)=(+1,+1), (p<sub>9</sub>,p<sub>10</sub>)=(−1,−1), (p<sub>11</sub>)=(−1),</claim-text>
<claim-text>(p<sub>1</sub>,p<sub>2</sub>)=(−1,+1), (p<sub>3</sub>,p<sub>4</sub>)=(−1,−1), (p<sub>5</sub>,p<sub>6</sub>)=(+1,−), (p<sub>7</sub>,p<sub>8</sub>)=(−1, −1), (p<sub>9</sub>,p<sub>10</sub>)=(+1,+1), (p<sub>11</sub>)=(+1).</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein:
<claim-text>the received signal is received on at least one of an additive white Gaussian noise channel, flat fading channel, and intersymbol interference channel; and</claim-text>
<claim-text>the timing and phase of the received signal are tracked before decoding.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising a timing and phase tracking module to track timing and phase of the received signal.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A communication system, comprising:
<claim-text>a receiver, receiving a signal containing at least one block code of a fixed length,</claim-text>
<claim-text>wherein the block code is modulated in a mode selected from a plurality of modulation modes;</claim-text>
<claim-text>a decoder for decoding the signal using a trellis diagram comprising a plurality of subtrellises to output a decoded code, comprising:</claim-text>
<claim-text>a plurality of subdecoding units each corresponding to a subtrellis, decoding the signal based on an estimate of the channel impulse response to output a plurality of local minimum metrics and codes correspondingly;</claim-text>
<claim-text>a minimum value determining unit, coupled to the subdecoding units, determining a minimum local minimum metric among the local minimum metrics;</claim-text>
<claim-text>a selector, coupled to the subdecoding units, selecting a code associated with the minimum local minimum metric as the decoded code;</claim-text>
<claim-text>an actuating unit, determining states and branches in the trellis diagram based on the selected mode, and</claim-text>
<claim-text>a branch label generating unit, determining branch labels on the branches.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The communication system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the mode is one of high-rate CCK modulation mode, low-rate CCK modulation mode, DQPSK Barker sequence modulation mode, and DBPSK Barker sequence modulation mode.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The communication system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the selector further selects at least one among a high-rate CCK trellis diagram, a low-rate CCK trellis diagram, a DQPSK Barker sequence trellis diagram, and a DBPSK Barker sequence trellis diagram as the trellis diagram based on the mode.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The communication system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the subdecoding units decode the block code using a high-rate CCK trellis diagram, in which at least one of the low-rate CCK trellis diagram, DQPSK Barker sequence trellis diagram, and DBPSK Barker sequence trellis diagrams are embedded as part of the states and branches.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The communication system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the receiver receives the signal on at least one of an additive white Gaussian noise channel, flat fading channel, and intersymbol interference channel.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The communication system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising a timing and phase tracking module to track timing and phase of the signal.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The communication system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising an encoder, encoding input data in a high-rate CCK modulation mode to generate the signal, comprising:
<claim-text>a phase mapper to map input data into phase representations u<sub>1</sub>, u<sub>2</sub>, u<sub>3</sub>, and u<sub>4 </sub>based on phase values φ<sub>1</sub>, φ<sub>2</sub>, φ<sub>3</sub>, and φ<sub>4</sub>;</claim-text>
<claim-text>a converter to convert the phase representations u<sub>1</sub>, u<sub>2</sub>, u<sub>3</sub>, and u<sub>4 </sub>into variables a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, and a<sub>4 </sub>of a function representing the states of the trellis diagram;</claim-text>
<claim-text>a data processor to output the variables in a selective order; and</claim-text>
<claim-text>a processor logic to determine odd-phase and even-phase representations of a codeword required to modulate the signal based on the variables outputted from the data processor.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The communication system of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the variables are defined as:
<claim-text>a<sub>1</sub>=u<sub>1</sub>+u<sub>2</sub>+u<sub>3</sub>+u<sub>4 </sub></claim-text>
<claim-text>a<sub>2</sub>=u<sub>2 </sub></claim-text>
<claim-text>a<sub>3</sub>=u<sub>3 </sub></claim-text>
<claim-text>a<sub>4</sub>=u<sub>1</sub>.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. A communication method, comprising:
<claim-text>receiving a signal containing at least one block code of a fixed length modulated in a mode selected from a plurality of modulation modes;</claim-text>
<claim-text>decoding the signal by a trellis diagram comprising a plurality of subtrellises to output a decoded code, comprising:
<claim-text>receiving an estimate of the channel impulse response;</claim-text>
<claim-text>determining whether to enable the subtrellises according to the selected mode;</claim-text>
<claim-text>decoding the signal by the enabled subtrellises to output a plurality of local minimum metrics and codes based on the estimate of the channel impulse response;</claim-text>
<claim-text>determining a minimum local minimum metric among the local minimum metrics;</claim-text>
<claim-text>determining states and branches in the trellis diagram based on the selected mode; and</claim-text>
<claim-text>determining branch labels on the branches.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The communication method as claimed in <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the mode is selected from at least one among a high-rate CCK modulation mode, a low-rate CCK modulation mode, a DQPSK Barker sequence modulation mode, and a DBPSK Barker sequence modulation mode.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The communication method as claimed in <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein the trellis diagram is selected from at least one among a high-rate CCK trellis diagram, a low-rate CCK trellis diagram, a DQPSK Barker sequence trellis diagram, and a DBPSK Barker sequence trellis diagram.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The communication method as claimed in <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein the trellis diagram is a high-rate CCK trellis diagram, in which at least one of the low-rate CCK trellis diagram DQPSK Barker sequence trellis diagram, and DBPSK Barker sequence trellis diagrams are embedded as part of the states and branches in the trellis diagram.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The communication method as claimed in <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein reception of the signal comprises receiving the signal on at least one of an additive white Gaussian noise channel, flat fading channel, and intersymbol interference channel.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The communication method as claimed in <claim-ref idref="CLM-00021">claim 21</claim-ref>, further comprising tracking timing and phase of the signal.</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The communication method as carried in <claim-ref idref="CLM-00021">claim 21</claim-ref>, further comprising to generating the signal by encoding an input data in a high-rate CCK modulation mode, and the encoding comprising:
<claim-text>mapping the input data into phase representations u<sub>1</sub>, u<sub>2</sub>, u<sub>3</sub>, and u<sub>4</sub>, based on phase values φ<sub>1</sub>, φ<sub>2</sub>, φ<sub>3</sub>, and φ<sub>4</sub>;</claim-text>
<claim-text>converting the phase representations u<sub>1</sub>, u<sub>2</sub>, u<sub>3</sub>, and u<sub>4 </sub>into variables a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, and a<sub>4 </sub>of a function representing the states in the trellis diagram;</claim-text>
<claim-text>outputting the variables in a selective order to determine odd-phase and even-phase representations of a codeword required to modulate the signal.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The communication method as claimed in <claim-ref idref="CLM-00027">claim 27</claim-ref>, wherein the variables are defined as:
<claim-text>a<sub>1</sub>=u<sub>1</sub>+u<sub>2</sub>+u<sub>3</sub>+u<sub>4 </sub></claim-text>
<claim-text>a<sub>2</sub>=u<sub>2 </sub></claim-text>
<claim-text>a<sub>3</sub>=u<sub>3 </sub></claim-text>
<claim-text>a<sub>4</sub>=u<sub>1 </sub></claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
