<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298904-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298904</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10756930</doc-number>
<date>20040114</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>680</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>K</subclass>
<main-group>9</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>K</subclass>
<main-group>9</main-group>
<subgroup>18</subgroup>
<symbol-position>L</symbol-position>
<classification-value>N</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>382186</main-classification>
</classification-national>
<invention-title id="d0e53">Method and apparatus for scaling handwritten character input for handwriting recognition</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4897638</doc-number>
<kind>A</kind>
<name>Kokunishi et al.</name>
<date>19900100</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>3454723</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5329625</doc-number>
<kind>A</kind>
<name>Kannan et al.</name>
<date>19940700</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>345173</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5911005</doc-number>
<kind>A</kind>
<name>Uchiyama</name>
<date>19990600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382187</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6023529</doc-number>
<kind>A</kind>
<name>Ilan et al.</name>
<date>20000200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382186</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6226403</doc-number>
<kind>B1</kind>
<name>Parthasarathy</name>
<date>20010500</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>382187</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6535619</doc-number>
<kind>B1</kind>
<name>Suwa et al.</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382101</main-classification></classification-national>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6694056</doc-number>
<kind>B1</kind>
<name>Ito et al.</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>382186</main-classification></classification-national>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7013046</doc-number>
<kind>B2</kind>
<name>Kawamura et al.</name>
<date>20060300</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>382186</main-classification></classification-national>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2002/0067854</doc-number>
<kind>A1</kind>
<name>Reintjes et al.</name>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>382199</main-classification></classification-national>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2002/0168107</doc-number>
<kind>A1</kind>
<name>Tang et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>382187</main-classification></classification-national>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2003/0099398</doc-number>
<kind>A1</kind>
<name>Izumi et al.</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2003/0107558</doc-number>
<kind>A1</kind>
<name>Bryborn et al.</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>382179</main-classification></classification-national>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>CN</country>
<doc-number>1302010</doc-number>
<kind>A</kind>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00014">
<document-id>
<country>JP</country>
<doc-number>55138172</doc-number>
<date>19801000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00015">
<document-id>
<country>JP</country>
<doc-number>57121770</doc-number>
<date>19820700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00016">
<document-id>
<country>JP</country>
<doc-number>59144983</doc-number>
<date>19840800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00017">
<document-id>
<country>JP</country>
<doc-number>63208183</doc-number>
<date>19880800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00018">
<document-id>
<country>JP</country>
<doc-number>02110796</doc-number>
<date>19900400</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00019">
<document-id>
<country>JP</country>
<doc-number>06295356</doc-number>
<date>19941000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00020">
<document-id>
<country>JP</country>
<doc-number>07311817</doc-number>
<date>19951100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00021">
<document-id>
<country>JP</country>
<doc-number>08249424</doc-number>
<date>19960900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00022">
<document-id>
<country>JP</country>
<doc-number>10-143610</doc-number>
<date>19980500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00023">
<document-id>
<country>JP</country>
<doc-number>2001236466</doc-number>
<date>20010800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>23</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>382187</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382182</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382183</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382202</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>7</number-of-drawing-sheets>
<number-of-figures>18</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20050152602</doc-number>
<kind>A1</kind>
<date>20050714</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Chen</last-name>
<first-name>Yen-Fu</first-name>
<address>
<city>Austin</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Dunsmoir</last-name>
<first-name>John W.</first-name>
<address>
<city>Round Rock</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Yee</last-name>
<first-name>Duke W.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Mims, Jr.</last-name>
<first-name>David A.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="03" rep-type="attorney">
<addressbook>
<last-name>Williams</last-name>
<first-name>Brandon G.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>International Business Machines Corporation</orgname>
<role>02</role>
<address>
<city>Armonk</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Wu</last-name>
<first-name>Jingge</first-name>
<department>2624</department>
</primary-examiner>
<assistant-examiner>
<last-name>Abdi</last-name>
<first-name>Amara</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method, computer program product, and a data processing system for scaling handwritten character input for performing handwriting recognition. A stroke parameter is derived from a handwritten character stroke and an input area is calculated in which the handwritten character stroke was supplied. The stroke parameter is scaled according to the input area.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="82.21mm" wi="127.25mm" file="US07298904-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="228.77mm" wi="169.93mm" file="US07298904-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="235.12mm" wi="170.26mm" file="US07298904-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="221.66mm" wi="165.69mm" file="US07298904-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="224.45mm" wi="168.32mm" file="US07298904-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="229.53mm" wi="182.54mm" orientation="landscape" file="US07298904-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="233.76mm" wi="140.46mm" file="US07298904-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="206.50mm" wi="126.07mm" file="US07298904-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">The present application is related to commonly assigned and co-pending U.S. patent application Ser. No. 10/756,918 entitled “METHOD AND APPARATUS FOR PERFORMING HANDWRITING RECOGNITION BY ANALYSIS OF STROKE START AND END POINTS”, filed on Jan. 14, 2004, and to commonly assigned and co-pending U.S. patent application Ser. No. 10/756,919 entitled “METHOD AND APPARATUS FOR REDUCING REFERENCE CHARACTER DICTIONARY COMPARISONS DURING HANDWRITING RECOGNITION”, filed on Jan. 14, 2004, and hereby incorporated by reference.</p>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">1. Technical Field</p>
<p id="p-0004" num="0003">The present invention relates generally to an improved data processing system and in particular to a method and apparatus for performing handwriting recognition. Still more particularly, the present invention provides a method and apparatus for scaling handwritten character input for facilitating handwriting recognition.</p>
<p id="p-0005" num="0004">2. Description of Related Art</p>
<p id="p-0006" num="0005">In the field of handwriting recognition, various approaches have been taken by software vendors to provide more accurate recognition of handwriting samples. Written languages that have large character sets, e.g., the Chinese and Korean languages, are particularly problematic for software vendors to develop efficient handwriting recognition algorithms. The Chinese language, for example, includes thousands of characters. Accordingly, a reference character dictionary for performing handwriting recognition of the Chinese language necessarily includes thousands of entries. The data size of the characters maintained in the reference dictionary limits the efficiency for performing handwriting analysis of written Chinese characters.</p>
<p id="p-0007" num="0006">Handwriting recognition solutions require sampling handwritten character strokes during input of the strokes and comparing the samples with reference characters maintained in a reference character dictionary. For example, many handwriting recognition algorithms require construction of an image, such as a bitmap, of the handwritten character for interrogation of a reference character dictionary. For languages including large character sets, thousands of comparisons may be made to identify a potential match. Such techniques are data-intensive and require large processing capacity to effectively implement a handwriting recognition algorithm.</p>
<p id="p-0008" num="0007">A particular problem encountered during comparison of handwritten characters with characters of a reference character dictionary results from variations in the character size input by a user. For example, a user may write a character that consumes a majority of a capture area of the input device. Another user may write the same character at a size that only consumes a fraction of the capture area. The character data of the reference character dictionary is derived from a character set of uniform size. Thus, comparisons of handwritten characters with characters of a reference character dictionary will often result in different character matches due to variations in the character input size.</p>
<p id="p-0009" num="0008">It would be advantageous to provide a handwriting recognition technique that scales character input to improve comparison results of handwritten characters with characters of a reference character dictionary. It would be further advantageous to provide a handwriting recognition technique for scaling a handwritten character stroke parameter according to an input area in which the handwritten stroke was supplied. It would still be further advantageous to rescale a handwritten stroke parameter according to a recalculated input area after entry of subsequent handwritten character strokes.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0010" num="0009">The present invention provides a method, computer program product, and a data processing system for scaling handwritten character input for performing handwriting recognition. A stroke parameter is derived from a handwritten character stroke and an input area is calculated in which the handwritten character stroke was supplied. The stroke parameter is scaled according to the input area.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0011" num="0010">The novel features believed characteristic of the invention are set forth in the appended claims. The invention itself, however, as well as a preferred mode of use, further objectives and advantages thereof, will best be understood by reference to the following detailed description of an illustrative embodiment when read in conjunction with the accompanying drawings, wherein:</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 1</figref> is a pictorial representation of a network of data processing systems in which the present invention may be implemented;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of a data processing system that may be implemented as a server in accordance with a preferred embodiment of the present invention;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram illustrating a data processing system in which the present invention may be implemented;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 4</figref> is a diagram of a computer interface for accepting handwritten character input and displaying candidate characters in accordance with a preferred embodiment of the present invention;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart of the processing performed by a client for collecting handwritten character strokes according to a preferred embodiment of the present invention;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart of stroke parameter calculations performed by the client in accordance with a preferred embodiment of the present invention;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 7</figref> is a diagram illustrating calculation of stroke parameters by the client according to a preferred embodiment of the present invention;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 8</figref> is a flowchart of processing performed by a handwriting recognition algorithm executed by a server according to a preferred embodiment of the present invention;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 9</figref> is a diagrammatic illustration of reference character dictionary records used for identifying candidate characters in accordance with a preferred embodiment of the present invention;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 10A</figref> is a diagram illustrating a capture area and candidate display in a computer interface after user input of a first character stroke in accordance with a preferred embodiment of the present invention;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 10B</figref> is a diagram illustrating the capture area and candidate display described in <figref idref="DRAWINGS">FIG. 10A</figref> after user input of a second character stroke in accordance with a preferred embodiment of the present invention;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 11A</figref> is a diagrammatic illustration of a reference character defined by a record of a reference character dictionary in accordance with a preferred embodiment of the present invention;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIGS. 11B and 11C</figref> are diagrammatic illustrations of two correctly written handwritten characters that correspond to the reference character described in <figref idref="DRAWINGS">FIG. 11A</figref>;</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 12A</figref> is a diagrammatic illustration of a calculation of an input area after input of a first stroke of a character in accordance with a preferred embodiment of the present invention;</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 12B</figref> is a diagrammatic illustration of an input area calculation after input of a second stroke of a character in accordance with a preferred embodiment of the present invention;</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 13</figref> is a flowchart that shows processing performed by a stroke collection algorithm in accordance with a preferred embodiment of the present invention; and</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 14</figref> is a flowchart that shows server-side handwriting recognition processing performed in accordance with a preferred embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
<p id="p-0029" num="0028">With reference now to the figures, <figref idref="DRAWINGS">FIG. 1</figref> depicts a pictorial representation of a network of data processing systems in which the present invention may be implemented. Network data processing system <b>100</b> is a network of computers in which the present invention may be implemented. Network data processing system <b>100</b> contains a network <b>102</b>, which is the medium used to provide communications links between various devices and computers connected together within network data processing system <b>100</b>. Network <b>102</b> may include connections, such as wire, wireless communication links, or fiber optic cables.</p>
<p id="p-0030" num="0029">In the depicted example, server <b>104</b> is connected to network <b>102</b> along with storage unit <b>106</b>. In addition, clients <b>108</b>, <b>110</b>, and <b>112</b> are connected to network <b>102</b>. These clients <b>108</b>, <b>110</b>, and <b>112</b> may be, for example, a personal computer or network computer. In the depicted example, server <b>104</b> provides data, such as HTML documents and attached scripts, applets, or other applications to clients <b>108</b>, <b>110</b>, and <b>112</b>. Clients <b>108</b>, <b>110</b>, and <b>112</b> are clients to server <b>104</b>. Network data processing system <b>100</b> may include additional servers, clients, and other devices not shown.</p>
<p id="p-0031" num="0030">In the depicted example, network data processing system <b>100</b> is the Internet with network <b>102</b> representing a worldwide collection of networks and gateways that use the Transmission Control Protocol/Internet Protocol (TCP/IP) suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high-speed data communication lines between major nodes or host computers, including thousands of commercial, government, educational and other computer systems that route data and messages. Of course, network data processing system <b>100</b> also may be implemented as a number of different types of networks, such as for example, an intranet, a local area network (LAN), or a wide area network (WAN). <figref idref="DRAWINGS">FIG. 1</figref> is intended as an example, and not as an architectural limitation for the present invention. Server <b>104</b> as illustrated is a web server, also referred to as a HTTP server, and includes server software that uses HTTP to serve up HTML documents and any associated files and scripts when requested by a client, such as a web browser. The connection between client and server is usually broken after the requested document or file has been served. HTTP servers are used on Web and Intranet sites.</p>
<p id="p-0032" num="0031">Referring to <figref idref="DRAWINGS">FIG. 2</figref>, a block diagram of a data processing system that may be implemented as a server, such as server <b>104</b> in <figref idref="DRAWINGS">FIG. 1</figref>, is depicted in accordance with a preferred embodiment of the present invention. Data processing system <b>200</b> is an example of a computer that may be used to analyze parameters calculated from handwritten character strokes obtained from one or more of clients <b>108</b>, <b>110</b>, and <b>112</b>. More specifically, data processing system <b>200</b> supplies data that is processed by a client for providing a computer interface on a display device by which a user of the client provides handwritten character input through the use of a pointing device. In the illustrative examples, an application provided to the client by data processing system <b>200</b> derives parameters from character strokes input by the user. A stroke parameter is scaled by calculating an input area and scaling the stroke parameter in relation to the calculated input area and a reference area. The input area is a measure of an area in which the user supplies one or more character strokes. The reference area is a measure of the size of reference characters of the reference character dictionary. A scaling factor is derived from the calculated input area and the reference area. For example, the scaling factor may be calculated as a ratio of the reference area to the calculated input area. The stroke parameter is adjusted up or down based on the scaling factor. The client application then communicates the stroke parameters including the scaled stroke parameter to data processing system <b>200</b>. As an additional stroke is input, the input area and scaling factor may be adjusted. Responsive to receipt of the parameters, data processing system <b>200</b> identifies one or more candidate characters and communicates the candidate characters to the client.</p>
<p id="p-0033" num="0032">A stroke parameter defines an attribute of the stroke input by the user and is compared with a corresponding attribute of a stroke of a reference character in a reference character dictionary by the server. For example, a stroke length parameter may be determined by the client that provides a numerical measure of the length of a handwritten character stroke input by the user. The stroke length parameter is communicated to the server and compared with a reference length parameter of a reference character stroke and a numerical measure is obtained indicating an amount of correspondence between the length of the handwritten character stroke and the length of the reference character stroke. A stroke angle parameter may be determined by the client that provides a numerical measure of the trajectory at which the handwritten character stroke was input. The stroke angle parameter is communicated to the server and compared with a reference angle parameter of a reference character stroke and a numerical measure is obtained indicating an amount of correspondence between the angle of the handwritten character stroke and the angle of the reference character stroke. A center parameter may be determined by the client that identifies a position or coordinate of a center point of the handwritten character stroke. The center parameter is communicated to the server and may be compared with other center parameters of handwritten character strokes to determine a positional relation among the strokes. The positional measure of the handwritten character strokes based on comparison of stroke center parameter may be compared with center parameter relations among reference character strokes to determine a numerical correspondence between the relative position of handwritten character strokes and the relative position of reference character strokes. An angle parameter, length parameter, and center parameter are collectively referred to herein as a stroke parameter set.</p>
<p id="p-0034" num="0033">Results of the length, angle and center parameter comparisons are then evaluated to determine a correspondence between the handwritten character stroke and the reference stroke. The process is repeated by the server for the remaining reference characters of the reference character dictionary. One or more of the reference characters are identified as potential matches with the character being input and are communicated to the client.</p>
<p id="p-0035" num="0034">Data processing system <b>200</b> may be a symmetric multiprocessor (SMP) system including a plurality of processors <b>202</b> and <b>204</b> connected to system bus <b>206</b>. Alternatively, a single processor system may be employed. Also connected to system bus <b>206</b> is memory controller/cache <b>208</b>, which provides an interface to local memory <b>209</b>. I/O bus bridge <b>210</b> is connected to system bus <b>206</b> and provides an interface to I/O bus <b>212</b>. Memory controller/cache <b>208</b> and I/O bus bridge <b>210</b> may be integrated as depicted.</p>
<p id="p-0036" num="0035">Peripheral component interconnect (PCI) bus bridge <b>214</b> connected to I/O bus <b>212</b> provides an interface to PCI local bus <b>216</b>. A number of modems may be connected to PCI local bus <b>216</b>. Typical PCI bus implementations will support four PCI expansion slots or add-in connectors. Communications links to clients <b>108</b>, <b>110</b> and <b>112</b> in <figref idref="DRAWINGS">FIG. 1</figref> may be provided through modem <b>218</b> and network adapter <b>220</b> connected to PCI local bus <b>216</b> through add-in boards.</p>
<p id="p-0037" num="0036">Additional PCI bus bridges <b>222</b> and <b>224</b> provide interfaces for additional PCI local buses <b>226</b> and <b>228</b>, from which additional modems or network adapters may be supported. In this manner, data processing system <b>200</b> allows connections to multiple network computers. A memory-mapped graphics adapter <b>230</b> and hard disk <b>232</b> may also be connected to I/O bus <b>212</b> as depicted, either directly or indirectly. System <b>200</b> runs a handwriting recognition algorithm in accordance with an embodiment of the invention as described more fully below.</p>
<p id="p-0038" num="0037">Those of ordinary skill in the art will appreciate that the hardware depicted in <figref idref="DRAWINGS">FIG. 2</figref> may vary. For example, other peripheral devices, such as optical disk drives and the like, also may be used in addition to or in place of the hardware depicted. The depicted example is not meant to imply architectural limitations with respect to the present invention.</p>
<p id="p-0039" num="0038">The data processing system depicted in <figref idref="DRAWINGS">FIG. 2</figref> may be, for example, an IBM eServer pSeries system, a product of International Business Machines Corporation in Armonk, N.Y., running the Advanced Interactive Executive (AIX) operating system or LINUX operating system.</p>
<p id="p-0040" num="0039">With reference now to <figref idref="DRAWINGS">FIG. 3</figref>, a block diagram illustrating a data processing system is depicted in which the present invention may be implemented. Data processing system <b>300</b> is an example of a client computer, such as client <b>108</b> in <figref idref="DRAWINGS">FIG. 1</figref>, which may be used for receiving a handwritten character from a user and for calculating stroke parameters of the handwritten character. More particularly, data processing system <b>300</b> receives a web page download from system <b>200</b> and, responsive to processing of the web page download, displays a computer interface for input of handwritten characters. Each character stroke of a handwritten character is evaluated for stroke start and end events. Data processing system <b>300</b> calculates an input area and one or more stroke parameters upon determination of the stroke start and end events.</p>
<p id="p-0041" num="0040">Responsive to calculation of the input area and stroke parameters, data processing system <b>300</b> scales one or more of the calculated stroke parameters and communicates the stroke parameters to data processing system <b>200</b> for submission to the handwriting recognition algorithm executed by data processing system <b>200</b>. A candidate character identified by data processing system <b>200</b> is communicated to data processing system <b>300</b> and the user is able to confirm a match between the character being supplied to the client computer interface and the candidate character identified by data processing system <b>200</b>. Additional stroke parameters are calculated as the user continues supplying character strokes to the client computer interface. The input area is adjusted as additional strokes are input and one or more of the stroke parameters are scaled in response to the adjusted input area. The stroke parameters are communicated to system <b>200</b> for further handwriting analysis until a candidate character is confirmed as a match by the user of data processing system <b>300</b>.</p>
<p id="p-0042" num="0041">Data processing system <b>300</b> employs a peripheral component interconnect (PCI) local bus architecture. Although the depicted example employs a PCI bus, other bus architectures such as Accelerated Graphics Port (AGP) and Industry Standard Architecture (ISA) may be used. Processor <b>302</b> and main memory <b>304</b> are connected to PCI local bus <b>306</b> through PCI bridge <b>308</b>. PCI bridge <b>308</b> also may include an integrated memory controller and cache memory for processor <b>302</b>. Additional connections to PCI local bus <b>306</b> may be made through direct component interconnection or through add-in boards. In the depicted example, local area network (LAN) adapter <b>310</b>, SCSI host bus adapter <b>312</b>, and expansion bus interface <b>314</b> are connected to PCI local bus <b>306</b> by direct component connection. In contrast, audio adapter <b>316</b>, graphics adapter <b>318</b>, and audio/video adapter <b>319</b> are connected to PCI local bus <b>306</b> by add-in boards inserted into expansion slots. Graphics adapter <b>318</b> drives a display device <b>107</b> that provides the computer interface, or GUI, for displaying handwritten characters as supplied by the user. Expansion bus interface <b>314</b> provides a connection for a keyboard and mouse adapter <b>320</b>, modem <b>322</b>, and additional memory <b>324</b>. A pointing device such as mouse <b>109</b> is connected with adapter <b>320</b> and enables supply of pointer input to system <b>300</b> by a user. Small computer system interface (SCSI) host bus adapter <b>312</b> provides a connection for hard disk drive <b>326</b>, tape drive <b>328</b>, and CD-ROM drive <b>330</b>. Typical PCI local bus implementations will support three or four PCI expansion slots or add-in connectors.</p>
<p id="p-0043" num="0042">The term “mouse”, when utilized in this document, refers to any type of operating system supported graphical pointing device including, but not limited to, a mouse, track ball, light pen, stylus and touch screen or touch pad, and the like. A pointing device is typically employed by a user of a data processing system to interact with the data processing system's GUI. A “pointer” is an iconic image controlled by a mouse or other such devices, and is displayed on the video display device of a data processing system to visually indicate to the user icons, menus, or the like that may be selected or manipulated.</p>
<p id="p-0044" num="0043">An operating system runs on processor <b>302</b> and is used to coordinate and provide control of various components within data processing system <b>300</b> in <figref idref="DRAWINGS">FIG. 3</figref>. The operating system may be a commercially available operating system, such as Windows XP, which is available from Microsoft Corporation. An object oriented programming system such as Java may run in conjunction with the operating system and provide calls to the operating system from Java programs or applications executing on data processing system <b>300</b>. “Java” is a trademark of Sun Microsystems, Inc. Instructions for the operating system, the object-oriented programming system, and applications or programs are located on storage devices, such as hard disk drive <b>326</b>, and may be loaded into main memory <b>304</b> for execution by processor <b>302</b>.</p>
<p id="p-0045" num="0044">Data processing system <b>300</b> runs a web browser adapted to execute a character stroke collection algorithm in accordance with an embodiment of the invention. Preferably, the stroke collection algorithm is distributed to system <b>300</b> as a Java applet when the browser downloads a document, e.g., an HTML-encoded web page, from system <b>200</b>. Accordingly, the browser executed by data processing system <b>300</b> may be implemented as any one of various well known Java enabled web browsers such as Microsoft Explorer, Netscape Navigator, or the like.</p>
<p id="p-0046" num="0045">Those of ordinary skill in the art will appreciate that the hardware in <figref idref="DRAWINGS">FIG. 3</figref> may vary depending on the implementation. Other internal hardware or peripheral devices, such as flash read-only memory (ROM), equivalent nonvolatile memory, or optical disk drives and the like, may be used in addition to or in place of the hardware depicted in <figref idref="DRAWINGS">FIG. 3</figref>. Also, the processes of the present invention may be applied to a multiprocessor data processing system.</p>
<p id="p-0047" num="0046">As a further example, data processing system <b>300</b> may be a personal digital assistant (PDA) device, which is configured with ROM and/or flash ROM in order to provide non-volatile memory for storing operating system files and/or user-generated data.</p>
<p id="p-0048" num="0047">The depicted example in <figref idref="DRAWINGS">FIG. 3</figref> and above-described examples are not meant to imply architectural limitations. For example, data processing system <b>300</b> also may be a notebook computer or hand held computer in addition to taking the form of a PDA. Data processing system <b>300</b> also may be a kiosk or a Web appliance.</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 4</figref> is a depiction of a GUI <b>400</b> output on display device <b>107</b> when a client connects with server <b>104</b> in accordance with a preferred embodiment of the present invention. GUI <b>400</b> is displayed responsive to the client processing a web page communicated from server <b>104</b>. GUI <b>400</b> is preferably displayed in window <b>404</b> of a web browser interface <b>408</b>. As illustrated in <figref idref="DRAWINGS">FIG. 4</figref>, GUI <b>400</b> includes capture area <b>402</b> for display of handwritten characters supplied to the client and candidate characters identified and communicated to data processing system <b>300</b> by data processing system <b>200</b> according to embodiments of the invention. The user supplies handwritten characters to capture area <b>402</b> via a pointing device such as mouse <b>109</b>. Additionally, GUI <b>400</b> includes candidate character display <b>410</b> for display of the most recently determined candidate characters and for receiving confirmation of a candidate character match by the user.</p>
<p id="p-0050" num="0049">GUI <b>400</b> may also include scaling window <b>442</b> that outputs a scaled version of the handwritten character or handwritten character strokes supplied to capture area <b>402</b>. The graphic output of scaling window <b>442</b> may include scaled-up or scaled-down character strokes that correspond to a handwritten character stroke input by the user into capture area <b>402</b>. In the illustrative example, scaling window <b>442</b> outputs a scaled character <b>401</b> that is derived from character <b>406</b> by scaling character <b>406</b> by a predefined amount. Particularly, scaled character <b>401</b> consists of scaled character strokes <b>413</b>, <b>415</b>, and <b>417</b> that respectively correspond to strokes <b>412</b>, <b>414</b>, and <b>416</b> input by the user into capture area <b>402</b>. Scaling window <b>442</b> provides a visual output with a consistent size and provides a mechanism for providing the user with a uniform visual feedback of the handwritten character data being entered.</p>
<p id="p-0051" num="0050">Scaling window <b>442</b> may be statically dimensioned, that is set to a predefined area of GUI <b>400</b>. Moreover, a scaled stroke displayed in scaling window <b>442</b> may be rescaled after input of a subsequent handwritten stroke by the user. For example, assume stroke <b>412</b> is the first stroke of character <b>406</b> input by the user. Scaled stroke <b>413</b> is derived by scaling handwritten character stroke <b>413</b> to fit within scaling window <b>442</b>. Further assume stroke <b>414</b> is the second stroke of character <b>406</b> input by the user. Scaled stroke <b>415</b> is derived by scaling stroke <b>414</b>. It is preferable that scaled stroke <b>413</b> is rescaled in proportion to scaled stroke <b>415</b> such that both scaled strokes <b>413</b> and <b>415</b> fit within scaling window <b>442</b>. As additional handwritten character strokes are input into capture area <b>402</b>, corresponding scaled strokes are derived from the handwritten input and previously scaled strokes may be rescaled in proportion to one another for display in scaling window <b>442</b>. In accordance with a preferred embodiment of the present invention, scaled strokes displayed in scaling window <b>442</b> are scaled according to an input area that is a portion of the capture area. The input area is calculated from handwritten stroke extrema and a reference area. Calculation of the input area is described more fully below.</p>
<p id="p-0052" num="0051">In the illustrative example, a complete Chinese character <b>406</b> is shown entered into capture area <b>402</b>. Input of character <b>406</b> requires a number of hand strokes. The particular character shown requires input of three strokes <b>412</b>, <b>414</b>, and <b>416</b>. The stroke collection algorithm executed by the client detects the beginning and end of each character stroke supplied to capture area <b>402</b>. Upon detection of a completed stroke, an input area and a stroke parameter set are calculated from the detected stroke. One or more of the stroke parameters are scaled according to the input area as described more fully below. The stroke parameters are then communicated to data processing system <b>200</b> for identification of one or more candidate characters that may match the user input.</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart of the processing performed by the stroke collection algorithm executed by the client according to a preferred embodiment of the invention. The stroke collection algorithm is initiated and a stroke counter i is initialized to zero (step <b>502</b>). The stroke collection algorithm proceeds to poll for a stroke start event (step <b>504</b>). In the depicted example, a stroke start event is a pointing device “down” event, such as depression of a mouse button. Upon detection of a stroke start event, the stroke collection algorithm temporarily records a coordinate of the stroke start event (step <b>506</b>) and proceeds to poll for a stroke end event (step <b>508</b>). In the illustrative examples, a stroke end event is a pointing device “up” event such as release of a mouse button.</p>
<p id="p-0054" num="0053">Upon detection of the stroke end event, a coordinate of the stroke end event is read (step <b>510</b>) and the stroke counter i incremented (step <b>511</b>). A stroke parameter set i is calculated from the stroke start and end coordinates (step <b>512</b>), and one or more of the calculated stroke parameters may be stored by the client (step <b>513</b>). Additionally, an input area i is calculated from the stroke start and end coordinates or from one or more of the calculated stroke parameters (step <b>514</b>). A scaling factor is then derived from the input area and the reference area, and one or more of the stroke parameters are adjusted according to the scaling factor (step <b>515</b>). The stroke parameter set i including the scaled stroke parameter is then communicated to data processing system <b>200</b> for analysis by the handwriting recognition algorithm (step <b>516</b>). An evaluation of whether to continue is made (step <b>517</b>), and the routine returns back to step <b>504</b> to poll for another stroke start event. Otherwise, the routine exits (step <b>518</b>).</p>
<p id="p-0055" num="0054">Other stroke parameters may be derived from a handwritten character stroke and may be communicated to data processing system <b>200</b> with, or in substitution of, the described stroke parameters. For example, the client may measure stroke speed by, for example, calculating a distance between stroke pixels supplied at a predefined time interval. Additionally, stroke ratio measurements may be made by the client. Various other stroke parameters may be derived from the user input. Moreover, the client may calculate additional stroke parameters and temporarily store the additional stroke parameters. Some stroke parameters may be stored by data processing system <b>300</b> and communicated to the data processing system <b>200</b> on an as-needed basis. That is, the handwriting recognition algorithm may be configured to attempt a candidate character identification based on stroke parameters sent to the server upon calculation by the client. The server may request additional stroke parameters from the client if needed, for example to refine stroke parameter and reference parameter comparison results.</p>
<p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart <b>550</b> of processing performed by a stroke parameter calculation subroutine of the stroke collection algorithm in accordance with a preferred embodiment of the present invention. The processing steps shown and described in <figref idref="DRAWINGS">FIG. 6</figref> correspond to step <b>512</b> of <figref idref="DRAWINGS">FIG. 5</figref>. Calculation of the stroke parameter set i is initiated upon detection of a stroke start event and subsequent stroke end event (step <b>552</b>). A stroke length parameter is calculated from stroke start and end point coordinates (step <b>554</b>). For example, pointer icon coordinates corresponding to the stroke start and end events may be algebraically processed to determine a linear “length” measure between the stroke start and end points. Additionally, a stroke angle parameter is calculated through, for example, trigonometric relations of the stroke start and end coordinates and provides a directional measure of the stroke (step <b>556</b>). A stroke center parameter is preferably calculated (step <b>558</b>) and may be derived from the stroke length and angle parameters and one of the stroke start and end event coordinates. Upon calculation of the stroke parameters, the stroke parameter calculation subroutine exits (step <b>560</b>).</p>
<p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. 7</figref> is a diagram illustrating calculation of stroke parameters by the stroke collection algorithm according to a preferred embodiment of the invention. A stroke start event is detected in response to a suitable command provided to a pointing device such as mouse <b>109</b>. For example, a stroke start event may be detected in response to a mouse “down” event, or initiation of a mouse drag operation by depression of a mouse <b>109</b> button, while the mouse pointer is located within collection area <b>402</b>. Alternatively, a stroke start event may be determined in response to a stylus down event detected on a touch pad if handwritten characters are provided to a touch pad. A start point <b>420</b> of stroke <b>412</b> is identified and corresponds to the mouse position when the stroke start event is detected. Alternatively, start point <b>420</b> corresponds to a stylus position on a touch pad when the stroke start event is detected. As mouse <b>109</b> is moved, stroke <b>412</b> is displayed within capture area <b>402</b> according to the movement of the mouse supplied by the user. A stroke end event is detected in response to a suitable command provided to mouse <b>109</b> such as a mouse “up” or button release event. Alternatively, the stroke end event may be detected in response to a stylus up event detected on a touch pad if handwritten characters are provided to a touch pad. An end point <b>422</b> of stroke <b>412</b> is identified and corresponds to the mouse or stylus position when the stroke end event is detected.</p>
<p id="p-0058" num="0057">A coordinate system, e.g., a Cartesian coordinate system, is used for tracking the position of the mouse and associating respective coordinates with start and end points <b>420</b> and <b>422</b>. In the present example, stroke <b>412</b> has start point <b>420</b> with an x-coordinate of 7 and a y-coordinate of 10. Stroke <b>412</b> has end point <b>422</b> with an x-coordinate of 7 and a y-coordinate of 3. After the start and end point pair of stroke <b>412</b> are detected, one or more stroke parameters are derived from the start and end point coordinates for submission to the handwriting recognition algorithm running on data processing system <b>200</b>. In accordance with a preferred embodiment of the invention, a stroke length parameter (L), a stroke angle parameter (θ), and a stroke center parameter (C) are calculated from the start and end point coordinates. For example, the stroke length may be calculated by algebraic manipulation of the start and end point coordinates. The stroke angle parameter is derived from the start and end point coordinates, for example by a computer-implemented trigonometric relation between the coordinates of stroke start and end points <b>420</b> and <b>422</b>.</p>
<p id="p-0059" num="0058">Additionally, the stroke center parameter is calculated by a computer-implemented trigonometric computation using one of the start and end point coordinates, the stroke length parameter and the stroke angle parameter as operands. The stroke center parameter is a coordinate of a calculated center point of stroke <b>412</b>. In the preferred embodiment, the stroke parameters are calculated by approximating the stroke as a linear motion. Accordingly, all stroke parameters may be derived using only the stroke start and end point coordinates. One or more of the stroke parameters are scaled and are transmitted to data processing system <b>200</b> by way of network <b>102</b>.</p>
<p id="p-0060" num="0059">Notably, the stroke collection algorithm running on client system <b>300</b> does not wait until character completion by the user before attempting to identify the character being input by the user. Accordingly, communication of a stroke parameter set derived from one stroke input may be made to data processing system <b>200</b> concurrently with supply of a subsequent stroke by the user. Preferably the stroke collection algorithm described with reference to <figref idref="DRAWINGS">FIGS. 5-7</figref> is implemented as a Java applet that is downloaded as a Web page attachment when data processing system <b>200</b> connects with data processing system <b>300</b>.</p>
<p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. 8</figref> is a flowchart <b>600</b> of processing performed by the handwriting recognition algorithm executed by data processing system <b>200</b> according to a preferred embodiment of the invention. The handwriting recognition algorithm is initiated upon receipt of a stroke parameter set from the client system (step <b>602</b>). A reference character dictionary look-up is performed responsive to receipt of the stroke parameter set (step <b>604</b>). The reference character dictionary may be, for example, implemented as a table, file system, or another suitable data structure. In general, the reference character dictionary comprises attributes of each character of the dictionary that are able to be matched with stroke parameters calculated from the user supplied handwritten character strokes.</p>
<p id="p-0062" num="0061">More particularly, the reference character dictionary includes attributes of each stroke, such as stroke length, angle, and center parameters. Stroke length, angle, and center parameters of a reference character stroke are collectively referred to herein as a reference parameter set. The reference parameters maintained in the reference character dictionary for a particular reference character entry are compared with a corresponding stroke parameter of the stroke parameter set communicated to the server by the client. A numerical measure, or match probability, of a correspondence between the stroke parameter set and reference parameter sets is generated for one or more of the reference characters defined in the reference character dictionary.</p>
<p id="p-0063" num="0062">A number N of possible character matches, or candidate characters, are retrieved from the reference character dictionary and are communicated to system <b>300</b> (step <b>606</b>). The number of candidate characters retrieved from the reference character dictionary may be coded into the handwriting recognition algorithm or may be provided by the client.</p>
<p id="p-0064" num="0063">Alternatively, character entries of the reference character dictionary having respective reference parameters that result in match probabilities in excess of a predefined threshold may be selected as candidate characters for communication to the client. Data processing system <b>200</b> awaits a response from the client (step <b>608</b>). An evaluation of whether the client confirms any of the candidate characters as a match with the character being input is made (step <b>610</b>).</p>
<p id="p-0065" num="0064">If the client provides a response that none of the N candidate characters correspond to the handwritten character being input or fails to confirm a candidate character match, handwriting recognition processing proceeds to await for receipt of an additional stroke parameter set (step <b>612</b>). Another interrogation of the reference character dictionary is performed upon receipt of an additional stroke parameter set.</p>
<p id="p-0066" num="0065">If the client response confirms one of the N candidate characters as a character match corresponding to the handwritten character, the handwriting recognition processing terminates (step <b>614</b>). Thus, the reference character dictionary interrogation continues for each stroke of the character supplied by the user until a candidate character obtained by the handwriting recognition algorithm is confirmed as a match by the user. Preferably, the handwriting recognition algorithm illustrated and described with reference to <figref idref="DRAWINGS">FIG. 8</figref> is implemented as a Java servlet. A more detailed processing description of the handwriting recognition algorithm is described below with reference to <figref idref="DRAWINGS">FIG. 14</figref>.</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 9</figref> is a diagrammatic illustration of records <b>720</b>-<b>725</b> of reference character dictionary <b>700</b>. Typically, a reference character dictionary of Chinese characters will have thousands of records. The records shown and described are chosen only to facilitate an understanding of the invention. Reference character dictionary <b>700</b> is implemented as a table having records <b>720</b>-<b>725</b> that respectively include data elements in respective fields <b>710</b>-<b>718</b>, but other data structures may be suitably substituted. Fields <b>710</b>-<b>718</b> typically have a name, or identifier, that facilitates insertion, deletion, querying, and processing of other data operations or manipulations of dictionary <b>700</b>. In the illustrative example, fields <b>710</b>, <b>711</b>, and <b>712</b> have respective labels of character number, character, and strokes. Fields <b>713</b>-<b>717</b> are labeled reference parameter set1-reference parameter set5, respectively. Field <b>718</b> has a label of audio in this example. Reference parameter set fields <b>714</b>-<b>717</b> contain reference parameter sets for respective records <b>720</b>-<b>725</b>.</p>
<p id="p-0068" num="0067">Each record <b>720</b>-<b>725</b> contains a unique index number in key field <b>710</b> for distinguishing a particular record from other dictionary <b>700</b> entries. Addressing a particular record via an associated key field <b>710</b> value is referred to herein as indexing of the record. The character field <b>711</b> includes image data of the reference character defined by respective records <b>720</b>-<b>725</b>. For example, record <b>723</b> has an image file, or a reference to an image file such as an address of the image file, in character field <b>711</b> that corresponds to the handwritten character supplied to the computer interface described with reference to <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0069" num="0068">Strokes field <b>712</b> contains a data element having a value that specifies the number of constituent character strokes of the reference character defined by respective records <b>720</b>-<b>725</b>. For example, the character having attributes defined by record <b>723</b> consists of a vertical stroke and two horizontal strokes, and strokes field <b>712</b> accordingly contains the value of three in record <b>723</b>. Reference parameter set fields <b>713</b>-<b>717</b> include a reference parameter set for each stroke of the character described by respective records <b>720</b>-<b>725</b>. Reference parameter set fields <b>713</b>-<b>715</b> of record <b>723</b>, for instance, respectively include a reference parameter set of a stroke of the character defined by record <b>723</b>, and reference parameter set fields <b>716</b> and <b>717</b> are nulled. Reference parameters stored in reference parameter set fields <b>713</b>-<b>717</b> are preferably derived according to a fixed reference character size, or reference area. For example, a size of the reference characters from which the reference parameters are derived may be a fixed pixel volume or area. Additionally, an audio field <b>718</b> may be included in dictionary <b>700</b> that contains, or references, an audio file that is an audio recording of a correct pronunciation of the character defined in respective records <b>720</b>-<b>725</b>.</p>
<p id="p-0070" num="0069">Upon receipt of a stroke parameter set, system <b>200</b> interrogates the reference dictionary. In general, the handwriting recognition algorithm cycles through the entries of dictionary <b>700</b> and compares the stroke parameters of the stroke parameter set with corresponding parameters of the reference parameter set. For example, the length parameter of the stroke parameter set is compared with the length parameter of reference parameter sets of the reference character dictionary. Likewise, the angle and center parameters of the stroke parameter set are compared with respective angle and center parameters of reference parameter sets. Match probabilities are generated in response to the comparison of the stroke parameter set with the reference parameter sets. In response to an evaluation of the match probabilities, one or more candidate characters are selected by the server and returned to data processing system <b>300</b> for display in candidate character display <b>410</b>. For example, data processing system <b>200</b> may communicate to the client images as identified in character field <b>711</b> of the three reference character dictionary entries having the highest match probabilities obtained from the dictionary interrogation. Additionally, audio files of the candidate characters may be communicated to the client with the candidate character images.</p>
<p id="p-0071" num="0070">With reference now to <figref idref="DRAWINGS">FIG. 10A</figref>, a diagrammatic illustration of capture area <b>402</b> and candidate display <b>410</b> is shown after user input of a first stroke <b>412</b> of character <b>406</b>. A stroke parameter set for stroke <b>412</b> is calculated by the client. An input area is then calculated as described more fully below and at least one of the calculated stroke parameters are scaled in relation to the input area and the reference area. The stroke parameter set including a scaled stroke parameter is then communicated to data processing system <b>200</b> for identification of candidate characters. Data processing system <b>200</b> interrogates the reference character dictionary with the stroke parameter set and identifies one or more candidate characters based on a comparison of the stroke parameter set and reference parameter sets of records <b>720</b>-<b>725</b>. The candidate characters identified by data processing system <b>200</b> are communicated to the client for output in candidate display <b>410</b>. In the illustrative example, three candidate characters <b>430</b>, <b>432</b>, and <b>434</b> have been identified and are displayed in candidate display <b>410</b>. If a candidate character identified by system <b>200</b> matches the character being input to the client, the user is able to select the correct candidate character in candidate display <b>410</b>. In the present example, none of the candidate characters identified after input of first stroke <b>412</b> match character <b>406</b> being written by the user.</p>
<p id="p-0072" num="0071">With reference now to <figref idref="DRAWINGS">FIG. 10B</figref>, a diagrammatic illustration of capture area <b>402</b> and candidate display <b>410</b> after user input of first and second strokes <b>412</b> and <b>414</b> of character <b>406</b> is shown. A stroke parameter set for stroke <b>414</b> is calculated and the input area may be adjusted, or recalculated, in accordance with first and second strokes <b>412</b> and <b>414</b>. At least one of the stroke parameters calculated for second stroke <b>414</b> may be scaled according to the adjusted input area. The stroke parameter set of second stroke <b>414</b> is then communicated to system <b>200</b> for an additional interrogation of reference character dictionary <b>700</b>. Additionally, the stroke parameter set of first stroke <b>412</b> stored by the client may be retrieved and rescaled according to the input area calculated after input of second stroke <b>414</b>. The rescaled stroke parameter set of first stroke <b>412</b> is communicated to data processing system with the scaled stroke parameter set of second stroke <b>414</b>. Data processing system <b>200</b> interrogates reference character dictionary <b>700</b> with the stroke parameter set calculated by the client from stroke <b>414</b> and identifies one or more candidate characters. The candidate characters identified by data processing system <b>200</b> are communicated to the client for output in candidate display <b>410</b>. In the illustrative example, candidate characters <b>430</b> and <b>432</b> have been eliminated as candidates after the second interrogation of the reference character dictionary and new candidate characters <b>436</b> and <b>438</b> have been identified and communicated to the client for output in candidate display <b>410</b>. Candidate character <b>436</b> matches the character being supplied to capture area <b>402</b>. The user confirms that candidate character <b>436</b> matches the character being entered by, for example, positioning the pointer within the display area of candidate character <b>436</b> and providing an input to the mouse. The client provides a confirmation message to system <b>200</b> upon supply of the confirmation input by the user. Preferably, the candidate character selected by the user from candidate display <b>410</b> is then displayed in collection area <b>402</b> and an audio playback of the selected character may be output by data processing system <b>200</b>. The user may then begin input of an additional character within capture area <b>402</b>.</p>
<p id="p-0073" num="0072">In accordance with a preferred embodiment of the present invention, at least one of the stroke parameters of a stroke parameter set are scaled according to a calculated input area in which the user supplies a handwritten character stroke. Preferably, the length parameter derived from stroke start and end points is scaled according to the input area in which the user supplies the handwritten character strokes. A input area, as referred to herein, is an area that bounds a character stroke, or strokes, at stroke coordinate extrema. The input area is calculated after determination of a stroke start and end point. The scaling of a stroke parameter is performed by determining a scaling factor derived from the calculated input area and a reference area.</p>
<p id="p-0074" num="0073">In an exemplary embodiment, the scaling factor is a ratio of the reference area to the most recently calculated input area. Consider, for example, <figref idref="DRAWINGS">FIG. 11A</figref> that shows a diagrammatic illustration of reference character <b>800</b> defined by record <b>723</b> of reference character dictionary <b>700</b> of <figref idref="DRAWINGS">FIG. 9</figref>. Attributes, particularly reference parameters of length, angle, and center, of reference character <b>800</b> are specified by reference parameter fields <b>713</b>-<b>715</b>. For illustrative purposes, assume attributes of reference character stroke <b>802</b> are defined by the reference parameter set stored in field <b>713</b> of record <b>723</b>. Thus, the reference length parameter L6 is representative of a length of the topmost horizontal stroke of reference character <b>800</b> and provides a basis for identifying a correspondence, or lack thereof, between a length of a stroke input by the user and the topmost horizontal stroke of reference character <b>800</b>.</p>
<p id="p-0075" num="0074">A potential character match between a handwritten character being input and a reference character is made by determining the correspondence between parameters derived from handwritten character strokes being input by the user and the reference parameters of records <b>720</b>-<b>725</b>. Thus, variations in handwritten character identification may result from the size at which a user inputs a character. For example, <figref idref="DRAWINGS">FIGS. 11B and 11C</figref> are diagrammatic illustrations of two correctly written handwritten characters <b>810</b> and <b>820</b> that correspond to reference character <b>800</b>. That is, stroke length ratios, directions, and relative positions among the strokes of characters <b>810</b> and <b>820</b> generally conform to reference character <b>800</b>. However, handwritten character <b>810</b> is written at a much smaller font size than is handwritten character <b>820</b>. Thus, when comparing a length parameter of a reference character stroke with a length parameter of a handwritten stroke such as handwritten stroke <b>812</b> or <b>822</b> of handwritten characters <b>810</b> and <b>820</b>, a match may not be properly identified due to the user supplying the stroke at a different size than that at which the reference character parameters were derived. Accordingly, the present invention provides a technique for scaling input strokes according to a calculated input area in which the character is being input.</p>
<p id="p-0076" num="0075">The present invention utilizes reference area <b>805</b> associated with reference characters defined by reference character dictionary <b>700</b> that provides a mechanism for providing a relational measure between the reference character size and the size of a character being input by the user. As referred to herein, a reference area is a predefined area in which each of the reference characters of the reference character dictionary may be contained.</p>
<p id="p-0077" num="0076">With reference now to <figref idref="DRAWINGS">FIG. 12A</figref>, a diagrammatic illustration is shown of a calculation of input area <b>440</b> after input of first stroke <b>412</b> of a handwritten character stroke in accordance with a preferred embodiment of the present invention. Input area <b>440</b> is illustratively denoted with dashed lines and may or may not be displayed in the capture area of the computer interface. Preferably, input area <b>440</b> is calculated to bound the x-coordinate and y-coordinate extrema of any strokes input by the user. First stroke <b>412</b> has start point <b>420</b> and end point <b>422</b> having coordinates (x<sub>1</sub>, y<sub>1</sub>) and (x<sub>2</sub>, y<sub>2</sub>), respectively. The length parameter L<sub>1 </sub>of stroke <b>412</b> is calculated by, for example, a computer-implemented Pythagorean theorem calculation performed by the stroke collection algorithm according to equation 1:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>L</i><sub>1</sub>=√{square root over (<i>x</i><sub>2</sub><i>−x</i><sub>1</sub>)<sup>2</sup>+(<i>y</i><sub>2</sub><i>−y</i><sub>1</sub>)<sup>2</sup>)}{square root over (<i>x</i><sub>2</sub><i>−x</i><sub>1</sub>)<sup>2</sup>+(<i>y</i><sub>2</sub><i>−y</i><sub>1</sub>)<sup>2</sup>)}  equation 1<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0078" num="0077">After input of a single stroke, input area <b>440</b> having an area A<sub>c1 </sub>may be calculated from the length parameter L<sub>1</sub>. In the illustrative example, input area <b>440</b> bounds stroke <b>412</b> at coordinate extrema of stroke <b>412</b> and is a square having side lengths H and W equal to the length parameter L<sub>1 </sub>of first stroke <b>412</b>, that is:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>A</i><sub>c1</sub>=(<i>x</i><sub>2</sub><i>−x</i><sub>1</sub>)<sup>2</sup>+(<i>y</i><sub>2</sub>−y<sub>1</sub>)<sup>2</sup>.  equation 2<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0079" num="0078">The length parameter L<sub>1 </sub>is then scaled according to a scaling factor derived from the input area and the reference area. The reference area is preferably communicated to data processing system <b>300</b> on connection with data processing system <b>200</b>. That is, the reference area is coded into the stroke collection algorithm conveyed to the client. An exemplary scaling calculation of the length parameter is calculated according to the following:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>L</i><sub>S1</sub>=(<i>A</i><sub>r</sub><i>/A</i><sub>C1</sub>)<i>L</i><sub>1</sub>,  equation 3<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where L<sub>S1 </sub>is the scaled length parameter of first stroke <b>412</b>, A<sub>r </sub>is the predefined reference area, L<sub>1 </sub>is the length parameter of first stroke <b>412</b>, and A<sub>C1 </sub>is the input area calculated after input of first stroke <b>412</b>. The ratio of reference area to input area A<sub>r</sub>/A<sub>c </sub>is the scaling factor.
</p>
<p id="p-0080" num="0079">Thus, a length parameter calculated from an oversized input stroke is adjusted down in proportion to the scaling factor. A length parameter calculated from an undersized input stroke is adjusted up by the scaling factor.</p>
<p id="p-0081" num="0080">The stroke parameter set for stroke <b>412</b> including the scaled length parameter is communicated to data processing system <b>200</b> for identification of candidate characters as described above.</p>
<p id="p-0082" num="0081">For illustrative purposes, assume that none of the candidate characters identified by data processing system <b>200</b> match the character being input by the user. With reference now to <figref idref="DRAWINGS">FIG. 12B</figref>, a diagrammatic illustration of an input area calculation after user input of second stroke <b>414</b> of a handwritten character in accordance with a preferred embodiment of the present invention is shown. Preferably, the input area is calculated based on x- and y-coordinate stroke extrema when two or more strokes have been input by the user. An exemplary calculation of the input area when two or more strokes have been entered by the user is provided by the following
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>A</i><sub>ci</sub>=(<i>x</i><sub>max</sub><i>−x</i><sub>min</sub>)×(<i>y</i><sub>max</sub><i>−y</i><sub>min</sub>),  equation 4<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where A<sub>ci </sub>is the input area calculated after input of the i<sup>th </sup>stroke with i begin at least two, x<sub>max </sub>is the rightmost x-coordinate of any start or end point of a user entered stroke, x<sub>min </sub>is the leftmost x-coordinate of any start or end point of a user entered stroke, y<sub>min </sub>is the lowermost y-coordinate of any start or end point of a user entered stroke, and y<sub>max </sub>is the uppermost y-coordinate of any start or end point of a user entered stroke.
</p>
<p id="p-0083" num="0082">In the illustrative example, second stroke <b>414</b> has a start point <b>424</b> and end point <b>426</b> with x- and y-coordinates of (x<sub>3</sub>, y<sub>3</sub>) and (x<sub>4</sub>, y<sub>4</sub>), respectively. The stroke collection algorithm evaluates start and end point coordinates of first and second strokes <b>412</b> and <b>414</b>. In the illustrative example, the leftmost x-coordinate is identified as the x-coordinate of second stroke <b>414</b> start point <b>424</b>, and the rightmost x-coordinate is identified as the x-coordinate of second stroke <b>414</b> end point <b>426</b>. In a similar manner, the lowermost y-coordinate of input area <b>440</b> is identified as the y-coordinate of first stroke <b>412</b> end point <b>422</b>, and the uppermost y-coordinate is identified as the y-coordinate of first stroke <b>412</b> start point <b>420</b>. Thus, the input area of the illustrative example is calculated as:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>A</i><sub>c2</sub>=(<i>x</i><sub>4</sub><i>−x</i><sub>3</sub>)×(<i>y</i><sub>1</sub><i>−y</i><sub>2</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0084" num="0083">The length parameter of stroke <b>414</b> is then scaled according to the ratio of the reference area to the newly calculated input area according to the following:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>L</i><sub>S2</sub>=(<i>A</i><sub>r</sub><i>/A</i><sub>C2</sub>)<i>L</i><sub>2</sub>,<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0085" num="0084">where L<sub>S2 </sub>is the scaled length parameter of second stroke <b>414</b>, A<sub>C2 </sub>is the input area calculated after input of second stroke <b>414</b>, and L<sub>2 </sub>is the length parameter of second stroke <b>414</b>. The stroke parameter set including scaled length parameter L<sub>S2 </sub>is communicated to data processing system <b>200</b> for interrogation of reference character dictionary <b>700</b>.</p>
<p id="p-0086" num="0085">Preferably, data processing system <b>300</b> temporarily stores each length parameter calculated from a character stroke until a match is identified by data processing system <b>200</b> and is confirmed at data processing system <b>300</b>. It is additionally preferable that length parameters calculated from previous stroke inputs are scaled according to the most recently calculated input area and are communicated to data processing system <b>200</b> with the most recent stroke parameter set. For instance, the length parameter L<sub>1 </sub>calculated from first stroke <b>412</b> may be rescaled according to the input area A<sub>C2 </sub>calculated after input of second stroke <b>414</b>. The rescaled length parameter for first stroke <b>412</b> is then communicated to data processing system <b>200</b> with the stroke parameter set of second stroke <b>414</b>. Accordingly, the handwriting recognition algorithm may interrogate reference character dictionary with length parameters of multiple strokes that are scaled according to the most recently calculated input area.</p>
<p id="p-0087" num="0086">With reference now to <figref idref="DRAWINGS">FIG. 13</figref>, flowchart <b>900</b> shows processing performed by the stroke collection algorithm executed by data processing system <b>300</b> in accordance with a preferred embodiment of the present invention. The stroke collection algorithm is invoked and a stroke counter index i is initialized to 1 (step <b>902</b>). Input of stroke i is detected (step <b>904</b>) and stroke coordinates are determine for stroke i (step <b>906</b>). A stroke parameter set i is calculated including a length parameter L<sub>i</sub>, an angle parameter Θ<sub>i</sub>, and a center parameter C<sub>i</sub>. An input area i is calculated in accordance with the input stroke i (step <b>910</b>) and the calculated stroke length parameter L<sub>i </sub>may be temporarily stored (step <b>912</b>). A scaled length parameter L<sub>si </sub>is next calculated as described above (step <b>914</b>).</p>
<p id="p-0088" num="0087">An index j is set to the current stroke count (step <b>916</b>) and an evaluation is made to determine if the current stroke parameter set is derived from a first stroke input (step <b>918</b>). If the current stroke parameter set is not derived from the first stroke, that is if index j is greater than 1, the index j is decremented (step <b>920</b>) and the previous length parameter L<sub>j </sub>is retrieved and scaled according to the most recent input area i calculation (step <b>922</b>). Processing then returns back to step <b>918</b>. The stroke collection algorithm continues resealing previously received stroke length parameters until the first stroke parameter L<sub>1 </sub>has been rescaled according to the most recent input area i calculation.</p>
<p id="p-0089" num="0088">The stroke collection algorithm then sends the scaled parameter set i calculated from the current stroke to the client (step <b>924</b>). The scaled parameter set i includes the angle parameter Θ<sub>i </sub>and center parameter C<sub>i </sub>calculated from start and end points of stroke i and the scaled length parameter L<sub>si</sub>. Additionally, the stroke collection algorithm sends any rescaled length parameter to the client (step <b>926</b>). The scaled length parameter set i and any rescaled length parameter L<sub>sj </sub>through L<sub>s(i-1) </sub>are preferably communicated to data processing system <b>200</b> as a single data package, e.g., in a single HTTP session between data processing system <b>300</b> and data processing <b>200</b>.</p>
<p id="p-0090" num="0089">The stroke collection algorithm then evaluates whether an additional stroke input is made (step <b>928</b>). If an additional stroke is entered, the stroke index counter i is incremented (step <b>930</b>) and the stroke collection algorithm returns back to step <b>906</b>. Otherwise, the stroke collection algorithm exits (step <b>932</b>).</p>
<p id="p-0091" num="0090">Referring again to <figref idref="DRAWINGS">FIGS. 11A-11C</figref>, it was previously noted that comparison of a stroke length parameter with a reference length parameter without scaling of the stroke length parameter may produce undesirable comparison results due to differences in the input character size supplied by the user and the reference area from with reference stroke parameters are derived.</p>
<p id="p-0092" num="0091">Notably, however, angle parameter calculations made from handwritten character strokes do not depend on the input size of the character. For instance, each of strokes <b>812</b> and <b>822</b> of handwritten characters <b>810</b> and <b>820</b> would result in equivalent angle parameters for the respective strokes although handwritten characters <b>810</b> and <b>820</b> are of two different sizes. It should also be noted that as additional strokes of a character being input are entered by the user, the recalculated input area becomes a more accurate indication of the area in which the user is supplying the character.</p>
<p id="p-0093" num="0092">In accordance with another embodiment of the present invention, the server applies a greater weight to comparisons made between reference angle parameters and stroke angle parameters for the initial comparison, or an initial set of comparisons, due to the reliability of the angle parameter as a stroke attribute measurement that is not dependent on the input stroke size.</p>
<p id="p-0094" num="0093">With reference now to <figref idref="DRAWINGS">FIG. 14</figref>, flowchart <b>1000</b> shows server-side handwriting recognition processing performed by data processing system <b>200</b> for interrogating reference character dictionary <b>700</b> in accordance with a preferred embodiment of the present invention. The handwriting recognition algorithm is invoked. A stroke counter i is initialized to one, and a record index counter k is initialized to zero (step <b>1002</b>). A scaled stroke parameter set i is received from the client (step <b>1004</b>) and is compared with reference parameter sets of record k of reference character dictionary <b>700</b> (step <b>1006</b>). The results of comparisons between the stroke angle parameter of stroke parameter set i and reference angle parameter(s) of record k are weighted as a function of the stroke number, that is as a function of i (step <b>1008</b>).</p>
<p id="p-0095" num="0094">Preferably, results of comparisons made between the stroke angle parameter and reference angle parameters are most heavily weighted for an initial stroke parameter set and are then reduced for subsequent stroke parameter set comparisons. The advantage of weighting the comparison results of the stroke angle parameter and reference angle parameters for the earliest entered strokes of the handwritten character is gained due to the stroke angle parameter providing an accurate stroke attribute measure regardless of the input size of the stroke supplied by the user. It is preferable that the weight of the angle parameter comparison in determining a candidate character is reduced for one or more subsequent strokes after an initial stroke parameter set comparison.</p>
<p id="p-0096" num="0095">The handwriting recognition algorithm then proceeds to evaluate whether additional records remain in reference character dictionary <b>700</b> for comparison with the current stroke parameter set i (step <b>1010</b>). If additional records remain for comparison with the current stroke parameter set i, the record index counter k is incremented (step <b>1012</b>) and processing returns to step <b>1006</b> for comparison of the stroke parameter set i with the next reference character dictionary record. Alternatively, the handwriting recognition algorithm proceeds to identify a candidate character based on results of the comparisons between the stroke parameter set i and reference parameter sets of the reference character dictionary records (step <b>1014</b>). The candidate character is then sent to the client (step <b>1016</b>) and an evaluation of whether a match between the candidate character and the character being entered at the client is made (step <b>1018</b>). If a match is not confirmed, the handwriting recognition algorithm proceeds to increment the stroke counter i (step <b>1020</b>) and awaits receipt of the next stroke parameter set (step <b>1021</b>). Alternatively, the handwriting recognition algorithm exits (step <b>1022</b>).</p>
<p id="p-0097" num="0096">As described, the present invention provides a methodology and computer program product for scaling a handwritten character stroke parameter according to an input area in which a handwritten character stroke is supplied. A stroke length parameter and an input area are calculated from a detected handwritten character stroke start point and end point. The stroke length parameter is scaled according to the input area and a reference area that provides a relational measure of a reference character size from which reference character parameters are derived. The scaled stroke length parameter is supplied to a handwriting recognition algorithm and is used for identifying candidate characters that may match a character being input at a client. Comparison results between the stroke parameters and reference parameters of a reference character dictionary are thus improved.</p>
<p id="p-0098" num="0097">It is important to note that while the present invention has been described in the context of a fully functioning data processing system, those of ordinary skill in the art will appreciate that the processes of the present invention are capable of being distributed in the form of a computer readable medium of instructions and a variety of forms and that the present invention applies equally regardless of the particular type of signal bearing media actually used to carry out the distribution. Examples of computer readable media include recordable-type media, such as a floppy disk, a hard disk drive, a RAM, CD-ROMs, DVD-ROMs, and transmission-type media, such as digital and analog communications links, wired or wireless communications links using transmission forms, such as, for example, radio frequency and light wave transmissions. The computer readable media may take the form of coded formats that are decoded for actual use in a particular data processing system.</p>
<p id="p-0099" num="0098">The description of the present invention has been presented for purposes of illustration and description, and is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. The embodiment was chosen and described in order to best explain the principles of the invention, the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for scaling handwritten character input for performing handwriting recognition, the method comprising the computer implemented steps of:
<claim-text>deriving a first stroke parameter from a first handwritten character stroke;</claim-text>
<claim-text>calculating an input area in which the first handwritten character stroke was supplied; and</claim-text>
<claim-text>scaling the first stroke parameter according to the input area, wherein scaling comprises multiplying the first stroke parameter with a ratio of a reference area to the input area.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step of deriving includes:
<claim-text>detecting a first start point and first end point of the first handwritten character stroke.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first input area bounds the first handwritten character stroke at a first coordinate extrema of the first handwritten character stroke.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step of deriving includes:
<claim-text>calculating a first length parameter of the first handwritten character stroke.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the step of calculating includes:
<claim-text>squaring the first length parameter of the first handwritten character stroke.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further including:
<claim-text>determining first coordinates of a first start point and first end point of the first handwritten character stroke;</claim-text>
<claim-text>determining second coordinates of a second start point and a second end point of a second handwritten character stroke, wherein the step of calculating includes identifying first coordinate extrema of the first coordinates of the first handwritten character stroke and second coordinate extrema of the second coordinates second handwritten character stroke.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A computer program product in a recordable-type medium for scaling a parameter derived from a handwritten character stroke, the computer program product comprising:
<claim-text>first instructions for determining a first start point and a first end point of a first stroke input into a computer interface, responsive to determination of the first start point and the first end point, calculating a first stroke length parameter of the first stroke; and</claim-text>
<claim-text>second instructions for calculating an input area in which the first stroke was supplied and, responsive to calculating the input area, scaling the first stroke length parameter of the first stroke according to the input area, wherein scaling comprises multiplying the first stroke length parameter with a ratio of a reference area to the input area.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The computer program product of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the input area bounds the first stroke at first coordinate extrema of the first stroke.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The computer program product of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the second instructions scale the first stroke length parameter of the first stroke as a ratio of a reference area to the input area.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The computer program product of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the first instructions further determine a second start point and a second end point of a second stroke input into the computer interface, and responsive to determination of the second start point and the second end point; and wherein the second instructions, responsive to the first instructions determining a second start point and a second end point of a second stroke input into the computer interface, recalculate the input area to determine a recalculated input area.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The computer program product of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the first instructions calculate a second stroke length parameter of the second stroke.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The computer program product of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the second instructions rescale the second stroke length parameter of the second stroke according to the recalculated input area.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The computer program product of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the recalculated input area bounds the first stroke and the second stroke at first coordinate extrema of the first stroke and second coordinate extrema of the second stroke.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The computer program product of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the second instructions rescale the first stroke length parameter of the first stroke according to the recalculated input area.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A data processing system comprising:
<claim-text>a pointing device for receiving a first handwritten character stroke;</claim-text>
<claim-text>a memory that contains a set of instructions; and</claim-text>
<claim-text>a processing unit, responsive to an execution of the set of instructions, for determining a first start point and first end point of the first handwritten character stroke and calculating a first stroke length parameter from the first start point and the first end point and, responsive to determining the first start point and the first end point, for calculating an input area into which the first handwritten character stroke was supplied, wherein the first stroke length parameter is scaled according to the input area, wherein scaling comprises multiplying the first stroke length parameter with a ratio of a reference area to the input area.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The data processing system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the input area bounds the first handwritten character stroke at first coordinate extrema of the first handwritten character stroke.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The data processing system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the processing unit, responsive to determining a second start point and second end point of a second handwritten character stroke, recalculates the input area to determine a recalculated input area, wherein the recalculated input area bounds the first handwritten stroke and the second handwritten stroke at first coordinate extrema of the first handwritten character stroke and at second coordinate extrema of the second handwritten character stroke.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The data processing system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the processing unit, responsive to recalculating the input area, rescales the first stroke length parameter.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The data processing system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the processing unit, responsive to determining the second start point and the second end point of the second handwritten character stroke, calculates a second stroke length parameter of the second handwritten character stroke and scales the second stroke length parameter of the second handwritten character stroke in relation to the recalculated input area.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. A computer program product in a recordable-type medium for scaling a parameter derived from a handwritten character stroke, the computer program product comprising:
<claim-text>first instructions for displaying a collection area in a computer interface adapted to display a first stroke input into the collection area;</claim-text>
<claim-text>second instructions for calculating an input area in which the first stroke was supplied and, responsive to calculating the input area, scaling the stroke according to the input area, wherein scaling comprises multiplying the first stroke with a ratio of a reference area to the input area; and</claim-text>
<claim-text>third instructions for displaying the scaled stroke in a window of the computer interface.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The computer program product of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the window is a predefined area of the computer interface.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The computer program product of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the first instructions display a second stroke input in the collection area, the second instructions, responsive to input of the second stroke, recalculate the input area to determine a recalculated input area, scale the second stroke according to the recalculated input area to form a scaled second stroke, and rescale the first stroke according to the recalculated input area to form a rescaled first stroke.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The computer program product of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein the third instructions display the rescaled first stroke and the scaled second stroke in the window.</claim-text>
</claim>
</claims>
</us-patent-grant>
