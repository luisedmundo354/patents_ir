<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299274-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299274</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10014177</doc-number>
<date>20011211</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>716</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>173</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>10</subgroup>
<symbol-position>L</symbol-position>
<classification-value>N</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>709223</main-classification>
<further-classification>709226</further-classification>
<further-classification>719316</further-classification>
</classification-national>
<invention-title id="d0e53">Method and system for management of multiple network resources</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5394521</doc-number>
<kind>A</kind>
<name>Henderson et al.</name>
<date>19950200</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>345804</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5428729</doc-number>
<kind>A</kind>
<name>Chang et al.</name>
<date>19950600</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>715751</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5471399</doc-number>
<kind>A</kind>
<name>Tanaka et al.</name>
<date>19951100</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>364491</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5481399</doc-number>
<kind>A</kind>
<name>Nagel et al.</name>
<date>19960100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5481741</doc-number>
<kind>A</kind>
<name>McKaskle et al.</name>
<date>19960100</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>395800</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5491796</doc-number>
<kind>A</kind>
<name>Wanderer et al.</name>
<date>19960200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>5500929</doc-number>
<kind>A</kind>
<name>Dickinson</name>
<date>19960300</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>715853</main-classification></classification-national>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>5761505</doc-number>
<kind>A</kind>
<name>Golson et al.</name>
<date>19980600</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>713100</main-classification></classification-national>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>5838968</doc-number>
<kind>A</kind>
<name>Culbert</name>
<date>19981100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>5911138</doc-number>
<kind>A</kind>
<name>Li et al.</name>
<date>19990600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>5930503</doc-number>
<kind>A</kind>
<name>Drees</name>
<date>19990700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>5949417</doc-number>
<kind>A</kind>
<name>Calder</name>
<date>19990900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715788</main-classification></classification-national>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>5950201</doc-number>
<kind>A</kind>
<name>Van Huben et al.</name>
<date>19990900</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>707 10</main-classification></classification-national>
</citation>
<citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>6002398</doc-number>
<kind>A</kind>
<name>Wilson</name>
<date>19991200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715777</main-classification></classification-national>
</citation>
<citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>6014138</doc-number>
<kind>A</kind>
<name>Cain et al.</name>
<date>20000100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715826</main-classification></classification-national>
</citation>
<citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>6052711</doc-number>
<kind>A</kind>
<name>Gish</name>
<date>20000400</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>6076106</doc-number>
<kind>A</kind>
<name>Hamner et al.</name>
<date>20000600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>6078920</doc-number>
<kind>A</kind>
<name>Tan et al.</name>
<date>20000600</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>707 10</main-classification></classification-national>
</citation>
<citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>6081826</doc-number>
<kind>A</kind>
<name>Masuoka et al.</name>
<date>20000600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>6125391</doc-number>
<kind>A</kind>
<name>Meltzer et al.</name>
<date>20000900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>6154738</doc-number>
<kind>A</kind>
<name>Call</name>
<date>20001100</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>704  4</main-classification></classification-national>
</citation>
<citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>6173289</doc-number>
<kind>B1</kind>
<name>Sonderegger et al.</name>
<date>20010100</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>707103 R</main-classification></classification-national>
</citation>
<citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>6233623</doc-number>
<kind>B1</kind>
<name>Jeffors et al.</name>
<date>20010500</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>719316</main-classification></classification-national>
</citation>
<citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>6233726</doc-number>
<kind>B1</kind>
<name>Bowman et al.</name>
<date>20010500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717107</main-classification></classification-national>
</citation>
<citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>6252591</doc-number>
<kind>B1</kind>
<name>Dockweiler et al.</name>
<date>20010600</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>345744</main-classification></classification-national>
</citation>
<citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>6268853</doc-number>
<kind>B1</kind>
<name>Hoskins et al.</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>700 83</main-classification></classification-national>
</citation>
<citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>6272493</doc-number>
<kind>B1</kind>
<name>Pasquali</name>
<date>20010800</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>707 10</main-classification></classification-national>
</citation>
<citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>6295513</doc-number>
<kind>B1</kind>
<name>Thackston</name>
<date>20010900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>6298451</doc-number>
<kind>B1</kind>
<name>Lin</name>
<date>20011000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>6307573</doc-number>
<kind>B1</kind>
<name>Barros</name>
<date>20011000</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>345764</main-classification></classification-national>
</citation>
<citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>6317142</doc-number>
<kind>B1</kind>
<name>Decoste et al.</name>
<date>20011100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715762</main-classification></classification-national>
</citation>
<citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>6337696</doc-number>
<kind>B1</kind>
<name>Lindhorst et al.</name>
<date>20020100</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>345763</main-classification></classification-national>
</citation>
<citation>
<patcit num="00033">
<document-id>
<country>US</country>
<doc-number>6342907</doc-number>
<kind>B1</kind>
<name>Petty et al.</name>
<date>20020100</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>715762</main-classification></classification-national>
</citation>
<citation>
<patcit num="00034">
<document-id>
<country>US</country>
<doc-number>6344859</doc-number>
<kind>B1</kind>
<name>Alimpich et al.</name>
<date>20020200</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>345762</main-classification></classification-national>
</citation>
<citation>
<patcit num="00035">
<document-id>
<country>US</country>
<doc-number>6359634</doc-number>
<kind>B1</kind>
<name>Cragun et al.</name>
<date>20020300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00036">
<document-id>
<country>US</country>
<doc-number>6418448</doc-number>
<kind>B1</kind>
<name>Sarkar</name>
<date>20020700</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>7071041</main-classification></classification-national>
</citation>
<citation>
<patcit num="00037">
<document-id>
<country>US</country>
<doc-number>6430611</doc-number>
<kind>B1</kind>
<name>Kita et al.</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00038">
<document-id>
<country>US</country>
<doc-number>6470375</doc-number>
<kind>B1</kind>
<name>Whitner et al.</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00039">
<document-id>
<country>US</country>
<doc-number>6501491</doc-number>
<kind>B1</kind>
<name>Brown et al.</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00040">
<document-id>
<country>US</country>
<doc-number>6523065</doc-number>
<kind>B1</kind>
<name>Combs et al.</name>
<date>20030200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00041">
<document-id>
<country>US</country>
<doc-number>6574663</doc-number>
<kind>B1</kind>
<name>Bakshi et al.</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00042">
<document-id>
<country>US</country>
<doc-number>6594662</doc-number>
<kind>B1</kind>
<name>Sieffert et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00043">
<document-id>
<country>US</country>
<doc-number>6631402</doc-number>
<kind>B1</kind>
<name>Devine et al.</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>709217</main-classification></classification-national>
</citation>
<citation>
<patcit num="00044">
<document-id>
<country>US</country>
<doc-number>6643652</doc-number>
<kind>B2</kind>
<name>Helgeson et al.</name>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>707 10</main-classification></classification-national>
</citation>
<citation>
<patcit num="00045">
<document-id>
<country>US</country>
<doc-number>6678889</doc-number>
<kind>B1</kind>
<name>Burkett et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00046">
<document-id>
<country>US</country>
<doc-number>6684227</doc-number>
<kind>B2</kind>
<name>Duxbury</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00047">
<document-id>
<country>US</country>
<doc-number>6732362</doc-number>
<kind>B1</kind>
<name>Lee</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00048">
<document-id>
<country>US</country>
<doc-number>6754885</doc-number>
<kind>B1</kind>
<name>Dardinski et al.</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717113</main-classification></classification-national>
</citation>
<citation>
<patcit num="00049">
<document-id>
<country>US</country>
<doc-number>6779027</doc-number>
<kind>B1</kind>
<name>Schunicht et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</citation>
<citation>
<patcit num="00050">
<document-id>
<country>US</country>
<doc-number>6789215</doc-number>
<kind>B1</kind>
<name>Rupp et al.</name>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00051">
<document-id>
<country>US</country>
<doc-number>6857013</doc-number>
<kind>B2</kind>
<name>Ramberg et al.</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</citation>
<citation>
<patcit num="00052">
<document-id>
<country>US</country>
<doc-number>6925609</doc-number>
<kind>B1</kind>
<name>Lucke</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>715804</main-classification></classification-national>
</citation>
<citation>
<patcit num="00053">
<document-id>
<country>US</country>
<doc-number>6996778</doc-number>
<kind>B2</kind>
<name>Rajarajan et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00054">
<document-id>
<country>US</country>
<doc-number>2001/0029530</doc-number>
<kind>A1</kind>
<name>Naito et al.</name>
<date>20011000</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</citation>
<citation>
<patcit num="00055">
<document-id>
<country>US</country>
<doc-number>2003/0033402</doc-number>
<kind>A1</kind>
<name>Battat et al.</name>
<date>20030200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</citation>
<citation>
<patcit num="00056">
<document-id>
<country>US</country>
<doc-number>2004/0153509</doc-number>
<kind>A1</kind>
<name>Alcorn et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>709205</main-classification></classification-national>
</citation>
<citation>
<patcit num="00057">
<document-id>
<country>EP</country>
<doc-number>0 813 139</doc-number>
<kind>A2</kind>
<date>19971200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00058">
<document-id>
<country>EP</country>
<doc-number>0 813 139</doc-number>
<kind>A3</kind>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00059">
<othercit>“The Programmable Web: Web Services Provides Building Blocks for the Microsoft.NET Framework”, Mary Kirtland, MSDN Magazine, msdn online at msdn.Microsoft.com.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00060">
<othercit>Greg R. Notes, “On The Nets”, Online, 1996, 20, 5, pp. 65-68.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00061">
<othercit>Eva Schroeter et al., “An Application Interface with Multiple Workspaces: The Context Switcher,” 1996, IEEE, pp. 318-319.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00062">
<othercit>“Wyse puts new spin on this client,” Jun. 1999, Network World, v16, n24, p. 20.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00063">
<othercit>Brent Dorshkind, “Microsoft Server,” Jun. 1992, LAN Technology, v8, n6, p. 89(1).</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00064">
<othercit>John Bass et al, “King of the NOS hill Network holds the performanc reins, but Windows 2000 reigns supreme for features overall,” Jan. 2000, Network World, p. 71.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00065">
<othercit>S.P. Reiss, “Cacti: a front end for program visualization,” Oct. 1997, Information Visualization, IEEE vol., Iss., 20-21, pp. 46-49, 120.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00066">
<othercit>John-Tae Park et al, “Web-based custoemr network management,” Jun. 1997, IEEE, vol., Iss., 11-12, pp. 160-169.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00067">
<othercit>John Bass, “Remote control hardware options Vendor-specific add-on cards ouotperform stand-alone devices,” Mar. 2000, Network World, p. 53.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00068">
<othercit>“Application Softeware - Vendor Contenders,” Networks Computing, 1994, n 507, 69, 1994.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00069">
<othercit>Thomas Powell, “The challenges of a wireless Web,” 2000, Networks World, p. 81.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00070">
<othercit>John Cox, “Oracle shedding its skin for Net,” 1999, Network World, p. 12.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00071">
<othercit>W3C, Extensible Markup Language (XML) 1.0, Feb. 10, 1998, Recommendation 10, pp. 1-38.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00072">
<othercit>PCT International Search Report for PCT/US01/48014, Apr. 11, 2003.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00073">
<othercit>Jay TYO, “Pilot gets serious about Olap,” 1998, Information Week, n692, pp. 55-58.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>709104</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709203</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709217</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709220-226</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709229</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>719315</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>719316</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>23</number-of-drawing-sheets>
<number-of-figures>23</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60255044</doc-number>
<kind>00</kind>
<date>20001211</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60255051</doc-number>
<kind>00</kind>
<date>20001211</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60255238</doc-number>
<kind>00</kind>
<date>20001211</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60255041</doc-number>
<kind>00</kind>
<date>20001211</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60255153</doc-number>
<kind>00</kind>
<date>20001211</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60255043</doc-number>
<kind>00</kind>
<date>20001211</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60255050</doc-number>
<kind>00</kind>
<date>20001211</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60255042</doc-number>
<kind>00</kind>
<date>20001211</date>
</document-id>
</us-provisional-application>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60255052</doc-number>
<kind>00</kind>
<date>20001211</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20020156865</doc-number>
<kind>A1</kind>
<date>20021024</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Rajarajan</last-name>
<first-name>Vij</first-name>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Nedungadi</last-name>
<first-name>Kishnan</first-name>
<address>
<city>Rio De Janeiro</city>
<country>BR</country>
</address>
</addressbook>
<nationality>
<country>BR</country>
</nationality>
<residence>
<country>BR</country>
</residence>
</applicant>
<applicant sequence="003" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Kiernan</last-name>
<first-name>Casey</first-name>
<address>
<city>Kirkland</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="004" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Bhatia</last-name>
<first-name>Brijesh</first-name>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="005" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>MacMahon</last-name>
<first-name>Mel</first-name>
<address>
<city>Kirkland</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="006" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Ganesan</last-name>
<first-name>Anandha</first-name>
<address>
<city>Kirkland</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="007" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Hayes</last-name>
<first-name>Andrew</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="008" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Zimnicks</last-name>
<first-name>Audrius</first-name>
<address>
<city>Vilnius</city>
<country>LT</country>
</address>
</addressbook>
<nationality>
<country>LT</country>
</nationality>
<residence>
<country>LT</country>
</residence>
</applicant>
<applicant sequence="009" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Robison</last-name>
<first-name>Jeff</first-name>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Merchant &amp; Gould P.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Microsoft Corporation</orgname>
<role>02</role>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Najjar</last-name>
<first-name>Saleh</first-name>
<department>2155</department>
</primary-examiner>
<assistant-examiner>
<last-name>Korobov</last-name>
<first-name>V.</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method and system for management of a plurality of resources in a network environment. The system uses web technology, preferably XML-technology, to receive and store information related to back-end resources and to provide a framework by which client computer systems can manage the plurality of back-end resources in a uniform manner. Using these communications, the management system uniformly associates information from the various resources via various multi-step, scenario-based functions, such as, for example, searches, monitoring, scripting, software deployment, etc. That is, the management system is able to provide easier, higher-level operation options to the administrator based on the associated information related to the various resources.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="248.84mm" wi="180.93mm" file="US07299274-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="217.09mm" wi="181.10mm" file="US07299274-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="117.01mm" wi="158.83mm" file="US07299274-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="251.21mm" wi="175.85mm" file="US07299274-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="170.52mm" wi="120.57mm" file="US07299274-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="135.04mm" wi="158.67mm" file="US07299274-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="208.62mm" wi="131.32mm" file="US07299274-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="243.67mm" wi="153.08mm" file="US07299274-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="214.63mm" wi="157.40mm" file="US07299274-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="193.21mm" wi="113.54mm" file="US07299274-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="229.70mm" wi="162.22mm" file="US07299274-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="207.86mm" wi="141.56mm" file="US07299274-20071120-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="244.01mm" wi="183.73mm" orientation="landscape" file="US07299274-20071120-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="115.06mm" wi="157.82mm" file="US07299274-20071120-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="248.41mm" wi="186.86mm" orientation="landscape" file="US07299274-20071120-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="150.71mm" wi="149.86mm" file="US07299274-20071120-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="179.92mm" wi="149.10mm" file="US07299274-20071120-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="160.36mm" wi="143.43mm" file="US07299274-20071120-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="220.90mm" wi="146.81mm" file="US07299274-20071120-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="215.48mm" wi="151.72mm" file="US07299274-20071120-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="230.46mm" wi="172.21mm" orientation="landscape" file="US07299274-20071120-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="149.61mm" wi="134.54mm" file="US07299274-20071120-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="204.55mm" wi="159.94mm" orientation="landscape" file="US07299274-20071120-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="247.57mm" wi="163.07mm" orientation="landscape" file="US07299274-20071120-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application claims priority of the following U.S. provisional applications, all of which are incorporated herein by reference: Ser. No. 60/255,044, filed Dec. 11, 2000, titled Framework for Web-Based Integration of Management Applications; Ser. No. 60/255,051, filed Dec. 11, 2000, titled Schema Driven User Task Architecture; Ser. No. 60/255,238, filed Dec. 11, 2000, titled Schema Driven Property Pages; Ser. No. 60/255,041, filed Dec. 11, 2000, titled Schema Driven Search; Ser. No. 60/255,153, filed Dec. 11, 2000, titled Search Engine Extensibility; Ser. No. 60/255,043, filed Dec. 11, 2000, titled Management Portal Explorer; Ser. No. 60/255,050, filed Dec. 11, 2000, titled Object Property Representation; Ser. No. 60,255,042, filed Dec. 11, 2000, titled Quick Search; and Ser. No. 60/255,052, filed Dec. 11, 2000, titled Mmp modules—query driven model for locating objects &amp; tasks.</p>
<p id="p-0003" num="0002">This application is related to the following commonly assigned U.S. patent applications, all of which were filed concurrently with this application, and all of which are incorporated herein by reference: Ser. No. 10/014,120, filed Dec. 11, 2001, titled User Interface for Managing Multiple Network Resources; Ser. No. 10/014,114, titled System and Method for Representing an Object Used in Management of Multiple Network Resources; Ser. No. 10/015,129, filed Dec. 11, 2001, titled Method and System for Query-Based Management of Multiple Network Resources; Ser. No. 10/014,293, filed Dec. 11, 2001, titled Method and System for Task-Based Management of Multiple Network Resources; and Ser. No. 10/015,050, filed Dec. 11, 2001, titled Navigation Tool for Accessing Workspaces and Modules in a Graphical User Interface.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">TECHNICAL FIELD</heading>
<p id="p-0004" num="0003">The present invention relates to methods and systems for managing multiple resources in a network environment. More particularly, the present invention relates to providing a method and system for performing scenario-based tasks requiring interaction with multiple resources while providing a uniform user-interface for each of the multiple resources.</p>
<heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0005" num="0004">Network administrators, also known as information technology staff, perform many operations throughout each day in order to manage a number of different resources associated with their respective networks. These networks may comprise any number of hardware related computer resources, e.g., printers, computer stations, servers, etc., as well as a number of software related resources, such as databases, employee profiles, email servers, applications, among others. Typically, each of these resources has a uniquely different front end or user interface that the administrator must use to modify, evaluate or otherwise configure that resource. Consequently, in order to perform their duties, administrators must be familiar with many different types of systems.</p>
<p id="p-0006" num="0005">The resources are typically managed directly at the resource itself, or remotely via a two-tier type of connection. The two-tier system involves (1) a client computer system or “front-end” and (2) the resources themselves or “back-end”. In the two-tier model, the client computer system must be connected to the resources, potentially through a network server, and have all the necessary software installed on the front-end to effectively manage the resources. The software relates to the front-end user interface for each different resource.</p>
<p id="p-0007" num="0006">One of the problems associated with this two-tier system, in terms of network administration, is that it is necessary to store and manage the appropriate “front-end” applications for each resource, or set of related resources, at each client location where network administration will take place. By placing the appropriate “front-end” applications at the client computer level, the two-tier architecture requires a significant and ongoing investment in technology, software, and data updates.</p>
<p id="p-0008" num="0007">An additional drawback to this two-tiered system is that each of the resources and their respective front-end user interface applications operate uniquely and independently for each of the resources being managed. Therefore, when a complex multi-step task (or complex scenario) must be performed, the independence of the resources requires that each separate front-end be accessed to perform functions associated with performing one step of the multi-step task or otherwise performing the individual parts of the scenario. For example, in order to add a new user to a network system, many tasks must be completed, such as adding the user to the employee database, setting up the user's computer, setting up an email account for the user, providing the user with a security badge, etc. The independent nature of the various resources required to perform these tasks results in multiple, sometimes-repetitive actions that must be performed for each front-end application each time a certain task must be completed. For instance, when trying to find information associated with a task, such as a particular user, many different resources must be accessed, again, using unique front-end applications, to search for the information relevant to a particular topic. Unfortunately however, accessing different resources in this manner is time consuming and requires a mastery of many types of applications and front-ends.</p>
<p id="p-0009" num="0008">Another drawback associated with network administration, as so far described, is that in order to effectively manage each of the varied resources associated with a given network, a network administrator must be expertly familiar with each of the “front-end” applications or user interfaces that are used to control the resources. As such, significant training time and expense is required for an administrator to learn, and keeping current with, the functioning of each of the varied resources associated with the network, as well as the various associated front-end applications or user interfaces.</p>
<p id="p-0010" num="0009">It is with respect to these and other considerations that the present invention has been made.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0011" num="0010">This invention relates to a management system for managing computer-related resources within a distributed or network relationship. The management system or “portal”, also uses web technology, preferably XML-technology, to reduce the overhead associated with existing management tools that depend heavily on a two-tier system having client computer systems connected to the computer resources themselves—which are inherently non-uniform in nature and make administration of computer systems difficult. In an embodiment of the invention, the management tool is a scalable, web-based management framework that manages a plurality of back-end resources in a uniform manner. The resources communicate with the management system via a conforming dialog, which is schema driven. Using these communications, the management system uniformly associates information from the various resources via various multi-step, scenario-based functions, such as, for example, searches, monitoring, scripting, software deployment, etc. That is, the management system is able to provide easier, higher-level operation options to the administrator based on the associated information related to the various resources.</p>
<p id="p-0012" num="0011">With respect to certain aspects, the present invention relates to a system for managing a plurality of resources, the system having a management module in communication with the plurality of resources. The management module is capable of receiving a request to access information related to one or more of the plurality of resources and in response to the receipt of a request to access information, the management module accesses information from more than one resource. The management module may have a configuration manager for receiving information from a plurality of resources and a configuration store for storing predetermined information for the plurality of resources. Additionally, the configuration manager installs resources such that the management module can modify configuration information for the plurality of resources in response to a request. Moreover, in one embodiment, each of the plurality of resources provides information to the configuration manager in XML format.</p>
<p id="p-0013" num="0012">In accordance with other aspects, the plurality of resources managed by the system contain one or more objects. Each of these objects has one or more attributes, each attribute having a data field and a value. Similarly, each object has one or more associated tasks that may be performed on the object. In this case, the management module accesses attribute and task information from the associated resources in response to a request to access information. Additionally, the attribute and/or task information for a singular object may be provided by more than one resource and/or accessed by more than one resource. In one embodiment, each object is defined by a property sheet and the attribute and/or task information is a property page in the property sheet. A property sheet manager may be used to receive and store property sheet information related to managed objects.</p>
<p id="p-0014" num="0013">In accordance with yet other aspects, the present invention relates to a system having a configuration manager for receiving information from a plurality of resources, each resource having associated objects; a configuration store for storing predetermined information for the plurality of resources; and a search manager adapted to receive predetermined search information from a plurality of resources; a search data store adapted to store predetermined search information for the various resources; and wherein the search manager searches the plurality of resources in response to a single search request. In another embodiment, the system may have a task manager in place of, or in addition to the search manager. The task manager receives task information from the configuration manager related to tasks that may be completed in managing the plurality of resources.</p>
<p id="p-0015" num="0014">Additionally, the present invention relates to a method of managing a plurality of resources, each resource having managed objects, wherein each of the objects has associated attribute and task information. Initially, the method relates to the acts of receiving information from a resource related to attribute information for a managed object and receiving information from a different resource related to attribute information for the same managed object. The method then stores the information received from the second resource with the information received from the first resource in association with the first managed object. Next, in management of the resources, the method relates to receiving a request to access information related to the managed object and accessing stored information from the first and second resources to access information related to the managed object. The method may further include creating a property sheet for the managed object and associating a first property page and second property page with the property sheet.</p>
<p id="p-0016" num="0015">In accordance with yet other aspects, the method may further relate to receiving a search or task request from a client computer system and searching a plurality of resources in response to the single search request using information associated with the property sheet or requesting task completion from a plurality of resources. The method may further include the act of sharing search information between resources.</p>
<p id="p-0017" num="0016">The invention may be implemented as a computer process, a computing system or as an article of manufacture such as a computer program product. The computer program product may be a computer storage medium readable by a computer system and encoding a computer program of instructions for executing a computer process. The computer program product may also be a propagated signal on a carrier readable by a computing system and encoding a computer program of instructions for executing a computer process.</p>
<p id="p-0018" num="0017">A more complete appreciation of the present invention and its improvements can be obtained by reference to the accompanying drawings, which are briefly summarized below, and to the following detailed description of presently preferred embodiments of the invention, and to the appended claims.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a distributed network system incorporating aspects of the present invention.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 2</figref> illustrates a computer system incorporating aspects of a resource management system according to the present invention.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 3</figref> illustrates a software environment for implementing the present invention, the software environment including a resource management system of the present invention as well as various resources managed by the resource management system and managed objects with the managed resources.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 4</figref> is a flow diagram showing the operational characteristics performed by the resource management system shown in <figref idref="DRAWINGS">FIG. 3</figref> in adding a new resource to the system.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an exemplary screen display representing a managed object having a property sheet and the extensibility of the property sheet by way of property pages according to one embodiment of the invention.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 6</figref> is a flow diagram illustrating the operational flow characteristics performed by the resource management system in extending an existing property sheet according to one embodiment of the invention.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 7</figref> illustrates a software environment for performing a multi-step task in an embodiment of the invention.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 8</figref> is a flow diagram showing the operational characteristics performed by the resource management system and the task manager, shown in <figref idref="DRAWINGS">FIG. 3</figref> in displaying a task list in an embodiment of the invention.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 9</figref> is a flow diagram showing the operational characteristics performed by the resource management system in creating a script in accordance with aspects of the present invention.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 10</figref> illustrates a software environment for performing a search in an embodiment of the invention.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 11</figref> is a flow diagram showing the operational characteristics performed by the resource management system and the search manager, shown in <figref idref="DRAWINGS">FIG. 3</figref> in executing a search in an embodiment of the invention.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 12</figref> illustrates general features of a graphical user interface management console incorporating various elements for controlling and accessing the resource management system shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 13</figref> illustrates various features of the management console shown in <figref idref="DRAWINGS">FIG. 12</figref>.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 14</figref> illustrates additional features of, and further embodiments of, the management console shown in <figref idref="DRAWINGS">FIG. 12</figref>.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIGS. 15–19</figref> illustrate various details and features of a quick search tool shown in the management console of <figref idref="DRAWINGS">FIG. 14</figref>.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 20</figref> illustrates user interface elements that are generated in the management console of claim <b>3</b> as a result of a search performed with the quick search tool shown in <figref idref="DRAWINGS">FIGS. 15–19</figref>.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 21</figref> illustrates various details and features of an explorer tool shown in the graphical user interface of <figref idref="DRAWINGS">FIG. 14</figref>.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 22</figref> illustrates various elements of an exemplary module for use in the management console shown in <figref idref="DRAWINGS">FIG. 12</figref>.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 23</figref> illustrates another embodiment of an exemplary module for use in the management console shown in <figref idref="DRAWINGS">FIG. 12</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0038" num="0037">A distributed environment <b>100</b> including aspects of the present invention is shown in <figref idref="DRAWINGS">FIG. 1</figref>. The environment <b>100</b> has at least one client computer system, such as client computer systems <b>102</b> that communicates with at least one server computer system, such as server computer system <b>104</b>, in a distributed environment <b>106</b>, such as the Internet or some other distributed environment, e.g., a WAN, LAN, etc. The server computer system <b>104</b> is used to manage one or more resources <b>108</b>. The resources <b>108</b> generally relate to computer-resources that may be managed by a network administrator. The resources <b>108</b>, may include hardware devices, such as printers, workstations, servers, etc. and software related elements such as databases, security systems, email accounts and user accounts, among others. For example, Resource 1, shown as <b>110</b> in <figref idref="DRAWINGS">FIG. 1</figref>, may be an email system that controls the email for a particular network, and where Resource 2, shown as <b>112</b> relates to all the printers for that network. As may be appreciated, the network may have any number of resources, as shown by Resource N <b>114</b>, wherein “N” relates to any variable number of resources.</p>
<p id="p-0039" num="0038">Importantly, the type and scope of the resources <b>108</b> is most likely different from one network to another and, therefore, the scope of the present invention relates to manageable resources in general, as opposed to one specific set of resources. Additionally, potentially new and different resources that may be managed using aspects of the present invention may emerge over time and the present invention is not limited by the fact that these resources were not available previously. Indeed, use of the present invention lends itself to the generation of new and different resources that operate in conjunction with the present invention.</p>
<p id="p-0040" num="0039">The resources <b>108</b> are operably connected to the server computer system <b>104</b> such that information can be sent to and received from the resources. These connections are common in distributed environments, and may be wireless or not. The protocols used to communicate between the resources and server computer system may be proprietary to the resource and/or the server <b>104</b>. However, the protocol used should preferably allow for ability to control various features of the resources, such as being able to modify the configuration of the resource, such as being able to update its database, change its security options, etc.</p>
<p id="p-0041" num="0040">The client computer system <b>102</b> may communicate with the server computer system <b>104</b> via many different protocols over various types of connections. As shown in <figref idref="DRAWINGS">FIG. 1</figref>, the systems <b>102</b> and <b>104</b> may communicate via the Internet <b>106</b> using Hypertext Transfer Protocol (HTTP), mark-up languages, or some other communication protocol suitable for use with, for example, the Internet. In a particular embodiment, client computer system <b>102</b> is a Microsoft.NET client, but other, non-Microsoft.NET clients may be used.</p>
<p id="p-0042" num="0041">During operation, the client computer system <b>102</b> accesses information from the server computer system <b>104</b>. The information accessed relates to the various resources <b>108</b>. Once accessed, client computer system <b>102</b> displays a graphical user interface <b>116</b> to be used in managing the resources <b>108</b> or, in other embodiments, command line interfaces may be used. The client computer system <b>102</b> has a graphical user interface <b>116</b> to provide effective management capabilities of computer resources <b>108</b> through the server computer system <b>104</b>. Alternative embodiments, however, do not use the graphical user interface (GUI) <b>116</b>, but instead use other means of providing and receiving information from and to the user of the client computer system <b>102</b>. As discussed in more detail below, the interface provides consistencies with respect to being able to manage the various resources, even though each resource may still have some of its own unique characteristics.</p>
<p id="p-0043" num="0042">In one embodiment, the present invention relates to a browser application that operates in conjunction with a management module or system to coordinate operations and events behind a firewall, such as between the server computer system <b>104</b> and the resources <b>108</b>. In a particular embodiment, the management system is integrated with an “Enterprise Namespace” (which catalogs objects and tasks across an operational domain) and all user interactions are schema driven using distributed services to perform all management tasks. That is, all interaction between the browser application and the management module is expressed in XML or some other schema-driven language.</p>
<p id="p-0044" num="0043">Similarly, communications between the management system and other resources may also conform to a defined schema. Requiring conforming communications between resources and the management layer provides the ability to share or associate related information from different resources and to logically combine sub-functions and property information. In turn, using the associated information, the management module may provide advanced capabilities to the user by allowing task or scenario-based operations that effectively manage the multiple resources <b>108</b> in response to merely a few requests, e.g., one request to add a user may effectively modify information in two or more resources. As discussed in more detail below, the management module may include many different sub-modules or components that carry out various multi-step task or scenario-based management functions. Additionally other modules may also be incorporated to perform scripting functions (not requiring a User Interface), searching functions, customization and/or other administrative functions using the associated information from the plurality of resources <b>108</b>.</p>
<p id="p-0045" num="0044">An exemplary computer system <b>200</b> that may be used to perform the functions of either the client computer system <b>102</b> or the server computer system <b>104</b> to manage the various resources <b>108</b> within the system <b>100</b> according to the present invention is shown in <figref idref="DRAWINGS">FIG. 2</figref>. The system <b>200</b> has a processing unit or processor <b>202</b> and memory <b>204</b>. In an alternative embodiment of the invention, the system may have multiple processors (not shown).</p>
<p id="p-0046" num="0045">In its most basic configuration, the computing system <b>200</b> is illustrated in <figref idref="DRAWINGS">FIG. 2</figref> by dashed line <b>206</b>. Additionally, the system <b>200</b> may also include additional storage (removable and/or non-removable) including, but not limited to, magnetic or optical disks or tape. Such additional storage is illustrated in <figref idref="DRAWINGS">FIG. 2</figref> by removable storage <b>208</b> and non-removable storage <b>210</b>. Typically, the bulk of the database information is stored in such additional storage. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Memory <b>204</b>, removable storage <b>208</b>, and non-removable storage <b>210</b> are all examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by the system <b>200</b>. Any such computer storage media may be part of system <b>200</b>. Depending on the configuration and type of computing device, the memory <b>204</b> may be volatile, non-volatile or some combination of the two.</p>
<p id="p-0047" num="0046">The system <b>200</b> may also contain communications connection(s) <b>212</b> that allow the device to communicate with other devices. The communications connection(s) <b>212</b> is an example of communication media. The communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term “modulated data signal” means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.</p>
<p id="p-0048" num="0047">System <b>200</b> may also have input device(s) <b>214</b> such as keyboard, mouse, pen, voice input device, touch input device, etc. Output device(s) <b>216</b> such as a display, speakers, printer, etc. may also be included. All these devices are well known in the art and need not be discussed at length here.</p>
<p id="p-0049" num="0048">In an embodiment, a software environment <b>300</b> incorporating aspects of the invention may be illustrated as shown in <figref idref="DRAWINGS">FIG. 3</figref>. The environment <b>300</b> includes three components: a client computer system <b>302</b>, a management module <b>304</b>, and resources <b>306</b>. A first component <b>302</b> relates to the client computer system <b>302</b>, which is used by a network administrator to manage various resources. The second component <b>304</b> relates to a management module that communicates with the client computer system <b>302</b> to facilitate management of resources <b>306</b>.</p>
<p id="p-0050" num="0049">In an embodiment, the system <b>302</b> includes client computer system software <b>308</b> and a user interface module <b>310</b>. The client computer system software <b>308</b> provides several functions. For instance, the software <b>308</b> communicates with the management module <b>304</b> to provide requests for information and/or requests for tasks to be completed. This communication may be performed in any number of ways, e.g., it may involve the transfer of information across a network connection, such as the Internet or it may involve communication between two separate processes in a single machine. Some of these various connections are discussed above with respect to <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0051" num="0050">Additionally, the client computer system software <b>308</b> also communicates with or provides functionality to the user through the user interface module <b>310</b>. The user interface module <b>310</b> may employ a GUI, such as GUI <b>116</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>, or may employ a command line interface. In one embodiment, discussed in detail below, the user interface includes a web browser application <b>311</b> to present the GUI <b>116</b>. To facilitate the presentation of the GUI in the web browser <b>311</b>, the interface module <b>310</b> may also include an applet <b>313</b>. Details regarding both the web browser <b>313</b> and the applet <b>313</b> are provided below. The user interface <b>310</b> may further include other elements such as input elements, e.g., keyboards, touch screens, touch pads, mice, among others. The user interface <b>310</b> may also include output elements such as the graphical user interface <b>116</b>, as shown in <figref idref="DRAWINGS">FIG. 1</figref>, or other output elements such as printers, speakers, etc. An end user, such a network administrator, communicates with the computer system software <b>308</b> through the user interface module <b>310</b>. In turn, the computer system software <b>308</b> communicates with the management module <b>304</b> to effectively manage resources <b>306</b>.</p>
<p id="p-0052" num="0051">With respect to the resources <b>306</b> shown in <figref idref="DRAWINGS">FIG. 3</figref>, the resources <b>312</b>, <b>314</b>, <b>316</b> are similar to resources <b>110</b>, <b>112</b>, <b>114</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>. Again, these resources may relate to any computer resource that may be managed by a network administrator. These resources may involve software and/or hardware components. The resources may further include resource APIs, such as APIs <b>318</b>, <b>320</b>, <b>322</b>. Resource APIs relate to application program interface modules that allow communication between the resource itself and a separate computer system, such as the management system <b>304</b>. These APIs may be standard or custom designed to facilitate communication and eventual management of the resources.</p>
<p id="p-0053" num="0052">In an embodiment, each of the resources <b>306</b> has a datastore, such as datastores <b>323</b>, <b>325</b> and <b>327</b> for storing information related to that resource. Additionally, each resource <b>306</b> manages one or more objects, such as objects <b>329</b>, <b>331</b> and <b>333</b>. An object is a particular set of data and information describing that data. For instance a user object may relate to a particular user in the network and the object may include relationship or meta information about the user. Of course, the various resources may manage other objects, such as objects relating to specific hardware units, e.g., printers or workstations, or to events or operations. Typically, the information stored about an object relates to particular properties or attributes assigned to the object. In the example relating to a user object, the information may identify attributes such as, for example, name, address, title, etc. In addition, the information stored may also indicate the type of actions that can be taken with respect to an object, e.g., edit user information, delete user object, etc.</p>
<p id="p-0054" num="0053">In a particular embodiment, resources may be created by a resource developer. Before creating a resource, a developer must know what objects, e.g., objects <b>329</b>, will be managed, and what object tasks will be available to the user of the resource in managing those objects. For example, an object may relate to system users, and a task may involve resetting a user's password. Next, the following XML documents may be created: (1) an Object Type XML document, which provides a description of the object types used by the plugin; (2) a Plugin Information XML document which provides plugin configuration and version information; (3) a Property Sheet XML document which provides property sheet information; and (4) a Task XML document which provides information about the tasks available for the plugin's objects. The XML documents can be created using any text editor or XML authoring tool. The XML documents describe the plugin and the plugin objects, tasks, and property sheets.</p>
<p id="p-0055" num="0054">Next, in this embodiment, a Microsoft “.NET Framework” assembly is created. The assembly for the plugin may implement the following interfaces: IPluginPropertySheet, IPluginScope, and IPluginSearch, which, in general, implement methods for managing property sheets, search functions and other elements of the plugin. In order to manage the plugin, these interfaces may be accessed by the system management environment <b>304</b>.</p>
<p id="p-0056" num="0055">The management module <b>304</b>, which may be present on a server computer system such as <b>104</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>, provides a “middle tier” of the management system <b>100</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>. In a particular embodiment, the environment <b>300</b> is based on the Microsoft “.NET” framework. The server-side functionality may potentially be written in C# and communicate via IIS and ASP+ and be hosted on a single server or on a web farm. The management module <b>304</b> may be located in a separate domain to the client and also to the managed resources and communication can take place between firewalls. In this embodiment, the managed resources can be written in any NET compliant language, for example, C# or VB.NET. The managed resources preferably also expose certain web services to facilitate communication with the management module <b>304</b>. Additionally, the management module <b>304</b> may be a web service associated with the .NET framework. Web Services are described in more detail in the article titled “The Programmable Web: Web Services Provides Building Blocks for Microsoft NET Framework” from the magazine “MSDN Magazine” September 2000 issue.</p>
<p id="p-0057" num="0056">The management module <b>304</b> uses many elements to facilitate management of the resources <b>306</b>. In an embodiment of the invention, the management module <b>304</b> has a plurality of managers that operate relatively independently to perform various functions in managing the resources <b>306</b>. Each manager may further have a store of information that resides on the computer system housing the manager itself, as discussed in more detail below. In an embodiment of the invention, the management module <b>304</b> has a search manager <b>324</b>, a user interface manager <b>326</b>, a task manager <b>328</b>, a configuration manager <b>330</b>, a property sheet manager <b>332</b>, and a persistence manager <b>334</b>. In alternative embodiments the management module <b>304</b> may include other managers. Moreover, in yet other embodiments, the management module may incorporate fewer managers than shown in <figref idref="DRAWINGS">FIG. 304</figref>. The various managers communicate with each other as indicated by connection <b>335</b> shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0058" num="0057">In general, a manager is a component that is data driven so that it is available relatively automatically in the management module <b>304</b> for use by any other manager or component within system <b>304</b>. In addition, other management hosting user-interface components may be incorporated into the module <b>304</b> as needed for specific administrative functions, e.g., user management, operations management, configuring services, etc. These components may be created by third parties and used to provide specific user-interface support for their specific resources.</p>
<p id="p-0059" num="0058">With respect to the user interface manager <b>326</b>, the manager <b>326</b> provides the interface functionality between the management module <b>304</b> and the client computer system software <b>308</b>. In an embodiment, the user interface module provides many advanced features, e.g., the user interface manager <b>326</b> may customize output information for a particular client computer system. Consequently, the user interface manager <b>326</b> allows for the use of many different types of client computer systems, e.g., laptops, desktops, PDAs, cell phones, etc. The user interface manager communicates with the client computer system to provide the proper format and amount of output information, as well as input information. Furthermore, the user interface manager may adapt to many different network protocols which may be used across the distributed network.</p>
<p id="p-0060" num="0059">Details of the user interface manager <b>326</b> and the interaction between the management module <b>304</b> and a web browser operation on the client computer system <b>302</b> are provided below.</p>
<p id="p-0061" num="0060">In general, the persistence manager <b>334</b> functions to store various predefined and authored layouts of a management console graphical user interface (console layouts) that is described in detail below. The persistence manager preferably stores these console layouts as XML type files in a memory, such as persistence store <b>346</b>, shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0062" num="0061">With respect to the search manager <b>324</b>, it generally parses and performs search operations on portions of data stored and used on the system <b>300</b>. Typically, the search manager receives a query from the client computer system software <b>308</b>, and performs the query using information stored in search store <b>336</b> as well as through functional interaction with the back-end resources <b>306</b> to thereby supply search results back to the client <b>308</b>.</p>
<p id="p-0063" num="0062">Similarly, the task manager <b>328</b> receives task requests from the client computer system software <b>308</b> and is involved in executing those tasks. The tasks generally relate to actual management or configuration type tasks, such as adding new users to the network, but may also refer to other tasks such as providing task related information to the user. The task manager <b>328</b> may perform tasks by interaction with one or more back-end resources <b>306</b>. To carry out a requested task, the task manager <b>328</b> has instructional information stored in task store <b>340</b> used to recognize the functions to be performed in carrying out a specific task, such as, for example, which resources must be notified or used in performing the task. For instance, in adding a new user to the network, the task manager <b>328</b> may need to send new user information to an employee database managed by a SQL server, to an email server and to a security-clearance application, among others. In such a case, the task manager may store, in task store <b>340</b>, the set of application or resources that must be notified of the fact that a new user is being added. The task manager <b>328</b>, the search manager <b>324</b> and other managers are discussed in more detail below as they relate to the actual management of the resources <b>306</b>.</p>
<p id="p-0064" num="0063">Prior to management of a resource, the resource must be installed or registered with or on the system. <figref idref="DRAWINGS">FIG. 4</figref> illustrates the operational flow characteristics related to the registration of a new resource to the management module <b>304</b> shown in <figref idref="DRAWINGS">FIG. 3</figref>. Prior to the start of flow <b>400</b>, the resource will be created by a developer or some other third party as described above. The purpose of the process <b>400</b> relates to the registration of that resource in such a manner as to hook it into the management system <b>300</b> and to thereby allow for the various managers described above to access and manage the installed resource. Hence, the resource is to be included in the framework of the system, such as system <b>300</b> and will eventually be managed by the management module <b>304</b>. Furthermore, through the registration process, the installed resource thereafter recognizes a method of communication with the management module <b>304</b> and, typically, all communication between the two are performed according to that protocol or method.</p>
<p id="p-0065" num="0064">Initially, flow <b>400</b> begins as receive operation <b>402</b> receives a request indicating that a resource or “plugin” is requesting to be installed on the system. Resources that hook themselves into the management module <b>304</b> are generally referred to as plugins, where the plugin is the portion of the resource that communicates with the management module by sending and receiving messages. The request may be made by the resource itself or the system may recognize that a new resource is being plugged into the system, thus generating the request. In an embodiment the configuration manager <b>330</b> (<figref idref="DRAWINGS">FIG. 3</figref>) receives the request. The request, as well as other provided information, is in a predetermined format, such as in XML, so that the management module <b>304</b> understands the configuration information. The request typically includes some predetermined information, such as the name of the resource, the location of various XML files, among others.</p>
<p id="p-0066" num="0065">In a particular embodiment, the configuration manager <b>330</b> is a web service that supports defined methods that any plugin can call into to register, to un-register, and/or to update its install information. In this case, the request from the plugin merely executes one or more of these methods. Also, in this particular embodiment, the information provided by the plugin, relates to the directory where the plugin is installed on the network, such that the system or configuration manager <b>330</b> can find more information about the plugin.</p>
<p id="p-0067" num="0066">Besides installation information, during the initial communication phase <b>402</b> between a plugin and the system, the plugin may provide other information relating to the objects, such as objects <b>329</b>, <b>331</b> and <b>333</b> (<figref idref="DRAWINGS">FIG. 3</figref>) managed by that plugin. For instance, receive operation <b>402</b> may receive information from the plugin relating to the types of objects to be exposed to the system upon completion of the installation process, attributes of those objects, available actions that may be used on those objects, and searchable criteria for those objects. The plugin may further provide information as to other types of objects that are recognized, but not necessarily exposed, by the plugin. Moreover, the plugin may provide available actions that may be accessed that relate to objects managed by another plugin to effectively extend the existing object.</p>
<p id="p-0068" num="0067">As an example, an Active Directory plugin may exist on the system and it may expose objects relating specific users, known in a preferred embodiment of the invention as user objects. Subsequently, an email application may be installed that recognizes user objects, and specifically provides an email address attribute to existing user objects. Furthermore, the email application may provide available actions to user objects, such as editing email addresses, sending email messages, activating or deactivating an email account, etc. These attributes and actions relating to existing objects are communicated to the configuration manager during receive operation <b>402</b>. As discussed below, receiving such additional information provides the ability to extend the user object to include the additional information.</p>
<p id="p-0069" num="0068">Upon receiving information from the plugin, evaluate operation <b>404</b> checks the information in the provided directory to ensure that the plugin is installed correctly. In an embodiment, the configuration manager makes sure that the plugin is installed with the correct XML file formats and validates the web service interfaces that the plugins need to expose to the system <b>304</b>.</p>
<p id="p-0070" num="0069">Following evaluate operation <b>404</b>, supply act <b>406</b> supplies relevant information to other managers, such as the task manager <b>328</b>, query or search manager <b>324</b>, and/or the property sheet manager <b>332</b>. The act of supplying the information may be performed in a number of ways. For instance, the configuration manager <b>330</b> may sort through the various information provided by the plugin and then send the information to each manager that may find a particular piece of information relevant. In such a case, each attribute or property provided by the resource is evaluated to determine if another manager in the system may be interested in the new resource, or some portion thereof. Upon determining that another manager may be interested in information from the new resource, the supply operation <b>406</b> effectively notifies the other manager of the information. In another embodiment, the configuration manager <b>330</b> may initiate an event that is picked up by other managers, wherein the event indicates that a new plugin has been installed and is requesting registration. Consequently, each manager is responsible for locating and gathering the relevant information.</p>
<p id="p-0071" num="0070">Once the information has been supplied to the various managers, store operation <b>408</b> stores relevant information in local store(s). That is, each manager that receives information related to a newly installed and registered plugin stores some of the information, if relevant, in its local store. For instance, the task manager <b>328</b> may evaluate the new information and determine that some task-related information should be stored in the local store corresponding to the task manager. As stated above, each manager may maintain a dedicated store of information for this purpose.</p>
<p id="p-0072" num="0071">Following store operation <b>408</b>, the plugin is considered to be installed and registered with the management module such that future management can be controlled through the management module and, therefore, the flow <b>400</b> ends at end operation <b>410</b>.</p>
<p id="p-0073" num="0072">Although the flow <b>400</b> generally relates to adding a new resource to the system, it also relates to extending existing objects within the system. For example, assume the flow <b>400</b> is installing an email application to an existing system having an “Active Directory” application that exposes user objects. In this case, since the email application supports user objects, the supply operation <b>406</b> essentially supplies new user-object information to managers within the system and the store operation <b>408</b> stores the information for later use. The new user object information may include task information, e.g., creating a new email account, editing an email address, activating and deactivating accounts, etc. to the task manager. Similarly, if the email address is a searchable attribute, then this information may be communicated to the search manager <b>324</b>. Essentially, the user object supported by the Active Directory is now also supported by the email application. More importantly, combining information from separate resources into a single, exposed object, provides a relatively comprehensive set of information about each user, such as all attributes and/or actions by simply accessing the object.</p>
<p id="p-0074" num="0073">Consequently, the flow <b>400</b> relates to the installation of a new resource and the sharing of information between separate modules to provide more comprehensive task handling as well. In the example provided above, assume one of the existing activities for user objects relates to adding a new user, as provided by the Active Directory. Next, assume that the email application was installed according to the flow <b>400</b> and that during the supply operation <b>406</b>, the task manager <b>328</b> received supported, user-object tasks, including creating a new account for a new user. The task manager <b>328</b> may then recognize that when an “add user” task is executed by the administrator, the system calls both the Active Directory application to add a new user profile and the email application to create a new email account for the new user.</p>
<p id="p-0075" num="0074">As stated above, in a particular embodiment, the addition of new resources is handled by the configuration manager <b>330</b> (shown in <figref idref="DRAWINGS">FIG. 3</figref>), which communicates with resources as they are added to the system. Preferable the resources are installed on the system and then registered with the management module <b>304</b>. The configuration manager <b>330</b> may further configure the resources <b>306</b> to allow management of those resources, or at least perform a test operation to make sure the resources are installed in compliance with the necessary minimum requirements to allow other managers to access and manage the resource. For instance, as a new resource is added to the environment <b>300</b>, configuration manager <b>330</b> comprises the software element that communicates with that resource in order to install the resource within the system and evaluate whether the resource is properly installed.</p>
<p id="p-0076" num="0075">The configuration manager <b>330</b> also provides other managers, such as the search manager <b>324</b> and the task manager <b>328</b>, necessary information related to a newly installed and registered resource. Consequently, the various managers can store, within their respective stores, any information related to the new resource so that future communications are possible between the managers and that resource. The new information may relate to the location of the new resource, how to communicate with the new resource, that the new resource should be contacted when a predetermined task is performed, the type of information necessary to perform the task, etc.</p>
<p id="p-0077" num="0076">As stated, in an embodiment the configuration manager <b>330</b> is a web service. Potential web service methods to the configuration manager <b>330</b> are provided below in Table 1. The resources <b>306</b>, as well as other managers, such as the search manager <b>324</b> and the task manager <b>328</b>, may use the methods shown and described in Table 1 to get information about the resources or plugins <b>306</b> installed on the system.</p>
<p id="p-0078" num="0077">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="266pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 1</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Methods to the Configuration Manager</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="77pt" align="center"/>
<colspec colname="2" colwidth="112pt" align="center"/>
<colspec colname="3" colwidth="77pt" align="center"/>
<tbody valign="top">
<row>
<entry>Method</entry>
<entry>Example</entry>
<entry>Description</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="77pt" align="left"/>
<colspec colname="2" colwidth="112pt" align="left"/>
<colspec colname="3" colwidth="77pt" align="left"/>
<tbody valign="top">
<row>
<entry>PluginInstalled</entry>
<entry>String PluginInstalled(</entry>
<entry>This method is called</entry>
</row>
<row>
<entry/>
<entry>string sPath</entry>
<entry>by a plugin when it is</entry>
</row>
<row>
<entry/>
<entry>);</entry>
<entry>done installing itself.</entry>
</row>
<row>
<entry/>
<entry>Where sPath is the relative path to</entry>
</row>
<row>
<entry/>
<entry>the plugin to be installed</entry>
</row>
<row>
<entry>PluginUnInstalled</entry>
<entry>String PluginUnInstalled(</entry>
<entry>This method is called</entry>
</row>
<row>
<entry/>
<entry>string sPath</entry>
<entry>by a plugin when it is</entry>
</row>
<row>
<entry/>
<entry>);</entry>
<entry>done un-installing itself.</entry>
</row>
<row>
<entry/>
<entry>Where sPath is the relative path to</entry>
</row>
<row>
<entry/>
<entry>the plugin to be uninstalled</entry>
</row>
<row>
<entry>PluginUpdated</entry>
<entry>String PluginUpdated(</entry>
<entry>This method is called</entry>
</row>
<row>
<entry/>
<entry>string sPath</entry>
<entry>when a plugin updates</entry>
</row>
<row>
<entry/>
<entry>);</entry>
<entry>its installation.</entry>
</row>
<row>
<entry/>
<entry>Where sPath is the relative path to</entry>
</row>
<row>
<entry/>
<entry>the plugin to be updated</entry>
</row>
<row>
<entry>DisablePlugin</entry>
<entry>String DisablePlugin(</entry>
<entry>This method can be</entry>
</row>
<row>
<entry/>
<entry>string sPath</entry>
<entry>called by the</entry>
</row>
<row>
<entry/>
<entry>);</entry>
<entry>administrator of the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>management module to</entry>
</row>
<row>
<entry/>
<entry>Where sPath is the relative path to</entry>
<entry>Disable a plugin that is</entry>
</row>
<row>
<entry/>
<entry>the plugin to be disabled</entry>
<entry>registered to the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>management module.</entry>
</row>
<row>
<entry>EnablePlugin</entry>
<entry>String EnablePlugin(</entry>
<entry>This method can be</entry>
</row>
<row>
<entry/>
<entry>string sPath</entry>
<entry>called by the</entry>
</row>
<row>
<entry/>
<entry>);</entry>
<entry>administrator of the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>management module to</entry>
</row>
<row>
<entry/>
<entry>Where sPath is the relative path to</entry>
<entry>Enable a plugin that is</entry>
</row>
<row>
<entry/>
<entry>the plugin to be enabled</entry>
<entry>registered to the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Management Module.</entry>
</row>
<row>
<entry>DisableAll</entry>
<entry>String DisableAll( );</entry>
<entry>This method can be</entry>
</row>
<row>
<entry/>
<entry/>
<entry>called by the</entry>
</row>
<row>
<entry/>
<entry>DisableAll does not require any</entry>
<entry>administrator of the</entry>
</row>
<row>
<entry/>
<entry>parameters</entry>
<entry>Management Module to</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Disable all plugins.</entry>
</row>
<row>
<entry>EnableAll</entry>
<entry>String EnableAll( );</entry>
<entry>This method can be</entry>
</row>
<row>
<entry/>
<entry/>
<entry>called by the</entry>
</row>
<row>
<entry/>
<entry>EnableAll does not require any</entry>
<entry>administrator of the</entry>
</row>
<row>
<entry/>
<entry>parameters</entry>
<entry>Management Module to</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Enable all plugins.</entry>
</row>
<row>
<entry>GetPluginsXML</entry>
<entry>String GetPluginsXML( );</entry>
<entry>This method returns all</entry>
</row>
<row>
<entry/>
<entry/>
<entry>the high level</entry>
</row>
<row>
<entry/>
<entry>GetPluginsXML does not require</entry>
<entry>information about</entry>
</row>
<row>
<entry/>
<entry>any parameters</entry>
<entry>plugins, like their name,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>description and</entry>
</row>
<row>
<entry/>
<entry/>
<entry>directory install path.</entry>
</row>
<row>
<entry>GetLocalApplication-</entry>
<entry>String</entry>
<entry>Plugins can use this</entry>
</row>
<row>
<entry>RootDirectory</entry>
<entry>GetLocalApplicationRootDirectory( )</entry>
<entry>method to get</entry>
</row>
<row>
<entry/>
<entry>;</entry>
<entry>information about the</entry>
</row>
<row>
<entry/>
<entry>GetLocalApplicationRootDirectory</entry>
<entry>Management Module</entry>
</row>
<row>
<entry/>
<entry>does not require any parameters</entry>
<entry>Application directory.</entry>
</row>
<row>
<entry>GetLocalApplicationBin</entry>
<entry>String</entry>
<entry>Plugins can use this</entry>
</row>
<row>
<entry>Directory</entry>
<entry>GetLocalApplicationBinDirectory( );</entry>
<entry>method to get</entry>
</row>
<row>
<entry/>
<entry/>
<entry>information about the</entry>
</row>
<row>
<entry/>
<entry>GetLocalApplicationBinDirectory</entry>
<entry>Management Portal Bin</entry>
</row>
<row>
<entry/>
<entry>does not require any parameters</entry>
<entry>directory.</entry>
</row>
<row>
<entry>String</entry>
<entry>String</entry>
<entry>Plugins can use this</entry>
</row>
<row>
<entry>GetLocalApplication-</entry>
<entry>GetLocalApplicationPluginDirectory</entry>
<entry>method to get</entry>
</row>
<row>
<entry>PluginDirectory</entry>
<entry>( );</entry>
<entry>information about the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Management Portal</entry>
</row>
<row>
<entry/>
<entry>GetLocalApplicationPluginDirectory</entry>
<entry>Plugins Directory</entry>
</row>
<row>
<entry/>
<entry>does not require any parameters</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0079" num="0078">Using the methods shown and described in Table 1, in combination with flow <b>400</b> shown in <figref idref="DRAWINGS">FIG. 4</figref>, plugins can dynamically install, uninstall or update the information they provide to the management module <b>304</b>. Since the management module <b>304</b>, in one embodiment, is a web based application, all the new resources only need to be installed in one location and all their information is dynamically picked up by the different managers and translated into an integrated front end for the users.</p>
<p id="p-0080" num="0079">In a particular embodiment, the information provided to the configuration manager <b>330</b> is provided in XML format. Using the XML format, the configuration manager <b>330</b> is able to parse the information and understand whether other managers need to be notified of any particular aspect of the XML file. Typically, the resource converts the file to XML format prior to a transmission to the configuration manager <b>330</b>. Alternatively however, a separate component may be supplied by the system <b>304</b> to perform the translation.</p>
<p id="p-0081" num="0080">The resources <b>306</b> manage objects, such as objects <b>329</b>. Therefore, each resource <b>306</b> provides information to the system <b>304</b> about its objects, e.g., resource <b>312</b> provides information about objects <b>329</b>. In an embodiment, the resource may provide object information in a property sheet which may be in XML format and which defines a generic object, e.g., such as a generic user object. Additionally, the property sheet may comprise one or more property pages. The property sheet may therefore relate to a combination of property pages. Each property page is defined in an XML formatted portion of code that describes the layout, e.g., where the information is going to be rendered on the user interface, what types of controls are located on the page, etc. Also the XML code for the property page may provide a pointer to a piece of code that populates data regions of the page as well as another pointer that identifies another piece of code that is called to modify the information, e.g., with a set or modify data command.</p>
<p id="p-0082" num="0081">With respect to certain aspects of the present invention, the property sheets that are exposed to the system <b>304</b> by one resource are extendible by other resources. <figref idref="DRAWINGS">FIG. 5</figref> illustrates the concept of having a separate, independent application or resource extend an existing property sheet. In <figref idref="DRAWINGS">FIG. 5</figref>, a property sheet representing a particular user object is illustrated in display <b>500</b>. Consequently, the display <b>500</b> represents the object itself. The object provides a title bar <b>502</b>, an active region <b>504</b>, and a scope list <b>506</b>. The title displays the title of an object as defined by the property sheet. The active region <b>504</b> displays controls and data fields for one property page, as selected from the list <b>506</b>. The list <b>506</b> lists the various property pages that may be displayed in the active region <b>504</b> that relate to the user object <b>500</b>.</p>
<p id="p-0083" num="0082">As shown in <figref idref="DRAWINGS">FIG. 5</figref>, the personal information property page control <b>508</b> has been selected and therefore the active region <b>504</b> displays the property page relating to the personal information for the particular user. Other selection controls for additional property pages are displayed in the scope list <b>506</b>, such as a job information control <b>510</b> and an email information control <b>512</b>. Additional information about the visual representation of the schema at the client computer system is displayed below with respect to the management console.</p>
<p id="p-0084" num="0083">Independent resources or applications may define one or more property pages associated with a particular object, such as user object <b>500</b> shown in <figref idref="DRAWINGS">FIG. 5</figref>. For example, assume that an Active Directory application exposed the user object <b>500</b>. Also, assume the Active Directory application defined various property pages, e.g., the personal information page relating to unique personal identification data, such as name, home address, employee number, etc. Additionally, assume another, job-related property page was also defined by the Active Directory application and it included job-related information, such as the person's job title, building location, group, etc. Next, assume that another application is installed on the system, such as an email server. The email server may recognize user objects and supply a property page to be included in the user object property sheet, for instance to associate an email address with the user. Instead of creating a new property sheet, which would include much of the same information, such as the user's name, etc., the email address property page <b>512</b> is simply added to the user object property sheet. The information associated with the email address property page includes pointers to code located on the email server relating to available actions for a particular user object relating to email tasks.</p>
<p id="p-0085" num="0084">As stated above, the property pages may be based on an XML schema, which defines both the types of controls that a property page will contain and the layout of those controls on a page. Table 2 illustrates an example of a Document Type Definition or DTD that defines an XML schema for creating a property page.</p>
<p id="p-0086" num="0085">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 2</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Example DTD for an XML Schema for a Property Page</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="105pt" align="left"/>
<colspec colname="2" colwidth="112pt" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;!ELEMENT propertySheets</entry>
<entry>(propertySheet+)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT propertySheet</entry>
<entry>propertySheetID, name, description,</entry>
</row>
<row>
<entry/>
<entry>getDataHandler,</entry>
</row>
<row>
<entry/>
<entry>(setDataHandler,propertyPage+)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT propertyPage</entry>
<entry>(propertyPageID, name, description,</entry>
</row>
<row>
<entry/>
<entry>attributes,layout)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT attributes</entry>
<entry>(attribute+)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT attribute</entry>
<entry> (attributeID, name,</entry>
</row>
<row>
<entry/>
<entry>defaultValue?, displayHints?)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT layout</entry>
<entry>(row+)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT row</entry>
<entry>(item+)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT item</entry>
<entry>(attributeID?, displayHints)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT displayHints</entry>
<entry>(Type, (Text | Label)?, rows?, cols?,</entry>
</row>
<row>
<entry/>
<entry>Size?, Show)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT Label</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ATTLIST Label</entry>
<entry>width CDATA ″20%″ style</entry>
</row>
<row>
<entry/>
<entry>(left|right|top) ″left″&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT Text</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT rows</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT cols</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT propertySheetID</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT propertyPageID</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT attributeID</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT name</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT description</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT getDataHandler</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT setDataHandler</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT defaultValue</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT Type</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT Size</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT Show</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0087" num="0086">An example definition of a property page is shown in Table 3. The example shown in Table 3 relates to the schema shown in Table 2 and defines a property page containing a gender data field allowing the user to choose between male or female. The property page depicted in Table 3 also supplies the management module, such as module <b>304</b> shown in <figref idref="DRAWINGS">FIG. 3</figref>, with pointers to the code to populate the gender data field and to handle the data once the user has selected a gender. Further, the property page indicates its associated property sheet, i.e., the property sheet that includes the property page.</p>
<p id="p-0088" num="0087">
<tables id="TABLE-US-00003" num="00003">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 3</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Example XML Property Page Definition</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>propertyPage&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="196pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;propertySheetID&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>ActiveDirectory_User_PropertySheet_ID</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="196pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/propertySheetID&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;propertyPageID&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>User_General_PropertyPage_ID</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="196pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/propertyPageID&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;name&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>General</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="196pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/name&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;description&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Provide the users email details</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="196pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/description&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;order&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>1</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="196pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/order&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;getDataHandler&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;getDataHandlerID&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="63pt" align="left"/>
<colspec colname="1" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>ADUserGetHandler</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/getDataHandlerID&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;getDataHandlerType&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="63pt" align="left"/>
<colspec colname="1" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Serverside</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/getDataHandlerType&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;getDataHandlerURL&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="63pt" align="left"/>
<colspec colname="1" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>ActiveDirectoryPlugin/user.asp</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/getDataHandlerURL&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="196pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/getDataHandler&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;setDataHandler&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;setDataHandlerID&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="63pt" align="left"/>
<colspec colname="1" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>ADUserSetHandler</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/setDataHandlerID&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;setDataHandlerType&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="63pt" align="left"/>
<colspec colname="1" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Serverside</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/setDataHandlerType&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;setDataHandlerURL&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="63pt" align="left"/>
<colspec colname="1" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>ActiveDirectoryPlugin/user.asp</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/setDataHandlerURL&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="196pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/setDataHandler&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;attributes&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;attribute&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="63pt" align="left"/>
<colspec colname="1" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;attributeID&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="84pt" align="left"/>
<colspec colname="1" colwidth="133pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>UserID</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="63pt" align="left"/>
<colspec colname="1" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/attributeID&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;name&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="84pt" align="left"/>
<colspec colname="1" colwidth="133pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Gender</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="63pt" align="left"/>
<colspec colname="1" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/name&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;type&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="84pt" align="left"/>
<colspec colname="1" colwidth="133pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;typeID&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="105pt" align="left"/>
<colspec colname="1" colwidth="112pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>enum</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="84pt" align="left"/>
<colspec colname="1" colwidth="133pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/typeID&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;typeData&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="105pt" align="left"/>
<colspec colname="1" colwidth="112pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;DataValue&gt;Male&lt;/DataValue&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;DataValue&gt;Famale&lt;/DataValue&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;/typeData&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="63pt" align="left"/>
<colspec colname="1" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/type&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;defaultValue/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/attribute&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="196pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;attributes/&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;/propertyPage&gt;</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0089" num="0088">In order for a resource to expose property sheet functionality, one embodiment of the invention suggests that the resource implement an interface, such as IPluginPropertySheet which may be accessed by the management module <b>304</b>. In particular, a property sheet manager <b>332</b> may be implemented as part of the module <b>304</b> to communicate with resources that have exposed property sheet functionality. The interface IPluginPropertySheet provides a resource or plugin with a property sheet handler: an interface that may be called by the property sheet manager <b>332</b> to get or set property sheet information. Alternative embodiments may utilize other communication methods in order to provide management capabilities over the property sheets.</p>
<p id="p-0090" num="0089">The IPluginPropertySheet object defines the methods show and described below in Table 4.</p>
<p id="p-0091" num="0090">
<tables id="TABLE-US-00004" num="00004">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="259pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 4</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Methods Implemented by Resource Property Sheet Interface</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="77pt" align="left"/>
<colspec colname="2" colwidth="119pt" align="left"/>
<colspec colname="3" colwidth="63pt" align="left"/>
<tbody valign="top">
<row>
<entry>Method</entry>
<entry>Example</entry>
<entry>Description</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>GetData</entry>
<entry>Properties GetData(</entry>
<entry>Retrieves data from</entry>
</row>
<row>
<entry/>
<entry> string strID</entry>
<entry>the property sheet.</entry>
</row>
<row>
<entry/>
<entry> string strObjectInstanceID</entry>
</row>
<row>
<entry/>
<entry>);</entry>
<entry>A ″Properties″</entry>
</row>
<row>
<entry/>
<entry>Where:</entry>
<entry>object containing</entry>
</row>
<row>
<entry/>
<entry>strID is the identifier for the property</entry>
<entry>the properties for</entry>
</row>
<row>
<entry/>
<entry>sheet and</entry>
<entry>the object identified</entry>
</row>
<row>
<entry/>
<entry>strObjectInstanceID is the instance</entry>
<entry>by</entry>
</row>
<row>
<entry/>
<entry>identifier for the object whose data is</entry>
<entry>strObjectInstanceID</entry>
</row>
<row>
<entry/>
<entry>used by the property page.</entry>
<entry>is returned by the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>given example.</entry>
</row>
<row>
<entry>GetDataForCondition</entry>
<entry>Properties GetDataForCondition(</entry>
<entry>This method returns</entry>
</row>
<row>
<entry/>
<entry> ConditionData conditiondata );</entry>
<entry>the plugin's data for</entry>
</row>
<row>
<entry/>
<entry/>
<entry>a property sheet,</entry>
</row>
<row>
<entry/>
<entry>Where conditiondata defines the</entry>
<entry>based on a</entry>
</row>
<row>
<entry/>
<entry>condition that the properties will be</entry>
<entry>condition, in</entry>
</row>
<row>
<entry/>
<entry>based on.</entry>
<entry>″Properties″ object.</entry>
</row>
<row>
<entry>GetPageInitData</entry>
<entry>Properties GetPageInitData (</entry>
<entry>Retrieves initial</entry>
</row>
<row>
<entry/>
<entry> PageInitData pageinitdata );</entry>
<entry>data for the property</entry>
</row>
<row>
<entry/>
<entry/>
<entry>sheet, i.e., initializes</entry>
</row>
<row>
<entry/>
<entry>Where pageinitdata is the data used to</entry>
<entry>the data for a</entry>
</row>
<row>
<entry/>
<entry>initialize the property page.</entry>
<entry>property page, in</entry>
</row>
<row>
<entry/>
<entry/>
<entry>″Properties″ object.</entry>
</row>
<row>
<entry>SetData</entry>
<entry>Task SetData(</entry>
<entry>Sets data in the</entry>
</row>
<row>
<entry/>
<entry> Properties psData );</entry>
<entry>property sheet.</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Task is a an object</entry>
</row>
<row>
<entry/>
<entry>Where psData is the property sheet</entry>
<entry>that should be run</entry>
</row>
<row>
<entry/>
<entry>data values that have changed.</entry>
<entry>on a client system.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0092" num="0091">Using the methods shown in Table 4, the management module <b>304</b>, and in particular, a property sheet manager, may get data from a plugin or resource and modify data that is stored in the resource with respect to property pages.</p>
<p id="p-0093" num="0092"><figref idref="DRAWINGS">FIG. 6</figref> illustrates the functional components or operational flow characteristics related to the extension of an existing property sheet by another, separate resource. That is, when a resource is initially installed, the resource supplies information to the configuration manager <b>330</b>, shown in <figref idref="DRAWINGS">FIG. 3</figref>. <figref idref="DRAWINGS">FIG. 6</figref> illustrates an exemplary flow of operations during one such installation procedure, and in particular to the communication between the resource and the property page manager <b>332</b>, shown in <figref idref="DRAWINGS">FIG. 3</figref>. Additionally, the procedure shown in <figref idref="DRAWINGS">FIG. 6</figref> relates to particular operations that may occur during operations <b>406</b> and <b>408</b> described above in conjunction with <figref idref="DRAWINGS">FIG. 4</figref>, where new object information is supplied to other managers within the management module <b>304</b> and then stored by those managers.</p>
<p id="p-0094" num="0093">The flow <b>600</b> begins as receive operation <b>602</b> receives information related to a supported object. In one embodiment, receive operation relates to the property sheet manager <b>332</b> receiving a property page and an indication of the parent object, i.e., property sheet for that property page. Upon receiving the property page, a determine operation <b>604</b> determines whether the parent object, i.e., property sheet for that property page has already been defined by another resource. If so, the flow branches YES to append an operation <b>606</b>.</p>
<p id="p-0095" num="0094">The append operation <b>606</b> appends the received property page to the property sheet. Essentially, the property sheet definition is modified, such as by the property page manager to include a pointer to the new property page. Thus, the next time the property sheet is called, the new property page information is displayed along with other property pages for the supported object.</p>
<p id="p-0096" num="0095">Following the append operation <b>606</b>, a store operation <b>608</b> stores the revised property sheet information, such as in a property sheet datastore, e.g., store <b>344</b> shown in <figref idref="DRAWINGS">FIG. 3</figref>. Once the information is stored, flow ends at an end operation <b>610</b>. If, however, the determine operation <b>604</b> determines that the object has not been defined, then the flow <b>600</b> branches NO to a define object operation <b>612</b>, which defines the property sheet for the system. Once the object has been defined, the flow <b>600</b> continues to the append operation <b>606</b>, which adds the received property page to the newly defined property sheet. As discussed above, the property sheet may be modified to include a pointer to the new property page. As before, once the property sheet is modified, the information is stored at the store operation <b>608</b>, and the flow <b>600</b> ends at an end operation <b>610</b>.</p>
<p id="p-0097" num="0096">The ability to extend an existing property sheet by other, independent resources provides the management module <b>304</b> with an effective means of displaying and launching functions based on an object-centric approach. That is, an object, such as a user object, may be located by the management module <b>304</b> and displayed. The displayed object may include property pages supplied by more than one resource. Thus, the display is based on the user object and not based on the many and various resources that may or may not support the user object. In other words, displaying an object may display all the information about that object, even if some of the information is supplied by different resources.</p>
<p id="p-0098" num="0097">Besides providing an object-centric approach to displaying information, the environment <b>300</b> (<figref idref="DRAWINGS">FIG. 3</figref>) may also display and launch functions based on a task-based approach, wherein a combination of management functions across multiple resources are combined into a single task. <figref idref="DRAWINGS">FIG. 7</figref> illustrates the task manager in an embodiment of the invention and the display of a task list according to this embodiment. That is, the environment <b>300</b> displays many functions that may be performed on a particular object, even if those functions may require the use of different resources, such as resources <b>306</b> (<figref idref="DRAWINGS">FIGS. 3 and 7</figref>). Yet in an alternative embodiment, groups of functions may be combined into a script to perform multiple functions across multiple resources relating a particular task, e.g., a task that an administrator performs in their job function. <figref idref="DRAWINGS">FIG. 7</figref> illustrates a software environment used in displaying and executing tasks or groups of tasks in an environment, such as environment <b>300</b> (<figref idref="DRAWINGS">FIG. 3</figref>). As will be noted, some of the components in <figref idref="DRAWINGS">FIG. 7</figref> also appear in <figref idref="DRAWINGS">FIG. 3</figref> and therefore like reference numerals remain consistent between the figures.</p>
<p id="p-0099" num="0098">Tasks or task groups may be displayed on user interface control <b>702</b> by a task management service module <b>704</b>. A further description of a GUI suitable for the user interface control <b>702</b>, or task list, is described below with respect to the management console. In a particular embodiment, the user of the system may search for tasks using either quick search or advanced search techniques, as described below. Searching for the tasks causes the task manager <b>328</b> and task management service <b>704</b> to return a list of tasks that match or are related to the task that was requested. Alternatively, the user may browse a list of available tasks with the control of the task manager <b>328</b>. In an embodiment, browsing may be performed by scrolling through a hierarchical list of tasks based on the application or resource associated with the task or based on which object is associated with the task.</p>
<p id="p-0100" num="0099">In a particular embodiment, the task list <b>702</b> displays a list of tasks associated with a given instance or object. These tasks can be provided by the framework in response to a query and subsequent generation of a “results list” described below. Thus, the framework provides the end user with tasks that are appropriate based on the environment and state of the data object when the user locates and/or selects such an object. The task list can also be segmented into task groups. Groups can be predefined by the application or redefined by the administrator.</p>
<p id="p-0101" num="0100">Once the set of tasks has been discovered by the user and displayed in the task list <b>702</b>, the list <b>702</b> provides a launch point for the tasks. That is, a user may provide an indication to execute a task from the user interface. Once indicated, the task management service <b>704</b> receives the task request. In turn, the task manager <b>328</b> may begin to carry out the task. The task manager <b>328</b> may need to reference the task request with information in the task store <b>340</b> to locate which resources need to be accessed and which parameters need to be passed to those resources.</p>
<p id="p-0102" num="0101">Upon determining which resources must be accessed, the task manager <b>328</b> communicates with those resources, such as resources <b>318</b>, <b>320</b> and <b>322</b> through a SOAP proxy and a firewall, as shown in <figref idref="DRAWINGS">FIG. 7</figref>. SOAP is an XML-based protocol that is designed to exchange structured and typed information on the Web. The purpose of SOAP is to enable rich and automated Web services based on a shared and open Web infrastructure. SOAP can be used in combination with a variety of existing Internet protocols and formats including HTTP, SMTP, and MIME and can support a wide range of applications from messaging systems to RPC. Alternatively, other proxy communications may be used to provide the communication protocol. The resources are therefore called by the task manager and provided information to carry out specific tasks. Importantly, more than one resource may be called in response to a single task request from the user. The method of combining multiple functions into a single task may be customized by the user as described below with respect to scripting.</p>
<p id="p-0103" num="0102">In displaying the tasks, different display methods may be implemented. In a particular embodiment of the present invention, an XML definition of tasks, task groups and the handlers for those tasks is used. An example XML definition of tasks, task groups and the handlers for those tasks is provided below in Table 5. In this case, the “Manage Computers” task groups will, when rendered, contain a “Properties” and a “Terminal Server” task.</p>
<p id="p-0104" num="0103">
<tables id="TABLE-US-00005" num="00005">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 5</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Sample XML File for Generating and Displaying a Task List</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;tasks&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;static&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;taskgroup&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;id&gt;1&lt;/id&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;name&gt;Manage Computers&lt;/name&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;task&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="161pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;name&gt;Properties&lt;/name&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;description&gt;Change the properties&lt;/description&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;id&gt;2&lt;/id&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;icon&gt;images/ThirdPaneIndicator_Icon.gif&lt;/icon&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;handler&gt;&lt;![CDATA[alert (‘Not implemented’);]]&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;/handler&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/task&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;task&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="161pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;name&gt;Terminal Server&lt;/name&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;description&gt;Launch terminal server&lt;/description&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;id&gt;3&lt;/id&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;icon&gt;images/ThirdPaneIndicator_Icon.gif&lt;/icon&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;handler&gt;&lt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="70pt" align="left"/>
<colspec colname="1" colwidth="147pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>// task handler script here</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="161pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/handler&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="175pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/task&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/taskgroup&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="203pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/static&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;/tasks&gt;</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0105" num="0104">Using an XML file similar to the one shown in Table 5, a task list, such as task list <b>702</b> shown in <figref idref="DRAWINGS">FIG. 7</figref>, may be generated and displayed for the user upon selection of a data object or upon some other function, such as a request to display possible tasks that may be performed for a particular resource. <figref idref="DRAWINGS">FIG. 8</figref> illustrates the functional components or operational flow characteristics related to the generation and display of such a task list. In particular, the flow <b>800</b> illustrated in <figref idref="DRAWINGS">FIG. 8</figref> relates to the generation and display of a task list related to particular tasks that may be performed for a given object type that, for example may have been selected by the user. Therefore, in this embodiment, as a task list is being rendered for display in the user interface, the list is associated with the one or more objects that the tasks would ultimately apply. In a particular embodiment, the task manager <b>328</b> (<figref idref="DRAWINGS">FIG. 3</figref>) provides the functions shown and described in conjunction with <figref idref="DRAWINGS">FIG. 8</figref>. In alternative embodiments, other managers may be used to provide some or all of the functions shown and described in <figref idref="DRAWINGS">FIG. 8</figref>.</p>
<p id="p-0106" num="0105">Initially, the flow <b>800</b> begins as a receive operation <b>802</b> receives a request to display a task list for a selected object. That is, prior to receive operation, a user or the system selects an object and conducts a request indicating that the associated tasks for that object should be collected and displayed. For example, an administrator may highlight a particular user object. Highlighting or otherwise selecting the user object may, in one embodiment, automatically causes a request to be made for the tasks associated with that object. The request to collect and display all the tasks for the object typically includes the object type and the information about the instance or context of the object.</p>
<p id="p-0107" num="0106">Upon receiving the request, a collect operation <b>804</b> collects all the definitions that statically apply to the particular object type. Static tasks are defined as those tasks which may also be performed on a particular object. In one embodiment, when a task is created by a resource and associated with an object the resource may designate the task as a static task and that task may always be performed on any object of that object type. For instance, for a user object having user information, static tasks may relate to editing the user information and/or deleting the object. Since these tasks are static, the collect operation <b>804</b> may locate the tasks in a local store of information, such as store <b>340</b> shown in <figref idref="DRAWINGS">FIG. 3</figref>, or by requesting the tasks from the resource that supports the task.</p>
<p id="p-0108" num="0107">While the collect operation <b>804</b> is collecting static task definitions, a get operation <b>806</b> gets the task handler address for the particular object type. The task handler address may be found in the definition of the object and/or property page itself. The address indicates a particular resource that may have dynamic tasks that are to be displayed. Using the task handler address, a request is generated and sent to the identified resource to collect all dynamic tasks. Dynamic task information relates to functions that may be performed on particular data object, e.g., a particular user, but may not be available for all objects of that type, e.g., all users. Additionally, dynamic tasks may relate to the particular instance of an object, e.g., a task relating to disabling an account is dynamic since it depends on whether the account has been enabled.</p>
<p id="p-0109" num="0108">Following the request for dynamic tasks at operation <b>806</b>, a receive operation <b>808</b> receives the dynamic tasks from the indicated resource. Once the static and dynamic functions have been collected and located, a merge operation <b>810</b> merges the task information. Upon merging the information, a render operation <b>812</b> renders the list information to the user in the form of task list <b>702</b> (<figref idref="DRAWINGS">FIG. 7</figref>). In an embodiment, render operation <b>812</b> renders DHTML code needed to display the task list. Additionally, render operation <b>812</b> renders definitions of the task handlers which are associated with the various tasks displayed in the list <b>702</b> and which may be called upon selection of one of the displayed tasks.</p>
<p id="p-0110" num="0109">In accordance with other aspects of the present invention, the task manager <b>328</b> may also provide the ability to group functions or tasks that may be performed across multiple resources. In one embodiment, the grouping of functions are implemented as “scripts” and actions taken within the user interface trigger these scripts, thereby passing various parameters. The parameters may be provided explicitly by the user or the parameters may be extrapolated, by the framework from the context of the user interface when a particular script is invoked. Having all functions implemented as scripts increases the manageability of objects. Scripts may run on a local server or be pushed to the managed resources and executed on the resource. Additionally, scripts can be amalgamated in process to support customization for the end user. Extensibility of functions relates to the extending application simply adding a new script to the library of the original application or resource.</p>
<p id="p-0111" num="0110">In an embodiment, the scripts for all applications are stored in a central script library and are referenced by a script identification value. An end user may invoke a script by referencing the script using the identification value while passing in a set of parameters. Alternatively, a query may be passed in place of the parameter list, which causes the script to be executed on all objects that satisfy the query parameter.</p>
<p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. 9</figref> illustrates the functional components or operational flow <b>900</b> characteristics related to the creation of script having two or more functions associated with the script. Initially, an execute operation <b>902</b> executes the macro function, which records two or more user functions or operations into a macro format. The macro operation and function is similar to other macro recording operations. The macro effectively contains both tasks and parameters relating to the actual, recorded, user-interface functions.</p>
<p id="p-0113" num="0112">Following the execute operation <b>902</b>, a convert operation <b>904</b> converts the macro into an XML format file. The conversion necessarily separates the actual tasks from the parameters used in performing each task. Next, using the XML file, a create operation <b>906</b> creates a script from the XML file. Creating the script involves storing the task information independent from the parameters. Some indication may be stored along with the task information within the script that prompts the user to supply one or more needed parameters. Alternatively, the indication may refer to the store to determine the information from the context that the script was executed, or to locate supplied parameters from a query list.</p>
<p id="p-0114" num="0113">Upon creating the script, a store operation <b>908</b> stores the script in the script datastore. The user may call the script at a later time to execute the plurality of functions. Alternatively, the script may be executed automatically in response to a predetermined event or as a periodically timed task.</p>
<p id="p-0115" num="0114">To illustrate the scripting functionality, consider the following example. Assume that a human resources specialist is charged with creating a new user profile within the company. The specialist may record a macro of all the separate tasks that must be performed in order to create a new user profile. Those tasks may include notifying the accounting department to inform them that they need to address payroll information for the user and notifying the corporate security department indicating that a new key card should be made. Similarly, other relevant departments may be notified. A script of all these functions and notifications is created and stored in a script store so that the next time a new user profile must be generated; only the script needs to be called. In this case, the script prompts the specialist for user information to complete the profile and then the script notifies accounting, corporate security, etc. Consequently, the specialist does not have to perform repetitive steps in creating a new user profile for each new user.</p>
<p id="p-0116" num="0115">With respect to other aspects of the present invention, the management module <b>304</b> provides search capabilities. The environment <b>300</b> and the management module <b>304</b> includes a search or query manager <b>324</b> that is used to carry out various searches, such as searches for objects types, particular objects, resources, tasks, groups of tasks, among others. The search manager <b>324</b> interacts with the user interface manager <b>326</b> to receive queries and, in turn interacts with resources <b>312</b>, <b>314</b> and <b>316</b> to locate requested items based on the given query.</p>
<p id="p-0117" num="0116">In an embodiment of the invention, the manager <b>324</b> uses a schema driven search method which greatly enhances the flexibility of traditional searching capabilities by allowing the search parameters to be fully configurable through XML schema by the resources themselves. In essence, a resource may choose what object attributes can be searched over and in what domains the search is to be performed while still maintaining the uniformity of the user-interface and the architectural interface across different renderings of the management module <b>304</b>.</p>
<p id="p-0118" num="0117">More particularly, in an embodiment the plugin may provide such information to the configuration manager at process step <b>402</b> described above in conjunction with <figref idref="DRAWINGS">FIG. 4</figref>. The plugin provides the configuration manager <b>330</b> with a list of all attributes that define their objects and also a list of which of these attributes that may be used in subsequent searches. Additionally, the plugin may indicate the available scopes for such searches. The search manager <b>324</b> is then provided this information at supply operation <b>406</b>.</p>
<p id="p-0119" num="0118">Based on the information provided by the plugin, the management module <b>304</b> can generate the appropriate user-interface, as well as pass the schema to other resources to ensure an appropriate search is performed and the correct search results are displayed. In this embodiment, the environment does not have to specify all attribute names that are searchable for all possible object types. Instead, the plugin provides this information.</p>
<p id="p-0120" num="0119">Additionally, as shown in <figref idref="DRAWINGS">FIG. 10</figref>, the plugin may incorporate its own search engine <b>1002</b>. An embodiment of the present invention provides the plugin the capability of specifying its own search engine <b>1002</b> and hooking it into the management environment <b>304</b> and search manager <b>324</b>. Therefore, when a user performs a search for a particular object type the management module <b>304</b> passes the search string to the tailored search engine <b>1002</b> and retrieves the correct results from that search engine <b>1002</b>. In this manner, the end user experiences similar search characteristics independent of the object being located or the location of the object. Moreover, a standard method of searching need not be written in the management module <b>304</b>, e.g., a method that would account for the search syntax and architectural backend for supporting any and all searches over any object types. Instead, the separate search engines, such as engine <b>1002</b>, are hooked into the management module <b>304</b> and called via a predetermined protocol.</p>
<p id="p-0121" num="0120">In an embodiment, the protocol relates to use of an XML schema that conforms to the following Document Type Definition (the rules of the schema) shown in Table 6. The DTD shown in Table 6 provides the schema for defining an object type, which includes the schema to define the objects search parameters.</p>
<p id="p-0122" num="0121">
<tables id="TABLE-US-00006" num="00006">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 6</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Object Type XML DTD</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="105pt" align="left"/>
<colspec colname="2" colwidth="112pt" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;!ELEMENT objectTypes</entry>
<entry>(objectType+)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT objectType</entry>
<entry>(id, domain?, name, imageURL,</entry>
</row>
<row>
<entry/>
<entry>quickSearchHandlerURL,</entry>
</row>
<row>
<entry/>
<entry>quickSearchHandlerType,</entry>
</row>
<row>
<entry/>
<entry>advancedSearchHandler,</entry>
</row>
<row>
<entry/>
<entry>advancedSearchUI,</entry>
</row>
<row>
<entry/>
<entry>adInfo?,attributes, tasks)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT attributes</entry>
<entry>(attribute+)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT attribute</entry>
<entry>(((isScope, scopeHandlerURL,</entry>
</row>
<row>
<entry/>
<entry>scopeHandlerType) |</entry>
</row>
<row>
<entry/>
<entry>(isInstanceID?,id, name,</entry>
</row>
<row>
<entry/>
<entry>isQuickSearchable?, dataType,</entry>
</row>
<row>
<entry/>
<entry>advancedQueryDisplayHints,</entry>
</row>
<row>
<entry/>
<entry>resultsDisplayHints)))&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT</entry>
<entry>(show, requiredValue, defaultValue,</entry>
</row>
<row>
<entry>advancedQueryDisplayHints</entry>
<entry>order, width)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT resultsDisplayHints</entry>
<entry>(show, order, width)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT tasks</entry>
<entry>(static?,dynamic?)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT static</entry>
<entry>(taskgroup)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT taskgroup</entry>
<entry>(id, name, task+)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT task</entry>
<entry>(name, description, id, icon,</entry>
</row>
<row>
<entry/>
<entry>handler)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT handler</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT dynamic</entry>
<entry>(publishers)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT publishers</entry>
<entry>(publisher+)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT adInfo</entry>
<entry>(objectCategory, objectClass)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT publisher</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT objectCategory</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT objectClass</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT description</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT icon</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT show</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT requiredValue</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT defaultValue</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT order</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT width</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT scopeHandlerURL</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT scopeHandlerType</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT isInstanceID</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT isQuickSearchable</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT dataType</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT isScope</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT id</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT domain</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT name</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT imageURL</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>&lt;!ELEMENT</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>quickSearchHandlerURL</entry>
</row>
<row>
<entry>&lt;!ELEMENT</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>quickSearchHandlerType</entry>
</row>
<row>
<entry>&lt;!ELEMENT</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>advancedSearchHandler</entry>
</row>
<row>
<entry>&lt;!ELEMENT</entry>
<entry>(#PCDATA)&gt;</entry>
</row>
<row>
<entry>advancedSearchHandlerUI</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
An example XML schema to define a search is shown in Table 7.
</p>
<p id="p-0123" num="0122">Table 7: Sample XML Schema to Define a Search</p>
<p id="p-0124" num="0123">
<tables id="TABLE-US-00007" num="00007">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 7</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Sample XML Schema to Define a Search</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;OBJECTTYPE&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;ID&gt;4D36E96A-E325-11CE-BFC1-08002BE10318 &lt;/ID&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;NAME&gt; Computer &lt;/NAME&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;QUICKSEARCHHANDLER&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="161pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>“http://MMP/Search/ADS_Search.ASP”</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/QUICKSEARCHHANDLER&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;ADVANCEDSEARCHHANDLER&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;/ADVANCEDSEARCHHANDLER&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;ATTRIBUTES&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="161pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;ATTRIBUTE&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="84pt" align="left"/>
<colspec colname="1" colwidth="133pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;ISQUICKSEARCHABLE&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="112pt" align="left"/>
<colspec colname="1" colwidth="105pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>True</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="84pt" align="left"/>
<colspec colname="1" colwidth="133pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/ISQUICKSEARCHABLE&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;ISDEFAULT&gt; True &lt;/ISDEFAULT&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;ID&gt; OF-40-5012 &lt;/ID&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;NAME&gt; Office &lt;/NAME&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;DATATYPE&gt; String &lt;/DATATYPE&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;ADVANCEDQUERYDISPLAYHINTS&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;/ADVANCEDQUERYDISPLAYHINTS&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;RESULTSDISPLAYHINTS&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="112pt" align="left"/>
<colspec colname="1" colwidth="105pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;SHOW&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;/SHOW&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;ORDER&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;/ORDER&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;WIDTH&gt;</entry>
</row>
<row>
<entry/>
<entry>&lt;/WIDTH&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="84pt" align="left"/>
<colspec colname="1" colwidth="133pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/RESULTSDISPLAYHINTS&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="189pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>&lt;/ATTRIBUTES&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="left"/>
<tbody valign="top">
<row>
<entry>&lt;/OBJECTTYPE&gt;</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0125" num="0124">The above example defines part of an object having an attribute named “Office” that is to be exposed to the search system. That is, when an end user of the management system <b>304</b> wishes to search for an object of this type they can do so using the office attribute.</p>
<p id="p-0126" num="0125">In another embodiment, the line “http://MMP/Search/ADS_Search.ASP” is replaced with “http://MMP/Search/ADS_Search.asmx” such that the example defines part of an object including a pointer to the search engine that is to be used to search for objects of the above type. In this case the pointer is now “http://MMP/Search/ADS_Search.”</p>
<p id="p-0127" num="0126">In another embodiment, the line “http://MMP/Search/ADS_Search.ASP” is replaced with “http://MMP/Search/ADS_Search.asmx” such that the example defines part of an object including a pointer to the search engine that is to be used to search for objects of the above type. In this case the pointer is now http://MMP/Search/ADS_Search.</p>
<p id="p-0128" num="0127">In a particular embodiment, the search manager <b>324</b> may provide two options to the user, a quick search and an advanced search. With respect to the advanced search function, the user may supply an advance-search query to the search manager <b>324</b>, which, in turn, parses the query. Based on the results of the parsing action, the search manager may then access the various resources and subsequently search information stored in conjunction with those resources to locate the requested information. Many different advanced search algorithms may be implemented to perform the search function. The search manager <b>324</b>, however, controls the searches performed, either using plugin search engines, such as engine <b>1002</b> or a search engine located on the resource management module <b>304</b>, not shown. Results from searches may be marshaled back to the user through a search management service <b>1004</b> and displayed in the user interface <b>1006</b>, as described below.</p>
<p id="p-0129" num="0128"><figref idref="DRAWINGS">FIG. 11</figref> illustrates an operational flow <b>1100</b> related to the execution of a search function. Initially, a receive operation <b>1102</b> receives a search query. The query may be received from the client system <b>308</b>. However, in other embodiments, the system <b>304</b> may receive the query from other sources, such as one of the managers, e.g., the task manager <b>328</b> or one of the resources <b>306</b>. The query includes information related to the types of objects or tasks that are requested. However, in other embodiments, the query may include any information that can be used to conduct a search either locally on the management module <b>304</b>, or on one or more resources <b>306</b>.</p>
<p id="p-0130" num="0129">Upon receiving the query, a send operation <b>1104</b> sends the query to the search manager <b>324</b> (<figref idref="DRAWINGS">FIG. 3</figref>). The search manager <b>324</b> may then parse the search request and associated query. In an embodiment, the request is formatted in an XML format and includes a tag identifying a search handler. Next, a determine operation <b>1106</b> determines the search handler from the received query. The search handler is identified by an address or pointer located in the query or within a property sheet which may be determined based on the query terms.</p>
<p id="p-0131" num="0130">Following determine operation <b>1106</b>, a package operation <b>1108</b> packages the data into an XML formatted file. The query may include attributes that can be passed to a resource. However, prior to passing to the resource, the information is first put into a recognized format, e.g., XML. Once packaged, a send operation <b>1110</b> sends the information or data to the resource. The resource that receives the information relates to the resource that manages the search handler. The resource then performs a search amongst its managed objects to locate the requested information.</p>
<p id="p-0132" num="0131">Following the send operation <b>1110</b>, and once the resource has located the requested information, a receive operation <b>1112</b> receives the results from the resource. The received information may be formatted into an XML format. Additionally, any parsing of the results may be done by the receive operation <b>1112</b>. Furthermore, should the results contain multiple pages of information, the receive operation <b>1112</b> may also page the results into memory. Next, a send operation <b>1114</b> sends the results of the query to the client. As stated, the results may contain a significant amount information and therefore the results may be divided into pages for the client.</p>
<p id="p-0133" num="0132">The method shown and described in conjunction with <figref idref="DRAWINGS">FIG. 11</figref> may be used for either the advanced search or the quick search feature. However, the advanced search option provides a layer of processing that may evaluate query strings and access multiple resources, such that the scope of the search may be quite broad. Indeed, the searches may be general in nature and the results may comprise a plurality of objects. In such a case, those objects may reside on different resources.</p>
<p id="p-0134" num="0133">On the other hand, the quick search feature is intended to compliment the advanced search feature by providing the plugin with a way to expose their most frequently sought data to the user through a simple, easy to use search interface. In an embodiment, the quick search feature is a subset of the advanced search, i.e. it's queries feed into the advanced search algorithm. Alternatively, the quick search operates independently of the advanced search algorithm. Further particulars related to the quick search features are discussed in detail below with respect to the management console GUI.</p>
<p id="p-0135" num="0134">As described, the systems and methods of the present invention allow for the management or administration of a number of varied resources in a computer network. As will now be described in greater detail, the management or administration of the varied resources may be carried out via a unique graphical user interface displayed on a client computer system, such as the client computer system <b>302</b> shown in <figref idref="DRAWINGS">FIG. 3</figref>. As will now be described, in an embodiment of the present invention, a unique “management console” running in a web browser application on a client computer system provides a consistent interface for a variety of “back-end” resources, such that the system administrator may perform his or her network administration tasks in a clear and concise manner from any number of computing device having accesses to the internet.</p>
<p id="p-0136" num="0135">As described above, the user interface manager <b>326</b>, of the management module <b>304</b>, provides appropriate communication links and protocols between the client computer system <b>302</b> and the management module <b>304</b> in a manner that allows a browser, such as the web browser <b>116</b> on the client computer system <b>116</b>, to provide remote resource management capabilities to a system administrator. In one embodiment, the interface manager <b>326</b> includes a web service. As is known, a web service is a unit of application logic providing data and services to other applications, such as the web browser <b>116</b> running on the client computer system <b>102</b>.</p>
<p id="p-0137" num="0136">As also described above an application, such as the browser <b>116</b>, may access the web service of the interface manager <b>326</b> using web protocols and data formats, such as HTTP, XML, and SOAP. During an initial access of the interface manager <b>326</b> by the browser <b>116</b>, the interface manager <b>326</b> downloads a small application, herein referred to as the console applet <b>313</b>, to the web browser <b>311</b>, as shown in <figref idref="DRAWINGS">FIG. 3</figref>. The console applet <b>313</b> may comprise, for example and without limitation, a Java applet. The console applet <b>313</b> operates within the browser to render a management console, within the browser, in accordance with predefined console layout specifications and features. As also described below, the console <b>313</b> applet also manages the sending and receiving of information to and from the interface manager <b>326</b>.</p>
<p id="p-0138" num="0137">In one embodiment of the present invention, the layout of a format of the particular management console being rendered in the browser <b>311</b> on the client computer system <b>116</b> is specified by an XML document sent from the interface manager <b>326</b> to the console applet <b>313</b>. In this embodiment, the console applet then opens the XML file by loading the XML file into an XML Document Object Model (DOM) object. The DOM object is then used to access the data defining the format of the consol. The console applet <b>313</b> then interprets the data and generates appropriate HTML, DHTML, or scripts (such as java script or jscript) for rendering the management consol in the browser <b>311</b>.</p>
<p id="p-0139" num="0138">Additionally, data relating to requests or inquiries from the client environment <b>302</b> to the management module <b>304</b>, or responses from the management module <b>304</b> to the client environment <b>302</b>, may also be formatted and transferred between the client environment <b>302</b> and the management module <b>304</b> as XML documents. Once the interface manager <b>326</b> has received a request or inquiry from the client environment <b>302</b>, the interface manager functions to distribute the request or inquiry to the appropriate manager or resource.</p>
<p id="p-0140" num="0139">The format of the XML documents sent between the console applet <b>313</b> and the interface manager <b>316</b> are predetermined. In one embodiment, the format of any XML document sent between the interface manager <b>326</b> and the console applet <b>313</b> is specific to the particular manager that will ultimately access or handle the data contained in the XML document. For example, as described above, information or requests that are to be handled by the search manager may be transmitted in an XML document that has a format that is uniquely configured for search specific data and commands.</p>
<p id="p-0141" num="0140">As shown in <figref idref="DRAWINGS">FIG. 3</figref>, the client environment <b>302</b> may include a web browser <b>311</b>, such as browser <b>116</b> shown in <figref idref="DRAWINGS">FIG. 1</figref>, as well as an applet <b>313</b> running on the web browser <b>311</b>. The applet <b>313</b> functions to generate a management console, as described below, in the web browser <b>311</b>. The web browser <b>311</b> may be any standard web browser that is compatible with the Microsoft “.NET Framework.”</p>
<p id="p-0142" num="0141">As is known, a web browser is a client application, software component, or operating system utility that communicates with server computers via standardized protocols such as HTTP, FTP and Gopher. Web browsers receive documents from the computer network and present them to a user. Microsoft Internet Explorer, available from Microsoft Corporation, of Redmond, Wash., is one example of a web browser.</p>
<p id="p-0143" num="0142"><figref idref="DRAWINGS">FIG. 12</figref> illustrates some of the elements of a user interface in accordance an embodiment of the present invention. As described above, in an embodiment, the user interface comprises what is referred to herein as a management console <b>1200</b>, which is rendered in a window of a web browser, such as web browser <b>311</b> (<figref idref="DRAWINGS">FIG. 3</figref>). In one embodiment, the rendering of the console <b>1200</b> may be handled by the web browser <b>1211</b> in accordance with a markup language document, such as, without limitation, an XML document, an HTML document, or a DHTML document. In the case where the consol is rendered in accordance with an XML document, that document may be converted to, and accessed in the form of, a DOM object.</p>
<p id="p-0144" num="0143">The console <b>1200</b> employs a GUI-type visual presentation to convey information to and receive commands from users for controlling or accessing one or more of the resources <b>306</b>. The console <b>1200</b> relies on a variety of GUI elements or objects, including windows, icons, text, drop-down menus, dialog boxes, toolbars, buttons, controls, and the like. A user, such as a system administrator, may interact with the GUI presentation of the console <b>1200</b> by, for example and without limitation, using a pointing device (e.g., a mouse) to position a pointer or a cursor over an object and “clicking” on the object or by using keys on a keyboard.</p>
<p id="p-0145" num="0144">The style and behavior of any component that is laid out on the console can be persisted. Users can completely customize their consoles, specifying everything from the content and configuration of the zones to the level of information displayed in a property page. Customized consoles can be saved for personal use or published for use by others.</p>
<p id="p-0146" num="0145">As shown in <figref idref="DRAWINGS">FIG. 12</figref>, the console <b>1200</b> includes a tool bar <b>1210</b> and three zones, including a first tool zone <b>412</b>, a work zone <b>1214</b>, and second tool zone <b>1216</b>. In one embodiment, the toolbar <b>1210</b> is located at an uppermost edge <b>1202</b> of the console <b>1200</b>. It will be appreciated by one skilled in the art that the present invention is not limited to the toolbar described herein, but may encompass any type of toolbar containing control elements or commands for controlling the features of console <b>1200</b>. The toolbar <b>1210</b> may include any number of controls that are associated with the console <b>1200</b>. In one embodiment, as shown in <figref idref="DRAWINGS">FIG. 12</figref>, the toolbar <b>1202</b> includes a console selection element <b>1222</b>, a show element <b>1224</b>, a first zone display element <b>1218</b>, and a second zone display element <b>1220</b>. These controls perform specific functions in association with the console <b>1200</b>, as will now be described.</p>
<p id="p-0147" num="0146">The console selection element <b>1222</b> allows a user to select from among a number of predefined consoles. That is, the user may use the console selection element <b>1222</b> to access a number of different “console layouts.” Additionally, consoles may be saved, as described below. A system administrator may “author” a number of different consoles, each of which may contain different elements and features. For example, and without limitation, consoles may be authored to include graphical control elements that are appropriate for various scenarios or tasks. Alternatively, consoles may be authored to include graphical control elements that are specific to a specific user's job functions or administrative level.</p>
<p id="p-0148" num="0147">As shown in <figref idref="DRAWINGS">FIG. 13</figref>, in one embodiment, the console selection element <b>1222</b> includes an entry point <b>1330</b> and a drop-down menu <b>1332</b>, including a list of available console layouts, that is exposed for operation by a user via the entry point <b>1330</b>. The entry point <b>1330</b> may be implemented by a conventional toolbar button or menu, or by a special control element. Although this exemplary embodiment includes a visible entry point, those skilled in the art will appreciate that the function of selecting a desired console layout can also be implemented by “clicking” a selected mouse button while the cursor is located over a particular location of the toolbar.</p>
<p id="p-0149" num="0148">To select a particular console layout, the user may use a mouse (or keyboard) to move a cursor to the entry point <b>1330</b>, and thereafter click on (or select) the entry point <b>1330</b>. When the user clicks on the entry point <b>1330</b>, the drop-down menu <b>1332</b> is displayed, as shown in <figref idref="DRAWINGS">FIG. 13</figref>. This exemplary embodiment uses a drop-down menu having selection indicators, which may be implemented as a checkboxes, to indicate whether a particular layout from the list of available console layouts has been selected. To select a particular console layout, the mouse may be used to select the desired console layout. A checkbox is a type of interactive control often found in a GUI and is used to indicate which of the desired console layouts in the menu has been selected.</p>
<p id="p-0150" num="0149">Additionally, located in the drop-down menu <b>1332</b> of the console selection element <b>1222</b> are a console “save” element <b>1334</b> and console “save as” buttons <b>1336</b>. The console “save” element <b>1334</b> may be used to save the current state of the console layout <b>1200</b>, under the current console name. In contrast, the console “save as” element <b>1336</b> may be used to save the current state of the console <b>1200</b> under a different console name. In one embodiment, the console “save” element <b>1334</b> and the console “save as” <b>1336</b> element <b>1336</b> may be implemented as buttons located in the drop-down menu <b>1332</b>, as shown in <figref idref="DRAWINGS">FIG. 13</figref>. Once the saved, the layout of a console may be save, for example as an XML file, by the persistence manager <b>334</b>. The selection of these elements may then be accomplished by “clicking” the buttons using a mouse. However, the console “save” element <b>1334</b> and the console “save as” element <b>1236</b> may also, or alternatively, be located in other areas of the console <b>1200</b>.</p>
<p id="p-0151" num="0150">As shown in <figref idref="DRAWINGS">FIG. 13</figref>, the show element <b>1224</b> allows a user to hide and/or show the first <b>1212</b> and second <b>1216</b> zones. In one embodiment, the show element <b>1224</b> is presented and operates in a similar manner to the console selection element <b>1222</b>, as a show drop-down menu <b>1340</b>. Located in the show drop-down menu <b>1340</b> are a “hide left zone” element <b>1342</b> and a “hide right zone” element <b>1344</b>. The “hide left zone” element <b>1342</b> allows a user to select or deselect the display of the first zone <b>1212</b>. The “hide right zone” element <b>1344</b> allows a user to select or deselect the display the second zone <b>1212</b>.</p>
<p id="p-0152" num="0151">In addition to the “hide left zone” element <b>1342</b> and the “hide right zone” element <b>1344</b>, in one embodiment, the show drop-down menu <b>1340</b> may also include other elements for selecting or deselecting the display of the various tools located in the first zone <b>1212</b> and/or the second zone <b>1216</b> of the console <b>1200</b>. For example, as shown in <figref idref="DRAWINGS">FIG. 13</figref>, the show drop-down menu <b>1340</b> includes a “hide quick search tool” element <b>1346</b> and a “hide monitors tool” element <b>1348</b>. The selecting or deselecting of the display of various the various tools located in the first zone <b>1212</b> and/or the second zone <b>1216</b> of the console <b>1200</b> may be accomplished in a similar manner as that described above with respect to the “hide right zone” element <b>1344</b> and the “hide left zone” element.</p>
<p id="p-0153" num="0152">Returning to <figref idref="DRAWINGS">FIG. 12</figref>, the first zone display element <b>1218</b> allows a user to “toggle-off” and/or “toggle-on” the first zone <b>1212</b>. That is, the first zone display element <b>1218</b> allows a user to add or remove the first zone <b>1212</b> from the console <b>1200</b>. As shown in <figref idref="DRAWINGS">FIG. 13</figref>, the first zone display element <b>1218</b> may be implemented as a button. In this embodiment, the user positions the mouse over the first zone display button <b>1218</b> and clicks on the button <b>1218</b> to “toggle” the button between a first state, where the first zone <b>1212</b> is displayed in the console <b>1200</b>, and a second state where the first zone <b>1212</b> is not displayed in the console <b>1200</b>. A number of mechanisms may be employed to indicate when the first state has been selected. For example, giving focus to or highlighting the button <b>1218</b> when the first state is selected, changing the color of the selected button <b>1218</b> when the first state is selected, displaying a different icon, such as a light bulb, when the first state is selected, or using radio buttons, etc.</p>
<p id="p-0154" num="0153">The second zone display element <b>1220</b> allows a user to “toggle-off” and/or “toggle-on” the second zone <b>1216</b>. That is, the second zone display element <b>1220</b> allows a user to add or remove the second zone <b>1216</b> from the console <b>1200</b>. The second zone display element <b>1220</b> may be implemented in a similar manner to that just described with respect to the first zone display element <b>1218</b>.</p>
<p id="p-0155" num="0154">In an embodiment of the present invention, the first zone <b>1212</b> and the second zone <b>1216</b>, are operable to display one or tools, where a tool is a graphical user interface element that provides a user quick access to features or functions of the console <b>1200</b>. For example, as shown in <figref idref="DRAWINGS">FIG. 12</figref>, the first zone includes a quick search tool <b>1240</b>, which provides a hierarchical selection structure to enable the user to quickly search for different objects and to populate the work zone <b>1214</b>. As also shown in <figref idref="DRAWINGS">FIG. 12</figref>, the second zone includes a monitor tool that displays the status of CPU usage.</p>
<p id="p-0156" num="0155">The work zone <b>1214</b> is where much of the functionality of the console <b>1200</b> is carried out. As shown in <figref idref="DRAWINGS">FIG. 12</figref>, the work zone <b>1214</b> has displayed therein a workspace <b>1250</b>. Each workspace typically maps to a single job function, such as managing servers or printers. While numerous workspaces may be viewed in the work zone <b>1214</b>, in one embodiment of the present invention only a single workspace may be viewed at a time in the work zone <b>1214</b>. However, in the case where a console includes more than one workspace, a user may use a browser tool to access the various workspaces, as described in greater detail below.</p>
<p id="p-0157" num="0156">Located within the workspace is workspace window <b>1252</b>, which is operable to display one or more modules <b>1254</b>. Also included in the workspace <b>1250</b> is a scroll bar <b>1255</b>. The scroll bar is a graphical control element that allows a user to view information outside of the viewing area of the workspace window <b>1252</b>. For example, the scroll bar <b>1255</b> may be used to scroll the workspace window <b>1252</b> in a manner that brings one or another module of the modules present in the workspace <b>1250</b> into view in the workspace window <b>1252</b>. As is typical, the scroll bar <b>1255</b> includes a scroll box <b>1256</b> that may moved up and down inside the scroll bar using a mouse. Scroll arrows <b>1258</b> at each end of the scroll bar <b>1255</b> can also be clicked to move the viewing area of the workspace window <b>1252</b> in a specified direction. Additionally, the scroll box may be moved up and down inside the scroll bar <b>1255</b> by clicking inside of the scroll bar in an area not occupied by the scroll box <b>1256</b>, as is conventional.</p>
<p id="p-0158" num="0157">Located within the workspace window <b>1252</b> are one or modules <b>1254</b>. Where a workspace is mapped to job functions, modules <b>1254</b> typically map to a specific object(s) upon which work is done. As discussed above, there are two types of distinct modules—those which reside in a workspace and pertain to a specific object type and those which reside in the first and second zones, herein referred to as tools. Table 8, shown below, illustrates a list of several modules that may be displayed within the various zones.</p>
<p id="p-0159" num="0158">
<tables id="TABLE-US-00008" num="00008">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 8</entry>
</row>
</thead>
<tbody valign="top">
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Example Modules</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="77pt" align="left"/>
<colspec colname="2" colwidth="140pt" align="left"/>
<tbody valign="top">
<row>
<entry>Module Name</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry>Quick Search</entry>
<entry>Module to launch and perform any job</entry>
</row>
<row>
<entry/>
<entry>function by quickly searching object types.</entry>
</row>
<row>
<entry>Explorer</entry>
<entry>Launch point for workspaces and modules</entry>
</row>
<row>
<entry/>
<entry>provides user with a snapshot of the current</entry>
</row>
<row>
<entry/>
<entry>state of the console.</entry>
</row>
<row>
<entry>Monitors</entry>
<entry>Provides user with a snapshot of the status</entry>
</row>
<row>
<entry/>
<entry>of requests, tasks, or objects.</entry>
</row>
<row>
<entry>Notifications</entry>
<entry>Provides user with explicit notifications</entry>
</row>
<row>
<entry/>
<entry>when predetermined rules are met.</entry>
</row>
<row>
<entry>Advanced Search</entry>
<entry>Provides advanced search functions for the</entry>
</row>
<row>
<entry/>
<entry>user beyond capabilities of Quick Search.</entry>
</row>
<row>
<entry>Browse</entry>
<entry>Alternative searching capability through</entry>
</row>
<row>
<entry/>
<entry>Browse techniques.</entry>
</row>
<row>
<entry>Results List</entry>
<entry>Workspace area for storing the results of a</entry>
</row>
<row>
<entry/>
<entry>query, may be provided by the Quick</entry>
</row>
<row>
<entry/>
<entry>Search or Advanced Search function.</entry>
</row>
<row>
<entry>Task List</entry>
<entry>Workspace area provided to display a list</entry>
</row>
<row>
<entry/>
<entry>of tasks associated with given instances.</entry>
</row>
<row>
<entry>Task Pads</entry>
<entry>Tool that allows for customization of</entry>
</row>
<row>
<entry/>
<entry>available tasks.</entry>
</row>
<row>
<entry>Property Sheets</entry>
<entry>Workspace display of various properties</entry>
</row>
<row>
<entry/>
<entry>for the particular object selected.</entry>
</row>
<row>
<entry>Wizards</entry>
<entry>Wizards provide the ability to specify</entry>
</row>
<row>
<entry/>
<entry>complex workflow relationships between</entry>
</row>
<row>
<entry/>
<entry>pages.</entry>
</row>
<row>
<entry>Graphs</entry>
<entry>Workspace area for viewing various data,</entry>
</row>
<row>
<entry/>
<entry>such as monitored data in graph format.</entry>
</row>
<row>
<entry>Editable Grid</entry>
<entry>Editable Grid functions similar to a</entry>
</row>
<row>
<entry/>
<entry>spreadsheet. Provides the user the ability</entry>
</row>
<row>
<entry/>
<entry>to view, edit and modify tabular data.</entry>
</row>
<row>
<entry>Drawing Surface</entry>
<entry>Drawing area providing visual display of</entry>
</row>
<row>
<entry/>
<entry>workflow for such items as Wizards and</entry>
</row>
<row>
<entry/>
<entry>other components.</entry>
</row>
<row>
<entry>Enterprise Event Log</entry>
<entry>Viewer to provide administrator with the</entry>
</row>
<row>
<entry/>
<entry>useful display of events alerts or trouble</entry>
</row>
<row>
<entry/>
<entry>areas.</entry>
</row>
<row>
<entry>Scheduling</entry>
<entry>Module for scheduling events for managed</entry>
</row>
<row>
<entry/>
<entry>objects.</entry>
</row>
<row>
<entry>Hosted or Spawned</entry>
<entry>Other applications used within a</entry>
</row>
<row>
<entry/>
<entry>predetermined workspace, such as Instant</entry>
</row>
<row>
<entry>Applications</entry>
<entry>Messenger or Terminal Server.</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0160" num="0159">Each module <b>1254</b> contains a module window <b>1260</b>. Each module window <b>1260</b> includes one or more associated panes. As shown in <figref idref="DRAWINGS">FIG. 12</figref>, in one embodiment, the module window <b>1260</b> includes four distinct panes: a query pane <b>1262</b>, an object pane <b>1264</b>, a task pane <b>1266</b>, and a work pane <b>1268</b>.</p>
<p id="p-0161" num="0160">In general, the object pane <b>1264</b> is operable to display information about one or more objects that are applicable to the module <b>1260</b> in which the object pane <b>1264</b> resides. For example, the object pane <b>1264</b> may include a list of objects associated with a given module that may be selected for access by a user. The objects in the object pane may be presentation in a number of ways, depending on the number of objects to be displayed and the preferences of the author of the console <b>1200</b>. For example, and without limitation, the objects may be displayed in a simple object list, as shown in <figref idref="DRAWINGS">FIG. 14</figref>. A user may then select one or more of the objects in the list for accessing.</p>
<p id="p-0162" num="0161">The task pane <b>1266</b> is operable to display various tasks that are or applicable to, and available for, an object that has been selected in the object pane. As with the object pane, tasks in the task pane <b>1266</b> may be presentation in a number of ways, depending on the number of tasks to be displayed and the preferences of the author of the console <b>1200</b>. For example, and without limitation, the tasks may be displayed in the task pane <b>1266</b> as a simple task list, as shown in <figref idref="DRAWINGS">FIG. 14</figref>. A user may then select one or more of the tasks in the list for access.</p>
<p id="p-0163" num="0162">Once a task has been selected from the task list <b>1266</b>, the function of the selected task may be immediately carried out or, alternatively, a work pane <b>1268</b> may be displayed showing additional information and/or presenting additional functionality, or sub-tasks, related to the selected task. The additional information, the presented additional functionality, and/or the related sub-tasks, may be displayed in the work pane <b>1268</b> in a number of ways, depending on the type of information or functionality that is to be displayed and the preferences of the author of the console <b>1200</b>.</p>
<p id="p-0164" num="0163">The query pane <b>1262</b> is operable to search multiple resources associated with the software environment <b>300</b> (<figref idref="DRAWINGS">FIG. 3</figref>). As described previously, network administrators may work with many different objects of differing types. In a typical network administration environment objects are usually only accessible through applications that are specific to either one or a small collection of object types. Thus, if an network administrators needs to work with a specific object or group of objects, the network administrators must first navigate to the application that is associated with the desired object type and then navigate to the specific object or group of objects. This does not provide an integrated user experience. In contrast, the query pane <b>1262</b> provides an integrated manner in which objects from multiple resources may be accessed. That is, the query pane <b>1262</b> provides one mechanism by which the object pane <b>1264</b> may be populated by objects from or related to a variety of references.</p>
<p id="p-0165" num="0164">The query pane <b>1262</b> may be presented in a number of ways, depending on the type of resources that are to be queried and the preferences of the author of the console <b>1200</b>. In one embodiment, such as shown in <figref idref="DRAWINGS">FIG. 14</figref>, the query pane <b>1262</b> may comprise a simple text box <b>1470</b> for entering terms for a desired query using a keyboard. A mouse may then be used to click a “Go!” button <b>1472</b> to initiate the query.</p>
<p id="p-0166" num="0165">In one embodiment, the result of executing a query produces one of three states: 1) no objects found; 2) one object found; or 3) multiple objects found. If an object or multiple objects are found, they are displayed in the objects pane <b>1264</b>. As such, refreshing or modifying the query may result in different objects being displayed in the object pane.</p>
<p id="p-0167" num="0166">The query pane provides a unique and cohesive approach to object selection and management. Instead of requiring the network administrators to navigate to an application and then navigate to an object or group of objects, as was common in prior network administration tools. The query pane <b>1262</b> allows a network administrator to navigate directly to an object or group of objects. Once an object(s) is located the network administrators is then able to perform all task that are associated with that object(s).</p>
<p id="p-0168" num="0167">Turning now to <figref idref="DRAWINGS">FIG. 14</figref>, shown therein is an exemplary console <b>1400</b>, displaying a toolbar <b>1410</b> positioned at the top <b>1411</b> of the console <b>1400</b>, a first zone <b>1412</b> positioned on the left side <b>1413</b> of the console <b>1400</b>, a second zone <b>1416</b> positioned on the right side <b>1417</b> of the console <b>1400</b>, and work zone <b>1414</b> positioned in the center <b>1415</b> of the console <b>1400</b>. Displayed in the first zone <b>1412</b> are two tools, a quick search tool <b>1418</b> and an explorer tool <b>1420</b>. Displayed in the second zone <b>1414</b> are another two tools, a monitors tool <b>1422</b> and a notifications tool <b>1424</b>. Displayed in the work zone <b>1414</b> is a user administration workspace <b>1426</b> containing a module <b>1454</b>. It will be understood that the particular console shown in <figref idref="DRAWINGS">FIG. 14</figref> is but one example of a console and is presented here to provide a better understanding of various functionality and display characteristics that may be available with respect to a console. As such, the layout and functions of the particular console shown in <figref idref="DRAWINGS">FIG. 6</figref> are not intended to encompass all feature, layout, and/or functionality that may be presented in a console.</p>
<p id="p-0169" num="0168">As described above, the quick search tool <b>1418</b> provides a hierarchical selection structure that enables a user to quickly search for different objects from a variety of resources and to populate the work zone <b>1414</b>. More particularly, the quick search tool <b>1418</b> includes GUI controls that allow a system administrator to easily combine a specific object instance (or instances) and an action to be performed against that object instance, as well as specify the scope of the search.</p>
<p id="p-0170" num="0169">As shown in <figref idref="DRAWINGS">FIG. 15</figref>, the quick search tool <b>618</b> employs common GUI controls such as the drop-down menus, text boxes, and buttons. The controls are arranged logically to support a simple work flow for performing the action of specifying an object instance-action pair to be found. In an embodiment, the quick search tool <b>618</b> includes a tool bar <b>1510</b>, including a quick search drop-down menu selector <b>1512</b>, an edit element <b>1514</b>, and a quick search close element <b>1516</b>. The quick search drop-down menu selector <b>1512</b> includes a triangular visual element that may be “clicked” on by a mouse to open or close a quick search drop-down menu <b>1518</b>, in a conventional manner. The quick search close element <b>1516</b> includes an x-shaped visual element that may be “clicked” on by a mouse to close the quick search tool <b>1518</b>, in a conventional manner.</p>
<p id="p-0171" num="0170">In one embodiment, the quick search drop-down menu <b>1518</b> includes an object type selection element <b>1530</b>, a search scope selection element <b>1532</b>, an instance(s) selection element <b>1534</b>, an action selection element <b>1536</b>, and a quick search initiation element <b>1538</b>, each of which will now be described.</p>
<p id="p-0172" num="0171">The object type selection element <b>1530</b> provides a graphical representation of the various object types that are searchable by a user, such as a system administrator. The number and selection of the various object types that are displayed by the object type selection element <b>1530</b> may be preselected, such as by an author of a consol. Additionally, the number and selection of the various object types that are displayed by the object type selection element <b>1530</b> may vary when either a different console <b>1400</b> or a different workspace <b>1426</b> are selected.</p>
<p id="p-0173" num="0172">The object type selection element <b>1530</b> may display the various object types for selection in a number of ways. Furthermore, the object type selection element <b>1530</b> may provide any of a number of different mechanisms by which an object type may be selected from the display of the various object types. For example, and without limitation, the object type selection element <b>1530</b> may display the various object types for selection in the form of a list of objects in a drop-down menu <b>1610</b>, as shown in <figref idref="DRAWINGS">FIG. 16</figref>. A user of the quick search tool may then select a particular object from the list of objects <b>1612</b> by clicking on a desired object with a mouse. Alternatively, the user of the quick search tool could select a particular object from the list of objects <b>1612</b> using keys on a keyboard. For example, a user could use up and down arrow keys on a keyboard to navigate the list of objects <b>1612</b>.</p>
<p id="p-0174" num="0173">Once the user has selected a particular object from the list of objects <b>1612</b>, the search scope selection element <b>1532</b> is enabled and may be used to define the scope of the desired quick search. In one embodiment, the user may define the scope of the search either by entering a desired scope. Alternatively, based on the type of object selected, the scope of the search may be defined to reflect an appropriate list of areas within which to search for the object instance the user has specified. For example, as shown in <figref idref="DRAWINGS">FIG. 16</figref>, the user has selected a user object. If, for example, instances of the user object are stored in the Active Directory. In such a case, the scope of the search may involve selecting the domain in which to search. As another example, if the instance is stored in a SQL Server database, then the scope would most likely be a list of database names.</p>
<p id="p-0175" num="0174">The search scope selection element <b>1532</b> may display the various search scopes for selection in a number of ways. Furthermore, the search scope selection element <b>1532</b> may provide any of a number of different mechanisms by which a search scope may be selected from the display of the various search scopes. For example, and without limitation, the search scope selection element may display the various scopes for selection in the form of a list in a drop-down menu, in the same manner as described above with respect to the object type selection element <b>1530</b> shown in <figref idref="DRAWINGS">FIG. 16</figref>. A user of the quick search tool <b>1418</b> could then select a particular scope from the list of scopes by clicking on the desired scope with a mouse. Alternatively, the user of the quick search tool could select a particular scope from the list of objects using keys on a keyboard.</p>
<p id="p-0176" num="0175">As shown in <figref idref="DRAWINGS">FIG. 17</figref>, the object type (User) has been selected, as shown in the search scope selection element <b>1532</b>. Because the instances of this object type are stored in an Active Directory, the scope would be a list of domain names. In the example shown in <figref idref="DRAWINGS">FIG. 17</figref>, the user has accepted the default domain, Microsoft.com, and that scope is shown in the search scope selection element <b>1532</b>.</p>
<p id="p-0177" num="0176">After selecting a particular scope for the search, the user may then select an instance of the object type specified using the instance selection element <b>1534</b>. An instance of an object type is specific, named object. For example if an object is of a type type ‘User’, then the instance will be an actual user. The instance selection element <b>1534</b> may display the various instances for selection in a number of ways. Furthermore, the instance selection element <b>1534</b> may provide any of a number of different mechanisms by which a instance may be selected from the display of the instances. For example, and without limitation, the instance selection element <b>1534</b> may display the various instances for selection in the form of a list in a drop-down menu. Alternatively, the instance selection element <b>1534</b> may allow the user to input the desired instance(s) manually. For example, as shown in <figref idref="DRAWINGS">FIG. 17</figref>, the user may type a desired instance(s) into a text box <b>1710</b> in the quick search drop-down menu <b>1518</b>. Additionally, by using a delimiter such as a semi colon, the user may specify multiple instances. The user may also employ “wildcards,” such as an asterisk or a question mark, etc., when specifying instances. Instance names will typically be a unique identifier for the object type. For example, if an Active Directory's user object has been selected the instance name might be a logon name.</p>
<p id="p-0178" num="0177">After selecting a particular instance(s) for the search, the user may select from a number of actions that are available for the selected object type, scope, and instance(s) using the action selection element <b>1536</b>. The action selection element <b>1536</b> may display the various actions for selection in a number of ways. Furthermore, the action selection element <b>1536</b> may provide any of a number of different mechanisms by which an action may be selected from the display of the actions. For example, and without limitation, the action selection element <b>1536</b> may display the various instances for selection in the form of a action list in a drop-down menu <b>1810</b>, as shown in <figref idref="DRAWINGS">FIG. 18</figref>. A user of the quick search tool <b>1418</b> could then select a particular action to be completed from the list of actions by clicking on the desired action with a mouse. Alternatively, the user of the quick search tool <b>1418</b> could select a particular action from the list of actions using keys on a keyboard.</p>
<p id="p-0179" num="0178">The available action list is populated with a list of allowable actions for the selected object, again provided to the configuration manager by the resource during the installation process. As discussed above, available actions may be segmented into static and dynamic tasks. A static action or task is one that the resource knows will be associated with all instances of the given object, e.g. the reset password action is one that is associated with all user objects and can therefore be labeled as static. A dynamic task on the other hand is a task that may or may not be associated with a given object depending on its state, e.g. a “disable account” task is one that is only valid for users who's accounts are enabled. If a user's account is already disabled then the “disable account” task is not displayed in the available actions list, e.g., list <b>1014</b>. In an embodiment, the drop down list on the quick search pane is populated only with static tasks. Once the results set has been returned and a specific object has been selected then the task list in the scratch module will be populated with both dynamic and static tasks. The tasks are obtained by querying the task manager, discussed above.</p>
<p id="p-0180" num="0179">Once a user has selected an object type, scope, instance(s), and action, the search is initiated using quick search initiation element <b>1538</b>. The quick search initiation element <b>1538</b> may be displayed in a number of ways. For example, and without limitation, the quick search initiation element <b>1538</b> may display as a search button, as shown in <figref idref="DRAWINGS">FIG. 19</figref>. To initiate the search, the user may then click on the search button <b>1538</b>. In the example shown in <figref idref="DRAWINGS">FIG. 19</figref>, the search button is labeled “Go!” However, it will be understood that other labels are possible to indicate the function of the search button <b>1538</b> (e.g., Search, Begin, Start, OK, etc.).</p>
<p id="p-0181" num="0180">In one embodiment, it is not necessary for the user to select an action with the action selection element <b>1536</b> before a search is initiated. In such a case, if the user does not select an action, the results of the search will be returned for whatever object instance(s) has been selected, together with all associated actions.</p>
<p id="p-0182" num="0181">When the user selects GO button <b>1538</b>, a search string is generated and embedded in an XML document described above with respect to Table 7. The XML document is passed to the search management service (an asmx file that exposed the search manager object) and then passed directly to the search manager <b>324</b>. The search manager <b>324</b> parses the query string in the XML document to obtain the object type identification. The search manager then searches an object type database and obtains the XML schema for the provided object type, such as during the determine operation <b>1106</b> described above. The search manager then inserts the query string from the query string XML document into an attribute designated as quick searchable.</p>
<p id="p-0183" num="0182">The resulting XML document has both an object type definition and a search string, and this XML document makes up the query that is passed along to the resource. This query contains the URL or other identifier for the search handler, as specified by the plugin. The search manager <b>324</b> reads the value of the search handler URL and creates a proxy, passing it the URL and the XML query. The proxy enables the system to reach the URL regardless of its location (e.g. behind a firewall etc.) as shown in <figref idref="DRAWINGS">FIG. 10</figref>.</p>
<p id="p-0184" num="0183">In a particular embodiment, the proxy communicates the query XML document to the search handler using SOAP as shown in <figref idref="DRAWINGS">FIG. 10</figref>. Alternatively, other communication protocols may be used. In this embodiment, the search handler (an asmx file—compiled ASP+) must expose the method “ExecuteSearch” that takes the XML query as a parameter. Once the resource has performed its search it returns the results to the search manager by embedding them in another XML schema and returning this XML as a string from the search handler. The search manager <b>324</b> parses the file and sends the results set to the user interface which displays them in a module that was opened in the consol by the quick search tool <b>1418</b> as soon as the user selected the GO button <b>1538</b>.</p>
<p id="p-0185" num="0184">Once a quick search has initiated, the results of that search may be displayed in a number of different ways in the console <b>1200</b>. For example, as shown in <figref idref="DRAWINGS">FIG. 20</figref>, the results of the defined search are displayed in the module <b>2010</b> in a workspace <b>2014</b> in a work zone <b>2016</b> of a consol <b>2018</b>. As shown in <figref idref="DRAWINGS">FIG. 20</figref>, in an embodiment, parameters of the search that have been performed may be displayed as a search string <b>2022</b> in a window search <b>2020</b> located in a search pane <b>2024</b> within the module <b>2010</b>. In such a case, the user may then perform a new or additional search by modifying the search string <b>2022</b> in the search. A search initiation element <b>2026</b>, such as a button, may then be used to start the search.</p>
<p id="p-0186" num="0185">Using the above system and method, administrators are able to use a search driven model for locating and working with objects, of differing types, without having to navigate through varying applications will increase user satisfaction and productivity. That is, since administrators work with many different objects of differing types, the above system provides a framework that allows an administrator to work with a specific object or group of objects, without first navigating to the application that is associated with the desired object type and then navigating to the specific object or group of objects. Instead of requiring the user to navigate to an application and then navigate to an object or group of objects, the above framework allows the user to navigate directly to the object or group of objects. Once an object(s) is located, the user is able to perform all tasks that are associated with that object(s).</p>
<p id="p-0187" num="0186">Returning now to <figref idref="DRAWINGS">FIG. 14</figref>, as described above, the console <b>1400</b> shown therein includes an explorer tool <b>1420</b>. In general, the explorer tool <b>1420</b> is a navigation tool that is used to show workspaces and modules in the work zone <b>1414</b>. The particular workspaces and modules that are shown in the work zone <b>1414</b> depend on which workspaces and modules are developed and/or installed for a particular console <b>1400</b>. As shown in <figref idref="DRAWINGS">FIG. 14</figref>, the explorer tool <b>1420</b> includes a number of graphical display elements that permit the selection of workspaces and modules using common GUI controls.</p>
<p id="p-0188" num="0187"><figref idref="DRAWINGS">FIG. 21</figref> illustrates an enlarged view of the explorer tool <b>1420</b> shown in <figref idref="DRAWINGS">FIG. 14</figref>. As shown in <figref idref="DRAWINGS">FIG. 21</figref>, in one embodiment, the explorer tool <b>1420</b> includes a tool bar <b>2108</b>, having an explorer drop-down menu selector <b>2110</b>, an edit element <b>2112</b>, and a explorer close element <b>2114</b>. The explorer drop-down menu selector <b>2110</b> includes a triangular visual element <b>2116</b> that may be “clicked” on by a mouse to open or close an explorer drop-down menu <b>1318</b>, in a conventional manner. The explorer close element <b>2114</b> comprises an x-shaped visual element that may be “clicked” on by a mouse to open or close the explorer tool <b>1412</b>, in a conventional manner. In one embodiment, the edit element <b>2112</b> provides functionality for a user to add, delete, and/or move workspaces within the explorer.</p>
<p id="p-0189" num="0188">The explorer drop-down menu <b>2118</b> is operable to display a list of workspaces <b>2120</b> and modules <b>2122</b> associated with the workspaces <b>2120</b>, as shown in <figref idref="DRAWINGS">FIG. 21</figref>. Each of the workspaces <b>2120</b> shown in the explorer drop-down menu <b>2118</b> includes a triangular element <b>2124</b> that may be “clicked” on by a mouse to open or close an drop-down list <b>2118</b> of modules associated with that workspace <b>2120</b>. For example, as shown in <figref idref="DRAWINGS">FIG. 21</figref>, the monitors workspace <b>2126</b> displayed in the explorer drop-down menu <b>2118</b> has associated therewith a computers module <b>2128</b> and an agents workspace <b>2130</b>.</p>
<p id="p-0190" num="0189">In an embodiment, a visual indicator may be associated with a selected workspace and/or module. A number of mechanisms may be employed to indicate a particular workspace and/or module has been selected. For example, as shown in <figref idref="DRAWINGS">FIG. 21</figref>, the User Admin workspace <b>2132</b> and the associated Admin User module <b>2134</b> have been highlighted to show that they have been selected.</p>
<p id="p-0191" num="0190">Selection of a particular workspace <b>2120</b> in the explorer tool <b>1420</b> will cause that particular workspace to be displayed in the work zone <b>1414</b> of the console <b>1400</b>, as shown in <figref idref="DRAWINGS">FIG. 14</figref>. Additionally, selection of a particular module <b>2122</b> in the explorer tool <b>1420</b> will cause that particular module to be displayed in the workspace <b>2120</b> that has been selected. In one embodiment, the first time a particular workspace <b>2120</b> is selected in this manner, it will be displayed with all available modules <b>2122</b> open, with the topmost module appearing at the top of the selected workspace <b>2122</b>. Subsequent times the particular workspace is selected from the explorer tool <b>1420</b>, the particular workspace will be displayed in the same state as it was last viewed.</p>
<p id="p-0192" num="0191">There may be any number of explorer tool <b>1420</b> taxonomies that define the particular workspaces and modules that will appear in a given explorer tool <b>1420</b>, and the arrangement of those particular workspaces and modules in a given explorer tool <b>1420</b>. Table 9 illustrates an exemplary explorer tool taxonomy that may be employed in the management of a number of resources. It should be understood that the particular taxonomy illustrated in Table 9 is not intended to be exhaustive or limiting in any way. The exemplary explorer tool taxonomy simply provides one example taxonomy to illustrate how an explorer tool taxonomy may be arranged.</p>
<p id="p-0193" num="0192">
<tables id="TABLE-US-00009" num="00009">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 9</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>Example Explorer Tool Taxonomy</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="182pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Users</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Users</entry>
</row>
<row>
<entry/>
<entry>Groups</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="182pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Servers</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Services</entry>
</row>
<row>
<entry/>
<entry>Registry</entry>
</row>
<row>
<entry/>
<entry>Protocols</entry>
</row>
<row>
<entry/>
<entry>DNS</entry>
</row>
<row>
<entry/>
<entry>DHCP</entry>
</row>
<row>
<entry/>
<entry>WINS</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="182pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Databases</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>SQL</entry>
</row>
<row>
<entry/>
<entry>Oracle</entry>
</row>
<row>
<entry/>
<entry>DB2</entry>
</row>
<row>
<entry/>
<entry>Informix</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="182pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Messaging</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Conferencing Server</entry>
</row>
<row>
<entry/>
<entry>Exchange</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="182pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Clustering</entry>
</row>
<row>
<entry/>
<entry>Applications</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Application Center Server</entry>
</row>
<row>
<entry/>
<entry>Versions</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="182pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Security</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Kerberos</entry>
</row>
<row>
<entry/>
<entry>PKI</entry>
</row>
<row>
<entry/>
<entry>IPSec</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="182pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Performance Monitoring</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Counter Collection</entry>
</row>
<row>
<entry/>
<entry>Thresholds</entry>
</row>
<row>
<entry/>
<entry>Application Dependencies</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="182pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Operations Management</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Distributed Events</entry>
</row>
<row>
<entry/>
<entry>Model Applications and Dependencies</entry>
</row>
<row>
<entry/>
<entry>Availability</entry>
</row>
<row>
<entry/>
<entry>Change</entry>
</row>
<row>
<entry/>
<entry>Configuration</entry>
</row>
<row>
<entry/>
<entry>SLAs</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="182pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Clients</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Software Distribution</entry>
</row>
<row>
<entry/>
<entry>Add/remove Programs</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="182pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Hosting</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Web Structures</entry>
</row>
<row>
<entry/>
<entry>FTP</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="182pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Printers</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Printers</entry>
</row>
<row>
<entry/>
<entry>Fax</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="182pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Multimedia</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Net Meeting</entry>
</row>
<row>
<entry/>
<entry>Net Theater</entry>
</row>
<row>
<entry/>
<entry>Streaming Media</entry>
</row>
<row>
<entry/>
<entry>Storage</entry>
</row>
<row>
<entry/>
<entry>RAID</entry>
</row>
<row>
<entry/>
<entry>Backup</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="182pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>Files and Shares</entry>
</row>
<row>
<entry/>
<entry>DFS</entry>
</row>
<row>
<entry/>
<entry>Group Policy</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0194" num="0193">Turning now to <figref idref="DRAWINGS">FIG. 22</figref>, illustrated therein is an exemplary module <b>2200</b> including a query pane <b>2210</b>, an object pane <b>2212</b>, a task pane <b>2214</b>, and a work pane <b>2216</b>. As shown in <figref idref="DRAWINGS">FIG. 22</figref>, the object pane <b>2212</b> includes a list of objects <b>2218</b>. It is from this list of objects <b>2218</b> in the object pane <b>2212</b> that a particular object may be selected for access by a user. For example, the object <b>2220</b> titled “Kristy Wallace” has been selected from the object list <b>2218</b> shown in <figref idref="DRAWINGS">FIG. 22</figref>, as illustrated by highlighting.</p>
<p id="p-0195" num="0194">In response to the selection of the particular object <b>2220</b>, a list of applicable tasks <b>2222</b> is displayed in the task pane <b>2214</b>. Included in the list of applicable tasks <b>2222</b> is a properties task <b>2224</b>, that has been selected in the task pane, as shown by highlighting. In response to the selection of the properties task <b>2224</b>, the work pane <b>2216</b> has been populated with a property sheet <b>2226</b> associated with the particular object <b>2220</b> selected in the object pane <b>2212</b>.</p>
<p id="p-0196" num="0195">Included in the property sheet <b>2226</b> is a list of property pages <b>2228</b> that are associated with the property sheet <b>2226</b>. Included in the list of property pages <b>2228</b> is a general property page <b>2224</b> that has been selected, as shown by highlighting. In response to the selection of general property page <b>2224</b>, the work pane <b>2216</b> has been populated with a property page <b>2230</b> including number of controls for editing the general property page <b>2224</b>. In one embodiment, the user may, at this point, compare various property sheets for different objects by simply selecting another object in the object pane. For example, the user may use the tab key to “tab” between the objects in the object pane. In such a case, the property sheet for the newly selected object will replace the property sheet of the previously selected object in the work pane.</p>
<p id="p-0197" num="0196"><figref idref="DRAWINGS">FIG. 23</figref> illustrates a feature of an embodiment of the present invention, wherein two or more property pages can be viewed in a single window at the same time. The basic layout of the module <b>2300</b> shown in <figref idref="DRAWINGS">FIG. 23</figref> is similar to the module <b>2200</b> shown in <figref idref="DRAWINGS">FIG. 22</figref>. However, as shown in <figref idref="DRAWINGS">FIG. 23</figref>, the list of tasks <b>2322</b> in the task pane <b>2314</b> includes a compare properties task <b>2332</b>. The function of the compare properties task <b>2332</b> is to allow two or more property pages from two or more users to be displayed and/or manipulated in the work pane <b>2316</b>.</p>
<p id="p-0198" num="0197">In one embodiment, the selection of multiple property sheets for display and/or manipulating in the work pane <b>2316</b> may be accomplished as follows. As shown in <figref idref="DRAWINGS">FIG. 23</figref>, one or more objects are first selected from this list of objects <b>2318</b> in the object pane <b>2312</b>. For example, the object <b>2320</b> titled “Kristy Wallace” and the object <b>2334</b> titled “Tim Jones” have been selected from the object list <b>2318</b>.</p>
<p id="p-0199" num="0198">In response to the selection of the particular objects <b>2320</b> and <b>2334</b>, a list of applicable tasks <b>2322</b> has been displayed in the task pane <b>2314</b>. Included in the list of applicable tasks <b>2322</b> is a compare properties task <b>2332</b> that has been selected in the task pane, as shown by highlighting. In response to the selection of compare properties task <b>2332</b>, a section of the work pane <b>2316</b> has been populate with a property sheet <b>2326</b> associated with the object <b>2320</b> titled “Kristy Wallace.” Included in the property sheets <b>2326</b> is a list of property pages <b>2328</b> that are associated with the property sheet <b>3326</b>. Included in the list of property sheets <b>2326</b> is a general property page <b>2324</b> that has been selected in the list of property pages <b>2328</b>, as shown by highlighting. In response to the selection of general property page <b>2324</b>, the work pane <b>2316</b> has been populated with a general property page <b>2330</b> associated with the “Kristy Wallace” object <b>2320</b>, as well as a general property page <b>2340</b> associated with the “Tim Jones” object <b>2320</b>. Each of the property pages includes a number of controls for editing the general property pages <b>2330</b> and <b>2340</b>.</p>
<p id="p-0200" num="0199">In the case where more than two objects are selected for comparison, the size and position of the work pane <b>2316</b>, as well as the size and position of the property sheet and associated property pages may be dynamically adjusted. Additionally, if a great number of objects are selected for comparison by a user for display in work pane <b>2316</b>, alternate display elements may be employed to show the property sheet and property pages. For example, and without limitation, the various property pages may be displayed in a tabular form in the work pane <b>2316</b>.</p>
<p id="p-0201" num="0200">Although the invention has been described in language specific to structural features, methodological acts, and computer readable media containing such acts, it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific structure, acts or media described. Therefore, the specific structure, acts or media are disclosed as preferred forms of implementing the claimed invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A distributed system for managing two or more resources, the distributed system comprising:
<claim-text>one or more objects, the one or more objects comprising information;</claim-text>
<claim-text>two or more resources, wherein each resource is operable to manage the information of one or more objects, the two or more resources comprising one or more resources of differing type;</claim-text>
<claim-text>two or more datastores, each datastore in electrical communication with one of the resources, each datastore storing objects associated with an associated resource;</claim-text>
<claim-text>a management module in communication with the two or more resources; the management module operable to receive a request to access information from one or more of the resources, the management module operable to access the information from the one or more resources;</claim-text>
<claim-text>wherein two or more resources, of differing type, manage the information of a same object;</claim-text>
<claim-text>wherein the information relates to one or more clients that use the two or more resources;</claim-text>
<claim-text>wherein each object comprises:
<claim-text>one or more attributes, each attribute having a data field and a value;</claim-text>
<claim-text>one or more associated tasks that may be performed on the object; and</claim-text>
</claim-text>
<claim-text>wherein the management module accesses attribute and task information from the associated resources in response to a request to access information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. A system as defined in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the management module comprises a configuration manager for receiving information from two or more resources and a configuration store for storing predetermined information for the two or more resources.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. A system as defined in <claim-ref idref="CLM-00002">claim 2</claim-ref> wherein the configuration manager installs resources such that the management module can modify configuration information for the two or more resources.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. A system as defined in <claim-ref idref="CLM-00003">claim 3</claim-ref> wherein each of the resources provides information to the configuration manager in XML format.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A system as defined in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the attribute information for an object is provided by more than one resource.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A system as defined in <claim-ref idref="CLM-00005">claim 5</claim-ref> wherein each object is defined by a property sheet and the attribute information is a property page in the property sheet.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A system as defined in <claim-ref idref="CLM-00005">claim 5</claim-ref> wherein the task information for an object is provided by more than one resource.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A system as defined in <claim-ref idref="CLM-00005">claim 5</claim-ref> wherein each object is defined by a property sheet and the task information is in a property page associated with the property sheet.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A system as defined in <claim-ref idref="CLM-00005">claim 5</claim-ref> further comprising:
<claim-text>a configuration manager for receiving and storing information from two or more resources relating to managed objects; and</claim-text>
<claim-text>a property sheet manager for receiving and storing property sheet information related to managed objects.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A system as defined in <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising:
<claim-text>a configuration manager for receiving information from two or more resources, each resource having associated objects;</claim-text>
<claim-text>a configuration store for storing predetermined information for the two or more resources; and</claim-text>
<claim-text>a search manager adapted to receive predetermined search information from the two or more resources;</claim-text>
<claim-text>a search data store adapted to store predetermined search information for the two or more resources; and</claim-text>
<claim-text>wherein the search manager searches the two or more resources in response to a single search request.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A system as defined in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the management layer further comprises:
<claim-text>a configuration manager for receiving information from two or more resources, each resource having associated objects;</claim-text>
<claim-text>a configuration store for storing predetermined information for the two or more resources; and</claim-text>
<claim-text>a task manager, wherein the task manager receives task information from the configuration manager related to tasks that may be completed in managing the two or more resources.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the two or more resources comprises one of printer, workstation, server, databases, security systems, email account, or user account.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A method of managing a two or more resources, each resource having one or more managed objects, wherein each of the one or more managed objects has associated attribute and task information, the method comprising:
<claim-text>receiving information from a first resource related to attribute information for one or more associated tasks that may be performed on the first managed object for a first managed object;</claim-text>
<claim-text>storing the information received from the first resource with the first managed object;</claim-text>
<claim-text>receiving information from a second resource related to attribute information for one or more associated tasks that may be performed on the first managed object for the first managed object, wherein the second resource is a different type than the first resource;</claim-text>
<claim-text>separately storing the information received from the second resource with the information received from the first resource in association with the first managed object;</claim-text>
<claim-text>receiving a request to access information related to the first managed object;</claim-text>
<claim-text>upon receiving the request to access information related to the first managed object, accessing the first managed object; and</claim-text>
<claim-text>retrieving, from the accessed object, information stored by the first resource and separately stored by the second resource;</claim-text>
<claim-text>wherein the attribute information of the accessed object includes a data field and a value;</claim-text>
<claim-text>wherein the retrieved information includes attribute information and task information from the first resource and second resource in response to a request to access information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. A method as defined in <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein the information received from the first resource comprises a first property page and wherein the information received from the second resource comprises a second property page and wherein the method further comprises:
<claim-text>creating a property sheet for the first managed object;</claim-text>
<claim-text>associating the first property page with the property sheet; and</claim-text>
<claim-text>associating the second property page with the property sheet.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A method as defined in <claim-ref idref="CLM-00014">claim 14</claim-ref> further comprising:
<claim-text>receiving a search request from a client computer system; and</claim-text>
<claim-text>searching two or more resources in response to the single search request using information associated with the property sheet.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A method as defined in <claim-ref idref="CLM-00015">claim 15</claim-ref> further comprising the act of sharing search information between resources.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. A method as defined in <claim-ref idref="CLM-00014">claim 14</claim-ref> further comprising:
<claim-text>receiving a task request from a client computer system; and</claim-text>
<claim-text>in response to the task request, requesting task completion from two or more resources.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. A method as defined in <claim-ref idref="CLM-00017">claim 17</claim-ref> wherein the act of requesting task completion from two or more resources comprises:
<claim-text>identifying two or more resources to configure in response to the task request; and</claim-text>
<claim-text>performing the task by accessing the two or more resources identified to perform a task from a client's computer system.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. A method as defined in <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein the act of receiving information from the first and second resources is performed by a configuration manager and wherein the method further comprises:
<claim-text>notifying a search manager that search information has been received.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. A method as defined in <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein the act of receiving information from the first and second resources is performed by a configuration manager and wherein the method further comprises:
<claim-text>notifying a task manager that search information has been received.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
