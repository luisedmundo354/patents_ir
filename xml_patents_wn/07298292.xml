<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298292-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298292</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11492287</doc-number>
<date>20060724</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>KR</country>
<doc-number>10-2005-0067524</doc-number>
<date>20050725</date>
</priority-claim>
</priority-claims>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>03</class>
<subclass>M</subclass>
<main-group>7</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>16</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>341 50</main-classification>
<further-classification>709219</further-classification>
</classification-national>
<invention-title id="d0e61">Method and apparatus for generating character set</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5682158</doc-number>
<kind>A</kind>
<name>Edberg et al.</name>
<date>19971000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>341 90</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6247048</doc-number>
<kind>B1</kind>
<name>Greer et al.</name>
<date>20010600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709219</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6601168</doc-number>
<kind>B1</kind>
<name>Stancil et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713100</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6766296</doc-number>
<kind>B1</kind>
<name>Adachi</name>
<date>20040700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>704246</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>7132962</doc-number>
<kind>B1</kind>
<name>Degenhardt et al.</name>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>341 50</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7218252</doc-number>
<kind>B2</kind>
<name>Fauque</name>
<date>20070500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>341 50</main-classification></classification-national>
</citation>
</references-cited>
<number-of-claims>8</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>341 50</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>341 90</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>341106</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715542</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709219</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709203</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709217</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>704  2</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>704  9</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>704  8</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20070018862</doc-number>
<kind>A1</kind>
<date>20070125</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Cho</last-name>
<first-name>Joong-won</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
<nationality>
<country>KR</country>
</nationality>
<residence>
<country>KR</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Blakely, Sokoloff, Taylor &amp; Zafman</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Pantech Co., Ltd.</orgname>
<role>03</role>
<address>
<country>KR</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>JeanPierre</last-name>
<first-name>Peguy</first-name>
<department>2819</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method of generating a character set is provided, including: receiving two bytes of a character code value and determining whether or not the character code value is greater than a predetermined reference value; adding a predetermined offset value to the character code value and outputting the resultant value if the character code value is greater than the predetermined reference value, and outputting the character code value if the character code value is not greater than the predetermined reference value; and adding null data to the end of a character string consisting of the character code value after the character code value is input.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="115.06mm" wi="119.97mm" file="US07298292-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="150.11mm" wi="120.90mm" file="US07298292-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="151.30mm" wi="116.25mm" file="US07298292-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="157.90mm" wi="115.82mm" file="US07298292-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="131.74mm" wi="109.81mm" file="US07298292-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="119.30mm" wi="131.40mm" file="US07298292-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">This application claims the priority of Korean Patent Application No. 2005-67524, filed on Jul. 25, 2005, in the Korean Intellectual Property Office, the disclosure of which is incorporated herein in its entirety by reference.</p>
<heading id="h-0002" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">The present invention relates to a method and apparatus for generating a character set by using a modified Unicode character set.</p>
<heading id="h-0003" level="1">DESCRIPTION OF RELATED ART</heading>
<p id="p-0004" num="0003">In general, character sets required for inputting characters, such as numerals, symbols, Korean characters, and Japanese characters, are used in mobile communication terminals, and code values of each of the character sets are assigned to the characters. Examples of a method of encoding the character set include a single-byte character set (SBCS), a multi-byte character set (MBCS), and a Unicode character set. The respective character sets are different from one another in terms of the number of bytes used for representing a character and null data added at the end of a character string.</p>
<p id="p-0005" num="0004">SBCS uses less memory than MBCS or Unicode character set to represent characters but has a limitation in representing various types of characters. MBCS uses a plurality of bytes to represent a character even though the character can be represented with one byte.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0006" num="0005">The present invention provides a method and apparatus for generating a character set, which reduces a memory required for representing a character by varying the number of bytes required for representing the character.</p>
<p id="p-0007" num="0006">According to an aspect of the present invention, there is provided a method of generating a character set, including: receiving two bytes of a character code value and determining whether or not the character code value is greater than a predetermined reference value; adding a predetermined offset value to the character code value and outputting the resultant value if the character code value is greater than the predetermined reference value, and outputting the character code value if the character code value is not greater than the predetermined reference value; and adding null data to the end of a character string consisting of the character code value after the character code value is input.</p>
<p id="p-0008" num="0007">According to another aspect of the present invention, there is provided an apparatus for generating a character set, including: a determination part receiving two bytes of a character code value and determining whether or not the character code value is greater than a predetermined reference value; a conversion part adding a predetermined offset value to the character code value and outputting the resultant value if the character code value is greater than the predetermined reference value; and an output part adding null data to the end of a character string consisting of the character code value after the character code value is input and outputting the character string.</p>
<p id="p-0009" num="0008">The apparatus may further include a character processing part processing and displaying the character string.</p>
<p id="p-0010" num="0009">The character code value may be a Unicode value, and the predetermined reference value may be ‘0x 0080’.</p>
<p id="p-0011" num="0010">The offset value may be ‘0x 8000’, and the null data may be ‘0x 00’.</p>
<p id="p-0012" num="0011">According to another aspect of the present invention, there is provided a computer readable medium recording a program executing in a computer the method of generating a character set.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0013" num="0012">The above and other features and advantages of the present invention will become more apparent by describing in detail exemplary embodiments thereof with reference to the attached drawings in which:</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> is a flow chart of a method of generating a character set according to an embodiment of the present invention;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIGS. 2A and 2B</figref> illustrate ASCII code tables;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 3</figref> illustrates part of a Unicode character set; and</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram of an apparatus for generating a character set according to an embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0018" num="0017">Exemplary embodiments in accordance with the present invention will now be described in detail with reference to the accompanying drawings.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 1</figref> is a flow chart of a method of generating a character set according to an embodiment of the present invention.</p>
<p id="p-0020" num="0019">First, a method of encoding a character set will be described in detail. Examples of the character set include a single-byte character set (SBCS), a multi-byte character set (MBCS), and a Unicode character set.</p>
<p id="p-0021" num="0020">SBCS means a character set using one byte for each character. In this character set, a character string ends with ‘<img id="CUSTOM-CHARACTER-00001" he="3.13mm" wi="2.46mm" file="US07298292-20071120-P00001.TIF" alt="custom character" img-content="character" img-format="tif"/>0’ to indicate the end of the character string. An example of the SBCS is an ASCII code. <figref idref="DRAWINGS">FIGS. 2A and 2B</figref> illustrate tables for the ASCII code.</p>
<p id="p-0022" num="0021">MBCS means a character set in which a character such as Hangeul, Japanese or Chinese is encoded in two bytes and a character such as English is encoded in one byte. MBCS is generally referred to as a double-byte character set (DBCS) since there is no character using three or more bytes.</p>
<p id="p-0023" num="0022">A DBCS encoding method uses a specific value to determine whether a character uses one byte or two bytes. For example, in the Shift-JIS encoding method, values between 0x81 and 0x9F and between 0xE0 and 0xFC represent two-byte characters. These values are referred to as lead bytes and are larger than 0x7F. The lead byte is followed by a trail byte. In DBCS, the trail byte may have a value other than ‘0’. Similarly to SBCS, a character string ends with ‘<img id="CUSTOM-CHARACTER-00002" he="3.13mm" wi="2.46mm" file="US07298292-20071120-P00001.TIF" alt="custom character" img-content="character" img-format="tif"/>0’ in DBCS.</p>
<p id="p-0024" num="0023">Unicode character set means a character set in which every character is encoded in two bytes. Thus, it requires more memory for a character than SBCS. That is, a character uses one, two, or three bytes in MBCS, while every character uses two bytes in the Unicode character set. In the Unicode character set, a character string ends with ‘<img id="CUSTOM-CHARACTER-00003" he="3.13mm" wi="2.46mm" file="US07298292-20071120-P00001.TIF" alt="custom character" img-content="character" img-format="tif"/>0<img id="CUSTOM-CHARACTER-00004" he="3.13mm" wi="2.46mm" file="US07298292-20071120-P00001.TIF" alt="custom character" img-content="character" img-format="tif"/>0’. <figref idref="DRAWINGS">FIG. 3</figref> illustrates part of Unicode character set. The Unicode character set has a range wider than ASCII range from 0x0000 to 0x00FF.</p>
<p id="p-0025" num="0024">A method of generating a character set according to an embodiment of the present invention will be described with reference to <figref idref="DRAWINGS">FIG. 1</figref>. In operation S<b>110</b>, a character code is input. The character code may be a Unicode. In operation S<b>120</b>, it is determined whether or not a value of the Unicode is greater than 0x0080. If the Unicode value is greater than 0x0080, the Unicode value is added to 0x0080 to generate an Extended-DBCS (E-DBCS) value in operation S<b>130</b>. Otherwise, the Unicode value is output as an E-DBCS value in operation S<b>140</b>. The E-DBCS value means a new character code value. In operation S<b>150</b>, null data is added to the resultant character code string. The null data uses a byte of ‘<img id="CUSTOM-CHARACTER-00005" he="3.13mm" wi="2.46mm" file="US07298292-20071120-P00001.TIF" alt="custom character" img-content="character" img-format="tif"/>0’. In operation S<b>160</b>, the character string having the null data is transmitted to a display part and is output. The E-DBCS value may be converted to a Unicode value by subtracting 0x0080 from the E-DBCS value.</p>
<p id="p-0026" num="0025">For example, when Unicode values of 0x0400 and 0x0041 are input, 0x0400 is added to 0x8000 and then 0x8400 is output since 0x0400 is larger than 0x0080. Meanwhile, since a Unicode value of 0x0041 is less than 0x0080, it is recognized as an ASCII code and 0x41 is output. As a result, 0x840041 is obtained. 0x00 representing the end of character string is added to 0x840041, resulting in 0x84004100.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram of an apparatus for generating a character set according to an embodiment of the present invention.</p>
<p id="p-0028" num="0027">The apparatus for generating a character set includes a determination part <b>410</b>, a conversion part <b>420</b>, and an output part <b>430</b>. The apparatus may further include a character processing part <b>440</b> that processes and displays a character string outputted from the output part <b>430</b>.</p>
<p id="p-0029" num="0028">The determination part <b>410</b> receives a character string. The character string may be a Unicode character set. The determination part <b>410</b> determines whether or not a value of a character code is greater than 0x8000. If the character code value is greater than 0x8000, the determination part <b>410</b> transmits the character code to the conversion part <b>420</b>. Otherwise, the determination part <b>410</b> transmits the character code to the output part <b>430</b>. The conversion part <b>420</b> adds 0x8000 to the character code value and transmits the resultant value to the output part <b>430</b>. The output part <b>430</b> adds a byte of null data to the transmitted character code, thus generating a character string. The null data may be ‘00’. The character processing part <b>440</b> processes and displays the character string generated in this manner.</p>
<p id="p-0030" num="0029">Meanwhile, the above-mentioned method of generating a character set may be written in a computer program. Codes and code segments constituting the program can be easily deduced from computer programmers in the art. The program is stored in computer readable media and is executed by a computer, thereby performing the method of generating a character set. Examples of the computer readable media include magnetic recording media, optical recording media, and carrier wave media.</p>
<p id="p-0031" num="0030">As apparent from the above description, it is possible to improve the processing speed since conversion of a character code is determined using a Unicode value without using a conversion table.</p>
<p id="p-0032" num="0031">In addition, it is possible to reduce memory required for a character set since the character uses one or two bytes. Further, it is possible to represent special characters supported in the Unicode character set.</p>
<p id="p-0033" num="0032">While the present invention has been described with reference to exemplary embodiments thereof, it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the scope of the present invention as defined by the following claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of generating a character set, comprising:
<claim-text>receiving two bytes of a character code value and determining whether or not the character code value is greater than a predetermined reference value;</claim-text>
<claim-text>adding a predetermined offset value to the character code value and outputting the resultant value if the character code value is greater than the predetermined reference value, and outputting the character code value if the character code value is not greater than the predetermined reference value; and</claim-text>
<claim-text>adding null data to the end of a character string consisting of the character code value after the character code value is input.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the character code value is a Unicode value, and the predetermined reference value is ‘0x0080’.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the offset value is ‘0x8000’, and the null data is ‘0x00’.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. A computer readable medium recording a program executing in a computer the method of <claim-ref idref="CLM-00001">claim 1</claim-ref>.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. An apparatus for generating a character set, comprising:
<claim-text>a determination part receiving two bytes of a character code value and determining whether or not the character code value is greater than a predetermined reference value;</claim-text>
<claim-text>a conversion part adding a predetermined offset value to the character code value and outputting the resultant value if the character code value is greater than the predetermined reference value; and</claim-text>
<claim-text>an output part adding null data to the end of a character string consisting of the character code value after the character code value is input and outputting the character string.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The apparatus of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further including a character processing part processing and displaying the character string.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The apparatus of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the character code value is a Unicode value, and the predetermined reference value is ‘0x0080’.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The apparatus of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the offset value is ‘0x8000’, and the null data is ‘0x00’.</claim-text>
</claim>
</claims>
</us-patent-grant>
