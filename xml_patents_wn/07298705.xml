<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298705-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298705</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10358315</doc-number>
<date>20030205</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>996</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>56</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>26</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370249</main-classification>
<further-classification>370404</further-classification>
</classification-national>
<invention-title id="d0e53">Fast-path implementation for a double tagging loopback engine</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5828653</doc-number>
<kind>A</kind>
<name>Goss</name>
<date>19981000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5831980</doc-number>
<kind>A</kind>
<name>Varma et al.</name>
<date>19981100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5842038</doc-number>
<kind>A</kind>
<name>Williams et al.</name>
<date>19981100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6061351</doc-number>
<kind>A</kind>
<name>Erimli et al.</name>
<date>20000500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6175902</doc-number>
<kind>B1</kind>
<name>Runaldue et al.</name>
<date>20010100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6545979</doc-number>
<kind>B1</kind>
<name>Poulin</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>3702411</main-classification></classification-national>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6724728</doc-number>
<kind>B1</kind>
<name>Manchester et al.</name>
<date>20040400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>3702362</main-classification></classification-national>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6788681</doc-number>
<kind>B1</kind>
<name>Hurren et al.</name>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370389</main-classification></classification-national>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6965572</doc-number>
<kind>B1</kind>
<name>Boodaghians</name>
<date>20051100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370249</main-classification></classification-national>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>7061870</doc-number>
<kind>B2</kind>
<name>Orsatti</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>3702411</main-classification></classification-national>
</citation>
</references-cited>
<number-of-claims>34</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>370249</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370401</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370402</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370403</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370404</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370405</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>8</number-of-drawing-sheets>
<number-of-figures>10</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20040151120</doc-number>
<kind>A1</kind>
<date>20040805</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Shankar</last-name>
<first-name>Laxman</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Ambe</last-name>
<first-name>Shekhar</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Squire, Sanders &amp; Dempsey L.L.P.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Broadcom Corporation</orgname>
<role>02</role>
<address>
<city>Irvine</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Ngo</last-name>
<first-name>Ricky Q.</first-name>
<department>2616</department>
</primary-examiner>
<assistant-examiner>
<last-name>Smith</last-name>
<first-name>Marcus R</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A network component for processing a packet can include a buffer configured to receive a packet, a forwarding unit configured to forward the packet received at the first buffer to a loopback port, and a transmitting unit configured to transmit the packet out of the loopback port. In addition, the network component can include a loopback unit configured to loop back the packet into the loopback port, a first identification unit configured to identify an egress port, and a second transmitting unit configured to transmit the packet looped back from the loopback port out of the egress port.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="227.50mm" wi="149.27mm" file="US07298705-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="258.40mm" wi="179.66mm" orientation="landscape" file="US07298705-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="247.48mm" wi="198.37mm" orientation="landscape" file="US07298705-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="218.27mm" wi="153.59mm" orientation="landscape" file="US07298705-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="238.68mm" wi="174.67mm" orientation="landscape" file="US07298705-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="199.98mm" wi="171.37mm" orientation="landscape" file="US07298705-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="235.29mm" wi="163.15mm" file="US07298705-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="256.54mm" wi="163.49mm" file="US07298705-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="196.68mm" wi="161.04mm" file="US07298705-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">1. Field of the Invention</p>
<p id="p-0003" num="0002">The present invention relates to a method of and an apparatus for processing a packet based on a double tagging loopback engine within a Virtual Private LAN Service (VPLS), a Transparent LAN Service (TLS), a Virtual Private Switched Network Service (VPSNS), or any Layer 2 Virtual Private Network (VPN). In essence, the present invention can be applied to any packet-based service provider communication network environment, such as token ring, ATM, Ethernet, Fast Ethernet, Gigabit Ethernet, 10 Gigabit Ethernet, etc. In particular, the present invention relates to a method of and an apparatus for fast-path implementation for TLS using double tagging loopback engine that can be implemented on a semiconductor substrate such as a silicon chip, or can be implemented on software, or a combination of hardware and software.</p>
<p id="p-0004" num="0003">2. Description of the Related Art</p>
<p id="p-0005" num="0004">As the popularity and usage of the network computers grows, an increasing amount of end-users are being interconnected via wide area networks and the Internet. In particular, business entities, such as corporations, having multiple site-offices located in different parts of the world, are increasingly relying on the Internet to communicate with each other. For instance, a corporate entity having multiple site-offices located at geographically dispersed sites may look to a fast and efficient way using the Internet to interconnect a group of private site-offices belonging to the private corporate entity together. Accordingly, there is a need to provide a fast, inexpensive and reliable system that can offer a virtual private customer-based network wherein inter-office network connections are achieved using the fast growing Internet infrastructure, especially the Internet Service Provider (ISP).</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0006" num="0005">One example of the present invention can include a method for processing a packet in a communications network. The method can include the steps of receiving a packet at a network component, forwarding the packet to a loopback port at the network component, transmitting the packet out of the loopback port, looping back the packet into the loopback port, identifying an egress port at the network component, and transmitting the packet out of the egress port.</p>
<p id="p-0007" num="0006">In another example, the present invention can relate to a network component for processing a packet. The network component can have a first buffer configured to receive a packet, a forwarding unit configured to forward the packet received at the first buffer to a loopback port, and a first transmitting unit configured to transmit the packet out of the loopback port. In addition, the network component can have a loopback unit configured to loop back the packet into the loopback port, a first identification unit configured to identify an egress port, and a second transmitting unit configured to transmit the packet looped back from the loopback port out of the egress port.</p>
<p id="p-0008" num="0007">Furthermore, another example of the present invention can provide a system of processing a packet in a communications network. The system can include a first receiving means for receiving a packet at a network component, a forwarding means for forwarding the packet to a loopback port at the network component, a first transmitting means for transmitting the packet out of the loopback port, a loopback means for looping back the packet into the loopback port, a first identifying means for identifying an egress port at the network component, and a second transmitting means for transmitting the packet out of the egress port.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0009" num="0008">For proper understanding of the invention, reference should be made to the accompanying drawings, wherein:</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 1</figref> illustrates one example of a Transparent LAN Service Network System in accordance with the present invention;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 2</figref> illustrates another example of a Transparent LAN Service Network System in accordance with the present invention;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 3</figref> illustrates one example of a Provider Edge Device in accordance with the present invention;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 4</figref> illustrates another example of a Provider Edge Device in accordance with the present invention;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 5(</figref><i>a</i>) illustrates one example of a packet inserted with a customer VLAN ID tag in accordance with the present invention;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 5(</figref><i>b</i>) illustrates one example of a packet inserted with a customer VLAN ID tag, an SP VLAN ID tag, and additional information in accordance with the present invention;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 5(</figref><i>c</i>) illustrates one example of a packet inserte with a customer VLAN ID tag, an SP VLAN ID tag, a uplink ID tag, and additional information in accordance with the present invention;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 6</figref> illustrates one example of a method of processing a packet based on double tagging loopback engine within a TLS network system;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 7</figref> illustrates another example of a method of processing a packet based on double tagging loopback engine within a TLS network system; and</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 8</figref> illustrates another example of a method of processing a packet based on double tagging loopback engine within a TLS network system.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT(S)</heading>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 1</figref> illustrates one example of a fast-path Transparent LAN Service (hereinafter “TLS”) network system <b>10</b> that can implement double tagging. The TLS network system <b>10</b> of this example can be configured to deliver Ethernet service to multiple customers geographically dispersed across a network, such as a Wide Area Network (WAN) or Meto Area Network (MAN), as if the multiple customers were connected through a Local Area Network (LAN).</p>
<p id="p-0021" num="0020">The TLS network system <b>10</b> as shown in <figref idref="DRAWINGS">FIG. 1</figref> illustrates a Service Provider Network (SPN) <b>20</b>. The SPN <b>20</b> can be a packet switched network, such as the Internet. Also, <figref idref="DRAWINGS">FIG. 1</figref> shows a plurality of Provider Edge (PE) devices PE <b>1</b>, PE <b>2</b>, PE <b>3</b> . . . PE n connected within the SPN <b>20</b>.</p>
<p id="p-0022" num="0021">In addition, <figref idref="DRAWINGS">FIG. 1</figref> illustrates TLS network system <b>10</b> having two VPLS customers, VPLS CUST A and VPLS CUST B. It is noted that although <figref idref="DRAWINGS">FIG. 1</figref> shows a TLS network system <b>10</b> having two VPLS customers, the present invention can be configured to handle a plurality of VPLS customers CUST n within the TLS network system <b>10</b>.</p>
<p id="p-0023" num="0022">Each VPLS CUST A and B can be connected to a PE device. In addition, each VPLS customer can have its own plurality of independent Virtual Local Area Networks (VLAN), VLAN <b>1</b>, VLAN <b>2</b> . . . VLAN n. Accordingly, <figref idref="DRAWINGS">FIG. 1</figref> shows VLAN <b>1</b>, VLAN <b>2</b> . . . VLAN n of VPLS CUST A being “bridged” transparently over SPN <b>10</b>, wherein a Service Provider VLAN, SP VLAN <b>30</b>, can be configured to specifically carry all of VPLS CUST A's communication traffic. Similarly, <figref idref="DRAWINGS">FIG. 1</figref> shows VLAN <b>1</b>, VLAN <b>2</b> . . . VLAN n of VPLS CUST B being “bridged” transparently over SPN <b>10</b>, wherein SP VLAN <b>40</b> can be configured to carry all of VPLS CUST B's communication traffic.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 2</figref> illustrates another example of a TLS network system <b>15</b> that can include a SPN <b>25</b> and PE devices PE <b>1</b> and PE <b>2</b>. Each PE device can be configured to have a plurality of ports, such as at least one uplink port, upt <b>1</b> and one or more customer facing port(s), pt <b>0</b>, pt <b>1</b> . . . pt n. Each port within each of the PE devices can be configured to be a receiving port, or an ingress port, as well as a transmitting port, or an egress port, for receiving and transmitting a packet, respectively. Although the TLS network system <b>10</b>, <b>15</b> of the present example can manage data and/or information in the form of a packet, it is noted that in other examples of the present invention, the TLS network system <b>10</b>, <b>15</b> can be configured to also manage data and/or information in other formats, such as a data frame, or a data cell. Therefore, any reference to a packet herein can also refer to at least a frame, a cell, or a data packet, a data frame or a data cell.</p>
<p id="p-0025" num="0024">Further shown in <figref idref="DRAWINGS">FIG. 2</figref>, each port within the PE devices can be organized into groups of port(s) for one or more customer(s), wherein each organized group of port(s) can represent a VPLS domain for the TLS network system <b>15</b>. According to <figref idref="DRAWINGS">FIG. 2</figref>, a specific customer can be provided with one or more port(s) from the PE device. As such, each port from within the organized group of port(s) assigned to the specific customer can be designated to connect with each and every VLAN of that particular customer, or selected VLANs. It is noted that one or more customer(s) can share the same organized group of port(s) from the PE device if each customer share the same set of unique VLAN IDs.</p>
<p id="p-0026" num="0025">For instance, <figref idref="DRAWINGS">FIG. 2</figref> shows PE devices PE <b>1</b> and PE <b>2</b> connected to a SPN <b>25</b> via an uplink port upt<b>1</b>, wherein PE <b>1</b> and PE <b>2</b> can be two geographically dispersed sites. PE <b>1</b> and PE <b>2</b>, each has a plurality of ports pt <b>0</b>, pt <b>1</b>, pt <b>2</b>, pt <b>3</b> . . . pt n therein. Port pt <b>0</b> of PE <b>1</b> is designated for VPLS CUST A only. Port pt <b>1</b> of the same PE device however is designed for two customers, them being VPLS CUST B and C. Furthermore, ports pt <b>3</b>, pt <b>4</b>, pt <b>5</b>, pt <b>6</b>, pt <b>7</b> and pt <b>8</b>, are organized as a group of ports for VPLS CUST D. As for PE <b>2</b>, port pt <b>4</b> is designated for VPLS CUST A and port pt <b>5</b> is designated to both VPLS CUST B and C. Also, ports pt n-<b>3</b>, pt n-<b>2</b>, pt n-<b>1</b> and pt n, are organized as a group of ports for VPLS CUST D.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 3</figref> illustrates one example of a hardware configuration of a PE device. The hardware configuration of Figure can be in an integrated, modular and single chip solution, and therefore can be embodied on a semiconductor substrate, such as silicon. Alternatively, the hardware configuration of <figref idref="DRAWINGS">FIG. 3</figref> can be embodied in a plurality of discrete components on a circuit board.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 3</figref> shows a PE device that can include a double tagging loopback engine module <b>300</b>, a network switching module A <b>305</b>, a switch fabric module <b>310</b>, a network switching module B <b>315</b>, and a network switching module C <b>320</b>. The double tagging loopback engine module <b>300</b> can have one switch fabric port SF pt A that can received information from and/or transmit information to a switch fabric module <b>310</b>. In addition, the double tagging loopback engine module <b>300</b> can include an ingress/egress MAC loopback port (not shown), such as a 10 gigabit Ethernet port. The ingress/egress MAC loopback port can be an external port or a port within the DT loopback engine module <b>300</b>, whereby one or more packet(s) can be “transmitted” out of the egress of the DT loopback engine module through the ingress/egress MAC loopback port and can be looped back on the ingress of the same port back into the DT loopback engine module <b>300</b>.</p>
<p id="p-0029" num="0028">The PE device of <figref idref="DRAWINGS">FIG. 3</figref> also shows network switching module A <b>305</b>, network switching module B <b>315</b>, and network switching module C <b>320</b>. Each of the network switching modules A, B and C can be a switching chip such as the network switching chips made commercially available through the Broadcom® Corporation. Additionally, each of the network switching modules A, B and C can have one or more customer facing ports, and one switch fabric port SF pt B, C, D. The customer facing ports can connect the PE device to the customers of a SPN. The SF ports B, C and D can received information from and/or transmit information to the switch fabric module <b>310</b>. The customer facing ports and the SF ports B, C and D can be an ingress port as well as an egress port. Furthermore, network switching module A can have one or more uplink ports uplink pt <b>0</b> and uplink pt <b>1</b> that can be network facing ports for receiving information from and/or transmitting information to an Ethernet, such as the Internet. It is noted that although the example provided in <figref idref="DRAWINGS">FIG. 3</figref> shows network switching module A as having uplink pt <b>0</b> and uplink pt <b>1</b>, network switching modules B and C can be configured to include uplink pt <b>0</b> and uplink pt <b>1</b>.</p>
<p id="p-0030" num="0029">The switch fabric module <b>310</b> can also be a switching chip such as the network switching chips made commercially available through the Broadcom® Corporation.</p>
<p id="p-0031" num="0030">Given the configuration shown in <figref idref="DRAWINGS">FIG. 3</figref>, an example of a packet flow within the configuration can be as follows. A packet can be received at uplink pt <b>0</b> of network switching module A <b>305</b>. The packet can be processed at network switching module A <b>305</b> and can be forwarded to the switch fabric module <b>310</b> through the switch fabric port SF pt B. The packet can be received and processed at the switch fabric module <b>310</b>. Thereafter, the switch fabric module <b>310</b> can forward the packet to the DT loopback engine module <b>300</b>. The packet can be received at the switch fabric port SF pt A, and can be a high gigabit port (“Higig port”). The packet is processed and is forwarded out of the ingress/egress MAC loopback port (not shown) such as a 10 gigabit port. For example, the packet can be MAC looped back into the DT loopback engine module <b>300</b>. In other words, the packet does not necessarily have to physically be transmitted out of the DT looback engine module <b>300</b> for the loop back to occur. Thus, the packet can loop back from the MAC, or in the alternative can loop back externally.</p>
<p id="p-0032" num="0031">Once the packet is looped back from the ingress of the 10 gigabit port, the packet can be processed based on a double tagging engine logic as explain further below. After the packet is processed, the packet is transmitted to the switch fabric module <b>310</b> and thereafter to one or more of the network switching module A, B and/or C. The packet can then be forwarded out of one or more specified customer facing ports.</p>
<p id="p-0033" num="0032">Another example of a packet flow within the configuration shown in <figref idref="DRAWINGS">FIG. 3</figref> can be as follows. A packet can be received at any one of the customer facing ports of the network switching modules A, B or C. Suppose for this example a packet is received at one of the customer facing ports within network switching module B. The packet can be processed at network switching module A <b>305</b> and can be forwarded to the switch fabric module <b>310</b> through the switch fabric port SF pt C. The packet can be received and processed at the switch fabric module <b>310</b>. Thereafter, the switch fabric module <b>310</b> can forward the packet to the DT loopback engine module <b>300</b>. The packet can be received at the switch fabric port SF pt A or the Higig port. The packet is processed and is forwarded out of the egress MAC loopback port (not shown) and can be MAC looped back into the DT loopback engine module <b>300</b>.</p>
<p id="p-0034" num="0033">Once the packet is looped back from the ingress of the 10 gigabit port, the packet can be processed based on a double tagging uplink logic as explain further below. After the packet is processed, the packet is transmitted to the switch fabric module <b>310</b> and thereafter to the network switching module A. The packet is then transmitted out to of either uplink pt <b>0</b> or uplink pt <b>1</b>.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 4</figref> illustrates one example of a hardware configuration of a PE device <b>400</b>. The hardware configuration of <figref idref="DRAWINGS">FIG. 4</figref> can be in an integrated, modular and single chip solution, and therefore can be embodied on a semiconductor substrate, such as silicon. Alternatively, the hardware configuration of <figref idref="DRAWINGS">FIG. 4</figref> can be embodied in a plurality of discrete components on a circuit board.</p>
<p id="p-0036" num="0035">The PE device <b>400</b> can be configured to include at least one uplink port. In this example, the PE device <b>400</b> of <figref idref="DRAWINGS">FIG. 4</figref> shows two uplink ports, them being uplink pt <b>0</b> and uplink pt <b>1</b>. Additionally, the PE device can have one or more customer facing port(s) or subscriber ports, pt <b>0</b>, pt <b>1</b>, pt <b>2</b> . . . pt n., and a MAC loopback port LB pt. As mentioned above, each port within the PE devices can be configured to be a receiving port, or an ingress port, as well as a transmitting port, or an egress port, for receiving and transmitting a packet, respectively.</p>
<p id="p-0037" num="0036">The uplink ports uplink pt <b>0</b> and pt <b>1</b> can be network facing ports which can receive packets from and transmit packet to a network such as a SPN <b>20</b> of <figref idref="DRAWINGS">FIG. 1</figref>. In addition, the customer facing ports pt <b>0</b>, pt <b>1</b>, pt <b>2</b> . . . pt n can be subscriber ports wherein each customer facing port can receive packets from and transmit packet to a particular VPLS customer having one or more VLANS as show in <figref idref="DRAWINGS">FIG. 1</figref>. Also, the MAC loopback port LB pt can be a 10 gigabit Ethernet port. The MAC loopback port can be an external port or a port within the DT loopback engine module <b>300</b>, whereby one or more packet(s) can be “transmitted” out of the egress of the DT loopback engine module through the ingress/egress MAC loopback port LB pt, and can be looped back on the ingress of the same port back into the DT loopback engine module <b>300</b>.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 5(</figref><i>a</i>) illustrates one example of a packet <b>500</b> that can be received in or transmitted out of any one of the customer facing ports or subscriber ports pt <b>0</b>, pt <b>1</b>, pt <b>2</b> . . . pt n. The packet <b>500</b> can be configured to include, at least a destination address field DA, a source address field SA, a customer VLAN identification tag VLAN ID, a type or length field T/L, and a payload P.</p>
<p id="p-0039" num="0038">The destination address field can be a bit value that can be used by the receiving Media Access Controller (MAC), in order to determine if the incoming packet is addressed to the particular port. There can typically be three types of destination addresses (DA) i) unicast/individual or physical DA, ii) multicast or logical DA and iii) broadcast DA. The source address field can be a bit value and can be supplied by the transmitting MAC, which can inserts its own unique address into the source address field as the frame is transmitted, indicating it was the original station. The receiving MAC is not required to take action based on the source address field. Furthermore, the customer VLAN ID tag is a first packet tag inserted within the packet. The VLAN ID tag can identify a particular VLAN for a unique customer. In other words, if a customer has a plurality of VLANs, such as VLAN <b>1</b>, VLAN <b>2</b>, . . . VLANn, the customer VLAN ID tag can identify the packet as originating from one of the customer's VLANs. The T/L field can provide the type or the length of the packet. The payload P can contain the actual frame data that is being transferred.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 5(</figref><i>b</i>) illustrates one example of a packet <b>505</b> that can be received in or transmitted out of any one of an uplink pt <b>0</b> or uplink pt <b>1</b>. The packet <b>510</b> can be configured to include, at least, a destination address field DA, a source address field SA, an SP VLAN ID tag, a customer VLAN identification tag VLAN ID, an Ether-type, a SP VLAN ID tag priority, an op-code and a payload P.</p>
<p id="p-0041" num="0040">Packet <b>505</b> can include an SP VLAN ID tag, which can be a second tag in the packet <b>510</b>. SP VLAN ID tag can specify or identify a customer within the TLS network system <b>10</b>. In other words, if a TLS network system <b>10</b> includes a plurality of customers, such as VPLS CUST A, VPLS CUST B, VPLS CUST C, and VPLS CUST D, the SP VLAN ID tag can identify the packet as originating from and belonging to a particular VPLS customer.</p>
<p id="p-0042" num="0041">Therefore, packet <b>505</b> can include at least a first tag, that being a customer VLAN ID tag, and a second tag, that being an SP VLAN ID tag. The SP VLAN ID tag can identify the packet as belonging to a particular VPLS customer, and the VLAN ID tag can identify the particular VLAN belonging to that VPLS customer. Accordingly, a packet having a first and second tag can always be identified as belonging to a unique VPLS customer, even if a plurality of the VPLS customer have overlapping or common VLAN IDs.</p>
<p id="p-0043" num="0042">In addition, <figref idref="DRAWINGS">FIG. 5(</figref><i>c</i>) shows one example of a packet <b>510</b> that can contain a third packet tag such as an uplink VLAN tag. The third uplink VLAN tag can be appended to a packet within the PE device before the packet is looped back on the ingress of the MAC loopback port. The uplink VLAN tag can be configurable to identify the corresponding uplink port of a network switching module.</p>
<p id="p-0044" num="0043">The PE device of <figref idref="DRAWINGS">FIG. 4</figref> can include a storage unit <b>402</b>, such as a register. The storage unit <b>402</b> can be configured to store a one-bit DT loopback engine bit <b>403</b>. The DT loopback engine bit <b>403</b> can either be set or not set by various way, such as preprogramming. For example, the DT loopback engine bit <b>403</b> can have either the value of “1” which sets the DT looback engine module, or the value of “0” which un-set the DT loopback engine module. When the DT loopback engine bit <b>403</b> is set, then DT engine loopback engine module is operating under double tagging loopback mode <b>65</b>.</p>
<p id="p-0045" num="0044">Furthermore, the PE device of <figref idref="DRAWINGS">FIG. 4</figref> can be configured to include a plurality of look-up tables, such as an SP VLAN ID tag look-up table <b>404</b>, a VPLS look-up table <b>406</b>, a VLAN ID look-up table <b>408</b>, an L2 multicast look-up table <b>410</b>, and an L2 address look-up table <b>412</b>.</p>
<p id="p-0046" num="0045">The SP VLAN tag look-up table <b>404</b> can include one or more SP VLAN ID tag(s) <b>414</b> and can be indexed by a source module and a source port. The SP VLAN ID tag(s) <b>414</b> within the table <b>404</b> can be obtained when a packet received at a customer facing port pt <b>0</b>, pt <b>1</b>, . . . pt n of the PE device <b>400</b> is to be forwarded to one of the uplink ports uplink pt <b>0</b> and uplink pt <b>1</b>.</p>
<p id="p-0047" num="0046">The VPLS look-up table <b>406</b> can have one or more entries. The VLPS look-up table <b>406</b> can be indexed by a SP VLAN tag that correspond to a particular customer facing port, such as pt <b>0</b>, pt <b>1</b>, . . . pt n. In other words, each customer facing port of the PE device <b>400</b> can have a corresponding mask entry within the VPLS look-up table <b>406</b>. Thus, each mask entry can be configured to have a VPLS port bit map <b>416</b> or a membership port bit map. The VPLS port bit map <b>416</b> can be a bit string having a bit length that can be equal, for example, to a number of ports with the PE device. Each bit position of the VPLS port bit map <b>416</b> can correspond to a particular port within the PE device. In essence, the VPLS port bit map <b>416</b> can be configured to identify a group of one or more port(s) that correspond or belong to a particular VPLS membership for that PE device. In other words, the VPLS port bit map <b>416</b> can identify a group of one or more port(s) to which an unique customer's VLAN(s) can be mapped.</p>
<p id="p-0048" num="0047">Accordingly, each bit position of the VPLS port bit map <b>416</b> can be set with a value or condition of either “1” or “0”. By setting a bit position within the VPLS port bit map <b>416</b> with a value or condition of “1”, the port corresponding to the bit position can be included as part of the group of port(s) associated with the VPLS membership. In the alternative, by setting a bit position within the VPLS port bit map <b>416</b> with a value or condition of “0”, the port corresponding to the bit position can be excluded from the group of port(s) associated with the VPLS membership.</p>
<p id="p-0049" num="0048">In addition, each entry within the VPLS look-up table <b>406</b> can include a Layer 2 multicast index <b>418</b> and a VPLS type <b>420</b>. The Layer 2 multicast index <b>418</b> and the VPLS type <b>20</b> can correspond to a VPLS port bit map <b>416</b>.</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. 4</figref> also shows a VLAN ID look-up table <b>408</b> within the PE device <b>400</b>. The VLAN ID look-up table <b>408</b> can include one or more preprogrammed mask entries therein. Each mask entry can be configured to have an outgoing port bit map <b>422</b> and an untagged bit map <b>423</b>. The outgoing port bit map <b>422</b> can be a bit string having any bit length. Each bit position of the outgoing bit map <b>422</b> can correspond to a particular port of a particular module within the PE device <b>400</b> for a particular VLAN ID. In essence, the outgoing bit map <b>422</b> can be configured to identify one or more outgoing port(s) corresponding to a particular VLAN ID. The untagged bit map <b>423</b> can also be a bit string having any bit length. Each bit position can also correspond to a particular port of a particular module. Specifically, the untagged bit map can correspond to the uplink ports, uplink pt <b>0</b> and uplink pt <b>1</b> of the PE device <b>400</b>.</p>
<p id="p-0051" num="0050">Accordingly, each bit position of the outgoing bit map <b>422</b> and/or the untagged bit map <b>423</b> can be set with a value or condition of either “1” or “0”. By setting a bit position within the outgoing port bit map <b>422</b> and/or the untagged bit map <b>423</b> with a value or condition of “1”, the port of a specified module corresponding to the bit position can be identified or specified as an outgoing port or an outgoing port associated with a particular customer VLAN ID. In the alternative, by setting a bit position within the outgoing port bit map <b>422</b> and/or untagged bit map <b>423</b> with a value or condition of “0”, the port of a specified module corresponding to the bit position can be identified or specified as not being included as an outgoing port.</p>
<p id="p-0052" num="0051">The VLAN ID look-up table <b>408</b> can be indexed by the VLAN ID tag from the packet <b>500</b> of <figref idref="DRAWINGS">FIG. 5(</figref><i>a</i>) for example. Upon receiving the packet on the ingress side of a customer facing port, the VLAN ID can be identified and indexed into the VLAN ID look-up table <b>408</b>, wherein one VLAN ID mask entry having an outgoing port bit map <b>4422</b> can be identified and obtained.</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 4</figref> also shows an L2 Multicast look-up table <b>410</b> within the PE device <b>400</b>. The L2 Multicast look-up table <b>410</b> can include one or more preprogrammed mask entries therein, and the size of the L2 Multicast look-up table <b>410</b> can equal to the number of multicast groups supported by the PE device <b>400</b>. In addition, each mask entry within the L2 Multicast look-up table <b>410</b> can be accessed or indexed by using the customer VLAN ID and the multicast DA within the packet received. Each entry can contain a list of ports which map to a L2 multicast group.</p>
<p id="p-0054" num="0053">Each mask entry within the L2 Multicast look-up table <b>410</b> can be configured to be an outgoing port bit map <b>424</b> which can be a list of ports which maps to an L2 Multicast group. The L2 Multicast look-up table <b>410</b> can be used to flood multicast packets to only those ports which have memberships of the L2 multicast group. In other words, rather than flooding a packet to the entire group of ports belonging to a particular VLAN ID, each outgoing port bit map <b>424</b> within the L2 Multicast look-up table can be used to flood a packet to only the ports having membership with the L2 multicast group.</p>
<p id="p-0055" num="0054">The outgoing port bit map <b>424</b> within the L2 Multicast look-up table <b>410</b> can be a bit string having any bit length. Each bit position of the outgoing bit map <b>424</b> can correspond to a particular port within the PE device <b>400</b> having an L2 multicast membership. In essence, the outgoing port bit map <b>424</b> can be configured to identify one or more outgoing port(s) with respect to a particular L2 multicast group. Accordingly, each bit position of the outgoing port bit map <b>424</b> can be set with a value or condition of either “1” or “0”. By setting a bit position within the outgoing port bit map <b>424</b> with a value or condition of “1”, the port corresponding to the bit position can be identified or specified as an outgoing port associated with a particular L2 multicast membership with respect to the packet received. In the alternative, by setting a bit position within the outgoing port bit map <b>424</b> with a value or condition of “0”, the port corresponding to the bit position can be identified or specified as not being included as an outgoing port of a particular L2 multicast group with respect to the packet received.</p>
<p id="p-0056" num="0055">Furthermore, <figref idref="DRAWINGS">FIG. 4</figref> shows an L2 Address look-up table <b>412</b> within the PE device <b>400</b>. The L2 Address look-up table <b>412</b> can include one or more preprogrammed mask entries therein. In addition, each mask entry within the L2 Address look-up table <b>412</b> can be accessed or indexed by using the customer VLAN ID and the DA from the packet received.</p>
<p id="p-0057" num="0056">Each mask entry within the L2 Address look-up table <b>424</b> can be configured to be an outgoing port bit map <b>426</b>. The outgoing port bit map <b>426</b> within the L2 Address look-up table <b>424</b> can be a bit string having any bit length. Each bit position of the outgoing port bit map <b>426</b> can correspond to a port within the PE device <b>400</b>. In essence, the outgoing port bit map <b>426</b> can be configured to identify one or more outgoing port(s) with respect to a packet received. Similar to above, each bit position of the outgoing port bit map <b>426</b> can be set with a value or condition of either “1” or “0”. By setting a bit position within the outgoing port bit map <b>426</b> with a value or condition of “1”, the port corresponding to the bit position can be identified or specified as an outgoing port with respect to the packet received. In the alternative, by setting a bit position within the outgoing port bit map <b>426</b> with a value or condition of “0”, the port corresponding to the bit position can be identified or specified as not being included as an outgoing port with respect to the packet received.</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 4</figref> also shows a VLAN ID port look-up table <b>428</b>. The VLAN ID port look-up table can include one or more entries therein. Each entry can have a VLAN ID and can be indexed or identified by source MAC address of a packet. In particular, the VLAN ID port look-up table <b>428</b> can be accessed when a packet is received within the PE device <b>400</b> whereby the packet received does not contain an Ether-type value of a predetermined value such as 08100 therein.</p>
<p id="p-0059" num="0058">The PE device <b>400</b> of <figref idref="DRAWINGS">FIG. 4</figref> can also include a CPU <b>432</b>. The CPU <b>432</b> can be configured to implement a plurality of tasks and operations. [Laxman and Shekhar: please provide us with some examples of what sort of tasks and operations the CPU performs with respect to the present invention.]</p>
<p id="p-0060" num="0059">In addition, the PE device <b>400</b> of <figref idref="DRAWINGS">FIG. 4</figref> can include an Ether-type configuration register <b>434</b>. The Ether-type configuration register <b>434</b> can be configured to store an Ether-type value <b>436</b> therein and can be accessed and inserted into a packet transmitted from one of the uplink ports. Also, the PE device <b>400</b> can have two registers <b>438</b> and <b>440</b> configured to store an uplink port identifier, such as uplink V<b>0</b> or V<b>1</b>. The uplink port identifier can correspond to the uplink ports with the network switching module A of PE device <b>400</b>.</p>
<p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. 6</figref> illustrates one example of a method of processing a packet based on a double tagging loopback engine in accordance with the present invention. The method of the present example can be implemented in hardware, or software, or a combination of both hardware and software.</p>
<p id="p-0062" num="0061">In particular, <figref idref="DRAWINGS">FIG. 6</figref> shows one example of a method of processing a packet received on an uplink port such as uplink pt <b>0</b> or uplink pt <b>1</b> of <figref idref="DRAWINGS">FIG. 3</figref> based on a double tagging loopback engine. A packet can be received at the ingress of an uplink port at step <b>600</b>. The packet can be received with two tags such as an SP VLAN ID tag and an customer VLAN ID tag.</p>
<p id="p-0063" num="0062">Therefore, a double tagged packet can be received at one of the uplink ports of a PE device. Once the packet is received, an ether-type value from the packet can be identified. If the ether-type value from the packet does not match a predetermined value such as 08100, then the packet is treated as “untagged” by network switching module, and therefore the packet can be appended with an uplink ID tag or VLAND ID port tag at step <b>605</b>.</p>
<p id="p-0064" num="0063">After the packet is appended with an uplink ID tag, the packet can have at least three tags, them being an SP VLAN ID tag, a customer VLAN ID tag, and an uplink ID tag. The packet with three tags can be forwarded to a DT loopback engine module such as the one shown in <figref idref="DRAWINGS">FIG. 3</figref>. The packet can be forwarded to the egress side of a loopback port at the DT loopback engine module at step <b>610</b>.</p>
<p id="p-0065" num="0064">Once the egress of the loopback receives the packet, the egress of the loopback port can identify the packet as originating from one of the uplink ports by identifying the uplink ID tag appended to the packet at step <b>615</b>. After the egress of the loopback port determines that the packet came from one of the uplink ports, the egress removes the uplink ID tag from the packet at step <b>615</b>.</p>
<p id="p-0066" num="0065">Once the uplink ID tag is removed from the packet, the packet having at least the SP VLAN ID tag and the customer VLAN ID tag can be transmitted out of the loopback port at step <b>620</b>, and thereafter the packet is MAC address looped back into the ingress of the loopback port at step <b>625</b>. The packet is received at the ingress of the loopback port at step <b>630</b>, and the packet can be processed as if it was received at an uplink port of a DT engine module. Accordingly, the ingress of the loopback port can process the packet based on a DT engine logic mode.</p>
<p id="p-0067" num="0066">In other words, when a Layer 2 known unicast or a layer 2 know multicast packet is received at the uplink port based one a DT engine logic module, a destination address and a customer VLAN ID can be identified from the packet.</p>
<p id="p-0068" num="0067">After identifying the destination address and the customer VLAN ID from the packet, an outgoing port bit map can be obtained from a look-up table. If the packet received is a known unicast packet, then the outgoing port bit map can be obtained from an L2 Address look-up table. However, if the packet received is a known multicast packet, then the outgoing port bit map can be obtained from an L2 Multicast look-up table.</p>
<p id="p-0069" num="0068">Once the outgoing port bit map is obtained, a SP VLAN ID tag can be identified and removed form the packet. Thereafter, the packet can be forwarded to one or more destination module(s) and one or more egress port(s) based on the outgoing port bit map. The packet can be assigned a SP VLAN tag priority to the CoS, and the CoS SEL register can be modified on the subscriber egress port(s) to match the CoS of the packet.</p>
<p id="p-0070" num="0069">In addition, when a Layer 2 unknown unicast, broadcast, and multicast packet is received at an ingress uplink port based on a DT engine logic module, a SP VLAN ID tag can be identified and removed from the packet.</p>
<p id="p-0071" num="0070">The identified SP VLAN ID tag can be indexed to a Layer 2 multicast look-up table and obtain a L2 multicast index and a L2 multicast type from the look-up table. The packet can be appended with the L2 multicast index and the L2 multicast type. Once the packet is appended with the multicast index and the multicast type, the operation code (op-code) within the module header of the packet can be modified to “multicast” when the multicast type appended within the packet matches a first predetermined type value. Additionally, the operation code (op-code) within the module header of the packet can be modified to “IP multicast” when the multicast type appended within the packet matches a second predetermined type value.</p>
<p id="p-0072" num="0071">Once the packet is appended with the multicast index and type, and the op-code within the module header of the packet is modified, a SP VLAN ID priority can be assigned to the packet's CoS. Thereafter, the packet can be forwarded to a high Gigabit ingress port of a network switching module within a PE device.</p>
<p id="p-0073" num="0072">The packet can be received at the high Gigabit port of a module with a PE device. Once the packet is received, an outgoing port bit map can be obtained from indexing the L2 multicast look-up table. After the outgoing port bit map is obtained, the CoS SEL register can be modified on the subscriber egress port(s) to match the CoS of the packet, and thereafter the packet can be forwarded out of one or more subscriber customer facing port(s) based on the outgoing port bit map.</p>
<p id="p-0074" num="0073"><figref idref="DRAWINGS">FIGS. 7-8</figref> illustrate one example of a method of processing and double tagging a packet based on a double tagging loopback engine in accordance with the present invention. The method of the present example can be implemented in hardware, or software, or a combination of both hardware and software.</p>
<p id="p-0075" num="0074"><figref idref="DRAWINGS">FIGS. 7 and 8</figref> show one example of a method of processing a packet received at a customer facing port of a module based on a double tagging loopback engine. A packet can be received at a customer facing port such as the ones shown in <figref idref="DRAWINGS">FIG. 3</figref> at step <b>700</b>. Once the packet is received at the customer facing port, the present invention can identify an egress port based on DT engine logic.</p>
<p id="p-0076" num="0075">According to the DT engine logic, a known Layer 2 unicast or a known Layer 2 multicast packet can be received at a customer subscriber port. A known unicast packet can be a packet that is relayed or transmitted to only one known destination port. In contrast, a known multicast packet can be a packet that is relayed or transmitted to a multiple known destination ports. Moreover, an unknown unicast/multicast/broadcast packet can be a destination-lookup-failure packet. In other words, a received packet can be an unknown unicast/multicast/broadcast packet due to a failure in the destination address (DA) lookup for the packet received. Therefore, if the destination address lookup is not successful, then the destination port or ports with respect to the packet received is unknown.</p>
<p id="p-0077" num="0076">Therefore, a known unicast or a known mulitcast packet can be received at one of the customer facing ports of a PE device based on DT engine logic. Once the packet is received, a destination address and a customer VLAN ID can be identified from the packet.</p>
<p id="p-0078" num="0077">After identifying the destination address and the customer VLAN ID from the packet, an outgoing port bit map can be obtained from a look-up table. If the packet received is a known unicast packet, then the outgoing port bit map can be obtained from an L2 Address look-up table. However, if the packet received is a known multicast packet, then the outgoing port bit map can be obtained from an L2 Multicast look-up table.</p>
<p id="p-0079" num="0078">Once the outgoing port bit map is obtained, a fast filtering processor can assign a class of service (CoS) to the module header of the packet based on a service level agreement (SLA). Thereafter, the packet can be forwarded to one or more destination module(s) and one or more egress port(s) based on the outgoing port bit map.</p>
<p id="p-0080" num="0079">One of the egress ports can also be the loopback port. Accordingly, the packet can be forwarded to the egress of an loopback port at the DT loopback engine module at step <b>710</b>. After the packet is received at the egress of the loopback port, a source module and a source port corresponding to the packet can be identified at step <b>715</b>. In other words, the source module and the source port indicate the source where the packet originated.</p>
<p id="p-0081" num="0080">Thereafter, the source module and the source port can be indexed to a SP VLAN tag look-up table to obtain a SP VLAN tag, and can be used to obtain a Uplink ID tag at step <b>720</b>. Once the SP VLAN tag and the uplink ID tag are obtained from the SP VLAN tag look-up table and the VLAN ID port table, the packet can be appended with the SP VLAN tag and the uplink ID tag at step <b>725</b>. In other words, the packet received at the egress of the loopback port of a DT loopback engine module can be appended with a SP VLAN tag and an uplink ID tag. Once the packet is appended with such information, the packet can be forwarded out of the egress of the loopback port of the DT loopback engine module at step <b>730</b>.</p>
<p id="p-0082" num="0081">After the packet is transmitted out of the egress, the packet can loop back into the ingress of the loopback port at step <b>735</b>. Upon looping back into the ingress of the loopback port, the op-code of the module header of the packet can be modified to a “broadcast DLF” status at step <b>800</b> and can be forwarded to a network switching module at step <b>805</b>.</p>
<p id="p-0083" num="0082">Once the packet is received within the network switching module, a customer VLAN ID can be identified from the packet. After the customer VLAN ID tag have been identified from the packet, the VLAN ID can be indexed to a VLAN ID look-up table to obtain a corresponding outgoing port bit map and an untagged bit map at step <b>815</b>. The untagged bit map can indicate which uplink port is the egress port for the packet to be transmitted out of the PE device.</p>
<p id="p-0084" num="0083">After the outgoing port bit map and the untagged bit map are obtained, the egress of the identified uplink port can remove the uplink ID tag from the packet at step <b>820</b>. Once the uplink ID tag is removed from the packet, the packet can be transmitted out of the egress of the uplink port that correspond to the uplink ID tag removed from the packet at step <b>825</b>.</p>
<p id="p-0085" num="0084">The above-disclosed system configurations of the present invention can be embodied within a Virtual Private LAN Service (VPLS), a Transparent LAN Service (TLS), a Virtual Private Switched Network Service (VPSNS), or any Layer 2 Virtual Private Network (VPN). In addition, the above-disclosed hardware configuration can be embodied in a semiconductor substrate, such as silicon. Furthermore, the methods of the invention can be implemented in hardware, or software, or a combination of both hardware and software. In addition, a person of skill in the art with respect to network system design and/or semiconductor design and manufacturing would be able to implement the various network systems, elements and methods of the present invention onto a single system or onto a single semiconductor substrate, respectively, based upon the architectural description discussed above.</p>
<p id="p-0086" num="0085">One having ordinary skill in the art will readily understand that the invention as discussed above may be practiced with steps in a different order, and/or with hardware elements in configurations which are different than those which are disclosed. Therefore, although the invention has been described based upon these preferred embodiments, it would be apparent to those of skill in the art that certain modifications, variations, and alternative constructions would be apparent, while remaining within the spirit and scope of the invention. In order to determine the metes and bounds of the invention, therefore, reference should be made to the appended claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>We claim:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for processing a packet in a communications network, said method comprising the steps of:
<claim-text>receiving a packet at a network component;</claim-text>
<claim-text>forwarding the packet to a loopback port at the network component;</claim-text>
<claim-text>transmitting the packet out of the loopback port;</claim-text>
<claim-text>looping back the packet into the loopback port;</claim-text>
<claim-text>identifying an egress port at the network component; and</claim-text>
<claim-text>transmitting the packet out of the egress port,</claim-text>
<claim-text>wherein the step of receiving the packet comprises the steps of
<claim-text>receiving the packet at an uplink port; and</claim-text>
<claim-text>appending the packet with an uplink (ID) tag when an ether-type value from the packet does not match a predetermined value.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprises the steps of:
<claim-text>receiving the packet at the loopback port;</claim-text>
<claim-text>identifying an uplink ID tag from the packet; and</claim-text>
<claim-text>removing the uplink ID tag from the packet.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising the steps of:
<claim-text>receiving the packet at an ingress of the loopback port; and</claim-text>
<claim-text>processing the packet based on a double tagging engine logic.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step of receiving the packet comprises the steps of:
<claim-text>receiving the packet at a customer facing port of the network component; and</claim-text>
<claim-text>identifying the egress port based on a double tagging engine logic.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising the steps of:
<claim-text>receiving the packet at the loopback port; and</claim-text>
<claim-text>identifying a source address and a customer VLAN ID from the packet when the packet originated from a customer facing port.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising the steps of:
<claim-text>obtaining an Service Provider (SP) VLAN ID tag from an SP VLAN ID table based on a source port and a source module of the packet;</claim-text>
<claim-text>obtaining an uplink ID tag from an uplink ID register based on the source port and the source module of the packet; and</claim-text>
<claim-text>appending the packet with SP VLAN ID tag and the uplink ID tag.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step of transmitting the packet out of the loopback port comprises the step of:
<claim-text>transmitting the packet appended with an SP VLAN ID tag and with a uplink ID tag out of the loopback port.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the step of looping back the packet into the loopback port comprises of the step of:
<claim-text>looping back the packet appended with the SP VLAN ID tag and with the uplink ID tag into the loopback port.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising the step of:
<claim-text>modifying an op-code within a module header of the packet to indicate a broadcast DLF status.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step of identifying an egress port comprises the steps of:
<claim-text>obtaining an outgoing port bit map and an untagged bit map based on a customer VLAN ID from the packet; and</claim-text>
<claim-text>identifying the egress port based on the outgoing port bit map and the untagged bit map.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step of transmitting the packet out of the egress port comprises the steps of:
<claim-text>removing an uplink ID tag from the packet; and</claim-text>
<claim-text>transmitting the packet out of an uplink port corresponding to the uplink ID tag.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A network component for processing a packet, said network component comprising:
<claim-text>a first buffer configured to receive a packet;</claim-text>
<claim-text>a forwarding unit configured to forward the packet received at the first buffer to a loopback port;</claim-text>
<claim-text>a first transmitting unit configured to transmit the packet out of the loopback port;</claim-text>
<claim-text>a loopback unit configured to loop back the packet into the loopback port;</claim-text>
<claim-text>a first identification unit configured to identify an egress port; and</claim-text>
<claim-text>a second transmitting unit configured to transmit the packet looped back from the loopback port out of the egress port;</claim-text>
<claim-text>an appending unit configured to append the packet received at the first buffer with an uplink (ID) tag when an ether-type value from the packet does not match a predetermined value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The network component of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the first buffer is configured to receive the packet from an uplink port.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The network component of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:
<claim-text>a second buffer configured to receiving the packet forwarded by the forwarding unit at the loopback port;</claim-text>
<claim-text>a second identification unit configured to identify an uplink ID tag from the packet received at the second buffer; and</claim-text>
<claim-text>a removing unit configured to remove the uplink ID tag from the packet received at the second buffer.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The network component of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:
<claim-text>a second buffer configured to receive the packet forwarded by the forwarding unit at an ingress of the loopback port; and</claim-text>
<claim-text>a processing unit configured to process the packet looped back from the loopback port based on a double tagging engine logic.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The network component of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the first buffer is configured to receive the packet at a customer facing port, and wherein the first identification unit is configured to identify the egress port based on a double tagging engine logic.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The network component of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:
<claim-text>a second buffer configured to receive the packet at the loopback port; and</claim-text>
<claim-text>a second identification unit configured to identifying a source address and a customer VLAN ID from the packet received at the second buffer when the packet originated from a customer facing port.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The network component of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprises:
<claim-text>an Service Provider (SP) VLAN ID table configured to store at least one SP VLAN ID tag therein;</claim-text>
<claim-text>an uplink ID register configured to store an uplink ID tag therein;</claim-text>
<claim-text>an obtaining unit configured to obtain the SP VLAN ID tag and the uplink ID tag based on a source port and a source module; and</claim-text>
<claim-text>an appending unit configured to append the packet forwarded by the forwarding unit with the SP VLAN ID tag and the uplink ID tag.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The network component of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the first transmitting unit is configured to transmit the packet appended with a SP VLAN ID tag and with a uplink ID tag out of the loopback port.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The network component of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the loopback unit is configured to loop back the packet appended with the SP VLAN ID tag and with the uplink ID tag into the loopback port.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The network component of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:
<claim-text>a modifying unit configured to modifying an op-code within a module header of the packet looped back from the loopback unit to indicate a broadcast DLF status.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The network component of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:
<claim-text>an obtaining unit configured to obtain an outgoing port bit map and an untagged bit map based on a customer VLAN ID from the packet, wherein the first identifying unit is configured to identifying the egress port based on the outgoing port bit map and the untagged bit map.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The network component of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising:
<claim-text>a removing unit configured to remove an uplink ID tag from the packet before transmitting the packet out by the second transmitting unit, and wherein the second transmitting unit is configured to transmit the packet out of an uplink port corresponding to the uplink ID tag.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. A system of processing a packet in a communications network, said system comprising:
<claim-text>a first receiving means for receiving a packet at a network component;</claim-text>
<claim-text>a forwarding means for forwarding the packet to a loopback port at the network component;</claim-text>
<claim-text>a first transmitting means for transmitting the packet out of the loopback port;</claim-text>
<claim-text>a loopback means for looping back the packet into the loopback port;</claim-text>
<claim-text>a first identifying means for identifying an egress port at the network component; and</claim-text>
<claim-text>a second transmitting means for transmitting the packet out of the egress port,</claim-text>
<claim-text>wherein the first receiving means receives the packet at an uplink port and appends the packet with an uplink (ID) tag when an ether-type value from the packet does not match a predetermined value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref>, further comprising:
<claim-text>a second receiving means for receiving the packet at the loopback port;</claim-text>
<claim-text>a second identifying means for identifying an uplink ID tag from the packet; and</claim-text>
<claim-text>a removing means for removing the uplink ID tag from the packet.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref>, further comprising:
<claim-text>a second receiving means for receiving the packet at an ingress of the loopback port; and</claim-text>
<claim-text>a processing means for processing the packet based on a double tagging engine logic.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref>, wherein the first receiving means receives the packet at a customer facing port of the network component, and wherein the first identifying means identifies the egress port based on a double tagging engine logic.</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref>, further comprising:
<claim-text>a second receiving means for receiving the packet at the loopback port; and</claim-text>
<claim-text>a second identifying means for identifying a source address and a customer VLAN ID from the packet when the packet originated from a customer facing port.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref>, further comprising:
<claim-text>a first obtaining means for obtaining an Service Provider (SP) VLAN ID tag from an SP VLAN ID table based on a source port and a source module of the packet;</claim-text>
<claim-text>a second obtaining means for obtaining an uplink ID tag from an uplink ID register based on the source port and the source module of the packet; and</claim-text>
<claim-text>an appending means for appending the packet with SP VLAN ID tag and the uplink ID tag.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref>, wherein the first transmitting means transmits the packet appended with a SP VLAN ID tag and with a uplink ID tag out of the loopback port.</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. The system of <claim-ref idref="CLM-00030">claim 30</claim-ref>, wherein the loopback means loops back the packet appended with the SP VLAN ID tag and with the uplink ID tag into the loopback port.</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref>, further comprising:
<claim-text>a modifying means for modifying an op-code within a module header of the packet to indicate a broadcast DLF status.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref>, further comprising:
<claim-text>an obtaining means for obtaining an outgoing port bit map and an untagged bit map based on a customer VLAN ID from the packet, and wherein the identifying means identifies the egress port based on the outgoing port bit map and the untagged bit map.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. The system of <claim-ref idref="CLM-00024">claim 24</claim-ref>, further comprising:
<claim-text>a removing means for removing an uplink ID tag from the packet, and wherein the second transmitting means transmits the packet out of an uplink port corresponding to the uplink ID tag.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
