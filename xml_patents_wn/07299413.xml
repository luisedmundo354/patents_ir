<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299413-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299413</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10238586</doc-number>
<date>20020911</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2001-280757</doc-number>
<date>20010914</date>
</priority-claim>
<priority-claim sequence="02" kind="national">
<country>JP</country>
<doc-number>2002-261976</doc-number>
<date>20020906</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>449</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>715530</main-classification>
<further-classification>715770</further-classification>
</classification-national>
<invention-title id="d0e89">Document processing method and system</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5745712</doc-number>
<kind>A</kind>
<name>Turpin et al.</name>
<date>19980400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715763</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6120197</doc-number>
<kind>A</kind>
<name>Kawamoto et al.</name>
<date>20000900</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>400 61</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6560616</doc-number>
<kind>B1</kind>
<name>Garber</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707203</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6907565</doc-number>
<kind>B1</kind>
<name>Huang</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715513</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2003/0004957</doc-number>
<kind>A1</kind>
<name>Broman et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707100</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2003/0079177</doc-number>
<kind>A1</kind>
<name>Brintzenhofe et al.</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715500</main-classification></classification-national>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2003/0237051</doc-number>
<kind>A1</kind>
<name>LaMarca et al.</name>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715513</main-classification></classification-national>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>JP</country>
<doc-number>02-297140</doc-number>
<date>19901200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>JP</country>
<doc-number>09-204281</doc-number>
<date>19970800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>JP</country>
<doc-number>11-305982</doc-number>
<date>19991100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>JP</country>
<doc-number>2001-500294</doc-number>
<date>20010100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>WO</country>
<doc-number>WO 98/10356</doc-number>
<date>19980300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00013">
<othercit>OASYS 1-2-3 V7, User's Manual of OASYS 1-2-3 by Fujitsu, first print, Japan, Fujitsu Limited, Oct. 31, 1999, first edition, p. 39, with translation.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>50</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>715513</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715515</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715530</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715531</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715540</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>715770</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>51</number-of-drawing-sheets>
<number-of-figures>51</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20030056179</doc-number>
<kind>A1</kind>
<date>20030320</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Mori</last-name>
<first-name>Yasuo</first-name>
<address>
<city>Kanagawa</city>
<country>JP</country>
</address>
</addressbook>
<nationality>
<country>JP</country>
</nationality>
<residence>
<country>JP</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Fitzpatrick, Cella, Harper &amp; Scinto</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Canon Kabushiki Kaisha</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Hong</last-name>
<first-name>Stephen</first-name>
<department>2178</department>
</primary-examiner>
<assistant-examiner>
<last-name>Queler</last-name>
<first-name>Adam M</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">The present invention provides a document processing method and system capable of making both global and local settings when inserting, moving, or copying and pasting data, by taking full advantage of the feature of retaining data and set values hierarchically in the system. In document processing for processing original data which has a print format as an attribute, the original data is retained in a tree structure, with each node having attributes, and when moving or copying any desired subtree data in the tree structure, node attributes of the manipulated subtree data is set with the attributes of the source or destination node according to priorities of attributes specified among the levels of the tree structure.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="240.28mm" wi="156.80mm" file="US07299413-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="188.21mm" wi="163.49mm" file="US07299413-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="240.54mm" wi="166.37mm" file="US07299413-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="210.14mm" wi="166.20mm" file="US07299413-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="233.00mm" wi="149.94mm" orientation="landscape" file="US07299413-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="241.38mm" wi="149.35mm" orientation="landscape" file="US07299413-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="242.74mm" wi="139.87mm" orientation="landscape" file="US07299413-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="211.16mm" wi="124.46mm" orientation="landscape" file="US07299413-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="130.89mm" wi="135.97mm" file="US07299413-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="249.77mm" wi="162.56mm" orientation="landscape" file="US07299413-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="220.81mm" wi="172.13mm" orientation="landscape" file="US07299413-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="150.45mm" wi="130.13mm" file="US07299413-20071120-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="162.64mm" wi="128.95mm" file="US07299413-20071120-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="256.12mm" wi="74.59mm" orientation="landscape" file="US07299413-20071120-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="235.46mm" wi="157.06mm" orientation="landscape" file="US07299413-20071120-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="180.26mm" wi="179.92mm" file="US07299413-20071120-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="182.12mm" wi="168.91mm" file="US07299413-20071120-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="183.13mm" wi="167.13mm" file="US07299413-20071120-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="158.67mm" wi="164.76mm" file="US07299413-20071120-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="169.42mm" wi="182.20mm" file="US07299413-20071120-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="238.51mm" wi="178.22mm" orientation="landscape" file="US07299413-20071120-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="207.60mm" wi="173.65mm" orientation="landscape" file="US07299413-20071120-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="207.26mm" wi="174.41mm" orientation="landscape" file="US07299413-20071120-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="209.30mm" wi="185.93mm" orientation="landscape" file="US07299413-20071120-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00024" num="00024">
<img id="EMI-D00024" he="219.29mm" wi="182.29mm" orientation="landscape" file="US07299413-20071120-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00025" num="00025">
<img id="EMI-D00025" he="201.76mm" wi="188.72mm" orientation="landscape" file="US07299413-20071120-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00026" num="00026">
<img id="EMI-D00026" he="196.60mm" wi="181.10mm" orientation="landscape" file="US07299413-20071120-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00027" num="00027">
<img id="EMI-D00027" he="196.43mm" wi="199.81mm" orientation="landscape" file="US07299413-20071120-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00028" num="00028">
<img id="EMI-D00028" he="208.03mm" wi="168.40mm" orientation="landscape" file="US07299413-20071120-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00029" num="00029">
<img id="EMI-D00029" he="211.50mm" wi="177.55mm" orientation="landscape" file="US07299413-20071120-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00030" num="00030">
<img id="EMI-D00030" he="166.12mm" wi="148.08mm" file="US07299413-20071120-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00031" num="00031">
<img id="EMI-D00031" he="227.92mm" wi="160.27mm" file="US07299413-20071120-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00032" num="00032">
<img id="EMI-D00032" he="229.87mm" wi="170.18mm" file="US07299413-20071120-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00033" num="00033">
<img id="EMI-D00033" he="240.54mm" wi="162.14mm" file="US07299413-20071120-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00034" num="00034">
<img id="EMI-D00034" he="188.47mm" wi="108.46mm" orientation="landscape" file="US07299413-20071120-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00035" num="00035">
<img id="EMI-D00035" he="106.76mm" wi="96.86mm" file="US07299413-20071120-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00036" num="00036">
<img id="EMI-D00036" he="89.92mm" wi="76.54mm" file="US07299413-20071120-D00036.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00037" num="00037">
<img id="EMI-D00037" he="86.53mm" wi="68.33mm" file="US07299413-20071120-D00037.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00038" num="00038">
<img id="EMI-D00038" he="82.63mm" wi="81.79mm" file="US07299413-20071120-D00038.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00039" num="00039">
<img id="EMI-D00039" he="85.09mm" wi="119.13mm" file="US07299413-20071120-D00039.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00040" num="00040">
<img id="EMI-D00040" he="128.44mm" wi="186.10mm" file="US07299413-20071120-D00040.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00041" num="00041">
<img id="EMI-D00041" he="61.04mm" wi="83.40mm" file="US07299413-20071120-D00041.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00042" num="00042">
<img id="EMI-D00042" he="236.81mm" wi="157.14mm" file="US07299413-20071120-D00042.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00043" num="00043">
<img id="EMI-D00043" he="57.49mm" wi="149.61mm" file="US07299413-20071120-D00043.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00044" num="00044">
<img id="EMI-D00044" he="89.58mm" wi="152.57mm" file="US07299413-20071120-D00044.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00045" num="00045">
<img id="EMI-D00045" he="103.97mm" wi="159.51mm" file="US07299413-20071120-D00045.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00046" num="00046">
<img id="EMI-D00046" he="54.69mm" wi="150.20mm" file="US07299413-20071120-D00046.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00047" num="00047">
<img id="EMI-D00047" he="192.45mm" wi="149.78mm" orientation="landscape" file="US07299413-20071120-D00047.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00048" num="00048">
<img id="EMI-D00048" he="254.25mm" wi="156.80mm" orientation="landscape" file="US07299413-20071120-D00048.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00049" num="00049">
<img id="EMI-D00049" he="242.15mm" wi="170.26mm" file="US07299413-20071120-D00049.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00050" num="00050">
<img id="EMI-D00050" he="175.43mm" wi="169.67mm" file="US07299413-20071120-D00050.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00051" num="00051">
<img id="EMI-D00051" he="171.11mm" wi="144.61mm" file="US07299413-20071120-D00051.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0002" num="0001">The present invention relates to a document processing method and system, which, for example, compile output data generated by various programs such as document processing programs and image editing programs into one document and provide capabilities to edit the document. More particularly, it relates to a document processing method and system for a system consisting of an information processing unit—such as a personal computer—and a printer.</p>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">Since structures defining data such as characters, tables, and images and operations for editing the data vary with the kind of data, various application programs are provided to accommodate different kinds of data. Users use different applications according to kinds of data: they use character processing programs to edit characters, spread sheet programs to edit tables image editing programs to edit images, and so on.</p>
<p id="p-0004" num="0003">In this way, it is common practice for users to use a different application program for each kind of data. However, a document created by a user generally consists of two or more kinds of data such as characters and tables, characters and images, and so on instead of one kind of data such as characters only, tables only, or images only. Consequently, when creating a document containing two or more kinds of data, the user must print data on each application using a print function of the application and combine resulting prints in a desired order.</p>
<p id="p-0005" num="0004">There is a program called an office suite which combine various applications into a single integrated application. Some office suites provide capability to combine data generated by various applications into one document. By using such an integrated application, a user can compile data created on individual applications into a desired document by means of a particular application contained in the integrated application.</p>
<p id="p-0006" num="0005">However, when combining prints produced by various applications into a desired document, in order, for example, to number its pages, the user must print out all necessary data and print a compiled document on a trial basis to determine the page numbers to be assigned to the final document. Then, by using each application, the user must enter the determined page numbers in the pages (called logical pages or original pages) of the originals created on the each application. Even if an application program has a capability to number pages, the user must still specify a page number after any discontinuity. Also, if pages of the desired document are rearranged, the user must reassign page numbers accordingly. Besides, even in the case of a format change which simply involves, for example, merging two or more original pages into one page of printed matter (called a physical page or print page) or changing from simplex printing to duplex printing rather than changes in data content, the user must edit and print the pages again using the appropriate application.</p>
<p id="p-0007" num="0006">In this way, since different applications can manage only different kinds of data, the user must provide interfaces between applications manually. This requires a great deal of labor from the user, resulting in reduced productivity. Furthermore, manual intervention, a lot of which is involved, is prone to errors.</p>
<p id="p-0008" num="0007">On the other hand, when creating a desired document using an integrated application, various data can be laid out as they are without printing them out. This does not require so much labor as when creating a desired document by combining prints. However, applications for editing and creating various data are limited to those contained in the integrated application and desired applications are not always available. Besides, the desired document created by the integrated application is a single document file and is edited, output, or otherwise managed on a file-by-file basis. Therefore, if the user wants to format part of the document file, there are many restrictions due to applications capabilities. For example, the user must reformat each differently formatted part and print it again. This requires a lot of labor and is no different in low productivity from the method described above.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0009" num="0008">The present applicant proposed a system which retained data by the page to lay out and print it according to various settings. However, although this system retained data hierarchically, it retained settings only on the level of an entire document and did not allow local settings. To take N-up printing, a typical layout setting, as an example, the proposed system allowed 2-up printing to be specified for an entire document, but did not allow the setting for part of the document to be changed to 4-up printing. On the other hand, systems which allow settings to be specified separately for each part retain attributes for individual parts separately rather than for all the parts as a whole and do not allow settings to be changed for all the parts at once. Thus, a system is desired which will allow both global and local settings by retaining various settings at each level of a hierarchy in addition to retaining data hierarchically.</p>
<p id="p-0010" num="0009">Such a system will make it possible to perform edit operations of moving or copying &amp; pasting any subtree such as a page or a set of pages in addition to changing settings.</p>
<p id="p-0011" num="0010">Thus, the object of the present invention is to provide a document processing method and system capable of making both global and local settings when inserting, moving, or copying and pasting data, by taking full advantage of the feature of retaining data and set values hierarchically in the system.</p>
<p id="p-0012" num="0011">To solve the above problem, the present invention provides a document processing method of processing original data which has a print format as an attribute, comprising: a manipulation step of manipulating such as moving or copying, any desired subtree data in a tree structure in which the original data is stored with each node having attributes; and a setting step of setting attributes in node of the subtree data to be manipulated in said manipulation step, based on attributes of source and destination on moving or copying the subtree data.</p>
<p id="p-0013" num="0012">Here, the document processing method further comprises an indicating step of indicating priorities of attributes among upper and lower levels of the above described tree structure, wherein attributes are set according to the above described indicated priorities in the above described setting step. Also, the subtree data in the above described tree structure contains the above described priorities of attributes indicated in said indicating step, as an attribute of a lower level. Also, the document processing method further comprises a first display control step of controlling a process of displaying a screen in which the above described priorities of attributes can be indicated, on a node-by-node basis, wherein the above described priorities of attributes are indicated via the screen in the above described indicating step. Also, the document processing method further comprises a reading step of reading out already stored default settings which define how to set the attributes of the subtree in the above described setting step. Also, the above described method is used for document processing which involves book editing processes, based on document data generated by applications, and the attributes managed by the above described tree structure include attributes related to book editing processes.</p>
<p id="p-0014" num="0013">Also, the present invention provides a document processing system for processing original data which has a print format as an attribute, comprising: a manipulation unit for manipulating such as moving or copying, any desired subtree data in a tree structure in which the original data is stored with each node having attributes; and a setting unit for setting attributes in node of the subtree data to be manipulated by the above described manipulation unit, based on attributes of source and destination on moving or copying the subtree data.</p>
<p id="p-0015" num="0014">Also, the present invention provides a document processing apparatus for processing original data which has a print format as an attribute, comprising: a manipulation unit for manipulating such as moving or copying, any desired subtree data in a tree structure in which the original data is stored with each node having attributes; and a setting unit for setting attributes in node of the subtree data to be manipulated by the above described manipulation unit, based on attributes of source and destination on moving or copying the subtree data.</p>
<p id="p-0016" num="0015">Also, the present invention provides a document processing apparatus for processing original data which has a print format as an attribute, comprising: a manipulation unit for manipulating such as moving or copying, any desired subtree data in a tree structure in which the original data is stored with each node having attributes; and a setting unit for setting attributes in node of the subtree data to be manipulated by the above described manipulation unit, based on attributes of source and destination on moving or copying the subtree data.</p>
<p id="p-0017" num="0016">Here, the document processing apparatus further comprisies an indicating unit for indicating priorities of attributes among upper and lower levels of the above described tree structure, wherein attributes are set according to said indicated priorities by said setting unit.</p>
<p id="p-0018" num="0017">Also, the subtree data in the above described tree structure contains the above described priorities of attributes indicated by the above described indicating unit, as an attribute of a lower level. Also, the document processing method further comprises a first display control unit for controlling a process of displaying a screen in which the above described priorities of attributes can be indicated, on a node-by-node basis, wherein the above described priorities of attributes are indicated via the screen by the above described indicating unit. Also, the document processing apparatus further comprises a second display control unit for controlling a process of displaying a screen which allows a user to indicate how to set the attributes of the subtree, when the subtree data is manipulated by the above described manipulation unit. Also, the document processing apparatus further comprises a reading unit for reading out already stored default settings which define how to set the attributes of the subtree by the above described setting unit. Also, the above described apparatus is used for document processing which involves book editing processes, based on document data generated by applications, and the attributes managed by said tree structure include attributes related to book editing processes.</p>
<p id="p-0019" num="0018">Also, the present invention provides a document processing program for processing original data which has a print format as an attribute, comprising: a manipulation module of manipulating such as moving or copying, any desired subtree data in a tree structure in which the original data is stored with each node having attributes; and a setting module of setting attributes in node of the subtree data to be manipulated in the above described manipulation module, based on attributes of source and destination on moving or copying the subtree data. Here, the document processing program further compriss an indicating module of indicating priorities of attributes among upper and lower levels of said tree structure, wherein attributes are set according to the above described indicated priorities in the above described setting module.</p>
<p id="p-0020" num="0019">Other features and advantages of the present invention will be apparent from the following description taken in conjunction with the accompanying drawings, in which like reference characters designate the same or similar parts throughout the figures thereof.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram showing an exemplary software configuration of a stand-alone document processing system according to this embodiment;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram showing an exemplary configuration of hardware which implements the document processing system according to this embodiment;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram showing an exemplary configuration of a book file;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIGS. 4A and 4B</figref> are diagrams showing a list of book attributes;</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram showing a list of chapter attributes;</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 6</figref> is a diagram showing a list of page attributes;</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 7</figref> is a flowchart showing exemplary procedures for opening a book file;</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 8</figref> is a diagram showing an example of user interface screens brought up when a new book file is opened;</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 9</figref> is a diagram showing an example of user interface screens brought up when an existing book file is opened;</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 10</figref> is a flowchart showing exemplary procedures for importing an electronic original file into a book file;</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 11</figref> is a flowchart showing exemplary procedures for converting application data into an electronic original file in Step <b>801</b> in <figref idref="DRAWINGS">FIG. 10</figref>;</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 12</figref> is a diagram showing an exemplary data structure for use in print and display operations;</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 13</figref> is a block diagram showing an exemplary software configuration of a client/server document processing system;</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 14</figref> is a diagram showing an exemplary dialog window for use in making settings for a entire document at the top level of the data structure;</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 15</figref> is a diagram showing an exemplary dialog window for use in making settings for chapters at the middle level of the data structure;</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 16</figref> is a diagram showing an example of the dialog window in which unique attributes have been specified;</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 17</figref> is a diagram showing an exemplary dialog window for use in making settings for pages at the bottom level of the data structure;</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 18</figref> is a diagram showing an example of how settings are changed on the dialog window of <figref idref="DRAWINGS">FIG. 17</figref>;</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 19</figref> is a diagram showing a display example after settings unique to chapters and pages have been made;</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 20A</figref> is a diagram showing an example of a document to be copied and pasted;</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 20B</figref> is a diagram showing an example of a document to be copied and pasted when it has no unique setting;</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 20C</figref> is a diagram showing an example of copy and paste results when there is no unique setting;</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 20D</figref> is a diagram showing an example of copy and paste results when there is no unique setting;</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 21A</figref> is a diagram showing an example of a document to be copied and pasted;</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 21B</figref> is a diagram showing an example of a document to be copied and pasted when it has unique settings;</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 21C</figref> is a diagram showing an example of copy and paste results when there are unique settings;</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 21D</figref> is a diagram showing an example of copy and paste results when there are unique settings;</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 21E</figref> is a diagram showing an example of copy and paste results when there are unique settings;</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 22</figref> is a diagram showing an exemplary process of inserting data;</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. 23</figref> is a flowchart showing an exemplary process of pasting an entire document;</p>
<p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. 24</figref> is a flowchart showing an exemplary process of pasting chapters;</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 25</figref> is a flowchart showing an exemplary process of pasting pages;</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 26</figref> is a diagram showing an example of display method in an edit process;</p>
<p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. 27</figref> is a diagram showing an example of display method in an edit process;</p>
<p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. 28</figref> is a diagram showing an example of display method in an edit process;</p>
<p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. 29</figref> is a diagram showing an example of display method in an edit process;</p>
<p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. 30</figref> is a diagram showing an example of display method in an edit process;</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 31</figref> is a diagram showing an example of display method in an edit process;</p>
<p id="p-0059" num="0058"><figref idref="DRAWINGS">FIG. 32</figref> is a diagram showing an example of display method in an edit process;</p>
<p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. 33</figref> is a diagram showing an example of display method in an edit process;</p>
<p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. 34</figref> is a flowchart showing exemplary procedures of a display method in an edit process.</p>
<p id="p-0062" num="0061"><figref idref="DRAWINGS">FIGS. 35A to 35C</figref> are diagrams showing examples of GUI which allow the user to select a paste method;</p>
<p id="p-0063" num="0062"><figref idref="DRAWINGS">FIG. 36</figref> is a diagram showing an example of IDs used by a program to recognize an item selected by the user in <figref idref="DRAWINGS">FIG. 35</figref>;</p>
<p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. 37</figref> is a diagram showing an example of data written into a paste buffer during pasting;</p>
<p id="p-0065" num="0064"><figref idref="DRAWINGS">FIG. 38</figref> is a flowchart showing allocation of processes during pasting;</p>
<p id="p-0066" num="0065"><figref idref="DRAWINGS">FIG. 39</figref> is a flowchart showing procedures for processing attributes during pasting;</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 40</figref> is a flowchart showing procedures for processing attributes during pasting; and</p>
<p id="p-0068" num="0067"><figref idref="DRAWINGS">FIG. 41</figref> is a flowchart showing procedures for processing attributes during pasting.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
<p id="p-0069" num="0068">A preferred embodiment of the present invention will be described in detail below with reference to the accompanying drawings.</p>
<heading id="h-0006" level="1">Outline of Document Processing System According to this Embodiment</heading>
<p id="p-0070" num="0069">A document processing system according to a first embodiment of the present invention will be outlined with reference to <figref idref="DRAWINGS">FIGS. 1 to 13</figref>. In this system, a data file created by a general application is converted by an electronic original writer into an electronic original file. A book editing application provides the capability to edit the electronic original file. Incidentally, although in this example, the general application, the electronic original writer, the book editing application, and an electronic original despooler are shown separately to indicate their respective functions distinctly, packages provided to users are not limited to this and may contain an application or graphic engine which consists of a combination of these applications. Details will be described below.</p>
<heading id="h-0007" level="1">Exemplary Software Configuration of Document Processing System According to this Embodiment</heading>
<p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram showing a software configuration of the document processing system according to this embodiment.</p>
<p id="p-0072" num="0071">The document processing system is implemented by a digital computer <b>100</b> (hereinafter also referred to as a host computer), which is a preferred embodiment of a document processing device of the present invention. A general application <b>101</b> is an application program which provides word processing, spreadsheet, photo retouching, draw or paint, presentation, text editing, and other functions. It also has a print function for an OS. Such an application uses a designated interface (usually referred to as GDI) provided by the operating system (OS) to print application data such as created document data and image data. Thus, to print created data, the application <b>101</b> sends a predetermined, OS-dependent, output command (called a GDI function) to an output module of the OS which provides the interface. Upon receiving the output command, the output module converts the command into a format which can be handled by a printer or other output devices and outputs the converted command (called a DDI function). The format which can be handled by output devices depends on the device type, manufacturer, machine type, and the like, and thus a device driver is provided for each device. By using such device drivers, the OS converts the command, generates print data, and describes it in a JL (Job Language) to generates a print job. If the OS used is Microsoft Windows, the output module used is a module called GDI (Graphic Device Interface).</p>
<p id="p-0073" num="0072">An electronic original writer <b>102</b> is an improved form of a device driver and is a software module provided to implement this document processing system. However, the electronic original writer <b>102</b> is not intended for a specific output device and converts output commands into a format which can be handled by a book editing application <b>104</b> and printer driver <b>106</b> described later. Any format may be used as the format resulting from conversion by the electronic original writer <b>102</b> (hereinafter referred to as an “electronic original format”) as long as it can describe a original in detail on a page-by-page basis. Among practical standard formats, Adobe Systems' PDF format or SVG format can be adopted as an electronic original format.</p>
<p id="p-0074" num="0073">To make the application <b>101</b> use the electronic original writer <b>102</b>, the electronic original writer <b>102</b> should be specified, before a print run, as a device driver for use to produce output. However, an electronic original file as created by the electronic original writer <b>102</b> is not properly formatted. Thus, it is the book editing application <b>104</b> that specifies the electronic original writer <b>102</b> as a device driver and application data is converted into an electronic original file under its direction. The book editing application <b>104</b> brings the new incomplete electronic original file generated by the electronic original writer <b>102</b> to completion to obtain such a properly formatted electronic original file as described later. Hereinafter, if this point needs to be identified clearly, the files created by the electronic original writer <b>102</b> will be referred to as electronic original files and the files formatted by the book editing application will be referred to as book files. Otherwise, document files, electronic original files, and book files generated by applications will all be referred to as document files (or document data).</p>
<p id="p-0075" num="0074">In this way, when the electronic original writer <b>102</b> is specified as a device driver and the general application <b>101</b> is instructed to print data, application data is converted into an electronic original made up of pages (hereinafter referred to as “logical pages” or “original pages”) defined by the application <b>101</b> and is stored as an electronic original file <b>103</b> in a storage medium such as a hard disk. Incidentally, the hard disk may be a local drive provided on the computer which implements the document processing system of this embodiment or may be a drive provided on a network if the computer is connected to the network.</p>
<p id="p-0076" num="0075">The book editing application <b>104</b> provides the user with capability to read and edit an electronic original file or book file <b>103</b>. However, it does not provide capability to edit contents of individual pages. Instead it provides capability to edit chapters and books (described later) made up of pages, which are the smallest units.</p>
<p id="p-0077" num="0076">To print the book file <b>103</b> edited by the book editing application <b>104</b>, the book editing application <b>104</b> starts an electronic original despooler <b>105</b>. The electronic original despooler <b>105</b> is a program module installed together with the book editing application in the computer and is used to output drawing data to a printer driver when printing a document (book file) which uses the book editing application. The electronic original despooler <b>105</b> reads a specified book file from the hard disk, generates an output command compatible with the output module of the OS to print pages in the format described in the book file, and outputs the output command to the output module (not shown). In so doing, a driver <b>106</b> of a printer <b>107</b> used as an output device is specified as a device driver. Using the specified printer driver <b>106</b> of the printer <b>107</b>, the output module converts the received output command into a device command which can be interpreted and executed by the printer <b>107</b>. The device command is transmitted to the printer <b>107</b>, which then prints images according to the command.</p>
<heading id="h-0008" level="1">Exemplary Hardware Configuration of the Document Processing System According to this Embodiment</heading>
<p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. 2</figref> is a diagram showing a hardware configuration of the document processing system according to this embodiment. In the figure, the host computer <b>100</b> comprises a CPU <b>201</b> which processes a document containing a mixture of graphics, images, characters, tables (including spreadsheets), etc. based on a document processing program and the like stored in a program ROM or external memory <b>211</b> in a ROM <b>203</b> and which collectively controls various devices connected to a system bus <b>204</b>. Also, the program ROM or external memory <b>211</b> in the ROM <b>203</b> stores an operating system program—which is a control program of the CPU <b>201</b>—and the like, a font ROM or the external memory <b>211</b> in the ROM <b>203</b> stores font data for use during the document processing, and a data ROM or the external memory <b>211</b> in the ROM <b>203</b> stores various data for use during the document processing and the like. A RAM <b>202</b> functions as a main memory, work area, and the like for the CPU <b>201</b>.</p>
<p id="p-0079" num="0078">A keyboard controller (KBC) <b>205</b> controls input from a keyboard <b>209</b> and pointing device (not shown). A CRT controller (CRTC) <b>206</b> controls display on a CRT display (CRT) <b>210</b>. Reference numeral <b>207</b> denotes a disk controller (DKC), which controls access to and from the hard disk (HD) and the external memory <b>211</b> such as a floppy disk (FD) that store a boot program, various applications, font data, user files, edited files, printer control command generating programs (hereinafter referred to as printer drivers), and the like. A printer controller (PRTC) <b>208</b> is connected to the printer <b>107</b> via a bidirectional interface (interface) <b>21</b> and controls communications with the printer <b>107</b>. An NC <b>212</b> is connected to a network and controls communications with other equipment.</p>
<p id="p-0080" num="0079">The CPU <b>201</b> rasterizes outline fonts in a display information RAM provided in the RAM <b>202</b> to enable WYSIWIG on the CRT <b>210</b>. Also, the CPU <b>201</b> opens various registered windows according to commands indicated by a mouse cursor or the like (not shown) on the CRT <b>210</b> and performs various types of data processing. When printing something, the user can open a print setting window and specify a printing method to the printer driver, including printer settings and selection of a print mode.</p>
<p id="p-0081" num="0080">The printer <b>107</b> is controlled by a CPU <b>312</b>. The printer CPU <b>312</b> outputs image signals as output information to a printer engine <b>317</b> connected to a system bus <b>315</b>, based on a control program and the like stored in a program ROM in a ROM <b>313</b> or a control program and the like stored in an external memory <b>314</b>. The program ROM in the ROM <b>313</b> stores a control program and the like for the CPU <b>312</b>. A font ROM in the ROM <b>313</b> stores font data and the like for use in generating the output information described above while a data ROM in the ROM <b>313</b> stores information and the like for use on the host computer in case the printer is not provided with an external memory <b>314</b> such as a hard disk.</p>
<p id="p-0082" num="0081">The CPU <b>312</b> can conduct communications with the host computer <b>100</b> via an input unit <b>318</b> and convey information and the like stored in the printer to the host computer <b>100</b>. A RAM <b>319</b> functions as a main memory, work area, and the like for the CPU <b>312</b>, and memory capacity can be expanded if an optional RAM is connected to an expansion port (not shown). The RAM <b>319</b> is used as an output information extraction area, environment data storage area, NVRAM, or the like. Access to the external memory <b>314</b> such as the hard disk (HD) or an IC card is controlled by a memory controller (MC) <b>20</b>. The external memory <b>314</b> is connected optionally and stores font data, emulation programs and form data. Reference numeral <b>321</b> denotes a control panel equipped with control switches, LED indicators, etc.</p>
<p id="p-0083" num="0082">Regarding the external memory <b>314</b> described above, more than one external memory containing programs for interpreting installed fonts, option cards, and different printer control languages may be connected. Furthermore, NVRAM (not shown) may be provided to store printer mode setting information received from the control panel <b>321</b>.</p>
<heading id="h-0009" level="1">Sample Format for Electronic Original Data</heading>
<p id="p-0084" num="0083">Before going into details of the book editing application <b>104</b>, a data format of a book file will be described. A book file has a three-level structure modeled after a paper-based book. The top level, which is modeled after a book, is called “book” and defines attributes related to the entire book. The middle level directly below the top level corresponds to the chapter of a book and called “chapter.” Attributes can be defined for each chapter. The bottom level, called “page,” corresponds to the pages defined by an application program. Also, attributes can be defined for each page. One book may contain two or more chapters and one chapter may contain two or more pages.</p>
<p id="p-0085" num="0084"><figref idref="DRAWINGS">FIG. 3</figref> is a diagram schematically showing a sample format for a book file. The book, chapters, and pages in the book file of this example are represented by corresponding nodes. One book file contained one book. The book and chapter, which are concepts used to define the structure of the book, contain defined attribute values and links to lower levels as their substance. The page has data on each page outputted by the application program, as its substance. Thus, the page contains the substance of the original page (original page data) and links to original page data in addition to its attribute values. Incidentally, a page printed out on a paper medium or the like may contain two or more original pages. This structure is not indicated by a link, but it is indicated as attributes at the book, chapter, and page levels.</p>
<p id="p-0086" num="0085">In <figref idref="DRAWINGS">FIG. 3</figref>, the book file does not need to be a complete book, and thus a “book” is generalized as a “document.”</p>
<p id="p-0087" num="0086">At the top level is document information <b>401</b>, which is roughly divided into three parts <b>402</b>, <b>403</b>, and <b>404</b>. Document control information <b>402</b> contains information such as a path name of the document file in a file system. Document setting information <b>403</b>, which corresponds to book attributes, contains layout information such as page layout and function setting information about printers such as stapling. A chapter information list <b>404</b> contains a list of chapters composing the document. The list contains chapter information <b>405</b>.</p>
<p id="p-0088" num="0087">The chapter information <b>405</b> is also roughly divided into three parts <b>406</b>, <b>407</b>, and <b>408</b>. Chapter control information <b>406</b> contains information such as a chapter name. Chapter setting information <b>407</b>, which corresponds to chapter attributes, contains page layout, stapling, and other information unique to a given chapter. As setting information is retained for each chapter, it is possible to create a document with a complex layout consisting, for example, of a 2-up layout for the first chapter and a 4-up layout for the other chapters. A page information list <b>408</b> contains a list of original pages composing a given chapter. The page information list <b>408</b> points to page information data <b>409</b>.</p>
<p id="p-0089" num="0088">The page information data <b>409</b> is also roughly divided into three parts <b>410</b>, <b>411</b>, and <b>412</b>. Page control information <b>410</b> contains information such as a page number to be displayed on the tree. Page setting information <b>411</b>, which corresponds to original page attributes, contains information such as a rotation angle and placement location of a given page. Page link information <b>412</b> constitutes original data which corresponds to the page. In this example, the page information <b>409</b> contains only link information <b>412</b> instead of containing original data directly and the actual original data is retained by a page data list <b>413</b>.</p>
<p id="p-0090" num="0089"><figref idref="DRAWINGS">FIGS. 4A and 4B</figref> are diagrams showing a list of exemplary book attributes (document setting information <b>403</b>). Regarding items which can be defined overlapping with those at a lower level, priority is normally given to the attribute values at the lowest level. As to the items contained only in book attributes, the values defined for book attributes are effective throughout the entire book. However, regarding the items which overlap with those at a lower level, their values serve as defaults for use when no appropriate values are defined at the lower level. In this example, however, the user can select whether to give priority to attributes at a lower level, as described later. Incidentally, each item in the figure does not necessarily correspond to one concrete item, but they may include two or more items.</p>
<p id="p-0091" num="0090">There are six items unique to book attributes: namely, Print Method, Binding Detail, Front/Back Cover, Tab Sheet, Slip Sheet, and Chapter Break. These items are defined over the entire book. For the Print Method attribute, three values are available: Simplex Printing, Duplex Printing, and Bind-ready Printing. The bind-ready printing involves bundling a specified number of sheets and folding the bundle in half so that the bundle can be bound together into a book after printing. The Binding Detail attribute allows the user to specify a spread direction, the number of sheets in a bundle, etc. when Bind-ready Printing has been specified.</p>
<p id="p-0092" num="0091">The Front/Back Cover attribute includes specifications as to whether to add sheets for use as front and back covers and what to print on the added sheets when printing an electronic original file to be compiled as a book. The Tab Sheet attribute includes specifications as to whether to insert tab sheets provided separately in the printer, as chapter breaks, and what to print on the tabs. This attribute is available when the printer used is equipped with an inserter which inserts paper provided separately from the printing paper into a desired position or when two or more paper feed cassettes can be used. This also applies to the Slip Sheet attribute.</p>
<p id="p-0093" num="0092">The Slip Sheet attribute includes specification as to whether to insert paper supplied from an inserter or paper feed cassette, as chapter breaks. It also includes specification of a paper feed source if slip sheets are to be inserted.</p>
<p id="p-0094" num="0093">The Chapter Break attribute includes specification as to whether to use a new sheet, use a new print page, or do nothing at chapter breaks. In the case of simplex printing, the use of a new sheet and the use of a new print page mean the same thing. In the case of duplex printing, if “use new sheet” is specified, two consecutive chapters will never be printed on a single sheet of paper, but if “use new print page” is specified, two consecutive chapters may be printed on the front and back sides of a single sheet.</p>
<p id="p-0095" num="0094"><figref idref="DRAWINGS">FIG. 5</figref> is a diagram showing a list of exemplary chapter attributes (chapter setting information <b>407</b>) while <figref idref="DRAWINGS">FIG. 6</figref> is a diagram showing a list of exemplary page attributes (page setting information <b>411</b>). The relationship between the chapter attributes and page attributes is analogous to the relationship between the book attributes and lower-level attributes.</p>
<p id="p-0096" num="0095">Regarding the chapter attributes, there is no item unique to chapters, and all the chapter attributes overlap with book attributes. If chapter attribute definitions and book attribute definitions conflict, priority is normally given to the chapter attributes. In this example, however, the user can select whether to give priority to attributes at a lower level, as described later.</p>
<p id="p-0097" num="0096">There are five items common only to the book attributes and chapter attributes: Paper Size, Paper Orientation, N-up Printing, Enlarge/Reduce, and Paper Ejection Method. Of these items, the N-up Printing attribute specifies the number of original pages to be included in one print page. Valid values include 1×1, 1×2, 2×2, 3×3, 4×4, etc. The Paper Ejection Method attribute specifies whether to staple ejected paper. The availability of this attribute depends on whether the printer used is provided with a stapling capability.</p>
<p id="p-0098" num="0097">Items unique to page attributes include, Page Rotation, Zoom, Placement Location, Annotation, Page Split, etc. The Page Rotation attribute specifies the rotation angle for use in laying out original pages on a print page. The Zoom attribute specifies a relative magnification of original pages. The relative magnification is specified with the size of a virtual logical page area taken as 100%. The virtual logical page area is the area taken up by a single original page when original pages are laid out according to N-up printing specification or the like. For example, if 1×1 is specified for the N-up Printing attribute, the virtual logical page area is equivalent to one print page, and if 1×2 is specified, it corresponds to the area obtained by reducing each side of one print page to approximately 70%.</p>
<p id="p-0099" num="0098">Attributes common to the book, chapter, and page include a Watermark attribute and Header/Footer attribute. The watermark is an image or character string specified separately and printed over data created by an application. The header and footer are watermarks printed in the top and bottom margins of every page, respectively. A page number, date, etc. can be specified for the header and footer using a variable. The items which can be specified as Watermark and Header/Footer attributes are common between the chapter and page, but they differ from those of the book. At the book level, the user can specify contents of watermarks and headers/footers as well as how to print the watermarks and headers/footers throughout the entire book. On the other hand, at the chapter and page levels, the user can specify whether to print the watermarks and headers/footers specified at the book level.</p>
<heading id="h-0010" level="1">Exemplary Procedures for Operating the Document Processing System According to this Embodiment</heading>
<p id="p-0100" num="0099">(Exemplary Procedures for Generating a Book File)</p>
<p id="p-0101" num="0100">A book file has the structure and content described above. Next, description will be given about procedures for creating a book file using the book editing application <b>104</b> and electronic original writer <b>102</b>. A book file is created as part of book file edit operations carried out using the book editing application <b>104</b>.</p>
<p id="p-0102" num="0101"><figref idref="DRAWINGS">FIG. 7</figref> is a flowchart showing procedures for opening a book file on the book editing application <b>104</b>.</p>
<p id="p-0103" num="0102">First, it is judged whether the book about to be opened is a new one to be created or an existing one (Step S<b>701</b>). If it is a new one, a book file without a chapter is newly created (Step S<b>702</b>). In the example of <figref idref="DRAWINGS">FIG. 3</figref>, the book file created newly has only a book node <b>401</b>, and does not have a link to a chapter node. Regarding book attributes, a set of attributes prepared in advance for new books are provided. Then, a user interface (UI) screen for editing a new book file is brought up (Step S<b>704</b>). <figref idref="DRAWINGS">FIG. 8</figref> shows an example of the UI screen brought up when a new book file is created. In this case, since the book file has no substantive content, the UI screen <b>800</b> displays nothing.</p>
<p id="p-0104" num="0103">On the other hand, if the specified book file already exists, it is opened (Step S<b>703</b>). Also, a user interface (UI) screen is displayed according to the structure, attributes, and content of the book file. <figref idref="DRAWINGS">FIG. 9</figref> shows an example of such a UI screen. The UI screen <b>900</b> contains a tree section <b>901</b> which presents the structure of the book and a preview section <b>902</b> which shows how the book will look after printing. The tree section <b>901</b> presents the chapters contained in the book and the pages contained in each chapter using a tree structure such as the one shown in <figref idref="DRAWINGS">FIG. 3</figref>. The pages displayed in the tree section <b>901</b> are original pages. The preview section <b>902</b> displays reduced views of print pages. The order in which they are displayed reflects the structure of the book.</p>
<p id="p-0105" num="0104">Application data converted into an electronic original file by the electronic original writer <b>102</b> can be added as a new chapter to the opened book file. This function is called an electronic original file import function. By importing an electronic original file, a book file newly created according to the procedures in <figref idref="DRAWINGS">FIG. 7</figref> is given substance. This function is started when application data is dragged and dropped in the screen in <figref idref="DRAWINGS">FIG. 8</figref> or <b>9</b>.</p>
<p id="p-0106" num="0105"><figref idref="DRAWINGS">FIG. 10</figref> is a flowchart showing exemplary procedures for importing an electronic original file.</p>
<p id="p-0107" num="0106">First, the application program which has created the specified application data is started and is made to convert the application data into electronic original data using the electronic original writer <b>102</b> as a device driver (Step S<b>801</b>). When the conversion is completed, it is judged whether the converted data is image data (Step S<b>802</b>). Under a Windows OS, this judgment can be made based on the file extension of the application data as follows. For example, the extension “bmp” indicates Windows bitmap data, “jpg” indicates JPEG-compressed image data, and “tiff” indicates image data in tiff format. In the case of such image data, an electronic original file can be generated directly from image data without starting an application in S<b>801</b>, and thus the process of S<b>801</b> can be omitted.</p>
<p id="p-0108" num="0107">If the converted data is not image data, the electronic original file generated in Step S<b>801</b> is added as a new chapter to the currently open book file (Step S<b>803</b>). Normally, values of chapter attributes are copied from corresponding book attributes, or set to default values in the case of chapter attributes which do not have corresponding book attributes. In this example, however, the user can select whether to give priority to attributes at a lower level, as described later.</p>
<p id="p-0109" num="0108">If the converted data is image data, no new chapter is added as a rule, but the pages contained in the electronic original file generated in Step S<b>801</b> are added to a specified chapter (Step S<b>804</b>). However, in the case of a new book file, a new chapter is created and the pages of the electronic original file is added as pages belonging to that chapter. Normally, page attributes inherit values from corresponding attributes at an upper level, or from attributes defined in application data if such attributes have been taken over by an electronic original file. For example, if N-up printing has been specified in application data, the value of this attribute is inherited. This is how a new book file is created or new chapter is added. In this example, however, the user can select whether to give priority to attributes at a lower level, as described later.</p>
<p id="p-0110" num="0109"><figref idref="DRAWINGS">FIG. 11</figref> is a flowchart showing procedures for generating an electronic original file using the electronic original writer <b>102</b> in Step <b>801</b> in <figref idref="DRAWINGS">FIG. 10</figref>.</p>
<p id="p-0111" num="0110">First, a new electronic original file is created and opened (Step S<b>901</b>). The application program which corresponds to the specified application data is started and is made to send an output command to the output module of the OS using the electronic original writer <b>102</b> as a device driver. The output module converts the received output command into data in electronic original format using the electronic original writer and outputs the resulting data (Step S<b>902</b>) to the electronic original file opened in Step S<b>901</b>. It is judged whether all the specified data has been converted (Step S<b>903</b>). If it has been, the electronic original file is closed (Step S<b>904</b>). The electronic original file generated by the electronic original writer <b>102</b> contains substance of the electronic page data shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0112" num="0111">(Examples of Book File Edit Operations)</p>
<p id="p-0113" num="0112">As described above, a book file can be created from application data. The following edit operations can be performed on the chapters and pages of the generated book file.
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0113">(1) Add Newly</li>
        <li id="ul0002-0002" num="0114">(2) Delete</li>
        <li id="ul0002-0003" num="0115">(3) Copy</li>
        <li id="ul0002-0004" num="0116">(4) Cut</li>
        <li id="ul0002-0005" num="0117">(5) Paste</li>
        <li id="ul0002-0006" num="0118">(6) Move</li>
        <li id="ul0002-0007" num="0119">(7) Change Chapter Name</li>
        <li id="ul0002-0008" num="0120">(8) Reassign Page Number/Name</li>
        <li id="ul0002-0009" num="0121">(9) Insert Cover</li>
        <li id="ul0002-0010" num="0122">(10) Insert Slip Sheet</li>
        <li id="ul0002-0011" num="0123">(11) Insert Tab Sheets</li>
        <li id="ul0002-0012" num="0124">(12) Lay Out Original Page</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0114" num="0125">Besides, an operation for canceling an edit operation and operation for undoing a cancel operation are available. These edit functions allow the user, for example, to merge book files, rearrange chapters or pages in a book file, delete chapters or pages from a book file, change a original page layout, insert slip sheets or tab sheets, and so on. Results of these operations are reflected in attributes shown in <figref idref="DRAWINGS">FIGS. 4 to 6</figref> or the structure of the book file. For example, if an Add Newly operation of a blank page is performed, a blank page is inserted in a specified location. Then, the blank page is treated as a original page. Also, if the layout of original pages is changed, the changes are reflected in the Print Method, N-Up Printing, Front/Back Cover, Tab Sheet, Slip Sheet, and Chapter Break attributes.</p>
<p id="p-0115" num="0126">Display and operations during editing in this example will be described in detail below.</p>
<p id="p-0116" num="0127">(Example of Book File Output)</p>
<p id="p-0117" num="0128">The final aim of the book file created and edited in the manner described above is printout. When the user selects File menu on the UI screen <b>900</b> of the book editing application shown in <figref idref="DRAWINGS">FIG. 9</figref> and then selects Print from the File menu, the book is printed using a specified output device as follows. First, the book editing application <b>104</b> creates a job ticket on the currently open book file and passes it to the electronic original despooler <b>105</b>. The electronic original despooler <b>105</b> converts the job ticket into an output command of the OS, for example, into a Windows GDI command, and sends it to an output module, for example, to GDI. The output module generates a command compatible with the device using the specified printer driver <b>106</b> and sends the device the generated command.</p>
<p id="p-0118" num="0129">A graphic engine of the output module (not shown) loads the appropriate printer driver <b>106</b> for the given printer into the RAM <b>202</b> from the external memory <b>211</b> and sets the output to the printer driver <b>106</b>. The output module converts the received GDI (Graphic Device Interface) function into a DDI (Device Driver Interface) function and outputs the DDI function to the printer driver <b>106</b>. The printer driver <b>106</b> converts the DDI function received from the output module into a control command recognizable by the printer, for example, into a PDL (Page Description Language) command. The resulting printer control command is output to the printer <b>107</b> via a system spooler loaded into the RAM <b>202</b> by the OS and then thorough the interface <b>21</b>.</p>
<p id="p-0119" num="0130">The job ticket described above is data about a structure made up of original pages, the smallest unit. The job ticket structure defines the layout of original pages on paper. One job ticket is issued per job. At the top level is a node called document, which defines the attributes of the entire document such as Simplex/Duplex. Under the document node are paper nodes, which contain attributes that specify an identifier of paper to be used, a paper source of a printer, etc. Under each paper node are sheet nodes, which represent sheets of the given paper to be printed. A sheet corresponds to a single sheet of paper. Under each sheet are print pages (physical page). In the case of simplex printing, one physical page belongs to one sheet while in the case of duplex printing, two physical pages belong to one sheet. Under each physical page are original pages to be laid out on the physical page. The attributes of physical pages include Original Page Layout.</p>
<p id="p-0120" num="0131">A sample data structure of a job ticket is shown in <figref idref="DRAWINGS">FIG. 12</figref>. In print data, a document consists of a set of sheets of paper. Each sheet of paper consists of two sides: the front and back sides. Each side has an area (physical page) for laying out a original. Each physical page is made up of original pages, which are the smallest units. Reference numeral <b>1101</b> denotes data which corresponds to a document. This data consists of data related to the entire document, and a list of paper information about the paper composing the document. The paper information <b>1102</b> consists of information such as paper size, and a list of side information about the sides placed on the paper. The side information <b>1103</b> consists of data unique to the sides, and a list of physical pages placed on the sides. Physical page information <b>1104</b> consists of information about the size of physical pages, headers, footers, etc.; and a list of original pages composing physical pages.</p>
<p id="p-0121" num="0132">The electronic original despooler <b>105</b> converts the job ticket into an output command for the output module.</p>
<p id="p-0122" num="0133">(Sample Content of Preview Display)</p>
<p id="p-0123" num="0134">As described earlier, when a book file is opened by the book editing application, the user interface screen <b>900</b> shown in <figref idref="DRAWINGS">FIG. 9</figref> appears. The tree section <b>901</b> displays a tree which represents the structure of the open book. The preview section <b>902</b> provides any of three display methods according to user's specification. The first method is a mode called original view for displaying the original as it is. It displays the original pages which belong to the open book in a reduced size. Layout is not reflected in the preview display. The second method is a print view mode, which displays original pages in the preview section <b>902</b>, reflecting the layout of the original pages. The third method is a simplified print view mode, which reflects only the layout in the preview display, and not the content of original pages.</p>
<heading id="h-0011" level="1">Exemplary Configuration of Another Document Processing System</heading>
<p id="p-0124" num="0135">The document processing system according to the above embodiment is a stand-alone type. A server/client system, an extended version of the above system, also creates and edit book files according to similar configuration and procedures. However, book files and printing processes are managed by a server.</p>
<p id="p-0125" num="0136"><figref idref="DRAWINGS">FIG. 13</figref> is a block diagram showing a configuration of a server/client document processing system.</p>
<p id="p-0126" num="0137">A client document processing system consists of a DOMS (Document Output Management Service) driver <b>109</b> which is a client module, a DOMS print service module <b>110</b>, and a DS (Document Service) client module <b>108</b> in addition to a stand-alone system. The client document processing system <b>1200</b> is connected with a document management server <b>1201</b>, a centralized print management server <b>1202</b>, and a print server <b>1203</b>. These servers are normally connected to the client document processing system via a network, but if they function as clients at the same time, they are connected to the client document processing system by means of interprocess communication which simulates internetwork communication. Incidentally, although both document management server <b>1201</b> and centralized print management server <b>1202</b> are connected to the client in <figref idref="DRAWINGS">FIG. 13</figref>, there may be a case in which only one of them exists on a network. When the document management server is connected, a document management server/client module system <b>1201</b>SC which includes a client module of the document management server will be added to the stand-alone document management system, and when the centralized print management server <b>1202</b> is connected, a document management server/client module system <b>1202</b>SC which includes a client module of the print management server will be added.</p>
<p id="p-0127" num="0138">The document management server <b>1201</b> stores the book files created and edited by the book editing application <b>104</b>. The book files managed by the document management server <b>1201</b> are stored in a database <b>1211</b> of the document management server <b>1201</b> instead of or in addition to local HDs of client PCs. Book files are saved and called to/from the document management server <b>1201</b> by the book editing application <b>104</b> via the DS client <b>108</b> and a DS core <b>1212</b>.</p>
<p id="p-0128" num="0139">The centralized print management server <b>1202</b> controls the printing of the book files stored in the client document processing system <b>1200</b> or in the document management server <b>1201</b>. A print request from a client is sent to a DOMS WG server module <b>1221</b> of the centralized print management server <b>1202</b> via the DOMS driver <b>109</b> and DOMS print service module <b>110</b>. The centralized print management server <b>1202</b> passes electronic original data to the electronic original despooler <b>105</b> via the DOMS print service module <b>110</b> of the client when printing the data on the client's printer, or sends the electronic original data to a DOMS print service module <b>1231</b> of the print server <b>1203</b> when printing the data on the print server <b>1203</b>. The centralized print management server runs security checks, for example, on qualification of the user who requested a stored book file to be printed, and keeps a log of printing processes. Thus, the document processing system may be implemented both as stand-alone and client/server systems.</p>
<heading id="h-0012" level="1">Examples of Edit Operations in Document Processing System According to this Embodiment</heading>
<p id="p-0129" num="0140"><figref idref="DRAWINGS">FIG. 9</figref> shows an operating screen of the book editing application <b>104</b>. The book editing application allows function setting of a printer such as stapling as well as edit operations such as alteration of page order, duplication, and deletion. Also, it allows a specified printer to be used for printing. The left area in <figref idref="DRAWINGS">FIG. 9</figref> presents a tree view which shows the structure of a document. The document consists of a set of chapters and each chapter consists of a set of original pages. The right area in <figref idref="DRAWINGS">FIG. 9</figref> presents print previews of individual pages.</p>
<heading id="h-0013" level="1">Example of Attribute Setting in Document Processing System According to this Embodiment</heading>
<p id="p-0130" num="0141"><figref idref="DRAWINGS">FIG. 14</figref> shows a “Document Detail Setting” window <b>1400</b> of the book editing application <b>104</b>.</p>
<p id="p-0131" num="0142">This window allows the user to display the “document setting information <b>403</b>” and make settings for it. This window is invoked from a “Detailed Setting for Document” menu under a Print Form menu or from a “Detailed Setting for Document” button on the toolbar in the operating screen of the application in <figref idref="DRAWINGS">FIG. 9</figref>. The “Document Detail Setting” window is used to make settings for attributes which affect the entire document. It consists of four sheets: Page Setup, Decoration, Edit, and Paper Source. <figref idref="DRAWINGS">FIG. 14</figref> shows the window with the Page Setup sheet displayed. The Page Setup sheet allows the user mainly to make layout settings and specify settings such as paper size, paper orientation, and N-up printing. Also, the window contains check box controls <b>1401</b> and <b>1402</b> related to zooming.</p>
<p id="p-0132" num="0143"><figref idref="DRAWINGS">FIG. 15</figref> shows a “Chapter Detail Setting” window <b>1500</b> of the book editing application <b>104</b>.</p>
<p id="p-0133" num="0144">This window allows the user to display the “chapter setting information <b>407</b>” and make settings for it. This window is invoked from a “Detailed Setting for Chapter” menu under a Print Form menu or from a “Detailed Setting for Chapter” button on the toolbar in the operating screen of the application in <figref idref="DRAWINGS">FIG. 9</figref>. The “Chapter Detail Setting” window is used to make settings for attributes unique to each chapter. It consists of four sheets: Page Setup, Decoration, Edit, and Paper Source. <figref idref="DRAWINGS">FIG. 15</figref> shows the window with the Page Setup sheet displayed. The Page Setup sheet allows the user mainly to make layout settings unique to each chapter and specify settings such as paper size, paper orientation, and N-up printing. For the items which are contained in both “Document Detail Setting” and “Chapter Detail Setting” windows, “Follow Book Attribute” check box controls <b>1501</b>, <b>1502</b>, and <b>1503</b> are provided. Regarding the item groups whose check boxes are marked, the set values for the document also apply to the chapter. A case in which check boxes are deselected is shown in <figref idref="DRAWINGS">FIG. 16</figref>. There are two cases in which settings are made independently at the chapter level: a case in which there are items unique to chapters and a case in which set values different from those at the upper, book level are retained at the chapter level.</p>
<p id="p-0134" num="0145"><figref idref="DRAWINGS">FIG. 16</figref> shows the “Chapter Detail Setting” window with the check box controls <b>1501</b> and <b>1502</b> deselected. In this case, even if a paper size other than A4 is used for the overall document, the A4 paper size is used for the pages composing this chapter. Also, regarding layout, even if 1 Page per Sheet is specified for the overall book, 4 Pages per Sheet is specified for this chapter. Regarding “MS Arrange,” since the check box has been selected, set values on the upper, document level are used as set values for this chapter.</p>
<p id="p-0135" num="0146"><figref idref="DRAWINGS">FIG. 17</figref> shows a “Page Detail Setting” window <b>1700</b> of the book editing application <b>104</b>.</p>
<p id="p-0136" num="0147">This window allows the user to display the “page setting information <b>411</b>” and make settings for it. This window is invoked from a “Detailed Setting for Page” menu under a Print Form menu or from a “Detailed Setting for Page” button on the toolbar in the operating screen of the application in <figref idref="DRAWINGS">FIG. 9</figref>. The “Page Detail Setting” window is used to make settings for attributes unique to each page. It consists of two sheets: Page Setup and Edit. <figref idref="DRAWINGS">FIG. 17</figref> shows the window with the Page Setup sheet displayed. The Page Setup sheet allows the user mainly to make layout settings unique to each page and specify settings such as a rotation angle and magnification for use in laying out the original page. For the items which are contained in both “Chapter Detail Setting” and “Page Detail Setting” windows, a “Follow Chapter Attribute” check box control <b>1701</b> is provided. Regarding the item groups whose check boxes are marked, the set values for the chapter also apply to the page. A case in which the check box is deselected is shown in <figref idref="DRAWINGS">FIG. 18</figref>.</p>
<p id="p-0137" num="0148"><figref idref="DRAWINGS">FIG. 18</figref> shows the “Page Detail Setting” window after the Page Rotation setting has been changed on the window in <figref idref="DRAWINGS">FIG. 17</figref>. The setting of the control <b>1801</b> indicates that the original page is to be rotated so as to lie on its left side. This item is not provided with a “Follow Chapter Attribute” check box, meaning that the same item does not exist at the chapter or document level. Thus, the setting of this item in this window always applies to this page. Regarding items such as “Arrange” whose check box <b>1701</b> is marked, the same item also exists at the chapter level, and thus the set value for the chapter is adopted as the set value for the page. If the corresponding item “Arrange” at the chapter level has its “Follow Book Attribute” checked, the set value on the higher, book level is used as the set value for the chapter, and consequently the set value on the book level applies to the page. If the corresponding item on the chapter level is unchecked, the chapter has a unique set value, which applies to the page.</p>
<p id="p-0138" num="0149">Incidentally, information about the check box controls set on the setting screens described above may be retained in a dedicated area, but preferably it is retained as one of attributes in the appropriate setting information shown in <figref idref="DRAWINGS">FIG. 3</figref>. In the latter case, an area for retaining check box control information will be added to <figref idref="DRAWINGS">FIGS. 5 and 6</figref>.</p>
<heading id="h-0014" level="1">Display Example of Document Editing in Document Processing System According to this Embodiment</heading>
<p id="p-0139" num="0150"><figref idref="DRAWINGS">FIG. 19</figref> shows the application's display format used when set values at an upper level is not used for items which overlap with those at the upper level, i.e., when the check box control <b>1501</b> or <b>1701</b> is deselected.</p>
<p id="p-0140" num="0151">In the example of <figref idref="DRAWINGS">FIG. 19</figref>, a document consists of two chapters and each chapter consists of nine pages. This is a display example which results when 4-up (also known as 4-in-1) is specified for the layout of the first chapter and rotation is specified for the first page of the second chapter (tenth page of the document). It can be seen that four originals each are laid out on pages 1 to 3 and that the character “A,” the data on page 4, is rotated. Now referring to a display format which results when a setting unique to a chapter or page is specified in the tree view, the icon <b>1901</b> changes for the first chapter indicating that an independent setting has been made for this chapter and the icon <b>1902</b> changes for the first page of the second chapter indicating that an independent setting has been made for this page.</p>
<p id="p-0141" num="0152"><figref idref="DRAWINGS">FIGS. 20 and 21</figref> are diagrams illustrating operations of inserting an entire file or copying and pasting part of a file in this system.</p>
<p id="p-0142" num="0153"><figref idref="DRAWINGS">FIG. 20A</figref> shows Document Awhile <figref idref="DRAWINGS">FIG. 20B</figref> shows Document B. Consider a case where Chapter C 2001 is copied and pasted from Document B to Document A. Suppose Document A has a 2-up layout while Document B has a 4-up layout.</p>
<p id="p-0143" num="0154"><figref idref="DRAWINGS">FIGS. 20A to 20D</figref> show examples in which no setting unique to Chapter C has been made. When pasting Chapter C, there are two possible cases:
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0155">1. Chapter C conforms to the settings of the document to which it belongs. In this case, as can be seen from 2002 in the figure, Chapter C is laid out according to the 2-up setting of Document A, the destination of pasting (<figref idref="DRAWINGS">FIG. 20C</figref>).</li>
    <li id="ul0003-0002" num="0156">2. Chapter C retains the 4-up setting of the source Document B. In this case, as can be seen from <b>2003</b> in the figure, Chapter C is laid out according to its original 4-up setting, independent of the destination document (<figref idref="DRAWINGS">FIG. 20D</figref>).</li>
</ul>
</p>
<p id="p-0144" num="0157"><figref idref="DRAWINGS">FIGS. 21A to 21E</figref> show examples in which settings unique to Chapter C have been made. As shown in <figref idref="DRAWINGS">FIG. 21B</figref>, it is assumed that <b>1</b>-up setting has been specified for Chapter C 2101. When pasting Chapter C to Document A, there are three possible cases:
<ul id="ul0004" list-style="none">
    <li id="ul0004-0001" num="0158">1. Chapter C 2102 takes over the 2-up setting of Document A (<figref idref="DRAWINGS">FIG. 21C</figref>)</li>
    <li id="ul0004-0002" num="0159">2. Chapter C 2103 retains its original 1-up setting even after it is placed in Document A (<figref idref="DRAWINGS">FIG. 21D</figref>).</li>
    <li id="ul0004-0003" num="0160">3. Chapter C 2104 inherits and retains the 4-up setting of the source Document B. In this case, Chapter C is laid out according to the 4-up setting, regardless of the 2-up setting of Document A (<figref idref="DRAWINGS">FIG. 21E</figref>).</li>
</ul>
</p>
<p id="p-0145" num="0161">However, it is hardly conceivable that the third case will be used normally because it is confusing to retain the invisible setting of Document B.</p>
<heading id="h-0015" level="1">Exemplary Procedures for Document Editing in the Document Processing System According to this Embodiment</heading>
<p id="p-0146" num="0162">Next, description will be given about a process flow for inserting an entire file or copying and pasting part of a file.</p>
<p id="p-0147" num="0163">(Copying Procedures)</p>
<p id="p-0148" num="0164"><figref idref="DRAWINGS">FIG. 22</figref> is a flowchart outlining a copying process in a copy-and-paste operation. For a copy-and-paste operation, two methods are available: one involves determining a format before copying, and the other involves copying as much information as possible and selecting a format before pasting. The latter method is used in this example. To increase the selection of pasting formats, this method copies as much data as possible except data unnecessary for pasting. By copying the document structure shown in <figref idref="DRAWINGS">FIG. 3</figref> almost in its entirety with its hierarchical structure retained, this method offers a wide choice during pasting.</p>
<p id="p-0149" num="0165">First, in Step S<b>1401</b>, document information <b>401</b> about the source document is copied. It is more efficient not to copy the file name and other unnecessary data. Next, the flow goes to Step S<b>1402</b>, where necessary chapters are added to the chapter list <b>404</b>. When a document file is added, all the chapters are added. In the case of Copy &amp; Paste or Drag &amp; Drop with the mouse, selected chapters are added. If chapters are selected, all the selected chapters are added, and if a page is selected, the chapter which contains the selected page is added. Then, the flow goes to Step S<b>1403</b>, where chapter information about the chapters added in Step S<b>1402</b> are copied from the corresponding chapters of the source document. Again, it is possible to increase efficiency by avoiding to copy unnecessary information. Next, the flow goes to Step S<b>1404</b>, where the pages composing the chapters are added to a page list in the chapter information copied in Step S<b>1402</b>. Again, it is sufficient to add only necessary pages. Next, the flow goes to Step S<b>1405</b>, where page information about the added pages are copied from the source document.</p>
<p id="p-0150" num="0166">(Pasting Procedures)</p>
<p id="p-0151" num="0167"><figref idref="DRAWINGS">FIG. 23</figref> is a flowchart showing a process of pasting an entire document (insertion of a document).</p>
<p id="p-0152" num="0168">First, it is judged in Step S<b>1501</b> whether to transfer the settings of the document at the top level to settings of its lower-level components, chapters. If data is to be pasted in the format shown in <figref idref="DRAWINGS">FIG. 21E</figref>, the settings of the source documents are copied to chapter settings. If it is judged that document settings will not be transferred to chapter settings, there is no need to transfer the upper-level settings to the lower level, and thus the flow goes to Step S<b>1510</b>, in which the copied data is pasted directly. If it is judged in Step S<b>1501</b> that document settings will be transferred to chapter settings, the flow goes to Step S<b>1502</b>. In Step S<b>1502</b>, to see whether an end-of-loop condition has been met, it is judged whether all the copied chapters have been processed. If all the chapters have been processed, the flow goes to Step S<b>1510</b>, in which the processed data are pasted. If it is judged in Step S<b>1502</b> that not all the chapters have been processed, the flow goes to Step S<b>1503</b>.</p>
<p id="p-0153" num="0169">In Step S<b>1503</b>, a chapter yet to be processed is handled. Since the chapter list has been copied in <figref idref="DRAWINGS">FIG. 22</figref>, the chapters can be processed in sequence, starting at the top of the list. Next, the flow goes to Step S<b>1504</b>, where it is judged whether all items for the given chapter have been processed. If all the items have been processed, the flow returns to Step S<b>1502</b> to proceed with the next chapter. If it is judged in Step S<b>1504</b> that there are items yet to be processed, the flow goes to Step S<b>1505</b>, where an item yet to be processed is handled. Then, the flow goes to Step S<b>1506</b>, where it is determined, concerning the item processed in Step S<b>1505</b>, whether to save set values unique to the chapter, conform to the upper-level settings of the source document, or conform to the settings of the destination document.</p>
<p id="p-0154" num="0170">If it is judged in Step S<b>1506</b> that set values unique to the chapter will be saved or if there is no corresponding item at the upper, document level, the flow goes to Step S<b>1507</b> and the values unique to the chapter are retained. If it is determined in Step S<b>1506</b> that the upper-level settings of the source document will be followed, the flow goes to Step S<b>1508</b>, where the chapter settings are overwritten with the copied set values of the corresponding item at the upper level. If it is determined in Step S<b>1506</b> that the set values of the destination document will be followed, the flow goes to Step S<b>1509</b>, where the set values of the chapters are changed to the set values at the upper level of the destination document. When any of the steps—Step S<b>1507</b>, Step S<b>1508</b>, or Step S<b>1509</b>—is finished, the flow returns to Step S<b>1504</b> and proceeds with processing of the next item.</p>
<p id="p-0155" num="0171"><figref idref="DRAWINGS">FIG. 24</figref> is a flowchart showing a process of pasting chapters.</p>
<p id="p-0156" num="0172">In Step S<b>1601</b>, it is judged whether the source document and destination document are identical. If it is judged that the copy and paste operations will be carried out within the same document, there is no need to transfer the upper-level settings to the lower level, and thus the flow goes to Step S<b>1610</b>, in which the copied data is pasted directly. If it is judged in Step S<b>1601</b> that chapters will be inserted in a different document, the flow goes to Step S<b>1602</b>. In Step S<b>1602</b>, to see whether an end-of-loop condition has been met, it is judged whether all the copied chapters have been processed. If all the chapters have been processed, the flow goes to Step S<b>1610</b>, in which the processed data are pasted. If it is judged in Step S<b>1602</b> that not all the chapters have been processed, the flow goes to Step S<b>1603</b>.</p>
<p id="p-0157" num="0173">In Step S<b>1603</b>, a chapter yet to be processed is handled. Since the chapter list has been copied in the example described with reference to <figref idref="DRAWINGS">FIG. 22</figref>, the chapters can be processed in sequence, starting at the top of the list. Next, the flow goes to Step S<b>1604</b>, where it is judged whether all items for the given chapter have been processed. If all the items have been processed, the flow returns to Step S<b>1602</b> to proceed with the next chapter. If it is judged in Step S<b>1604</b> that there are items yet to be processed, the flow goes to Step S<b>1605</b>, where an item yet to be processed is handled. Then, the flow goes to Step S<b>1606</b>, where it is determined, concerning the item processed in Step S<b>1605</b>, whether to save set values unique to the chapter, conform to the upper-level settings of the source document, or conform to the settings of the destination document.</p>
<p id="p-0158" num="0174">If it is judged in Step S<b>1606</b> that set values unique to the chapter will be saved or if there is no corresponding item at the upper, document level, the flow goes to Step S<b>1607</b> and the values unique to the chapter are retained. If it is determined in Step S<b>1606</b> that the upper-level settings of the source document will be followed, the flow goes to Step S<b>1608</b>, where the chapter settings are overwritten with the copied set values of the corresponding item at the upper level. If it is determined in Step S<b>1606</b> that the set values of the destination document will be followed, the flow goes to Step S<b>1609</b>, where the set values of the chapters are changed to the set values at the upper level of the destination document. When any of the steps—Step S<b>1607</b>, Step S<b>1608</b>, or Step S<b>1609</b>—is finished, the flow returns to Step S<b>1604</b> and proceeds with processing of the next item.</p>
<p id="p-0159" num="0175"><figref idref="DRAWINGS">FIG. 25</figref> is a flowchart showing a process of pasting pages. Even if an entire chapter is copied, the method shown in this example can be used to insert individual pages contained in the chapter rather than inserting the entire chapter.</p>
<p id="p-0160" num="0176">In Step S<b>1701</b>, it is judged whether the source chapter and destination chapter are identical. If it is judged that the copy and paste operations will be carried out within the same chapter, there is no need to transfer the upper-level settings to the lower level, and thus the flow goes to Step S<b>1712</b>, in which the copied data is pasted directly. If it is judged in Step S<b>1701</b> that pages will be inserted in a different chapter, the flow goes to Step S<b>1702</b>. In Step S<b>1702</b>, to see whether an end-of-loop condition has been met, it is judged whether all the copied pages have been processed. If all the pages have been processed, the flow goes to Step S<b>1710</b>, in which the processed data are pasted. If it is judged in Step S<b>1702</b> that not all the pages have been processed, the flow goes to Step S<b>1703</b>.</p>
<p id="p-0161" num="0177">In Step S<b>1703</b>, a page yet to be processed is handled. Since the chapter and page lists have been copied in the example described with reference to <figref idref="DRAWINGS">FIG. 22</figref>, the pages can be processed in sequence, starting at the top of the page list for the first chapter in the chapter list. Next, the flow goes to Step S<b>1704</b>, where it is judged whether all items for the given page have been processed. If all the items have been processed, the flow returns to Step S<b>1702</b> to proceed with the next page. If it is judged in Step S<b>1704</b> that there are items yet to be processed, the flow goes to Step S<b>1705</b>, where an item yet to be processed is handled. Then, the flow goes to Step S<b>1706</b>, where it is determined, concerning the item processed in Step S<b>1705</b>, whether to save set values unique to the page.</p>
<p id="p-0162" num="0178">If it is judged in Step S<b>1706</b> that set values unique to the page will be saved or if there is no corresponding item at the upper, chapter or document level, the flow goes to Step S<b>1711</b> and the values unique to the page are retained. If it is determined in Step S<b>1706</b> that set values unique to the page will not be saved, the flow goes to Step S<b>1707</b> to conform to upper-level settings.</p>
<p id="p-0163" num="0179">Here, corresponding items at an upper, chapter level are checked to see whether there are set values unique to the chapter or whether settings at the top level will be followed. If it is determined in Step S<b>1707</b> that there is no setting unique to the chapter, the flow goes to Step S<b>1708</b>, where the set values of the chapter are copied to the page. If it is determined in Step S<b>1707</b> that there are settings unique to the chapter, the flow goes to Step S<b>1709</b>, where it is determined which upper-level settings will take priority, the chapter-level settings or document-level settings. If it is determined in Step S<b>1709</b> that the chapter-level settings will take priority, the flow goes to Step S<b>1708</b>. If it is determined in Step S<b>1709</b> that the chapter-level settings will not take priority, the set values of the corresponding items on the document level are copied to the page. When any of the steps—Step S<b>1708</b>, Step S<b>1710</b>, or Step S<b>1711</b>—is finished, the flow returns to Step S<b>1704</b> and proceeds with processing of the next item.</p>
<p id="p-0164" num="0180">In this example, it is possible to make detailed priority settings for each item by determining what level of set values should take priority and which settings should take priority, the settings of the source document or destination document. Incidentally, although judgments are made at two levels—the document and chapter levels—in the examples of <figref idref="DRAWINGS">FIGS. 23 and 24</figref>, it is also possible to handle page settings in the process of pasting a document or chapter by incorporating the processing of the page settings shown in <figref idref="DRAWINGS">FIG. 25</figref>. In that case, the flow of <figref idref="DRAWINGS">FIG. 25</figref> can be inserted just before Step S<b>1501</b> or S<b>1601</b>.</p>
<heading id="h-0016" level="1">Example of Priority Settings Determined by User for Pasting</heading>
<p id="p-0165" num="0181">Description will be given about an operating method according to this embodiment which allows the user to specify before pasting which of document, chapter, and page settings to enable as well as what settings at the destination to follow.</p>
<p id="p-0166" num="0182"><figref idref="DRAWINGS">FIG. 35A</figref> shows an example of a right-click menu displayed during a drag and drop operation with the right mouse button. In this example, the user can select one of four options concerning an item to be pasted.</p>
<p id="p-0167" num="0183">The first option is to “retain only page attributes,” which specifies to retain settings at the page level and clear settings at the upper, chapter and document levels. Setting page attributes means attribute changes at the original level for the user and may not look like attribute settings. Therefore, if page attributes disappear during pasting, this may invite confusion.</p>
<p id="p-0168" num="0184">The second option is to “retain chapter and page attributes.” This option applies chapter and page settings of the destination document if the user has not specified chapter and page settings and retains any chapter and page setting the user has made. Therefore, it appears to the user that he/she is carrying out a copy and paste operation within the same document.</p>
<p id="p-0169" num="0185">The third option is to “copy attributes of source document to chapter attributes.” This option causes what is displayed in the source document to be reproduced in the destination document.</p>
<p id="p-0170" num="0186">The fourth option is to “clear all attributes.” This option pastes data in a clean state as if it were newly created by the electronic original writer <b>102</b> instead of coping from an existing edited document.</p>
<p id="p-0171" num="0187">There can be as many options as the number of combinations of the document, chapter, and page, but an option which behaves unpredictably for the user only invites confusion and does not have much merit. This embodiment provides four options which produces operations readily predictable for the user who copy and paste data.</p>
<p id="p-0172" num="0188"><figref idref="DRAWINGS">FIG. 35B</figref> shows an example of GUI which allows the user to select a paste method by displaying a dialog for pasting instead of displaying a right-click menu. In this case, the user can select one of two choices: display this dialog only when the right mouse button is pressed or always display this dialog even for a drag and drop operation with the left mouse button. If drag and drop operations are used frequently, it is not desirable to always display this dialog, which will interrupt the flow of operations. However, this GUI format should be selected if a lot of menu options need to be displayed because the dialog provides space for guidance and other information.</p>
<p id="p-0173" num="0189"><figref idref="DRAWINGS">FIG. 35C</figref> shows an example in which the user is allowed to select a method in advance. As the user selects Preference from the Tool menu, the GUI shown in <figref idref="DRAWINGS">FIG. 35C</figref> appears, allowing the user to select a desired action for pasting from among four options. This method is advantageous over the method which involves selecting an action each time in that it does not interrupt the flow of operations. It is also possible to use a Preference setting for usual paste operations and display the right-click menu for right-click drag-and-drop operations by combining the methods in <figref idref="DRAWINGS">FIG. 35B</figref> and <figref idref="DRAWINGS">FIG. 35C</figref>.</p>
<p id="p-0174" num="0190">In either case, the user can select one of four options as a way of processing attributes during pasting.</p>
<p id="p-0175" num="0191"><figref idref="DRAWINGS">FIG. 36</figref> shows an example of IDs assigned to the four options. ID<b>1</b>, ID<b>2</b>, ID<b>3</b>, and ID<b>4</b> are assigned to the options in <figref idref="DRAWINGS">FIGS. 35A to 35C</figref>, starting from the top.</p>
<p id="p-0176" num="0192"><figref idref="DRAWINGS">FIG. 37</figref> shows data structure of pasted data. Since a method for retaining attributes can be selected before pasting, they are retained in almost the same format as the one described with reference to <figref idref="DRAWINGS">FIG. 3</figref>. Although use of document information for pasting results in an increased volume of data, optimization is performed by not using that part of the document control information <b>402</b> which is not necessary for pasting, such as a document name. If there are a small number of paste options, unnecessary data can be eliminated by proceeding with further optimization.</p>
<p id="p-0177" num="0193"><figref idref="DRAWINGS">FIG. 38</figref> is a flowchart showing exemplary pasting procedures in which one of four paste methods can be selected using the GUI shown in <figref idref="DRAWINGS">FIG. 35A</figref>.</p>
<p id="p-0178" num="0194">First, it is judged in Step S<b>3801</b> whether the operation concerned is a right-click drag-and-drop operation. If it is judged that the operation concerned is a right-click drag operation, the flow goes to Step S<b>3802</b>, where the right-click menu <b>3501</b> is displayed, allowing the user to select one of ID<b>1</b> to ID<b>4</b>. If it is judged in Step S<b>3802</b> that the operation concerned is not a right-click drag operation, the flow goes to Step S<b>3803</b> to read the paste method ID specified in advance through Preference <b>3503</b>.</p>
<p id="p-0179" num="0195">Steps S<b>3804</b> to S<b>3810</b> concern allocation of processes according to the paste method ID selected by the user. The flow goes to S<b>3810</b> if ID<b>1</b> is selected by the user, to S<b>3809</b> if ID<b>3</b> is selected, and to S<b>3808</b> if ID<b>4</b> is selected, but nothing particular is done if ID<b>2</b> is selected. Details of these processes will be described in detail later. In any case, when the processing of attributes is finished, the flow goes to Step S<b>3811</b>, where the data is pasted to a specified position.</p>
<p id="p-0180" num="0196"><figref idref="DRAWINGS">FIG. 39</figref> is a flowchart showing process details of Step S<b>3808</b> in <figref idref="DRAWINGS">FIG. 38</figref>.</p>
<p id="p-0181" num="0197">First, it is judged in Step S<b>3901</b> whether the attributes of the data to be pasted have been cleared. If there is chapter information <b>405</b> yet to be processed, the flow goes to Step S<b>3902</b>, where a chapter yet to be processed is selected. The chapters are processed, starting at the top of the chapter information list <b>404</b> if there is no particular problem. Then, the flow goes to Step S<b>3903</b>, where it is judged whether there is any item yet to be processed in the chapter setting information <b>407</b>. If there is, the flow goes to Step S<b>3904</b>, where the next item is processed. Then, the flow goes to Step S<b>3905</b> to clear the set values of the chapter processed in Step S<b>3902</b> by overwriting them with default values or a value which means “conforming to upper-level settings.” The chapter setting information <b>407</b>, which consists of an array or list, is cleared in sequence starting at the top and the loop is repeated until it is judged that the last item is cleared.</p>
<p id="p-0182" num="0198">If it is judged in Step S<b>3903</b> that there is no item yet to be processed, the flow goes to Step S<b>3906</b>, where it is judged whether all the pages in the page information list <b>408</b> have been processed. If there are pages yet to be processed, the flow goes to Step S<b>3907</b>, where the pages are processed, starting at the top of the list. Next, the flow goes to Step S<b>3908</b>, where it is judged whether all the items in the page setting information <b>411</b> have been processed. If there are items yet to be processed, the flow goes to Step S<b>3909</b>. The page setting information <b>411</b> may also be composed of an array or list of set values. In that case, the items are processed sequentially in S<b>3909</b>, starting at the top of the list. Then, the flow goes to Step S<b>3910</b>, where the item is cleared. If the item is unique to the page, default values are used. If the same item exists at an upper level, a special attribute value which means “conforming to the upper level” is used.</p>
<p id="p-0183" num="0199">If it is judged in Step S<b>3908</b> that all the items in the page setting information <b>411</b> have been processed, the processing of that page is finished. The flow returns to Step S<b>3906</b> to proceed with the next page and it is judged whether there is any page yet to be processed. If it is judged in Step S<b>3906</b> that all the pages have been processed, the flow returns to Step S<b>3901</b> to proceed with the next chapter. When all the processing is finished, the loop is finished and the flow goes to Step S<b>3811</b>.</p>
<p id="p-0184" num="0200"><figref idref="DRAWINGS">FIG. 40</figref> is a flowchart showing process details of Step S<b>3809</b> in <figref idref="DRAWINGS">FIG. 38</figref>.</p>
<p id="p-0185" num="0201">First, it is judged in Step S<b>4001</b> whether the attributes of the data to be pasted have been cleared. If there is chapter information <b>405</b> yet to be processed, the flow goes to Step S<b>4002</b>, where a chapter yet to be processed is selected. The chapters are processed, starting at the top of the chapter information list <b>404</b> if there is no particular problem. Then, the flow goes to Step S<b>4003</b>, where it is judged whether there is any item yet to be processed in the chapter setting information <b>407</b>. If there is, the flow goes to Step S<b>4004</b>, where the next item is processed. Then, the flow goes to Step S<b>4005</b>, where the set values of the item currently being processed are overwritten with the values of the appropriate item in the document setting information <b>403</b>.</p>
<p id="p-0186" num="0202">If an item is unique to chapters and has no corresponding item in the document setting information <b>403</b>, there are two possible alternatives: to overwrite item values with default values or not to overwrite the item values. In this embodiment, since all the items have corresponding items in the document information, all of them are overwritten. The flow returns to Step S<b>4003</b> to proceed with the next item. If it is judged in Step S<b>4003</b> that there is no item yet to be processed, the flow returns to Step S<b>4001</b> to proceed with the next chapter. If all the chapters have been processed, the flow goes to Step S<b>3811</b> by breaking the loop.</p>
<p id="p-0187" num="0203"><figref idref="DRAWINGS">FIG. 41</figref> is a flowchart showing process details of Step S<b>3810</b> in <figref idref="DRAWINGS">FIG. 38</figref>.</p>
<p id="p-0188" num="0204">First, it is judged in Step S<b>4101</b> whether the attributes of the data to be pasted have been cleared. If there is chapter information <b>405</b> yet to be processed, the flow goes to Step S<b>4102</b>, where a chapter yet to be processed is selected. The chapters are processed, starting at the top of the chapter information list <b>404</b> if there is no particular problem. Then, the flow goes to Step S<b>4103</b>, where it is judged whether there is any item yet to be processed in the chapter setting information <b>407</b>. If there is, the flow goes to Step S<b>4104</b>, where the next item is processed. The set values of the chapter processed in Step S<b>4104</b> are cleared by being overwriting with default values or a value which means “conforming to upper-level settings.” Then, the flow returns to Step S<b>4103</b> to proceed with the next item. If it is judged in Step S<b>4103</b> that there is no item yet to be processed, the flow returns to Step S<b>4101</b> to proceed with the next chapter. If all the chapters have been processed, the flow goes to Step S<b>3811</b> by breaking the loop.</p>
<heading id="h-0017" level="1">Example of User Operations for Document Editing in the Document Processing System According to this Embodiment</heading>
<p id="p-0189" num="0205">Next, description will be given about display methods used according to user's document editing operations (especially, drag and drop operations) in this embodiment.</p>
<p id="p-0190" num="0206"><figref idref="DRAWINGS">FIG. 26</figref> shows examples of changes in the shape of mouse cursor during a copy and paste operation or a so-called drag and drop operation with a mouse.</p>
<p id="p-0191" num="0207">The figure at the left end shows an example in which a mouse cursor is located outside the page. The mouse cursor <b>2601</b> is arrow-shaped—a normal default shape. The second figure from the left shows the mouse cursor as it is positioned on the page. The mouse cursor <b>2602</b> changes to a hand shape, indicating that the page is the object to be dragged and dropped. The third figure from the left shows that a selection has been made by clicking the mouse. The page is surrounded by a thick border, indicating that the page has been selected. As the user clicks the mouse and start dragging the page, the mouse cursor <b>2604</b> changes to a gripping hand, indicating to the user that the gripped page can be moved as shown in the figure at the right.</p>
<p id="p-0192" num="0208">Example of Display in Preview Area</p>
<p id="p-0193" num="0209"><figref idref="DRAWINGS">FIG. 27</figref> shows an example of a display format illustrating drag and drop positions of a dragged page.</p>
<p id="p-0194" num="0210">The dragged page is shown as a being translucent so that the drop position can be checked easily. Also, a bar <b>2701</b> is displayed to indicate the drop position. As the user releases the mouse button in this state to drop the page, the dragged page 1-3 is placed between page 1-1 and page 1-2, and consequently the pages are rearranged in the order: 1-1, 1-3, and 1-2. By using a Control key or Shift key during a drag and drop operation, it is possible to copy a page instead of moving it. Also, by using the right button instead of the left button which is usually used, the user can select whether to move or copy a page when dropping it.</p>
<p id="p-0195" num="0211">(Example of Display in Tree Area)</p>
<p id="p-0196" num="0212"><figref idref="DRAWINGS">FIG. 28</figref> is a diagram illustrating a display format of a drag and drop operation in the tree display area.</p>
<p id="p-0197" num="0213">During a drag operation, to fit in the small area of the tree section, the image of the dragged page disappears and the mouse cursor <b>2801</b> takes on a combined shape of an arrow and page icon. As the user moves the mouse cursor <b>2801</b> to position <b>2803</b> by moving the mouse, the bar which indicates the drop position moves from position <b>2802</b> to position <b>2804</b> along with the mouse cursor.</p>
<p id="p-0198" num="0214">Although the tree display, which itself contains hierarchy information, is easily understandable, since a document has a document/chapter/page hierarchical structure, when the mouse cursor is positioned between chapters, a problem arises as to in which chapter a dragged object should be dropped. According to this embodiment, as shown in <figref idref="DRAWINGS">FIG. 29</figref>, when the bar is at position <b>2901</b>, which is next to page 1-3, the dragged object is dropped on the last page of the “Document 1” chapter. When the mouse is moved further down, the bar moves to position <b>2902</b> between the “Document 2” icon and page 2-1. When the bar is at this position, the dragged object is dropped on the first page of the “Document 2” chapter.</p>
<p id="p-0199" num="0215">(Variation of Display in Preview Area)</p>
<p id="p-0200" num="0216">The display in the preview area, whose display format does not contain a concept of hierarchy, is rather ambiguous. One possible method of clearing up the ambiguity involves setting a rule to drop the dragged object on the last page of the preceding chapter or the first page of the succeeding chapter if the bar moves to the boundary between chapters, or to drop the dragged object depending on the cursor path: to drop the dragged object on the last page of the preceding chapter if the mouse cursor moves from the direction of the preceding chapter and to drop the dragged object on the first page of the succeeding chapter if the mouse cursor moves from the direction of the succeeding chapter.</p>
<p id="p-0201" num="0217"><figref idref="DRAWINGS">FIG. 30</figref> shows an example of displaying the bar twice on a chapter boundary. Suppose a page labeled “1” and a page labeled “2” abut each other on a chapter boundary. A bar <b>3001</b> is displayed when the mouse cursor is nearer to page “1” and a bar <b>3002</b> is displayed when the mouse cursor is nearer to page “2.” The dragged object is placed at the end of the preceding chapter if it is dropped while the bar <b>3001</b> is displayed and it is placed at the head of the succeeding chapter if it is dropped while the bar <b>3002</b> is displayed. Incidentally, it is also possible to display two bars <b>3001</b> and <b>3002</b> at the same time and determine where to drop the dragged object depending on the thickness, density, or color (in the case of color display) of the bars.</p>
<p id="p-0202" num="0218">(Display Example for N-Up Printing in Preview Area)</p>
<p id="p-0203" num="0219">Next a display method for N-up printing will be described.</p>
<p id="p-0204" num="0220"><figref idref="DRAWINGS">FIG. 31</figref> shows an example of 1-up printing. In this example, a rectangle <b>3101</b> which represents a sheet of paper corresponds to a page. Thus, the bar which indicates a drop position is displayed between rectangles which represent sheets of paper.</p>
<p id="p-0205" num="0221"><figref idref="DRAWINGS">FIG. 32</figref> shows an example of 4-up printing. In this case, four pages of data, when drawn, are treated as a single physical page. If a dragged object is dropped between two physical pages, the bar is displayed between two rectangles which represent the physical pages, as shown on the left of <figref idref="DRAWINGS">FIG. 32</figref>. If a dragged object can be dropped between original pages, there are two or more places where the dragged object can be dropped within a single physical page. In the right diagram of <figref idref="DRAWINGS">FIG. 32</figref>, the bar which indicates a drop position is displayed between the original page labeled “1” and original page labeled “2.” In this way, different display methods are used depending on the dragged object.</p>
<p id="p-0206" num="0222">When a physical page is selected and dragged, the page is dropped according to the method shown on the left of <figref idref="DRAWINGS">FIG. 32</figref> assuming that the movement is carried out on the physical page level. Internally, the same process is carried out as when all the logical pages on the physical page are dragged. Therefore, if the N-up print setting differs between the selected physical page and drop position, the resulting layout will be different from the original layout before dragging because logical pages are laid out according to the layout specification for the destination page. When a logical page is selected and dragged, the page is dropped according to the method shown on the right of <figref idref="DRAWINGS">FIG. 32</figref> assuming that the movement is carried out on the logical page level. In terms of internal data, however, the same process is carried out as when dragging and dropping a plurality of logical pages. Thus, it is possible to allow the user to drop the dragged page at any desired position by switching between the display methods shown on the left and right of <figref idref="DRAWINGS">FIG. 32</figref> using the mouse.</p>
<p id="p-0207" num="0223">Next, an example in which a chapter or page being dragged has its own settings is shown in <figref idref="DRAWINGS">FIG. 33</figref>.</p>
<p id="p-0208" num="0224">A display example in which a chapter or page has unique settings is shown in <figref idref="DRAWINGS">FIG. 9</figref>. If data being dragged does not contain a page or chapter which has unique settings, a display format <b>3301</b> is used. If data being dragged contains a page or chapter which has unique settings, a display format <b>3302</b> is used. Presence or absence of unique settings is indicated by placing a small mark in the upper left corner, as in the case of <b>901</b> and <b>902</b> in <figref idref="DRAWINGS">FIG. 9</figref>. If the data retains its unique settings after it is dropped, a chapter or page with unique settings results, as shown in <figref idref="DRAWINGS">FIG. 9</figref>. It is possible to specify unique settings to be cleared internally when data is dropped. Flowcharts of processes carried out in that case are shown in <figref idref="DRAWINGS">FIGS. 24 and 25</figref>.</p>
<heading id="h-0018" level="1">Exemplary Procedures for Operations in Document Processing System According to this Embodiment</heading>
<p id="p-0209" num="0225"><figref idref="DRAWINGS">FIG. 34</figref> shows a flowchart of exemplary procedures for operations in the document processing system according to this embodiment. Incidentally, procedures for detecting cursor position as well as distance between image display position and cursor position are known and detailed description thereof will be omitted. Also, priority setting among book, chapter, and page settings (attributes) will also be omitted for the sake of simplicity. Regarding unique settings, in addition to processes shown in <figref idref="DRAWINGS">FIGS. 24 and 25</figref>, a mark is added to indicate presence of unique settings as shown in <figref idref="DRAWINGS">FIG. 33</figref>.</p>
<p id="p-0210" num="0226">First, it is judged in Step S<b>2001</b>, based on mouse operation, whether data is being dragged. If no data is being dragged, it is judged in Step S<b>2002</b> whether the operation concerned is a drop operation. If it is not a drop operation either, a process not covered by this example is performed in Step S<b>2004</b> and the flow returns to the beginning. If it is judged to be a drop operation, the flow goes to Step S<b>2003</b>, where data is moved or copied to the drop position indicated by a bar according to the cursor position. Selection between move and copy operations is not shown for the sake of simplicity.</p>
<p id="p-0211" num="0227">If the operation concerned is judged to be a drag operation in Step S<b>2001</b>, the cursor position is detected by a known method in Step S<b>2005</b>. Next, the original page boundary nearest to the cursor position in the tree and preview areas is detected in Step S<b>2006</b>. It is judged in Step S<b>2007</b> whether the original page boundary nearest to the cursor position detected in Step S<b>2006</b> is located in the tree area or preview area. If it is located in the tree area, a bar which indicates a drop position is displayed on the original page boundary in Step S<b>2008</b>. The method of display here is also known and will not be described in detail.</p>
<p id="p-0212" num="0228">If the original page boundary nearest to the cursor position is located in the preview area, it is judged in Step S<b>2009</b> whether the detected boundary coincides with a chapter boundary. If it coincides with a chapter boundary, a setting is made in Step S<b>2010</b> to display a bar a multiple number of times as shown in <figref idref="DRAWINGS">FIG. 30</figref>. If a bar is specified to be displayed a multiple number of times, multiple borders are set up at the original page boundary, distances from the cursor are detected, and a bar is displayed on the border nearest to the cursor although this is not described in detail in <figref idref="DRAWINGS">FIG. 34</figref>. Alternatively, a plurality of bars may be displayed in such a way that they can be identified by thickness, density, or color (the nearest bar will be more conspicuous). If there is no chapter boundary, nothing is done and the flow goes to Step S<b>2011</b>.</p>
<p id="p-0213" num="0229">It is judged in Step S<b>2011</b> whether N-up printing is specified. In the case of N-up printing, it is judged in Step S<b>2012</b> whether the original page boundary coincides with a print page boundary. If N-up printing is specified and the original page boundary does not coincide with a print page boundary, a bar is displayed, in Step S<b>2013</b>, on a original page boundary within the print page as shown in the right diagram of <figref idref="DRAWINGS">FIG. 32</figref>. On the other hand, if N-up printing is not specified, or if the original page boundary coincides with a print page boundary even in the case of N-up printing, a bar is displayed outside (between) the print pages as shown in the left diagrams of <figref idref="DRAWINGS">FIGS. 30</figref>, <b>31</b>, and <b>32</b>.</p>
<p id="p-0214" num="0230">Incidentally, the execution sequence of the flowcharts in this embodiment may be changed as long as no process is left unfinished.</p>
<p id="p-0215" num="0231">Also, the present invention may be applied either to a system consisting of two or more apparatus (e.g., a host computer, interface devices, a reader, a printer, and the like) or to equipment consisting of a single apparatus (e.g., a copier, a printer, a facsimile machine, or the like).</p>
<p id="p-0216" num="0232">Also, the object of the present invention can also be achieved by a recording medium containing the software program code that implements the functions of the above embodiment: it is supplied to a system or apparatus, whose computer (or a CPU or MPU) then reads the program code out of the storage medium and executes it. In that case, the program code itself read out from the storage medium will implement the functions of the above embodiment, and the storage medium which stores the program code will constitute the present invention.</p>
<p id="p-0217" num="0233">As the recording medium for supplying the program code, for example, a floppy disk, hard disk, optical disk, magneto-optical disk, CD-ROM, CD-R, magnetic tape, nonvolatile memory card, ROM, or the like may be used.</p>
<p id="p-0218" num="0234">Also, the functions of the above embodiment may be implemented not only by the program code read out and executed by the computer, but also by part or all of the actual processing executed, in accordance with instructions from the program code, by an OS (operating system) running on the computer.</p>
<p id="p-0219" num="0235">Furthermore, the functions of the above embodiment may also be implemented by part or all of the actual processing executed by a CPU or the like contained in a function expansion card inserted in the computer or a function expansion unit connected to the computer if the processing is performed in accordance with instructions from the program code that has been read out of the storage medium and written into memory on the function expansion card or unit.</p>
<p id="p-0220" num="0236">The present invention can provide a document processing method and system capable of making both global and local settings when inserting, moving, or copying and pasting data, by taking full advantage of the feature of retaining data and set values hierarchically in the system.</p>
<p id="p-0221" num="0237">Specifically, when copying and pasting data which has a hierarchical structure, the present invention allows the user to paste data with the hierarchical structure of the data retained.</p>
<p id="p-0222" num="0238">Also, with the above configuration, the present invention allows the user to paste copied data to another document with priority given to set values of the source document.</p>
<p id="p-0223" num="0239">Also, with the above configuration, the present invention allows the user to paste copied data to another document with priority given to set values of the destination document.</p>
<p id="p-0224" num="0240">Also, with the above configuration, the present invention allows the user to paste copied data to another document with priority given to set values retained by the copied data at individual levels of the hierarchy.</p>
<p id="p-0225" num="0241">As many apparently widely different embodiments of the present invention can be made without departing from the spirit and scope thereof, it is to be understood that the invention is not limited to the specific embodiments thereof except as defined in the claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computerized document processing method for processing original data that has attributes for a print process, comprising:
<claim-text>a manipulation step of manipulating data by moving or copying a node representing a page of a chapter of a document in a tree structure in which the original data is stored with nodes, wherein each node represents:</claim-text>
<claim-text>a page included in the original data and having attributes of the page, or a chapter including a plurality of pages and having attributes of the chapter;</claim-text>
<claim-text>a first determining step of determining whether a user has instructed the saving of a previously-set attribute of a source page to be moved or copied after the source page has been moved or copied in said manipulation step, or whether the user has instructed to not save a previously-set attribute of a source page to be moved or copied after the source page has been moved or copied in said manipulation step;</claim-text>
<claim-text>a first setting step of saving the attribute of the source page to be moved or copied after the source page has been moved or copied in said manipulation step so that the moved or copied source page contains the saved attribute after being moved or copied in response to said first determining step determining that the user has instructed the saving of attribute of a node of the source page in said manipulation step;</claim-text>
<claim-text>a second determining step of determining whether a chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining step determining that the user has instructed not to save previously-set attributes of the source page to be moved or copied; and</claim-text>
<claim-text>a second setting step of setting the attributes of the source page to be moved or copied after the source page has been moved or copied in said manipulation step to the specific attribute of the chapter or a corresponding attribute of the document, in response to the determination of said second determining step.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computerized document processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising a designation step of designating priorities of attributes among upper and lower levels of the tree structure, wherein in said first setting step attributes are set according to priorities designated in said designation step.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computerized document processing method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein node data in the tree structure contains the priorities of attributes designated in said designation step, as an attribute of a lower level.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computerized document processing method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, further comprising a first display control step of controlling a process of displaying a screen in which the priorities of attributes can be designated, on a node-by-node basis, wherein the priorities of attributes are designated via the screen in said designation step.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The computerized document processing method according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising a second display control step of controlling a process of displaying a screen that allows a user to designate how to set attributes of a node belonging to a moved or copied page, when the node data is manipulated in said manipulation step.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The computerized document processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising a reading step of reading out stored default settings that define how to set attributes of a node belonging to a moved or copied page, in said first setting step.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computerized document processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said method is a book-editing method, the original data includes book-editing data, and the attributes include book-editing attributes.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A computerized document processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,
<claim-text>wherein said second setting step sets the attributes of the source page to be moved or copied after the source page has been moved or copied in said manipulation step to the corresponding specific attribute of the chapter when said second determining step determines that the chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining step determining that the user has not instructed saving of previously-set attributes of the source page to be moved or copied.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A computerized document processing method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>,
<claim-text>further comprising a third determining step for determining whether to give priority to the specific chapter attributes in the event the second determining step determines that the chapter has specific attributes,</claim-text>
<claim-text>wherein said second setting step sets the attributes of the source page to be moved or copied after the source page has been moved or copied in said manipulation step to the corresponding specific attribute of the chapter when i) said second determining step determines that the chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining step determining that the user has not instructed saving of previously-set attributes of the source page to be moved or copied, and ii) said third determining step determines that priority is given to the specific chapter attributes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A computerized document processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,
<claim-text>further comprising a third determining step for determining whether to give priority to the specific chapter attributes in the event the second determining step determines that the chapter has specific attributes,</claim-text>
<claim-text>wherein said second setting step sets the attributes of the source page to be moved or copied after the source page has been moved or copied in said manipulation step to corresponding attributes of the document in the event said second determining step determines that the chapter of which the source page is a part has specific attributes and in the event said third determining step determines that priority is not to be given to the specific chapter attributes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A document processing apparatus for processing original data stored on a computer-readable medium, wherein said data has attributes for a print process, comprising:
<claim-text>a manipulation unit adapted to manipulate the data on the computer-readable medium by moving or copying a node representing a page of a chapter of a document in a tree structure in which the original data is stored with nodes, wherein each node represents:</claim-text>
<claim-text>a page included in the original data and having attributes of the page, or</claim-text>
<claim-text>a chapter including a plurality of pages and having attributes of the chapter;</claim-text>
<claim-text>a first determining unit configured to determine whether a user has instructed the saving of a previously-set attribute of a source page to be moved or copied after the source page has been moved or copied by said manipulation unit, or whether the user has instructed to not save a previously-set attribute of a source page to be moved or copied after the source page has been moved or copied by said manipulation unit;</claim-text>
<claim-text>a first setting unit configured to save the attribute of the source page to be moved or copied after the source page has been moved or copied by said manipulation unit so that the moved or copied source page contains the saved attribute after being moved or copied in response to said first determining unit determining that the user has instructed the saving of attribute of a node of the source page in said manipulation unit;</claim-text>
<claim-text>a second determining unit configured to determine whether a chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining unit determining that the user has instructed not to save previously-set attributes of the source page to be moved or copied; and</claim-text>
<claim-text>a second setting unit configured to set the attributes of the source page to be moved or copied after the source page has been moved or copied by said manipulation unit to the specific attribute of the chapter or a corresponding attribute of the document, in response to the determination of said second determining unit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The document processing apparatus according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising a designation unit for designating priorities of attributes among upper and lower levels of the tree structure, wherein attributes are set by said first setting unit according to priorities designated by said designation unit.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The document processing apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein node data in the tree structure contains the priorities of attributes designated by said designation unit, as an attribute of a lower level.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The document processing method according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising a first display control unit adapted to control a process of displaying a screen in which the priorities of attributes can be designated, on a node-by-node basis, wherein the priorities of attributes are designated by said designation unit via the screen.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The document processing apparatus according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, further comprising a second display control unit adapted to control a process of displaying a screen that allows a user to designate how to set attributes of a node belonging to a moved or copied page, when the node data is manipulated by said manipulation unit.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The document processing apparatus according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising a reading unit adapted to read out stored default settings that define how to set attributes of a node belonging to a moved or copied page, by said first setting unit.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The document processing apparatus according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein said apparatus is a book-editing apparatus, the original data includes book-editing data, and the attributes include book-editing attributes.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. A document processing apparatus according to <claim-ref idref="CLM-00011">claim 11</claim-ref>,
<claim-text>wherein said second setting unit sets the attributes of the source page to be moved or copied after the source page has been moved or copied by said manipulation unit to the corresponding specific attribute of the chapter when said second determining unit determines that the chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining unit determining that the user has not instructed saving of previously-set attributes of the source page to be moved or copied.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. A document processing apparatus according to <claim-ref idref="CLM-00018">claim 18</claim-ref>,
<claim-text>further comprising a third determining unit configured to determine whether to give priority to the specific chapter attributes in the event the second determining unit determines that the chapter has specific attributes,</claim-text>
<claim-text>wherein said second setting unit sets the attributes of the source page to be moved or copied after the source page has been moved or copied by said manipulation unit to the corresponding specific attribute of the chapter when i) said second determining unit determines that the chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining unit determining that the user has not instructed saving of previously-set attributes of the source page to be moved or copied, and ii) said third determining unit determines that priority is given to the specific chapter attributes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. A document processing apparatus according to <claim-ref idref="CLM-00011">claim 11</claim-ref>,
<claim-text>further comprising a third determining unit configured to determine whether to give priority to the specific chapter attributes in the event the second determining unit determines that the chapter has specific attributes,</claim-text>
<claim-text>wherein said second setting unit sets the attributes of the source page to be moved or copied after the source page has been moved or copied by said manipulation unit to corresponding attributes of the document in the event said second determining unit determines that the chapter of which the source page is a part has specific attributes and in the event said third determining unit determines that priority is not to be given to the specific chapter attributes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. A document processing program embodied on a computer-readable medium for processing original data that has attributes for a print process, comprising:
<claim-text>a manipulation module for manipulating data by moving or copying a node representing a page of a chapter of a document in a tree structure in which the original data is stored with nodes, wherein each node represents:</claim-text>
<claim-text>a page included in the original data and having attributes of the page, or</claim-text>
<claim-text>a chapter including a plurality of pages and having attributes of the chapter;</claim-text>
<claim-text>a first determining module for determining whether a user has instructed the saving of a previously-set attribute of a source page to be moved or copied after the source page has been moved or copied by said manipulation module, or whether the user has instructed to not save a previously-set attribute of a source page to be moved or copied after the source page has been moved or copied by said manipulation module;</claim-text>
<claim-text>a first setting module for setting the attribute of the source page to be moved or copied after the source page has been moved or copied by said manipulation module so that the moved or copied source page contains the saved attribute after being moved or copied in response to said first determining module determining that the user has instructed the saving of attribute of a node of the source page by said manipulation module;</claim-text>
<claim-text>a second determining module for determining whether a chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining module determining that the user has instructed not to save previously-set attributes of the source page to be moved or copied; and</claim-text>
<claim-text>a second setting module for setting the attributes of the source page to be moved or copied after the source page has been moved or copied by said manipulation module to the specific attribute of the chapter or a corresponding attribute of the document, in response to the determination of said second determining module.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The document processing program embodied on a computer-readable medium according to <claim-ref idref="CLM-00021">claim 21</claim-ref>, further comprising a designation module for designating priorities of attributes among upper and lower levels of the tree structure, wherein attributes are set by said first setting module according to priorities designated by said designation module.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. A document processing program according to <claim-ref idref="CLM-00021">claim 21</claim-ref>,
<claim-text>wherein said second setting module sets the attributes of the source page to be moved or copied after the source page has been moved or copied by said manipulation module to the corresponding specific attribute of the chapter when said second determining module determines that the chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining module determining that the user has not instructed saving of previously-set attributes of the source page to be moved or copied.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. A document processing program according to <claim-ref idref="CLM-00023">claim 23</claim-ref>,
<claim-text>further comprising a third determining module configured to determine whether to give priority to the specific chapter attributes in the event the second determining module determines that the chapter has specific attributes,</claim-text>
<claim-text>wherein said second setting module sets the attributes of the source page to be moved or copied after the source page has been moved or copied by said manipulation module to the corresponding specific attribute of the chapter when i) said second determining module determines that the chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining module determining that the user has not instructed saving of previously-set attributes of the source page to be moved or copied, and ii) said third determining module determines that priority is given to the specific chapter attributes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. A document processing program according to <claim-ref idref="CLM-00021">claim 21</claim-ref>,
<claim-text>further comprising a third determining module configured to determine whether to give priority to the specific chapter attributes in the event the second determining module determines that the chapter has specific attributes,</claim-text>
<claim-text>wherein said second setting module sets the attributes of the source page to be moved or copied after the source page has been moved or copied by said manipulation module to corresponding attributes of the document in the event said second determining module determines that the chapter of which the source page is a part has specific attributes and in the event said third determining module determines that priority is not to be given to the specific chapter attributes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. A computer-readable recording medium storing a document processing program for processing original data that has attributes for a print process, the document processing program comprising:
<claim-text>a manipulation module for manipulating data by moving or copying a node representing a page of a chapter in a document in a tree structure in which the original data is stored with nodes, wherein each node represents:</claim-text>
<claim-text>a page included in the original data and having attributes of the page, or</claim-text>
<claim-text>a chapter including a plurality of pages and having attributes of the chapter;</claim-text>
<claim-text>a first determining module for determining whether a user has instructed the saving of a previously-set attribute of a source page to be moved or copied after the source page has been moved or copied by said manipulation module, or whether the user has instructed to not save a previously-set attribute of a source page to be moved or copied after the source page has been moved or copied by said manipulation module;</claim-text>
<claim-text>a first setting module for setting the attribute of the source page to be moved or copied after the source page has been moved or copied by said manipulation module so that the moved or copied source page contains the saved attribute after being moved or copied in response to said first determining module determining that the user has instructed the saving of attribute of a node of the source page in said manipulation module;</claim-text>
<claim-text>a second determining module for determining whether a chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining module determining that the user has instructed not to save previously-set attributes of the source page to be moved or copied; and</claim-text>
<claim-text>a second setting module for setting the attributes of the source page to be moved or copied after the source page has been moved or copied by said manipulation module to the specific attribute of the chapter or a corresponding attribute of the document, in response to the determination of said second determining module.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The computer-readable recording medium according to <claim-ref idref="CLM-00026">claim 26</claim-ref>, wherein the document processing program further comprises designation module for designating priorities of attributes among upper and lower levels of the tree structure, wherein attributes are set by said first setting module according to priorities designated by said designation module.</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. A computer-readable recording medium according to <claim-ref idref="CLM-00026">claim 26</claim-ref>,
<claim-text>wherein said second setting module sets the attributes of the source page to be moved or copied after the source page has been moved or copied by said manipulation module to the corresponding specific attribute of the chapter when said second determining module determines that the chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining module determining that the user has not instructed saving of previously-set attributes of the source page to be moved or copied.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. A computer-readable recording medium according to <claim-ref idref="CLM-00028">claim 28</claim-ref>,
<claim-text>further comprising a third determining module configured to determine whether to give priority to the specific chapter attributes in the event the second determining module determines that the chapter has specific attributes,</claim-text>
<claim-text>wherein said second setting module sets the attributes of the source page to be moved or copied after the source page has been moved or copied by said manipulation module to the corresponding specific attribute of the chapter when i) said second determining module determines that the chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining module determining that the user has not instructed saving of previously-set attributes of the source page to be moved or copied, and ii) said third determining module determines that priority is given to the specific chapter attributes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. A computer-readable recording medium according to <claim-ref idref="CLM-00026">claim 26</claim-ref>,
<claim-text>further comprising a third determining module configured to determine whether to give priority to the specific chapter attributes in the event the second determining module determines that the chapter has specific attributes,</claim-text>
<claim-text>wherein said second setting module sets the attributes of the source page to be moved or copied after the source page has been moved or copied by said manipulation module to corresponding attributes of the document in the event said second determining module determines that the chapter of which the source page is a part has specific attributes and in the event said third determining module determines that priority is not to be given to the specific chapter attributes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. A computerized data processing method for processing original data on a computer readable medium, wherein the original data includes data of a plurality of pages of one or more chapters of a document with respectively set page attributes and data of a plurality of chapters with respectively set chapter attributes, comprising:
<claim-text>an insertion step of inserting page data of a source page into a designated destination chapter, the source page having attributes previously set;</claim-text>
<claim-text>an inquiring step of inquiring, using a graphical user-interface, whether or not to keep attributes previously set for the source page before inserted into the destination chapter after the source page has been inserted into the destination chapter in said insertion step;</claim-text>
<claim-text>a first determining step of determining whether a user has instructed the saving and setting of previously-set attributes of a source page to be inserted into the destination chapter after the source page has been inserted into the destination chapter in said insertion step after the inquiry made in said inquiring step or whether the user has instructed to not save previously-set attributes of a source page to be inserted into the destination chapter after the source page has been inserted into the destination chanter in said insertion step after the inquiry made in said inquiring step;</claim-text>
<claim-text>a first setting step of saving and setting the previously-set attributes of the source page to be inserted into the destination chapter after the source page has been inserted into the destination chapter so that the inserted source page contains the saved attributes after being inserted into the destination chapter in response to said first determining step determining that the user has instructed the saving of attributes of the source page;</claim-text>
<claim-text>a second determining step of determining whether a chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining step determining that the user has instructed not to save previously-set attributes of the source page to be inserted; and</claim-text>
<claim-text>a second setting step of setting the attributes of the source page to be inserted after the source page has been inserted into the destination chapter to the specific attribute of the chapter or a corresponding attribute of the document, in response to the determination of said second determining step.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. The computerized data processing method according to <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein said inquiring step comprises a display step of displaying a user-interface screen inquiring a user as to whether or not to keep the attributes previously set for the source page as the attributes of the inserted page.</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. The data processing method according to <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein the method is a book-editing method, the original data includes book-editing data, and the attributes include book-editing attributes.</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. The data processing method according to <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein the setting step includes setting attributes previously set for the source page prior to insertion as attributes of the inserted page.</claim-text>
</claim>
<claim id="CLM-00035" num="00035">
<claim-text>35. The data processing method according to <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein the setting step includes setting attributes previously set for the source page prior to insertion as attributes of the destination chapter into which the source page is inserted.</claim-text>
</claim>
<claim id="CLM-00036" num="00036">
<claim-text>36. A computerized data processing method according to <claim-ref idref="CLM-00031">claim 31</claim-ref>,
<claim-text>wherein said second setting step sets the attributes of the source page to be inserted after the source page has been inserted to the corresponding specific attribute of the chapter when said second determining step determines that the chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining step determining that the user has not instructed saving of previously-set attributes of the source page to be inserted.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00037" num="00037">
<claim-text>37. A computerized data processing method according to <claim-ref idref="CLM-00036">claim 36</claim-ref>,
<claim-text>further comprising a third determining step for determining whether to give priority to the specific chapter attributes in the event the second determining step determines that the chapter has specific attributes,</claim-text>
<claim-text>wherein said second setting step sets the attributes of the source page to be inserted after the source page has been inserted to the corresponding specific attribute of the chapter when i) said second determining step determines that the chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining step determining that the user has not instructed saving of previously-set attributes of the source page to be inserted, and ii) said third determining step determines that priority is given to the specific chapter attributes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00038" num="00038">
<claim-text>38. A computerized data processing method according to <claim-ref idref="CLM-00031">claim 31</claim-ref>,
<claim-text>further comprising a third determining step for determining whether to give priority to the specific chapter attributes in the event the second determining step determines that the chapter has specific attributes,</claim-text>
<claim-text>wherein said second setting step sets the attributes of the source page to be inserted after the source page has been inserted to corresponding attributes of the document in the event said second determining step determines that the chapter of which the source page is a part has specific attributes and in the event said third determining step determines that priority is not to be given to the specific chapter attributes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00039" num="00039">
<claim-text>39. A data processing apparatus for processing original data stored on a computer-readable medium, including data of a plurality of pages of one or more chapters of a document with respectively set page attributes and data of a plurality of chapters with respectively set chapter attributes, comprising:
<claim-text>an insertion unit adapted to insert page data of a source page into a designated destination chapter, the source page having attributes previously set;</claim-text>
<claim-text>an inquiring unit adapted to inquire, using a graphical user-interface, whether or not to keep attributes previously set for the source page before inserted into the destination chapter after the source page has been inserted into the destination chapter by said inserting unit;</claim-text>
<claim-text>a first determining unit configured to determine whether a user has instructed the saving and setting of previously-set attributes of a source page to be inserted into the destination chapter after the source page has been inserted into the destination chapter by said insertion unit after the inquiry made by said inquiring unit or whether the user has instructed to not save previously-set attributes of a source page to be inserted into the destination chapter after the source page has been inserted into the destination chapter by said insertion unit after the inquiry made by said inquiring unit;</claim-text>
<claim-text>a first setting unit configured to save and set the previously-set attributes of the source page to be inserted into the destination chapter after the source page has been inserted into the destination chapter so that the inserted source page contains the saved attributes after being inserted into the destination chapter in response to said first determining unit determining that the user has instructed the saving of attributes of the source page;</claim-text>
<claim-text>a second determining unit configured to determine whether a chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining unit determining that the user has instructed not to save previously-set attributes of the source page to be inserted; and</claim-text>
<claim-text>a second setting unit configured to set the attributes of the source page to be inserted after the source page has been inserted into the destination chapter to the specific attribute of the chapter or a corresponding attribute of the document, in response to the determination of said second determining unit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00040" num="00040">
<claim-text>40. The data processing apparatus according to <claim-ref idref="CLM-00039">claim 39</claim-ref>, wherein said inquiring unit comprises a display unit adapted to display a user-interface screen as to whether or not to keep the attributes previously set for the source page as the attributes of the inserted page.</claim-text>
</claim>
<claim id="CLM-00041" num="00041">
<claim-text>41. The data processing apparatus according to <claim-ref idref="CLM-00039">claim 39</claim-ref>, wherein the apparatus is a book-editing apparatus, the original data includes book-editing data, and the attributes include book-editing attributes.</claim-text>
</claim>
<claim id="CLM-00042" num="00042">
<claim-text>42. The data processing apparatus according to <claim-ref idref="CLM-00039">claim 39</claim-ref>, wherein the setting unit sets the attributes previously set for the source page prior to insertion as attributes of the inserted page.</claim-text>
</claim>
<claim id="CLM-00043" num="00043">
<claim-text>43. The data processing apparatus according to <claim-ref idref="CLM-00039">claim 39</claim-ref>, wherein the setting unit sets the attributes previously set for the source page prior to insertion as attributes of the destination chapter into which the source page is inserted.</claim-text>
</claim>
<claim id="CLM-00044" num="00044">
<claim-text>44. A data processing apparatus according to <claim-ref idref="CLM-00039">claim 39</claim-ref>,
<claim-text>wherein said second setting unit sets the attributes of the source page to be inserted after the source page has been inserted to the corresponding specific attribute of the chapter when said second determining unit determines that the chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining unit determining that the user has not instructed saving of previously-set attributes of the source page to be inserted.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00045" num="00045">
<claim-text>45. A data processing apparatus according to <claim-ref idref="CLM-00044">claim 44</claim-ref>,
<claim-text>further comprising a third determining unit for determining whether to give priority to the specific chapter attributes in the event the second determining unit determines that the chapter has specific attributes,</claim-text>
<claim-text>wherein said second setting unit sets the attributes of the source page to be inserted after the source page has been inserted to the corresponding specific attribute of the chapter when i) said second determining unit determines that the chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining unit determining that the user has not instructed saving of previously-set attributes of the source page to be inserted, and ii) said third determining unit determines that priority is given to the specific chapter attributes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00046" num="00046">
<claim-text>46. A data processing apparatus according to <claim-ref idref="CLM-00039">claim 39</claim-ref>,
<claim-text>further comprising a third determining unit for determining whether to give priority to the specific chapter attributes in the event the second determining unit determines that the chapter has specific attributes,</claim-text>
<claim-text>wherein said second setting unit sets the attributes of the source page to be inserted after the source page has been inserted to corresponding attributes of the document in the event said second determining unit determines that the chapter of which the source page is a part has specific attributes and in the event said third determining unit determines that priority is not to be given to the specific chapter attributes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00047" num="00047">
<claim-text>47. A computer-readable storage medium storing a program for processing original data that includes data of a plurality of pages of one or more chapters of a document with respectively set page attributes and data of a plurality of chapters with respectively set chapter attributes, the program comprising:
<claim-text>an insertion module for inserting page data of a source page into a designated destination chapter, the source page having attributes previously set;</claim-text>
<claim-text>an inquiring module for inquiring, using a graphical user-interface, whether or not to keep attributes previously set for the source page inserted into the destination chapter after the source page has been inserted into the destination chapter by said insertion module;</claim-text>
<claim-text>a first determining module for determining whether a user has instructed the saving and setting of previously-set attributes of a source page to be inserted into the destination chapter after the source page has been inserted into the destination chapter by said insertion module after the inquiry made by said inquiring module or whether the user has instructed to not save previously-set attributes of a source page to be inserted into the destination chanter after the source page has been inserted into the destination chapter by said insertion module after the inquiry made by said inquiring module;</claim-text>
<claim-text>a first setting module for saving and setting the previously-set attributes of the source page to be inserted into the destination chapter after the source page has been inserted into the destination chapter so that the inserted source page contains the saved attributes after being inserted into the destination chapter in response to said first determining module determining that the user has instructed the saving of attributes of the source page;</claim-text>
<claim-text>a second determining module for determining whether a chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining module determining that the user has instructed not to save previously-set attributes of the source page to be inserted; and</claim-text>
<claim-text>a second setting module for setting the attributes of the source page to be inserted after the source page has been inserted into the destination chapter to the specific attribute of the chapter or a corresponding attribute of the document, in response to the determination of said second determining module.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00048" num="00048">
<claim-text>48. A computer-readable storage medium according to <claim-ref idref="CLM-00047">claim 47</claim-ref>,
<claim-text>wherein said second setting module sets the attributes of the source page to be inserted after the source page has been inserted to the corresponding specific attribute of the chapter when said second determining module determines that the chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining module determining that the user has not instructed saving of previously-set attributes of the source page to be inserted.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00049" num="00049">
<claim-text>49. A computer-readable storage medium according to <claim-ref idref="CLM-00048">claim 48</claim-ref>,
<claim-text>further comprising a third determining module for determining whether to give priority to the specific chapter attributes in the event the second determining module determines that the chapter has specific attributes,</claim-text>
<claim-text>wherein said second setting module sets the attributes of the source page to be inserted after the source page has been inserted to the corresponding specific attribute of the chapter when i) said second determining module determines that the chapter of which the source page is a part has a specific attribute different from a corresponding attribute of the document in response to said first determining module determining that the user has not instructed saving of previously-set attributes of the source page to be inserted, and ii) said third determining module determines that priority is given to the specific chapter attributes.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00050" num="00050">
<claim-text>50. A computer-readable storage medium according to <claim-ref idref="CLM-00047">claim 47</claim-ref>,
<claim-text>further comprising a third determining module for determining whether to give priority to the specific chapter attributes in the event the second determining module determines that the chapter has specific attributes,</claim-text>
<claim-text>wherein said second setting module sets the attributes of the source page to be inserted after the source page has been inserted to corresponding attributes of the document in the event said second determining module determines that the chapter of which the source page is a part has specific attributes and in the event said third determining module determines that priority is not to be given to the specific chapter attributes.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
