<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299328-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299328</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11128954</doc-number>
<date>20050512</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>12</main-group>
<subgroup>14</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>711163</main-classification>
<further-classification>711206</further-classification>
<further-classification>711112</further-classification>
<further-classification>714  8</further-classification>
</classification-national>
<invention-title id="d0e43">Method and apparatus for disc drive data security using a defect list</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5930825</doc-number>
<kind>A</kind>
<name>Nakashima et al.</name>
<date>19990700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711163</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6496943</doc-number>
<kind>B1</kind>
<name>Belser et al.</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6771446</doc-number>
<kind>B1</kind>
<name>Noble</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00004">
<othercit>U.S. Appl. No. 09/795,623, Noble.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>4</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>711111-112</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711163-164</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>711202</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714  6</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714  8</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714723</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>6</number-of-figures>
</figures>
<us-related-documents>
<division>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>10871683</doc-number>
<kind>00</kind>
<date>20040616</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>6944735</doc-number>
<kind>A </kind>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>11128954</doc-number>
</document-id>
</child-doc>
</relation>
</division>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>09795877</doc-number>
<kind>00</kind>
<date>20010228</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>6782458</doc-number>
<kind>A </kind>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>10871683</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60185257</doc-number>
<kind>00</kind>
<date>20000228</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20050216772</doc-number>
<kind>A1</kind>
<date>20050929</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Noble</last-name>
<first-name>Gayle L.</first-name>
<address>
<city>Boulder Creek</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Seagate Technology LLC</orgname>
<role>02</role>
<address>
<city>Scotts Valley</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Kim</last-name>
<first-name>Matthew</first-name>
<department>2186</department>
</primary-examiner>
<assistant-examiner>
<last-name>Patel</last-name>
<first-name>Hetul</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Method and apparatus for storing and retrieving copy-protected data within storage devices such as, for example, disc drives. Data that is to be copy protected is written on the storage device. A first data list, such as a manufacturer's storage device defect list, is copied and used to make a second data list. Then, the first data list is modified such that the area where the copy protected data is stored is identified as defective. Unless a request to read the copy protected data is received, the first data list is used and the copy protected data area is considered defective. However, if a request to read the copy protected data is received, the second data list is used and the copy protected data is read from its storage location.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="203.12mm" wi="157.56mm" file="US07299328-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="214.63mm" wi="174.41mm" file="US07299328-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="191.35mm" wi="137.08mm" file="US07299328-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="182.29mm" wi="168.91mm" file="US07299328-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="231.90mm" wi="161.88mm" file="US07299328-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="189.91mm" wi="134.54mm" file="US07299328-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="221.57mm" wi="167.39mm" file="US07299328-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO A RELATED APPLICATION</heading>
<p id="p-0002" num="0001">This invention is based on U.S. Provisional Patent Application Ser. No. 60/185,257 filed Feb. 28, 2000, entitled Use Defect Lists To Hide Copy-Protected Data filed in the name of Gayle L. Noble. The priority of this provisional application is hereby claimed. This is a divisional of application Ser. No. 10/871,683 filed on Jun. 16, 2004 now U.S. Pat. No. 6,944,735, which is a continuation of Ser. No. 09/795,877 filed on Feb. 28, 2001 now U.S. Pat. No. 6,782,458, which also claims priority to U.S. Provisional Patent Application Ser. No. 60/185,257 filed Feb. 28, 2000.</p>
<p id="p-0003" num="0002">U.S. Patent application entitled “Method and Apparatus for Disc Drive Data Security Using A Servo Wedge”, Ser. No. 09/796,197 filed on Feb. 28, 2001 filed in the name of Gayle L. Noble is hereby incorporated herein by reference in its entirety.</p>
<p id="p-0004" num="0003">U.S. patent application entitled “Method and Apparatus for Disc Drive Data Security Using Physical Location”, Ser. No. 09/795,623 filed on Feb. 28, 2001 filed in the name of Gayle L. Noble is hereby incorporated herein by reference in its entirety.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0005" num="0004">1. Field of the Invention</p>
<p id="p-0006" num="0005">The present invention generally relates to storing and retrieving copy-protected data on a disc drive.</p>
<p id="p-0007" num="0006">2. Background of the Related Art</p>
<p id="p-0008" num="0007">With the advent of the recording and playing of digital data, the need to store copy-protected data on disc drives becomes increasingly a necessity. Digital data is rapidly becoming the standard format by which industries, such as the entertainment industry, record and play multimedia. Paid for programming available to the public such as movies, sound tracks, music recordings, and the like, are increasing in demand. With digital recording, the public has more options than ever to listen to and/or record digital audio and video with unparalleled recording and playback quality.</p>
<p id="p-0009" num="0008">One exemplary storage system being used more frequently to store digital multi-media is a computer controlled disc-based storage drive, e.g., a disc drive. Disc drives are capable of storing large amounts of digital data in a relatively small area. Disc drives store information on one or more recording media. The recording media conventionally take the form of a circular storage disc, e.g., media, having a plurality of recording tracks. Conventional disc drives include a plurality of the storage discs, vertically aligned, and each with at least on magnetic head for reading or writing information to the media. Typically, the magnetic head is attached to a positioner arm assembly that uses servomotors, such as stepper motors, to align the magnetic head above the disc. The location of the magnetic head is typically determined by a disc controller that is given the position of a data area on the disc to read or write data. The precise location of the head is typically accomplished by incorporating a closed-loop electro-mechanical servo system with a dedicated servo region, or regions, used to provide continuous feedback to the system to maintain accurate positioning of the data heads.</p>
<p id="p-0010" num="0009">Unfortunately, due to the high quality of the data and the fact that the data stored on digital storage systems, such as disc drives, is often unprotected and easily copied, the copying and selling of unauthorized copies of digitally recorded material is on the rise. Consider the case where a paid for program such as an audio file is downloaded via a network of computers such as the Internet, to a disc drive for play by a client who has paid for the file. Often, the file may be copied to another storage media or to another disc drive for use by another user unless copy protection is used. This often referred to as “pirating” a copy of the file. Additionally, the file may be repackaged and sold by others for profit without permission, often called “software piracy”. In addition, the files may be shared by other users by playing from the owner's computer allowing the end user the benefit of the file without purchasing the file from the owner.</p>
<p id="p-0011" num="0010">Conventional digital copy-protection schemes involve techniques such as registration, encryption, digital watermarking, <b>5</b>C content, and the like. For example, software copy protection schemes often involve the use of copy-protection techniques that require issuing registration numbers with each package. When you install the software, you must enter the registration number. This technique does not prevent all unauthorized copying, but it limits it. In addition, users may not be able to obtain updates to a software product unless they own the original diskettes and documentation. Unfortunately, the user may forget, or may have difficulty in registering the software and may become frustrated if the software stops working and/or working properly.</p>
<p id="p-0012" num="0011">For conventional multimedia, data stored on optical surfaces such as found on a digital versatile disc (DVD) is often copy protected. For example, the digital-video format includes a content scrambling system (CSS) to prevent users from copying discs. The DVD system may also use key based techniques such as the <b>5</b>C technique that has software keys that expire after use. Unfortunately, this means that today's DVD players may not be able to play DVD-video discs without a software and/or hardware upgrade to decode the encrypted and/or keyed data even though the use may be authorized.</p>
<p id="p-0013" num="0012">Another issue with conventional copy protection is that of making backups of the data. For example, a user may have a computer that they need to backup the data, conventional encryption techniques often require that a hardware and/or specific software key(s) be used before the data can be successfully copied. Unfortunately, the user may not have the correct hardware or software key to allow the transfer of the data and may become frustrated.</p>
<p id="p-0014" num="0013">Furthermore, most conventional copy protection techniques such as CSS are defeated over time causing the digital-video and software industry to constantly upgrade the hardware, and/or software techniques to combat the unauthorized copying. The constant upgrading and development of protection techniques that are eventually exposed and defeated causes an increase in the cost of the product as well as possible incompatibility issues with existing systems.</p>
<p id="p-0015" num="0014">Thus, what is needed is a method that allows the recording and playing of copy protected material to the user without the ability to copy the data or use the data in an unauthorized manner without affecting the compatibility of the storage device to operate with non-copy protected data.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0016" num="0015">The present invention generally provides a method and apparatus for storing and retrieving copy protected data within storage devices such as a disc drive. One aspect of the present invention provides a method for writing on a disc drive data to be copy protected including the steps of providing data to be copy protected, then copying a first data list to a second data list, writing the data to be copy protected to a disc drive media, and then modifying the status of the copy protected data within the first data list, such as a manufacture's defect list, as defective.</p>
<p id="p-0017" num="0016">Another aspect of the invention provides a method for reading copy protected data from a disc drive includes determining if a request to read copy protected data has been issued, then if the request to read copy protected data has not been issued then reading at least one data location status from a first data list wherein the location status indicates the location of the data as defective, but if the request to read copy protected data has been issued then reading the data location from a second data list and reading the data.</p>
<p id="p-0018" num="0017">One aspect of the present invention provides a disc drive system includes a signal-bearing media means for storing data, a code memory means coupled to a read/write controller means for controlling the reading and writing of data to the signal-bearing media, a means for reading and writing the data to the signal-bearing media and a processor means coupled to the code memory and the read/write controller. The processor includes a program which, when executed on the processor for a write sequence, is configured to perform the steps including copying a first data list to a second data list, writing the data to be copy protected to the signal-bearing media, and modifying the status of the copy protected data within the first data list as defective. When the program is executed on the processor, for a read sequence, is configured to perform the step of determining if a request to read copy-protected data has been issued. If the request to read copy protected data has not been issued then reading at least one data location status from the first data table wherein the location status indicates the location of the data as defective, if the request to read copy protected data has been issued then reading the data location from the second data table and reading the data.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0019" num="0018">So that the manner in which the above recited features, advantages and objects of the present invention are attained and can be understood in detail, a more particular description of the invention, briefly summarized above, may be had by reference to the embodiments thereof which are illustrated in the appended drawings. It is to be noted, however, that the appended drawings illustrate only typical embodiments of this invention and are therefore not to be considered limiting of its scope, for the invention may admit to other equally effective embodiments.</p>
<p id="p-0020" num="0019">Other features and advantages of the invention will become apparent to a person of skill in this field who studies the following description of an embodiment given below in association with the following drawings.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 1</figref> is a plan view of a typical disc-based apparatus for reading and writing data on a media wherein the present invention may be used to advantage.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 2</figref> is a plan view of typical media for storing data wherein the present invention may be used to advantage.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 3</figref> illustrates a memory core for storing programming data in which the present invention may be used to advantage.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 4</figref> is a flow diagram of a method for a start-up sequence for the disc-based apparatus of <figref idref="DRAWINGS">FIG. 1</figref> in accordance with the present invention.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 5</figref> is a flow diagram of a method for a write sequence for the disc-based apparatus of <figref idref="DRAWINGS">FIG. 1</figref> in accordance with the present invention.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 6</figref> is a flow diagram of a method for a read sequence for the disc-based apparatus of <figref idref="DRAWINGS">FIG. 1</figref> in accordance with the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
<p id="p-0027" num="0026">Embodiments of the invention have particular advantages in electronic data storage systems. One exemplary electronic data storage system commonly used in the computer industry, well suited for supporting the digital data copy protection method described herein, is known as a disc drive. As will be described below, aspects of the preferred embodiment pertain to specific method steps implementable on computer disc-drive systems.</p>
<p id="p-0028" num="0027">In one embodiment, the invention may be implemented as part of a computer program-product for use with computer disc-drive systems. The programs defining the functions of a preferred embodiment can be provided to the disc drive via a variety of signal-bearing media, which include but are not limited to, (i) information permanently stored on non-writable storage media (e.g. read-only memory devices within a computer such as read only CD-ROM disks readable by a CD-ROM or DVD drive; (ii) alterable information stored on a writable storage media (e.g. floppy disks within diskette drive or hard-disc drive); or (iii) information conveyed to a computer by communications medium, such as through a computer or telephone network, including wireless communication. Such signal-bearing media, when carrying computer-readable instructions that direct the functions of the present invention, represent alternative embodiments of the present invention. It may also be noted that portions of the product program may be developed and implemented independently, but when combined together are embodiments of the present invention.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 1</figref> is a plan view of a typical disc-based apparatus for reading and writing data on a media wherein the present invention may be used to advantage. <figref idref="DRAWINGS">FIG. 1</figref> illustrates one embodiment of the invention including disc drive electronics <b>30</b> which in general includes an interface <b>39</b> adapted to receive external signals and data, and a Head Disc Assembly Interface (HDAI) <b>38</b> for connecting the disc drive electronics <b>30</b> to the head disc assembly (HD) <b>82</b>. The HD <b>82</b> includes read/write transducer head(s) <b>40</b> coupled via wires <b>46</b> to the HDIA <b>38</b>, a spindle motor <b>41</b>, an actuator arm <b>49</b>, a servo actuator <b>47</b>, and other disc drive components that are well known in the art. The read/write transducer head(s) <b>40</b> are mounted on the actuator arm <b>49</b>. As the servo actuator <b>47</b> moves the actuator arm <b>49</b>, the read/write transducer head(s) <b>40</b> fly above a media <b>50</b> to read and write data to the media <b>50</b>. The media <b>50</b> typically includes a disc or discs coated with a recording material such as ferrous iron, magneto-optical media, and other materials adapted to hold a magnetic charge. Media <b>50</b> may also include optical media such as a DVD adapted to optically store digital information. The set top box <b>80</b>, coupled to interface <b>39</b>, is used to communicate with video and audio sources such as digital cable TV systems, digital satellite, and the like and is adapted to handshake with the disc drive electronics <b>30</b> so as to control the inflow/outflow and protection of copy protected data. The step top box <b>80</b> is of any conventional design adapted to receive digital information and transmit the information to the interface, and communicate with the disc drive electronics <b>30</b> through interface <b>39</b> to interface/disc/servo controller <b>31</b>. The set top box may communicate with the interface through any conventional communication mode such as SCSI, ATA, serial, IEEE 488, and any other form of electronic data transfer. Illustrative multimedia formats include audio files (e.g., AU, WAV, AIFF, MIDI, MP3), video files (e.g., MPEG, AVI), image files (GIF, JPEG, XBM, TIFF, PICT, Raster file) and other formats known in the art.</p>
<p id="p-0030" num="0029">The interface/disc/servo controller <b>31</b> provides a translation and command interface between the set top box <b>80</b> and disc drive electronics <b>30</b> through the interface <b>39</b>. The interface/disc/servo controller <b>31</b> is directly connected to the buffer memory <b>32</b> through a memory bus connection <b>66</b>. The buffer memory <b>32</b> may store program code and/or data for use with the operation of the drive. Interface/disc/servo controller <b>31</b> is also connected via a read/write bus <b>44</b> to CPU <b>34</b> used for processing the disc drive commands, the code memory <b>35</b> is adapted to store operational data and commands, and the servo power electronics <b>36</b> are adapted to operate the servomotor <b>41</b> and actuator arm <b>49</b>. Servo power electronics <b>36</b> are typically connected to the HD <b>82</b> via servo control connection <b>84</b> to a plurality of FET switches <b>37</b> that control the spin motor <b>41</b>. The HDAI <b>38</b> provides an electrical connection between the printed circuit board assembly (PCBA) <b>84</b> including the internal disc drive electronics <b>30</b>, and the HD <b>82</b> including the disc drive internal mechanical and electromechanical components. Read/write channel electronics <b>33</b> used to transmit data to and from the media <b>50</b> via data bus <b>42</b> include read write logic <b>33</b><i>a</i>, write logic <b>33</b><i>b</i>, and servo logic <b>33</b><i>c</i>, and includes a connection to the interface/disc/servo controller <b>31</b> through the data bus <b>42</b>. A serial bus <b>43</b> is used to send configuration commands from the CPU <b>34</b> to the read/write channel electronics <b>33</b>.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 1</figref> is merely one hardware configuration for a disc-drive data storage system. A preferred embodiment of the present invention can apply to any comparable hardware configuration, regardless of whether the disc-drive data storage apparatus is a complicated, multi-media storage apparatus including a plurality of media types, or a single disc-drive data storage apparatus.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 2</figref> is a plan view of the media <b>50</b> for storing data wherein the present invention may be used to advantage. <figref idref="DRAWINGS">FIG. 2</figref> illustrates exemplary data storage tracks <b>208</b> on the media <b>50</b> including data wedges <b>210</b> separated by a plurality of servo wedges <b>220</b> in accordance to the present invention. As necessary, <figref idref="DRAWINGS">FIG. 1</figref> is referenced in the following discussion of <figref idref="DRAWINGS">FIG. 2</figref>. For clarity, only portions of the tracks <b>208</b> are shown. Illustratively, a plurality of concentric tracks <b>208</b> are shown representing a plurality of data wedges <b>210</b> and servo wedges <b>220</b> extending across the media for data storage and retrieval by the read/write head(s) <b>40</b>. As the read/write head(s) <b>40</b> fly over the media <b>50</b>, the servo actuator <b>47</b> moves the actuator arm <b>49</b> to a particular track <b>208</b> on the media <b>50</b> in response from commands of the interface/disc/servo controller <b>31</b>. The data wedges <b>210</b> are generally used for storing external data from an external user such as multimedia files and are generally accessible by the user through the interface <b>39</b>. Servo wedges <b>220</b> are portions of each track <b>208</b> that may include read/write head(s) alignment indicia, physical address information, and check pointing data used for defect management. Servo wedge data is generally for the drive use and is generally inaccessible to the outside user.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 3</figref> illustrates the code memory <b>35</b> for storing programming data in which the present invention may be used to advantage. The code memory <b>35</b> is preferably random access memory sufficiently large to hold the necessary programming and data structures of the invention. The code memory <b>35</b> may be used to store operating code, and other run-time code that enables the drive. The contents of the code memory <b>35</b> may also be stored to a plurality of reserved areas of the media <b>50</b> or into other areas of the drive electronics <b>30</b> such as buffer memory <b>32</b> for redundancy.</p>
<p id="p-0034" num="0033">The code memory <b>35</b> further includes a logical to physical translation program <b>345</b> adapted to transform logical block addresses (LBA) to physical media coordinates. Data communicated to and from a data storage system is normally managed by the LBA rather than by physical address. Data sectors are numbered blocks of data to be stored and retrieved. Data sectors are the fundamental units of data handled by the data storage system and are usually of fixed length, e.g., 512 bytes. In one aspect of the invention, one data sector equals the length of one data wedge <b>210</b>. However, if the data wedges <b>210</b> are large, as is often the case with magnetic storage systems, several logical addressed data sectors may be stored in a single physical data wedge <b>210</b>. The physical translation program <b>345</b> coordinates the translation of the logical address of a particular block of data to the physical address of the location at which the data is stored.</p>
<p id="p-0035" num="0034">The coordination between logical addressing and physical addressing is complicated by defects in the recording material in which the data cannot be reliable stored and retrieved. Defects should therefore be skipped, that is, no attempt should be made to either write to or read from them. The details of one exemplar defect management method and apparatus is disclosed in U.S. patent application Ser. No. 09/241,795, entitled “Apparatus and Method for Efficient Defect Management In a Magneto-Optical data Storage System,” Belser et al., filed on Feb. 1, 1999, which is hereby incorporated herein by reference in its entirety.</p>
<p id="p-0036" num="0035">During manufacture, the recording media <b>50</b> is usually written to and then read back from to determine which physical addresses are defective. A manufacture's defect list <b>305</b>, i.e., drive defect list, maps the relationship between logical and physical addresses between the non-defective physical addresses and logical addresses, is stored on the media <b>50</b> by the manufacture, and loaded into the code memory <b>35</b> during operation. Additionally, as the media <b>50</b> is used, other defects may occur through, for example, the read/write head(s) <b>40</b> inadvertently touching the surface of the media <b>50</b> during a read and/or write operation and physically damaging a data sector on the media <b>50</b>. Media defects subsequent to the manufacturer's defect list <b>305</b> are placed in the manufacturer's defect grown list <b>315</b>. Thus, the manufacturer's defect grown list literally “grows” as the media <b>50</b> is used. In one aspect of the invention, the code memory <b>35</b> further includes a copy of the manufacture's defect list <b>310</b>, and an identical copy of the manufacture's grown list <b>320</b> for use with the copy protection program <b>325</b>.</p>
<p id="p-0037" num="0036">To use the manufacture's defect list <b>305</b>, a defect list pointer <b>322</b> is called during the reading of the manufacturer's defect list <b>305</b>. Additionally, a grown defect list pointer <b>324</b> is also used to point the operating code to the manufacturing defect grown list <b>315</b>. The drive then has the information necessary to skip bad data areas and record data to reliable data sectors. In one aspect, during operation, both the original and copy of the defect grown lists are kept identically the same. When the disc drive is powered down, the manufactures defect grown list <b>315</b> and an identical copy of the manufactures defect grown list <b>320</b> are stored to reserved area(s) on the media <b>50</b>, and/or to non-volatile memory, for the next power up sequence.</p>
<p id="p-0038" num="0037">The code memory <b>35</b> further includes the copy protection program <b>325</b> used to allow the reading and writing of copy-protected data. The copy protection program <b>325</b> generally includes format code <b>330</b> to allow the disc drive electronics <b>30</b> to format the drive data sectors, reassign code <b>335</b> to allow the data to be reassigned to other data sectors, and auto reallocation code <b>340</b> used to automatically reallocate data on the media <b>50</b> when the drive is reallocating data during a reallocation process for example when defects are found or when the media <b>50</b> is being optimized for space. While code memory <b>35</b> is shown as a single entity, it should be understood that code memory <b>35</b> may in fact may be volatile or non-volatile, comprise a plurality of modules, and that the code memory <b>35</b> may exist at multiple levels, from high speed registers and caches to lower speed but larger DRAM chips.</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 4</figref> is a flow diagram of a method <b>400</b> for a start-up sequence for the disc-based apparatus of <figref idref="DRAWINGS">FIG. 1</figref> in accordance with the present invention. As necessary, <figref idref="DRAWINGS">FIGS. 1–3</figref> are referenced in the following discussion of <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 4</figref> is entered at step <b>405</b> when for example the set top box <b>80</b> instructs the disc drive electronics <b>30</b> to read or write data to media <b>50</b>. At step <b>410</b>, the interface/disc/servo controller <b>31</b> initializes the disc drive electronics <b>30</b>, CPU <b>32</b>, the code memory <b>35</b>, the servo power <b>36</b>, FETs <b>37</b>, the read/write channels <b>33</b>, and the buffer memory <b>32</b> and begins the process of “spinning”, i.e., rotating, the media <b>50</b> up to prepare the media <b>50</b> for a read/write operation. At step <b>415</b>, method <b>400</b> determines whether the servomotor <b>41</b> is functioning properly. If the servomotor <b>41</b> is working improperly, the method <b>400</b> proceeds to step <b>420</b> and spins the servomotor <b>41</b> down. If the servomotor <b>41</b> is functioning properly, the method <b>400</b> proceeds to step <b>425</b>. At step <b>425</b>, the actuator arm <b>46</b> positions the read/write transducer head(s) <b>40</b> to read the physical layout data and the manufacturing defect list <b>305</b> storing them within a reserved area such as a reserved servo wedge <b>220</b> and/or memory. At step <b>430</b>, the manufacturer's grown defect list <b>315</b> is read from a reserved area on the media <b>50</b> and/or non-volatile memory and loaded into the code memory <b>35</b> into a separate location. At step <b>435</b>, the copy of the manufacturer's defect list <b>310</b> and the copy of manufacturer's defect grown list <b>320</b> are loaded into code memory <b>35</b>. However, if the copy protection program <b>325</b> had never been called, as may be the case with a first turn on of the drive “original” spin up, there would not be a copy of a manufacture's defect list <b>310</b> to load. If this were the case, the method <b>400</b> would copy the manufacture's defect list <b>305</b> into the copy of the manufacture's defect list <b>310</b> data area of code memory <b>35</b>.</p>
<p id="p-0041" num="0040">At step <b>440</b>, method <b>400</b> determines if the media <b>50</b> is properly formatted to receive data from the read/write transducer head(s) <b>40</b>. If the media <b>50</b> is not properly formatted, then method <b>400</b> proceeds to step <b>445</b> to set the read/write commands as invalid and then proceeds to step <b>450</b>. If the media <b>50</b> is properly formatted, then method <b>400</b> proceeds to step <b>450</b>. At step <b>450</b>, the method <b>400</b> determines whether the copy protection program <b>325</b> has been previously initialized, e.g., the copy protection program <b>325</b> was called from the set top box <b>80</b> or used previously. If the copy protection program <b>325</b> has not been previously initialized, i.e., used or called, then method <b>400</b> proceeds to step <b>475</b> and copies the manufactures grown list <b>315</b> to a reserved area on the media and/or memory, i.e., code memory <b>35</b> and/or buffer memory <b>32</b>, and maintains the copy identically to the manufacturer's defect grown list <b>315</b> during drive operation for the next power up sequence. In one aspect, the lack of a copy of the manufacture's defect list <b>310</b> found at step <b>435</b> may indicate that the copy protection program <b>325</b> has not been previously initialized. Subsequently, the method <b>400</b> proceeds to step <b>480</b>. If the copy protection program <b>325</b> has been previously initialized, i.e., called, then method <b>400</b> proceeds to step <b>475</b>. At step <b>475</b>, the original manufacturing defect grown list <b>315</b> is compared to the copy of the manufacture's defect grown list <b>320</b>. Generally, the manufacturer's defect list <b>305</b> is not altered under normal operating conditions, whereas the manufacture's defect grown list <b>320</b> may change during the operation of the drive as new defects are found. However, the manufacture's defect grown list <b>320</b> may be altered using a command through interface <b>39</b>. For example, an interface command through interface <b>39</b> could tell the drive to “throw away” the manufacture's defect grown list <b>320</b>. Therefore, if the original manufacturing defect grown list <b>315</b> is different from the copy of the manufacturing defect grown list <b>320</b>, indicating a possibility of drive tampering, an alarm flag is set. If the manufacture's defect grown list <b>320</b> was altered normally while in use, the manufacture's defect grown list <b>315</b> and the copy of the manufacture's defect grown list <b>320</b> are saved to a reserved area on the media <b>50</b> when the disc drive is powered down and would be identical. Thus, when then the manufacture's defect grown list <b>315</b> and copy of the manufacture's defect grown list <b>320</b> are loaded into code memory <b>35</b> from the media and or non-volatile memory at step <b>430</b> and <b>435</b>, respectively, they should register as identical upon the next power on sequence of method <b>400</b>. In one aspect, the alarm is transmitted to the set top box <b>80</b> that disables the transmission of the copy-protected data. If the original manufacturing defect grown list <b>315</b> is identical to the copy of the manufacturing defect grown list <b>320</b> then method <b>400</b> proceeds to step <b>480</b>. At step <b>480</b>, method <b>400</b> receives a read or a write command. If the read/write commands at step <b>480</b> where set to invalid from step <b>445</b>, then the drive would be unable to be used for storing or retrieving data from the data wedges <b>210</b>. If the read/write commands are set to valid, the method <b>400</b> waits for a read or write command.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 5</figref> a flow diagram of a method <b>500</b> for a method of writing data on the media <b>50</b> of <figref idref="DRAWINGS">FIG. 1 and 2</figref> in accordance with the present invention. As necessary, <figref idref="DRAWINGS">FIGS. 1–4</figref> are referenced in the following discussion of <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 5</figref> is entered at step <b>505</b> when a read or write command is received at step <b>480</b>. At step <b>510</b>, the read/write head(s) <b>40</b> are positioned by actuator arm <b>49</b> in response to interface/disc/servo controller <b>31</b> and data is written onto the media <b>50</b>. At step <b>510</b>, the method <b>500</b> uses the reassign code <b>335</b> and auto reallocation code <b>340</b> to determine which sectors are valid and available to be written to, converts the logical addresses to physical address using the logical to physical address translation program <b>345</b> and writes the data to the appropriate sectors on the media <b>50</b>. At step <b>515</b>, method <b>500</b> determines whether a copy protection command via interface <b>39</b> called the copy protection program <b>325</b>. In one aspect, the set top box <b>80</b> issues the copy protection command to the interface/disc/servo controller <b>31</b>. If the command for copy protection was not received and/or not understood, the method <b>500</b> proceeds to step <b>525</b>. If the command for copy protection was received, the method <b>500</b> proceeds to step <b>520</b>. At step <b>520</b>, the method <b>500</b> modifies the manufacturer's defect list <b>305</b> by mapping the data sectors written to, from step <b>510</b>, within the data wedges <b>210</b> as defective. In one embodiment, only segments of the data sectors are written as defective to increase the processing time and minimize the defect list length. Subsequently, method <b>500</b> proceeds to step <b>525</b>. At step <b>525</b>, method <b>500</b> determines if the write sequence has ended. If the sequence has ended, method <b>500</b> exits. If the write sequence has ended, then method <b>500</b> returns to step <b>510</b> and continues the write sequence. Thus, if the data copy protection was not called, the data may be normally written, and if the data protection was called, the data sectors written to are flagged as defective on the manufacturer's defect list <b>305</b>. However, if defects are found during the written process with or without the copy protection program <b>325</b> called, both the manufacturer's defect grown list <b>315</b> and copy of manufacturer's defect grown list <b>320</b> are updated to reflect the defects. Thus, the grown lists <b>315</b> and <b>320</b> are kept identical until the next power up sequence (i.e., method <b>400</b>) when they are compared.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 6</figref> a flow diagram of a method <b>600</b> for a method of reading data from the media <b>50</b> of <figref idref="DRAWINGS">FIG. 1</figref> in accordance with the present invention. As necessary, <figref idref="DRAWINGS">FIGS. 1–5</figref> are referenced in the following discussion of <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 6</figref> is entered at step <b>605</b> when a read command is received at step <b>480</b>. At step <b>610</b>, method <b>600</b> determines if the copy protection program <b>325</b> was called. If the copy protection program <b>325</b> was not called then method <b>600</b> proceeds to step <b>615</b> and uses the manufacturer's defect list <b>305</b> by setting the defect list pointer <b>322</b> to point to the manufacture's defect list <b>305</b> that has been modified from step <b>520</b>. Method <b>600</b> proceeds to step <b>625</b> described below to read the data. If the copy protection program <b>325</b> was called, then the method <b>600</b> proceeds to step <b>620</b>. At step <b>620</b>, method <b>600</b> sets the defect list pointer <b>322</b> to point to the copy of the manufacture's defect list <b>310</b> to read the data. At step <b>625</b>, method <b>600</b> converts the logical addresses to physical address using the logical to physical address translation program <b>345</b> and then reads the data. If the data being read was written as copy protected from method <b>500</b> and the copy protection program <b>325</b> was called, then the data reads normally as the copy of the manufacturer's defect list <b>310</b> indicates the copy protected data sectors as normal data. From step <b>620</b>, if the data being read was written as copy protected from method <b>500</b>, and the copy protection program <b>325</b> was not called, then the data reads defective as the manufacture's defect list <b>305</b> indicates that the data sector locations of the copy protected material as defective. At step <b>630</b>, method <b>600</b> determines if the read sequence has ended. If the read sequence has ended, the method <b>600</b> proceeds to step <b>635</b> described below. If the read sequence has not ended, the method <b>600</b> proceeds to step <b>625</b> and continues to read the data. At step <b>635</b> the defect list pointer <b>322</b> is set to point to the manufacture's defect list <b>305</b> and exits at step <b>340</b>. Thus, an unauthorized user would not be able to read the data from the disc drive as the copy protected data is flagged as defective.</p>
<p id="p-0046" num="0045">In summary, the present invention generally provides a method and apparatus for storing and retrieving copy protected data within storage devices such as a disc drive. One embodiment of the present invention provides a method <b>500</b> for writing on a disc drive data to be copy protected including the steps of providing data to be copy protected, then copying a first data list to a second data list, e.g., a manufacturer's defect list <b>305</b>, writing the data to be copy protected to a disc drive media <b>50</b>, and then modifying the status of the copy protected data within the first data list as defective. In one aspect, the first and second lists include a defect list, such as a manufacture's defect list <b>305</b>. In another aspect, the first list comprises a manufacture's defect list and the second list includes a copy of the manufacture's defect list where the manufacture's defect list may include the manufacture's defect list <b>305</b>. In one aspect, before the step <b>510</b> of providing data to be written, a step is included that provides a copy protection command signal. The step of providing a copy protection command signal may be a user selectable step. In another aspect, modifying the status of the copy protected data within the first data list as defective includes the step <b>520</b> of marking at least one of the written sector locations as defective. In one aspect, the means for reading and writing the data to the signal-bearing media <b>50</b> includes at least one read/write head <b>40</b> adapted to read and write data to the media <b>50</b>.</p>
<p id="p-0047" num="0046">Another embodiment of the invention provides a method <b>600</b> for reading copy protected data from a disc drive includes determining if a request <b>610</b> to read copy protected data has been issued, then if the request to read copy protected data has not been issued then reading <b>625</b> at least one data location status from a first data list, e.g., manufacturer's defect list <b>305</b> wherein the location status indicates the location of the data as defective, but if the request to read copy protected data has been issued then reading the data location from a second data list, e.g., a copy of the manufacturer's defect list <b>310</b> and reading the data <b>625</b>. In one aspect, the location status indicates the location of the data as a bad sector. In another aspect, the data location status indicates missing data at the location of the data. In one aspect, the first and second list includes a defect list wherein the first list includes a drives defect list, i.e., manufacturer's defect list <b>305</b>. The second list may include a copy of a drive defect list e.g., a copy of the manufacturer's defect list <b>310</b>.</p>
<p id="p-0048" num="0047">One embodiment of the present invention provides a disc drive system includes a signal-bearing media <b>50</b> means for storing data, a code memor controller <b>31</b> means for controlling the reading and writing of data to the signal-bearing media <b>50</b>, a means for reading and writing the data to the signal-bearing media and a processor <b>34</b> means coupled to the code memory <b>35</b> and the read/write controller <b>31</b>. The processor <b>34</b> includes a program <b>500</b> which, when executed on the processor <b>34</b> for a write sequence, is configured to perform the steps including copying <b>435</b> a first data list to a second data list, writing the data <b>510</b> to be copy protected to the signal-bearing media <b>50</b>, and modifying <b>520</b> the status of the copy protected data within the first data list, e.g., manufacturer's defect list, <b>305</b> as defective. When the program is executed on the processor, for a read sequence, is configured to perform the step <b>610</b> of determining if a request to read copy-protected data has been issued. If the request to read copy protected data has not been issued then reading <b>625</b> at least one data location status from the first data table wherein the location status indicates the location of the data as defective, if the request to read copy protected data has been issued then reading <b>625</b> the data location from the second data table, e.g., copy of manufacturer's defect list <b>310</b>, and reading the data. In one aspect, the signal-bearing media <b>50</b> is selected from the group including a semiconductor substrate, an optical substrate, a magneto-optical substrate, and combinations thereof. In another aspect, the step <b>520</b> of modifying the status of the copy protected data within the first data list as defective includes the step <b>520</b> of marking at least one data sector location as defective. In one aspect, the code memory <b>35</b> means is selected from the group of volatile memory, non-volatile memory, media, and combinations thereof. Additionally, the means for reading and writing the data to the signal-bearing media <b>50</b> may include at least one read/write head <b>40</b> adapted to read and write data to the media <b>50</b>. In one aspect, the first and second list includes a defect list, e.g., manufacturer's defect list <b>305</b>. Additionally, the first list may include a drive defect list, e.g., manufacturer's defect list <b>305</b>. In one aspect, the second list may include a copy of a drive defect list, e.g., a copy of manufacturer's defect list <b>310</b>.</p>
<p id="p-0049" num="0048">Although various embodiments which incorporate the teachings of the present invention have been shown and described in detail herein, those skilled in the art can readily devise many other varied embodiments within the scope of the present invention. For example, it is contemplated that the copy protection program <b>325</b> may be integral to the overall drive code, or may be an impendent module within code memory <b>35</b>. Alternatively, the copy protection program <b>325</b> may be partially stored external to the drive and downloaded through the interface <b>39</b>.</p>
<p id="p-0050" num="0049">While foregoing is directed to the preferred embodiment of the present invention, other and further embodiments of the invention may be devised without departing from the basic scope thereof, and the scope thereof is determined by the claims that follow.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>I claim:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for reading copy protected data from a storage device, comprising:
<claim-text>providing a first pointer to access a first data list;</claim-text>
<claim-text>providing a second pointer to access a second data list;</claim-text>
<claim-text>determining if a request to read copy protected data or a request to read unprotected data has issued;</claim-text>
<claim-text>if a request to read unprotected data has issued then using said first pointer, reading at least one data location status from said first data list wherein the location status indicates the location of copy protected data as defective; and</claim-text>
<claim-text>if a request to read copy protected data has issued then using said second pointer, reading the data location from said second data list and reading the copy protected data,</claim-text>
<claim-text>wherein the first data list and the second data list comprise a defect list and the second data list comprises a copy of a manufacturer's defect list.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the location status indicates the location of the copy protected data as a bad sector.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first data list comprises a manufacture's defect list.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. A method for reading copy protected data from a disc drive, comprising:
<claim-text>determining if a request to read copy protected data or a request to read unprotected data has issued;</claim-text>
<claim-text>if a request to read unprotected data has issued then reading at least one data location status from a first data list, wherein the location status indicates the location of copy protected data as defective; and</claim-text>
<claim-text>if a request to read copy protected data has issued then reading the data location from a second data list and reading the copy protected data wherein the first and second data list comprise a defect list and the second list comprises a copy of a manufacture's defect list.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
