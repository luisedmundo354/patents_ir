<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298900-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298900</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10667413</doc-number>
<date>20030923</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2002-285580</doc-number>
<date>20020930</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>918</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>T</subclass>
<main-group>7</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>K</subclass>
<main-group>9</main-group>
<subgroup>34</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>K</subclass>
<main-group>9</main-group>
<subgroup>46</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>K</subclass>
<main-group>9</main-group>
<subgroup>56</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>382176</main-classification>
<further-classification>382195</further-classification>
<further-classification>382199</further-classification>
<further-classification>382201</further-classification>
<further-classification>382205</further-classification>
<further-classification>382224</further-classification>
</classification-national>
<invention-title id="d0e71">Image processing method, image processing apparatus and image processing program</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5583646</doc-number>
<kind>A</kind>
<name>Yamamoto et al.</name>
<date>19961200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358296</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5774580</doc-number>
<kind>A</kind>
<name>Saitoh</name>
<date>19980600</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>382176</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5987171</doc-number>
<kind>A</kind>
<name>Wang</name>
<date>19991100</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>382173</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2002/0085243</doc-number>
<kind>A1</kind>
<name>Kanatsu</name>
<date>20020700</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>358453</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>JP</country>
<doc-number>59-142678</doc-number>
<date>19840800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>JP</country>
<doc-number>62-271080</doc-number>
<date>19871100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>JP</country>
<doc-number>07-152920</doc-number>
<date>19950600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>JP</country>
<doc-number>07-192084</doc-number>
<date>19950700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>JP</country>
<doc-number>08-235349</doc-number>
<date>19960900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>23</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>358  21</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>358462</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382173</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382176</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382190</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382195</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382199</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382201</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382205</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>382224</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>23</number-of-drawing-sheets>
<number-of-figures>25</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20040061883</doc-number>
<kind>A1</kind>
<date>20040401</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Kanatsu</last-name>
<first-name>Tomotoshi</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
<nationality>
<country>JP</country>
</nationality>
<residence>
<country>JP</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Fitzpatrick Cella Harper &amp; Scinto</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Canon Kabushiki Kaisha</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Rogers</last-name>
<first-name>Scott A.</first-name>
<department>2625</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">The present invention relates to an image processing method, an image processing apparatus and an image processing program for dealing with inverted characters (outlined characters) constituted by white pixels on a black ground in a tree structure same as that of normal characters constituted by black pixels on a white ground.</p>
<p id="p-0002" num="0000">In the present invention, black pixel blocks and white pixel blocks are sampled recursively from a binary image, tree structure data indicating a positional relation between the sampled black pixel blocks and white pixel blocks is created, an inverted image is created by white-black-inverting the insides of black pixel blocks that can include inverted characters, of black pixel blocks included in the tree structure data, white pixel blocks and black pixel blacks are sampled from the created inverted image, and data regarding the sampled white pixel blocks and black pixel blocs is added to corresponding nodes of the tree structure data.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="254.25mm" wi="182.80mm" file="US07298900-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="190.50mm" wi="150.28mm" orientation="landscape" file="US07298900-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="189.65mm" wi="140.63mm" orientation="landscape" file="US07298900-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="191.43mm" wi="106.43mm" file="US07298900-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="260.35mm" wi="195.75mm" file="US07298900-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="255.02mm" wi="184.66mm" file="US07298900-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="271.10mm" wi="207.69mm" file="US07298900-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="214.88mm" wi="116.16mm" file="US07298900-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="219.37mm" wi="163.32mm" orientation="landscape" file="US07298900-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="202.44mm" wi="168.49mm" file="US07298900-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="128.86mm" wi="109.47mm" file="US07298900-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="136.40mm" wi="172.21mm" file="US07298900-20071120-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="173.91mm" wi="161.71mm" file="US07298900-20071120-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="113.37mm" wi="146.22mm" file="US07298900-20071120-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="167.39mm" wi="176.53mm" file="US07298900-20071120-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="158.50mm" wi="130.81mm" file="US07298900-20071120-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="149.78mm" wi="152.99mm" file="US07298900-20071120-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="225.81mm" wi="127.68mm" file="US07298900-20071120-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="158.16mm" wi="147.91mm" file="US07298900-20071120-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="160.61mm" wi="158.50mm" file="US07298900-20071120-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="149.52mm" wi="150.20mm" file="US07298900-20071120-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="151.21mm" wi="106.09mm" file="US07298900-20071120-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="164.68mm" wi="156.29mm" file="US07298900-20071120-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="157.23mm" wi="149.69mm" file="US07298900-20071120-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0001">1. Field of the Invention</p>
<p id="p-0004" num="0002">The present invention relates to an image processing method, an image processing apparatus and an image processing program.</p>
<p id="p-0005" num="0003">2. Related Background Art</p>
<p id="p-0006" num="0004">In recent years, information has been increasingly electronified, and thus demand for converting a paper document and an electronified document into each other has been growing. For electronifying a paper document, it is desirable that the printed side of a paper is not just photoelectric-converted into image data using a scanner or the like, but a document image is divided into areas of different natures such as texts, symbols, graphics, photographs and tables, and an optimum format of data is applied for each area such as character code information for character portions, vector data for graphics, lines and table frames, image data for photographs and structural data for contents of tables.</p>
<p id="p-0007" num="0005">In this way, in processing for electronifying a paper document, processing for analyzing the contents written in a document image to divide the contents into sectional areas of different natures such as characters, graphics, photographs and tables, namely area division processing is of great importance.</p>
<p id="p-0008" num="0006">For the methodology of this area division processing, it has been proposed, for example, that a document image read with multi-values (grayscale or color) as shown in <figref idref="DRAWINGS">FIG. 21</figref> is converted into a binary image with a difference in luminance, pixel blocks having black pixels in outlines, existing in the image, are all extracted and classified into characters and non-characters according to their sizes, and pixels are searched recursively from the insides of white pixel areas existing in non-character large black pixel blocks, whereby a situation of pixel blocks is expressed with a hierarchical tree structure shown in <figref idref="DRAWINGS">FIG. 16</figref>. The image is divided into areas having a variety of attributes by processing of grouping character pixel blocks present in the same level of hierarchy to obtain a character area, obtaining graphics and photograph areas from the shapes of non-character pixel blocks and peripheral conditions, obtaining a front area as a set of pixels constituting a hierarchy, and so on, for the tree structure of pixel blocks, whereby an area division result shown in <figref idref="DRAWINGS">FIG. 22</figref> can be obtained. Furthermore, at this time, information suitable for determination of logical structure of a document is provided by making each area having a tree structure shown in <figref idref="DRAWINGS">FIG. 23</figref>.</p>
<p id="p-0009" num="0007">In this area division processing, however, it is not easy to sample an area of luminance inverted characters included in <figref idref="DRAWINGS">FIG. 21</figref>, namely an area of characters constituted not by black-on-white pixels but by white-on-black pixels (inverted character, outlined character) on a binary image, in terms of configuration of processing. In addition, it has been proposed that the numbers of black and white pixels are compared to each other, and the pixels are inverted if it is determined that the number of black pixels is larger, whereby inverted characters can be recognized, but it is difficult to obtain a correlation between normal characters and inverted characters, and it is thus impossible to obtain from a document including both normal characters and inverted characters a tree structure dealing with collectively normal characters and inverted characters of the document.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0010" num="0008">For solving the problems described above, the present invention is characterized in that black pixel blocks and white pixel blocks are sampled recursively from a binary image, tree structure data indicating a positional relation between the sampled black pixel blocks and white pixel blocks is created, an inverted image is created by white-black-inverting the insides of black pixel blocks that can include inverted characters, of black pixel blocks included in the tree structure data, white pixel blocks and black pixel blacks are sampled from the created inverted image, and data regarding the sampled white pixel blocks and black pixel blocs is added to corresponding nodes of the tree structure data.</p>
<p id="p-0011" num="0009">Other features and advantages of the present invention will be apparent from the following description taken in conjunction with the accompanying drawings, in which like reference characters designate the same or similar parts throughout the figures thereof.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0012" num="0010">The accompanying drawings, which are incorporated in and constitute a part of the specification, illustrate embodiments of the invention and, together with the description, serve to explain the principles of the invention.</p>
<p id="p-0013" num="0011"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram showing a configuration of the first embodiment;</p>
<p id="p-0014" num="0012"><figref idref="DRAWINGS">FIG. 2</figref> shows an example of a configuration of apparatus to realize the first embodiment;</p>
<p id="p-0015" num="0013"><figref idref="DRAWINGS">FIG. 3</figref> is a flowchart for explaining area division processing of the first embodiment;</p>
<p id="p-0016" num="0014"><figref idref="DRAWINGS">FIG. 4</figref> is a flowchart for explaining pixel block sampling processing;</p>
<p id="p-0017" num="0015"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart for explaining processing of tracking the outline of black pixels;</p>
<p id="p-0018" num="0016"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart for explaining inverted character sampling processing;</p>
<p id="p-0019" num="0017"><figref idref="DRAWINGS">FIG. 7</figref> is a flowchart for explaining area classification processing;</p>
<p id="p-0020" num="0018"><figref idref="DRAWINGS">FIG. 8</figref> shows an example of pixel block sampling processing by outline tracking;</p>
<p id="p-0021" num="0019"><figref idref="DRAWINGS">FIG. 9</figref> shows an example of inverted character sampling processing;</p>
<p id="p-0022" num="0020"><figref idref="DRAWINGS">FIG. 10</figref> shows eight tracking directions;</p>
<p id="p-0023" num="0021"><figref idref="DRAWINGS">FIG. 11</figref> shows a table for determining tracking directions;</p>
<p id="p-0024" num="0022"><figref idref="DRAWINGS">FIG. 12</figref> shows a table for obtaining a label to be applied to a referred pixel;</p>
<p id="p-0025" num="0023"><figref idref="DRAWINGS">FIG. 13</figref> shows examples of rectangular black pixel blocks and non-rectangular black pixel blocks;</p>
<p id="p-0026" num="0024"><figref idref="DRAWINGS">FIGS. 14A</figref>, <b>14</b>B and <b>14</b>C show examples of arrangement states of white pixels blocks in black pixel blocks;</p>
<p id="p-0027" num="0025"><figref idref="DRAWINGS">FIG. 15</figref> shows an example of a binary image as an input of area division processing;</p>
<p id="p-0028" num="0026"><figref idref="DRAWINGS">FIG. 16</figref> shows an example of a tree structure of pixel blocks;</p>
<p id="p-0029" num="0027"><figref idref="DRAWINGS">FIG. 17</figref> shows an example of an image created for sampling inverted characters;</p>
<p id="p-0030" num="0028"><figref idref="DRAWINGS">FIG. 18</figref> shows an example of a tree structure of pixel blocks to which inverted characters are applied;</p>
<p id="p-0031" num="0029"><figref idref="DRAWINGS">FIG. 19</figref> shows an example of processing of division of an area including inverted character parts;</p>
<p id="p-0032" num="0030"><figref idref="DRAWINGS">FIG. 20</figref> shows an example of a tree structure of an area including inverted character parts;</p>
<p id="p-0033" num="0031"><figref idref="DRAWINGS">FIG. 21</figref> shows an example of a document original to be subjected to area division;</p>
<p id="p-0034" num="0032"><figref idref="DRAWINGS">FIG. 22</figref> shows an example of the result of conventional area division; and</p>
<p id="p-0035" num="0033"><figref idref="DRAWINGS">FIG. 23</figref> shows an example of a conventional area tree structure.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
<p id="p-0036" num="0034">A block diagram of this embodiment is shown in <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0037" num="0035">Reference numeral <b>101</b> denotes an input unit for inputting image data created by photoelectric-converting a paper document, reference numeral <b>102</b> denotes a preprocessing unit for subjecting inputted image data to preprocessing such as binarization, size reduction and noise reduction, and reference numeral <b>103</b> denotes an area division unit for dividing image data into areas for attributes such as characters, lines, graphics and tables. Furthermore, the area division unit <b>103</b> is comprised of a pixel block sampling unit <b>1031</b> for sampling black pixel blocks and white pixel block to create a tree structure data (hierarchical structure data) of pixel blocks, an inverted pixel block sampling unit <b>1032</b> for adding inverted character information to tree structure data of pixel blocks, and an area definition unit <b>1033</b> for classifying areas for attributes in tree structure data of pixel blocks. Reference numeral <b>104</b> denotes an output unit for outputting information of the result of performing division of areas obtained from an image (tree structure data of areas).</p>
<p id="p-0038" num="0036">A schematic diagram of a configuration of apparatus for realizing this embodiment is shown in <figref idref="DRAWINGS">FIG. 2</figref>. A scanner apparatus <b>201</b> performs a photoelectric conversion operation of the input unit <b>101</b> to input image data. A computer apparatus <b>202</b> performs preprocessing <b>102</b> and area division processing <b>103</b>, and receives operational control from a user through instruction means <b>203</b> such as a keyboard and a mouse. Data created by area division processing is outputted to a storage medium installed in a computer such as a hard disk, a display <b>204</b>, a printer <b>205</b>, other apparatuses via a network, and the like.</p>
<p id="p-0039" num="0037">Furthermore, the computer apparatus for performing this embodiment is comprised of a CPU for performing actual process operations, an RAM for reading a program for use as a work area, storage media for storing programs for performing processing corresponding to flowcharts to be described later, and various kinds of data (hard disk, ROM, removal disk (floppy (R) disk, CD-ROM, etc.) or the like), a keyboard and a pointing device for carrying out various kinds of operations, a display for displaying a document or the like to be processed, a network interface for establishing connection with a network, and the like. An image processing program to be executed by the CPU may be supplied from the storage medium, or may be read from an external apparatus via a network. Furthermore, a program is executed in CPU to realize this embodiment, but part or all of the processing thereof may be performed by hardware (electric circuit).</p>
<p id="p-0040" num="0038">The procedure of image processing performed in this embodiment will be described using <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0041" num="0039">At step S<b>301</b>, a paper document is read by a scanner or the like to create image data, and the image data is inputted to the computer.</p>
<p id="p-0042" num="0040">At step S<b>302</b>, image data is converted into a binary image suitable for performing subsequent area division processing in the preprocessing unit <b>102</b>. Specifically, if the inputted image data is a multi-valued image such as color or gray scale, binarization processing for adaptively setting a threshold value and converting the image data into a binary (in this embodiment, the pixel value of a black pixel is considered as 1, and the pixel value of a white pixel is considered as 0), and noise reduction processing for removing isolated points and the like are carried out. Furthermore, for carrying out processing of area division of the image at a high speed, processing for changing the size of inputted image-data to an appropriate image size (conversion of resolution of document images) may be carried out. For example, the processing is carried out by OR scaledown such that the pixel value is set to a representative value 0 when the values of pixels in the 2×2 range are all 0 if the image resolution is reduced to ½ (when the values of pixels in the 4×4 range are all 0 if the image resolution is reduced to ¼), and the pixel value is set to 1 in other cases.</p>
<p id="p-0043" num="0041">At step S<b>303</b>, pixel block sampling processing <b>1031</b> in the area division unit <b>103</b> is performed, in which blocks of black pixels and white pixels are recursively sampled to create a tree structure. This pixel block sampling processing will be described in detail using the flowchart of <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0044" num="0042">At step S<b>401</b>, a black pixel block surrounded by 8 connected lines is sampled. Processing proceeds to S<b>402</b> if the black pixel block can be sampled, and processing proceeds to S<b>408</b> if it cannot be sampled. Furthermore, the black pixel block surrounded by 8 connected lines refers to a set (area) of black pixels sampled by detecting black pixels contacting in any of longitudinal, lateral and slanting directions to track the outline of a set of black pixels. Hereinafter, this set is referred to as a black pixel block. Furthermore, this black pixel block is independent of whether pixels other than outline pixels are white or black, and may have voids of white pixels therein. Furthermore, for the method for tracking the outline of these black pixels, a well known method can be used, and the outline of black pixel block sampling processing will be briefly described below using <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0045" num="0043">At step S<b>501</b>, a binary image (constituted by white pixel value 0 and black pixel value 1) is line-scanned in order from top-left to search a point having a pixel value of 1 (black pixel). For example, the image is scanned on a line-by-line basis to search a black pixel in an order shown by the arrow of <b>801</b> in <figref idref="DRAWINGS">FIG. 8</figref>.</p>
<p id="p-0046" num="0044">At step S<b>502</b>, whether a black pixel has been found or not is determined, and if the black pixel has been found, processing proceeds to step S<b>503</b>, where outline sampling processing is started, with the black pixel as a starting point and also referred point Q. On the other hand, it is determined at step S<b>502</b> that no black pixel has been found, processing is ended. For example, a pixel <b>810</b> is a starting point and also first referred point Q in <figref idref="DRAWINGS">FIG. 8</figref>.</p>
<p id="p-0047" num="0045">At step S<b>503</b>, peripheral pixels are checked in an order described in the table of <figref idref="DRAWINGS">FIG. 11</figref> based on a preceding tracking direction d (direction of tracking from a preceding pixel toward the referred point Q) and states of peripheral pixels, whereby a tracking direction d′ from the referred point Q to a next outline pixel is defined. Here, the tracking direction is represented by any of eight directions N, NE, E, SE, S, SW, W and NW as shown in <figref idref="DRAWINGS">FIG. 10</figref>. In addition, as exceptional processing, the preceding tracking direction d is defined as SE at the first referred point Q (starting point). The table shown in <figref idref="DRAWINGS">FIG. 11</figref> shows an order n in which pixels around the referred point Q is checked with respect to the preceding tracking direction d. If the preceding tracking direction d is SW, for example, peripheral pixels are checked counterclockwise in order from pixels in the NW direction when viewed from the referred point Q (pixels in the NW direction, pixels in the W direction, pixels in the SW direction . . . are checked in this order), and at the time when a black pixel is found, the checking of peripheral images is ended, and the direction in which the black pixel is found is defined as the tracking direction d′. By checking peripheral images in the order shown in <figref idref="DRAWINGS">FIG. 11</figref>, pixels checked in defining the preceding tracking direction d are prevented from being checked when the next tracking direction d′ is defined.</p>
<p id="p-0048" num="0046">At step S<b>504</b>, a label indicating an outline pixel is applied to the pixel of the referred point Q. There are four types of labels, i.e. “A”, “B”, “C” and “D”, and in the area surrounded by the outline, the label A is applied to pixels corresponding to the edge of the left end, the label B is applied to pixels corresponding to the edge of the right end, the label C is applied to pixels corresponding to both left and right edges, and the label D is applied to outline pixels corresponding to neither left nor right edges. This label value is determined from the preceding tracking direction d and next tracking direction d′ and the current label value of Q by using <figref idref="DRAWINGS">FIGS. 11 and 12</figref>.</p>
<p id="p-0049" num="0047">At step S<b>505</b>, a pixel in the nest tracking direction d′ is defined as a new referred point Q, and the tracking direction d′ is substituted in the preceding tracking direction d.</p>
<p id="p-0050" num="0048">At step S<b>506</b>, whether the new referred point Q equals the starting point or not is determined, and if it equals the starting point, then processing proceeds to step S<b>507</b>, and if it does not equal the starting point, then processing returns to step S<b>503</b>, where tracking processing is carried out again.</p>
<p id="p-0051" num="0049">Processing performed at steps S<b>503</b> to <b>506</b> will be described using an example <b>801</b> in <figref idref="DRAWINGS">FIG. 8</figref> as an example. First, the starting point <b>810</b> is defined as a first referred point Q, and pixels are checked from pixels in the direction SW in the order shown in <figref idref="DRAWINGS">FIG. 11</figref>. Here, a black pixel is found in the next tracking direction d′=SW (n=1) from the first referred point Q (<b>810</b>), and referring to <figref idref="DRAWINGS">FIG. 12</figref>, the label “A” is applied to the referred point Q (pixel <b>810</b>), and thereafter the referred point Q moves to lower-left. Subsequently, processing is repeated in the same manner to obtain an outline labeled as shown in an example <b>802</b> in <figref idref="DRAWINGS">FIG. 8</figref>.</p>
<p id="p-0052" num="0050">At step S<b>507</b>, whether an additional branch exists in the referred point Q (starting point) is checked. The determination of whether an additional branch exists is made if the preceding tracking direction d is NE, and it is determined that no additional branch exists if the preceding tracking direction is not NE. If the preceding tracking direction d is NE, pixels in the SE direction and pixels in the E direction are checked in this order when viewed from the referred point Q to determine whether a black pixel exists for pixels around the referred point Q, and at the time when a black pixel is found, it is determined that an additional branch exists, and the referred point Q is moved in the direction d′ in which the branch exists and the tracking direction d′ is substituted in the preceding tracking direction d, and then processing returns to step S<b>503</b>. On the other hand, if no additional branch exists, processing proceeds to step S<b>509</b>.</p>
<p id="p-0053" num="0051">At step S<b>509</b>, a block of pixels surrounded by outline-labeled black pixels is recorded as one black pixel block. Specifically, as an example <b>803</b> in <figref idref="DRAWINGS">FIG. 8</figref>, sequent pixels between a pair of the left edge label “A” and the right edge label “B”, or a single “C” pixel are defined as one segment for each y coordinate (pixel line), and a pixel block is recorded as a set of the segments. Furthermore, in the example <b>803</b> in <figref idref="DRAWINGS">FIG. 8</figref>, for the sake of easy explanation x and y coordinates have as an origin a rectangular upper-left point circumscribed with the black pixel block, but preferably the x and y coordinates have as an origin an upper-left point of the image scaled down at S<b>302</b>.</p>
<p id="p-0054" num="0052">Furthermore, after the sampling of one pixel block is completed (after processing at S<b>509</b> is completed), the sampled pixel block is subjected to attribute classification at steps S<b>402</b> to S<b>407</b>, and then processing returns to S<b>501</b>, where line scanning is carried out again beginning with a pixel adjacent to the previous starting point on the right side to search a next starting point. However, searching is skipped for pixels insides the outlines of black pixel blocks already obtained at this time, namely a pixel of pixel value=“1” is searched ignoring pixels overlapping with segments of black pixel blocks already found.</p>
<p id="p-0055" num="0053">Referring to <figref idref="DRAWINGS">FIG. 4</figref> again, attributes are classified in processing subsequent to step S<b>402</b> using the shapes of black pixel blocks and the shapes of circumscribed rectangles circumscribed with black pixel blocks for all black pixel blocks sampled in processing at step S<b>401</b> (processing in <figref idref="DRAWINGS">FIG. 5</figref>).</p>
<p id="p-0056" num="0054">At step S<b>402</b>, if the size of the subscribed rectangle of a black pixel block is equal to or less than a threshold value predefined for a maximum character height and width predicted in advance, it is determined that the black pixel block is a character element. An attribute of “CHAR” is given to this black pixel block.</p>
<p id="p-0057" num="0055">At step S<b>403</b>, the subscribed rectangular of a black pixel block is longitudinally long or laterally long in size in a ratio equal to or greater than a predetermined ratio, an attribute of “LINE” is given to the black pixel block.</p>
<p id="p-0058" num="0056">At step S<b>404</b>, attention is focused on an outline constituted by black pixels in a black pixel block, and if it is determined that the shape thereof is of slender slanting line, an attribute of “LINE” is given to the black pixel block.</p>
<p id="p-0059" num="0057">At step S<b>405</b>, white pixel blocks surrounded by <b>4</b> connected lines existing in black pixel blocks other than “CHAR” and “LINE” are sampled. The white pixel block surrounded by 4 connected lines is a pixel set surrounded by an outline of longitudinally and laterally connected white pixels. Hereinafter, this set is referred to as a white pixel block.</p>
<p id="p-0060" num="0058">The method for sampling a white pixel block is such that in black pixel outline sampling processing described with <figref idref="DRAWINGS">FIG. 5</figref>, “0” and “1” are inverted, and only connected lines in longitudinal and lateral four directions (N, E, S, W) are permitted with no consideration given to connected lines in slanting directions to sample an outline of white pixels. Otherwise, the track may move out of the black pixel block having a referred point as a base. Because of this limitation, similar processing is carried out without making determinations for slanting directions as tracking directions, in tables of <figref idref="DRAWINGS">FIGS. 11 and 12</figref>, in processing equivalent to step S<b>503</b> in <figref idref="DRAWINGS">FIG. 5</figref>. Furthermore, a table for tracking an outline of white pixels may be prepared instead of the tables of <figref idref="DRAWINGS">FIGS. 11 and 12</figref> and in this case, the table is very small because there are only four tracking directions.</p>
<p id="p-0061" num="0059">At step S<b>406</b>, whether the outline of black pixels is almost rectangular in shape is checked, and if it is almost rectangular, processing proceeds to step S<b>407</b>. If it is not almost rectangular, it is determined that the black pixel block is “NONCHAR”. Examples of rectangular black pixel blocks and non-rectangular black pixel blocks are shown in <figref idref="DRAWINGS">FIG. 13</figref>.</p>
<p id="p-0062" num="0060">At step S<b>407</b>, it is determined that the arrangement of white pixel blocks is good if all white pixel blocks sampled from the inside of the black pixel block considered as being almost rectangular in shape are almost oblong in shape, and they occupy the inside of the black pixel block leaving almost no gaps (subscribed rectangles of white pixel blocks do not overlap one another so that the white pixel blocks are arranged orderly). An attribute of “TABLE” is given to a black pixel block in which the arrangement of internal white pixel blocks is good, while an attribute of “NONCHAR” is given to a black pixel block in which the arrangement of internal white pixel blocks is bad. Examples of arrangement of internal white pixel blocks are shown in <figref idref="DRAWINGS">FIGS. 14A to 14C</figref>. <figref idref="DRAWINGS">FIGS. 14A and 14B</figref> show examples of black pixel blocks classified as “TABLE” because the arrangement of internal white pixel blocks is good, and <figref idref="DRAWINGS">FIG. 14C</figref> shows an example of a black pixel block classified as “NONCHAR” because the arrangement of internal white pixel blocks is bad.</p>
<p id="p-0063" num="0061">At step S<b>408</b>, with attention focused on white pixel blocks existing in a black pixel block classified as “NONCHAR” or “TABLE”, and for the insides of the white pixel blocks, black pixel blocks are sampled in the same manner as in step S<b>401</b> to carry out classification processing similar to that of S<b>402</b> to S<b>407</b>.</p>
<p id="p-0064" num="0062">By processing of S<b>401</b> to S<b>408</b>, black pixel blocks in an image, and white pixel blocks in the black pixel block are sampled, and black pixel blocks are recursively sampled from white pixel blocks inside the “TABLE” and “NONCHAR”.</p>
<p id="p-0065" num="0063">A tree structure is created using pixel blocks existing in each pixel block as child nodes for black pixel blocks and white pixel blocks obtained by carrying out processing shown in <figref idref="DRAWINGS">FIG. 4</figref>. At this time, in the tree structure, attributes classified at steps S<b>402</b> to S<b>407</b> are given to black pixel blocks, and an attribute of “WHITE” is given to white pixel blocks. For example, if pixel block sampling is carried out for <figref idref="DRAWINGS">FIG. 15</figref>, then data having a tree structure shown in <figref idref="DRAWINGS">FIG. 16</figref> is obtained. Furthermore, in <figref idref="DRAWINGS">FIG. 16</figref>, the number of pixel blocks and the like are partially omitted for simplification of the drawing, but nodes of a large number of pixel blocks actually exist. In the tree of <figref idref="DRAWINGS">FIG. 16</figref>, it is the white pixel block that corresponds to the “WHITE” node, and the attribute of “WHITE” corresponding to the entire image is given to the root of the tree for the sake of convenience. That is, in the tree structure shown in <figref idref="DRAWINGS">FIG. 16</figref>, if the “WHITE” attribute is considered as a background and other attributes such as “CHAR”, “TABLE” and “LINE” are considered as foregrounds, the parent node and child node have the background and foreground appearing alternatively in the tree structure of <figref idref="DRAWINGS">FIG. 16</figref>. Furthermore, each node of the tree structure includes area information (segment information) and the attribute of the pixel block.</p>
<p id="p-0066" num="0064">After the tree structure of pixel blocks is obtained as described above, attention is focused on a black pixel block given the attribute of “NONCHAR” or “TABLE” in the pixel block tree structure, and the sampling of pixel blocks intended for sampling inverted characters on a black ground in this black pixel block is carried out as additional processing in the area division unit <b>103</b> at step S<b>304</b> of <figref idref="DRAWINGS">FIG. 3</figref>. A specific example of processing will be described below using <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0067" num="0065">At step S<b>601</b>, the possibility that inverted characters exist in a black pixel block A is estimated on the analogy of the geometric characteristics of the focused black pixel block (black pixel block A). Here, if the black pixel density is extremely low, i.e. for a black pixel block like a linear skeletal structure, it is determined that the black pixel block includes no inverted characters. Furthermore, the black pixel density is a value calculated from {(the number of pixels having a pixel value of 1 in all segments of the black pixel block)/P where P is a number of total pixels of all segments of the black pixel block (areas of the black pixel block shown by the example <b>803</b> in <figref idref="DRAWINGS">FIG. 8</figref>). Complicated analysis processing such as S<b>602</b> to S<b>608</b> can be skipped if it can be determined that the possibility that inverted characters exist is very low, by using processing enabling easy calculation such as the black pixel density, thus making it possible to carry out processing quickly.</p>
<p id="p-0068" num="0066">At step S<b>602</b>, an image R with pixel values (0 and 1) of pixels in the black pixel block A inverted is created. At this time, for pixels constituting the outline of the black pixel block A, the pixel values are kept at 1 without being inverted. <figref idref="DRAWINGS">FIG. 17</figref> shows an example of creating the image R.</p>
<p id="p-0069" num="0067">Furthermore, if area division processing (pixel block sampling) in step S<b>303</b> is carried out using an image scaled down at S<b>302</b>, an image obtained by sampling an area corresponding to the area of the focused black pixel block from the pre-scaledown original, inverting pixel values (0 and 1) for the sampled area (pixels of the outline are not inverted), and subjecting the sampled area for which pixel values have been inverted to OR scaledown processing is defined as an inverted image R in step S<b>602</b>. Otherwise, an inverted character part is likely broken in the image subjected OR scaledown in area division processing. Because a pre-scaledown image is inverted before it is scaled down in this way, the inverted character part can be prevented from being broken and blurred.</p>
<p id="p-0070" num="0068">At step S<b>603</b>, processing similar to that of S<b>405</b> is carried out to sample white pixel blocks surrounded by 4 connected lines (white pixel block set C) for the inside of the inverted image R.</p>
<p id="p-0071" num="0069">At step S<b>604</b>, black pixel blocks (black pixel blocks surrounded by 8 connected lines) are sampled from the inside of the white pixel block set B sampled at step S<b>603</b>. The sampled black pixel block set is defined as C.</p>
<p id="p-0072" num="0070">At step S<b>605</b>, a white pixel block set inside the pre-inversion black pixel block A is sampled, and white pixel blocks each having a predetermined size or greater size, of the white pixel block set in the pre-inversion black pixel block A, is considered as not-inverted characters (outlined characters), and are compared with the black pixel block set C obtained at step S<b>604</b> to remove black pixel blocks overlapping with the white pixel blocks each having a predetermined size or greater size on the coordinate from the set C. Because a white pixel block is sampled from the inside of the pre-insertion black pixel block A to make a determination, it can easily be determined in advance that the block is not an inverted character but a background. In addition, in the black pixel block A in an image obtained by simply subjecting the original image to OR scaledown, even if white pixel blocks are broken, there is no possibility that white pixel blocks separated from each other in the original image are combined into one white pixel block, thus making it possible to correctly take out a part considered as a background (on the other hand, if a black pixel block is sampled in an image obtained by inverting and then scaling down the original image, white pixel blocks separated from each other in the original image may be combined into a black pixel block, and the white pixel background part and inverted character part of the original image may thus be combined if they are close to each other and in this case, the inverted character may also be removed, and therefore white pixel blocks are sampled from the pre-inversion black pixel block A at S<b>605</b>).</p>
<p id="p-0073" num="0071">An example of processing carried out at steps S<b>602</b> to S<b>605</b> is shown in <figref idref="DRAWINGS">FIG. 9</figref>. Provided that a black pixel block sampled by area division processing of S<b>303</b> from an image obtained by subjecting an original image <b>901</b> to OR scaledown at S<b>302</b> is a block <b>910</b>, an inverted image created by inverting/scaling down the original image of an area corresponding to this black pixel block is an image <b>920</b>. If an area <b>912</b> of a white pixel block existing in the black pixel block <b>910</b> (sampled as a black pixel block <b>922</b> in a white pixel block <b>921</b> on the inverted image <b>920</b>) is clearly considered as a not-inverted character (e.g. it is considered as a not-character if its size is larger than a predetermined size), the black pixel block <b>922</b> overlaps in position with the white pixel block <b>912</b>, and is therefore removed. As a result, a black pixel block set <b>923</b> corresponding to the inverted character part remains.</p>
<p id="p-0074" num="0072">At step S<b>606</b>, black pixel blocks in the set C are classified as “CHAR” and other attributes based on a determination criterion equivalent to that of S<b>402</b> (based on whether or not equal to or less than a predetermined threshold value).</p>
<p id="p-0075" num="0073">At step S<b>607</b>, “CHAR” black pixel blocks are classified as those having very small sizes and others. The number of the former and the latter are N and M, respectively.</p>
<p id="p-0076" num="0074">At this step, N is considered as the number of pixel blocks originating from noises, and N is compared with the number M of other pixel blocks to determine whether the pixel block is a set of characters or not. Here, if M equals 0 or N/M equals a predetermined ratio T or greater ratio, the pixel block is considered as a not-character, and processing proceeds to step S<b>610</b>. In other cases, processing proceeds to step S<b>609</b>.</p>
<p id="p-0077" num="0075">At step S<b>609</b>, a tree structure having a white pixel block as a parent node is created with “CHAR” black pixel blocks as pixel blocks of inverted characters, and the pixel block tree is updated so that blocks are added just below the original black pixel block A. Furthermore, for the white pixel block as a parent node, the white pixel block B may be simply used, or an area circumscribed with pixel blocks of inverted characters may be defined as the white pixel block.</p>
<p id="p-0078" num="0076">By using a white pixel block as a parent node in this way, an inverted character can be added as a foreground of the tree structure while retaining the characteristics of the tree structure such that the background and foreground appear alternatively in the relation between the parent node and the child node.</p>
<p id="p-0079" num="0077">In the example of <figref idref="DRAWINGS">FIG. 15</figref>, inverted character sampling/determination processing is carried out for three black pixel blocks <b>1501</b>, <b>1502</b> and <b>1503</b>, and if pixel blocks of inverted characters are sampled from black pixel blocks <b>1501</b> and <b>1503</b> based on determination form the noise ratio and the like, the tree of <figref idref="DRAWINGS">FIG. 16</figref> is updated to a tree shown in <figref idref="DRAWINGS">FIG. 18</figref>. A virtual white pixel block inserted at this time is considered as being equivalent to a normal “WHITE” pixel block except that information indicating that it is a ground of an inverted character is included. Such a white pixel block is described as “WHITE (R)” in this embodiment.</p>
<p id="p-0080" num="0078">Referring to <figref idref="DRAWINGS">FIG. 3</figref> again, the area definition unit <b>1033</b> uses the tree structure of pixel blocks and the classification result to divide images into rectangular areas such as characters/images/tables/lines at step S<b>305</b>. Furthermore, pixel blocks sampled at step S<b>303</b> and pixel blocks added step S<b>304</b> retain the characteristics of the tree structure, and therefore can be divided with same processing without discrimination. Processing of classification and area formation of these pixel blocks will be described using <figref idref="DRAWINGS">FIG. 7</figref>.</p>
<p id="p-0081" num="0079">At step S<b>701</b>, attention is focused on pixel blocks classified as “CHAR”, and those existing within a fixed distance longitudinally or laterally are grouped. Rectangles surrounding the groups are character areas. Furthermore, whether a character string in the character area extends in a lateral direction or longitudinal direction is checked. For example, horizontal distances between pixel blocks in the area and left and right closest pixel blocks, and vertical distances between pixel blocks in the area and upper and lower closest pixel blocks are determined, and a direction whose average of the distances is smaller may be defined as the direction of the character string.</p>
<p id="p-0082" num="0080">At step S<b>702</b>, a set of pixel blocks connected longitudinally or laterally in approximate same sizes, of “NONCHAR” pixel blocks, is detected, and these pixel blocks are grouped as a title character area.</p>
<p id="p-0083" num="0081">At step S<b>703</b>, pixel blocks whose ratios of black pixels to white pixels in the outline are small, i.e. densities of black pixels are small, of “NONCHAR” pixel blocks, are sampled, and these pixel blocks are defined as a line drawing area.</p>
<p id="p-0084" num="0082">At step S<b>704</b>, large pixel blocks whose densities of black pixels are high or pixel blocks gathering in an area, of “NONCHAR” pixel blocks, are grouped as a halftone area. The halftone area refers to a middle tone area such as a photograph. If “CHAR” or “LINE” pixel blocks are included in the halftone area, their original areas are abandoned, and these pixel blocks are integrated into a halftone area.</p>
<p id="p-0085" num="0083">At step S<b>705</b>, a rectangle surrounding “LINE” pixel blocks is defined as a line area.</p>
<p id="p-0086" num="0084">At step S<b>706</b>, a rectangle surrounding “TABLE” area is defined as a table area.</p>
<p id="p-0087" num="0085">The above processing is performed for all black pixel blocks. However, the object for grouping is each set of black pixel blocks existing in one “WHITE” pixel block.</p>
<p id="p-0088" num="0086">For example, if a tree structure of pixel blocks shown in <figref idref="DRAWINGS">FIG. 18</figref> is obtained from the image of <figref idref="DRAWINGS">FIG. 21</figref>, processing of S<b>701</b> to S<b>706</b> is further carried out to define areas different for each attribute shown in <figref idref="DRAWINGS">FIG. 19</figref>. At this time, an area tree structure shown in <figref idref="DRAWINGS">FIG. 20</figref> is created between areas based on the configuration of the pixel block tree. In the output result of this area division processing, coordinate information of each area, and information of link to an area as a parent, and areas of children if any are retained.</p>
<p id="p-0089" num="0087">Furthermore, in <figref idref="DRAWINGS">FIG. 19</figref>, the diagonally shaded text area is a text area sampled as inverted characters. This can be identified from the fact that it is a text existing below WHITE (R) in the tree structure of <figref idref="DRAWINGS">FIG. 20</figref> from the output result. However, processing of S<b>701</b> to S<b>706</b> is carried out without discrimination of inverted areas, and therefore decision algorithms and the like can be made common for both non-inverted areas and inverted areas.</p>
<p id="p-0090" num="0088">As described above, inverted characters (outlined characters) can be managed with a hierarchical tree structure same as that of normal characters.</p>
<p id="p-0091" num="0089">In addition, when area division processing for dividing an image obtained by scanning a paper into part elements having different natures such as characters, graphics, photographs and tables is carried out, white-on-black character areas can be sampled using an area sampling method similar to that for black-on-white character areas.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An image processing method comprising:
<claim-text>a first pixel block sampling step of recursively sampling black pixel blocks and white pixel blocks from a binary image;</claim-text>
<claim-text>a tree structure creating step of creating tree structure data indicating a positional relation between the black pixel blocks and white pixel blocks sampled in said first pixel block sampling step;</claim-text>
<claim-text>an inverted image creating step of creating an inverted image by white-black-inverting the insides of black pixel blocks that can include inverted characters, of black pixel blocks included in said tree structure data;</claim-text>
<claim-text>a second pixel block sampling step of sampling white pixel block and black pixel blocks from the inverted image created in said inverted image creating step; and</claim-text>
<claim-text>a tree structure addition step of adding data regarding the white pixel blocks and black pixel blocks sampled in said second pixel block sampling step to corresponding nodes of said tree structure data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The image processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein for the data regarding the white pixel blocks and black pixel blocks added in said tree structure addition step, data regarding white pixel blocks having data regarding the sampled black pixel blocks as child nodes is added as child nodes of the white-black-inverted black pixel blocks of said tree structure data.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The image processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein in said inverted image creating step, said inverted image is created by white-black inverting the pixels inside the black pixel blocks sampled in said first pixel block sampling step with the outline of the black pixel blocks constituted by black pixels.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The image processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising an area division step of dividing said binary image into a plurality of areas by grouping black pixel blocks based on the tree structure data with data regarding white pixel blocks and black pixel blocks added in said tree structure addition step.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The image processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising an area tree structure creating step of creating area tree structure data indicating a positional relation between a plurality of areas by grouping black pixel blocks based on the tree structure data with data regarding white pixel blocks and black pixel blocks added in said tree structure addition step.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The image processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said black pixel block is an area surrounded by a black pixel outline obtained by performing eight direction outline tracking of black pixels, and said white pixel block is an area surrounded by white pixel outline obtained by performing four direction outline tracking of white pixels.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The image processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said binary image is an image obtained by subjecting a binary original image to OR scaledown, and
<claim-text>said inverted image is created based on the area of black pixel blocks to be white-black-inverted and an image obtained by white-black inverting said original image and subjecting the same to OR scaledown.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The image processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein in said inverted image creating step, an inverted image for black pixel blocks of low black pixel density, of black pixel blocks included in said tree structure data, is not created.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The image processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the black pixel blocks sampled in said second pixel block sampling step are black pixel blocks remaining after removing black pixel blocks sampled from said inverted image that are located at positions corresponding to white pixel blocks each having a predetermined size or greater size, of white pixel blocks sampled from said binary image, from a plurality of black pixel blocks sampled from said inverted image.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The image processing method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein in said second pixel block sampling step, it is determined that black pixel blocks from which the inverted image is created include no inverted characters to end processing if the ratio of black pixel blocks originating from noises to a plurality of black pixel blocks extracted from said inverted image equals a predetermined value or greater value.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The image processing method according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein said binary original image is an image converted by binarizing a multi-valued original image.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. An image processing apparatus comprising:
<claim-text>first pixel block sampling means for recursively sampling black pixel blocks and white pixel blocks from a binary image;</claim-text>
<claim-text>tree structure creating means for creating tree structure data indicating a positional relation between the black pixel blocks and white pixel blocks sampled by said first pixel block sampling means;</claim-text>
<claim-text>inverted image creating means for creating an inverted image by white-black-inverting the insides of black pixel blocks that can include inverted characters, of black pixel blocks included in said tree structure data;</claim-text>
<claim-text>second pixel block sampling means for sampling white pixel block and black pixel blocks from the inverted image created by said inverted image creating means; and</claim-text>
<claim-text>tree structure addition means for adding data regarding the white pixel blocks and black pixel blocks sampled by said second pixel block sampling means to corresponding nodes of said tree structure data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The image processing apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein for the data regarding the white pixel blocks and black pixel blocks added by said tree structure addition means, data regarding white pixel blocks having data regarding the sampled black pixel blocks as child nodes is added as child nodes of the white-black-inverted black pixel blocks of said tree structure data.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The image processing apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein said inverted image creating means creates said inverted image by white-black inverting the pixels inside the black pixel blocks sampled by said first pixel block sampling means with the outline of the black pixel blocks constituted by black pixels.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The image processing apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising area division means for dividing said binary image into a plurality of areas by grouping black pixel blocks based on the tree structure data with data regarding white pixel blocks and black pixel blocks added by said tree structure addition means.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The image processing apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising area tree structure creating means for creating area tree structure data indicating a positional relation between a plurality of areas by grouping black pixel blocks based on the tree structure data with data regarding white pixel blocks and black pixel blocks added by said tree structure addition means.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The image processing apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein said black pixel block is an area surrounded by a black pixel outline obtained by performing eight direction outline tracking of black pixels, and said white pixel block is an area surrounded by white pixel outline obtained by performing four direction outline tracking of white pixels.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The image processing apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein said binary image is an image obtained by subjecting a binary original image to OR scaledown, and
<claim-text>said inverted image is created based on the area of black pixel blocks to be white-black-inverted and an image obtained by white-black inverting said original image and subjecting the same to OR scaledown.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The image processing apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein said inverted image creating means does not create an inverted image for black pixel blocks of low black pixel density, of black pixel blocks included in said tree structure data.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The image processing apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the black pixel blocks sampled by said second pixel block sampling means are black pixel blocks remaining after removing black pixel blocks sampled from said inverted image that are located at positions corresponding to white pixel blocks each having a predetermined size or greater size, of white pixel blocks sampled from said binary image, from a plurality of black pixel blocks sampled from said inverted image.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The image processing apparatus according to <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein said second pixel block sampling means determines that black pixel blocks from which the inverted image is created include no inverted characters to end processing if the ratio of black pixel blocks originating from noises to a plurality of black pixel blocks extracted from said inverted image equals a predetermined value or greater value.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The image processing apparatus according to <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein said binary original image is an image converted by binarizing a multi-valued original image.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. A computer readable storage medium including a computer readable image processing program, the image processing program comprised of codes for making a computer perform:
<claim-text>a first pixel block sampling step of recursively sampling black pixel blocks and white pixel blocks from a binary image;</claim-text>
<claim-text>a tree structure creating step of creating tree structure data indicating a positional relation between the black pixel blocks and white pixel blocks sampled in said first pixel block sampling step;</claim-text>
<claim-text>an inverted image creating step of creating an inverted image by white-black-inverting the insides of black pixel blocks that can include inverted characters, of black pixel blocks included in said tree structure data;</claim-text>
<claim-text>a second pixel block sampling step of sampling white pixel block and black pixel blocks from the inverted image created in said inverted image creating step; and</claim-text>
<claim-text>a tree structure addition step of adding data regarding the white pixel blocks and black pixel blocs sampled in said second pixel block sampling step to corresponding nodes of said tree structure data.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
