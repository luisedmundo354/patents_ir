<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298840-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298840</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10476138</doc-number>
<date>20020409</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="regional">
<country>EP</country>
<doc-number>01610046</doc-number>
<date>20010503</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>829</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>K</subclass>
<main-group>1</main-group>
<subgroup>06</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>K</subclass>
<main-group>1</main-group>
<subgroup>04</subgroup>
<symbol-position>L</symbol-position>
<classification-value>N</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>380 36</main-classification>
<further-classification>380 37</further-classification>
<further-classification>380 38</further-classification>
<further-classification>380262</further-classification>
</classification-national>
<invention-title id="d0e71">Method and system for data integrity protection</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6851052</doc-number>
<kind>B1</kind>
<name>Graveman</name>
<date>20050200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713168</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>7039392</doc-number>
<kind>B2</kind>
<name>McCorkle et al.</name>
<date>20060500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>455411</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>7167984</doc-number>
<kind>B2</kind>
<name>Graveman</name>
<date>20070100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713168</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>WO</country>
<doc-number>WO 01/15382</doc-number>
<kind>A1</kind>
<date>20010300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00005">
<othercit>Von Bernd Friedrichs, “Authentische und zuverlässige Mobilkommunikation für sicherheitsrelevante Anwendungen Teil I: Sicherheitsanforderungen und grundlegende Verfahren. Authentic and Reliable Mobile Communication for Safety-Related Applications Part I: Security Requirements and Basic Algorithms”, Frequenz, Schiele Und Schon GMBH, Berlin, DE, vol. 49, No. ½, Jan./Feb. 1995, (pp. 17-27).</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>15</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>380 36- 40</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380262</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>9</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60289967</doc-number>
<kind>00</kind>
<date>20010509</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20040123102</doc-number>
<kind>A1</kind>
<date>20040624</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Gehrmann</last-name>
<first-name>Christian</first-name>
<address>
<city>Lund</city>
<country>SE</country>
</address>
</addressbook>
<nationality>
<country>SE</country>
</nationality>
<residence>
<country>SE</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Blom</last-name>
<first-name>Rolf</first-name>
<address>
<city>Järfalla</city>
<country>SE</country>
</address>
</addressbook>
<nationality>
<country>SE</country>
</nationality>
<residence>
<country>SE</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Cameron</last-name>
<first-name>Michael</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Telefonaktiebolaget LM Ericsson (publ)</orgname>
<role>03</role>
<address>
<city>Stockholm</city>
<country>SE</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Barron, Jr.</last-name>
<first-name>Gilberto</first-name>
<department>2132</department>
</primary-examiner>
<assistant-examiner>
<last-name>Perungavoor</last-name>
<first-name>Venkat</first-name>
</assistant-examiner>
</examiners>
<pct-or-regional-filing-data>
<document-id>
<country>WO</country>
<doc-number>PCT/EP02/03931</doc-number>
<kind>00</kind>
<date>20020409</date>
</document-id>
<us-371c124-date>
<date>20031024</date>
</us-371c124-date>
</pct-or-regional-filing-data>
<pct-or-regional-publishing-data>
<document-id>
<country>WO</country>
<doc-number>WO02/091668</doc-number>
<kind>A </kind>
<date>20021114</date>
</document-id>
</pct-or-regional-publishing-data>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method of authenticating a message (<b>111</b>) received via a transmission channel (<b>108</b>) using a Message Authentication Code (MAC). The message comprises a message body (<b>114</b>) and a tag (<b>116</b>) and the method comprises the steps of generating a second tag (<b>115</b>) according to a MAC function (<b>112</b>) on the basis of the received message body and a secret key (<b>113</b>), calculating a distance (<b>117</b>) between the received tag and generated second tag, and comparing (<b>118</b>) the calculated distance with a predetermined threshold value.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="126.32mm" wi="229.95mm" file="US07298840-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="230.63mm" wi="138.26mm" orientation="landscape" file="US07298840-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="258.32mm" wi="138.94mm" orientation="landscape" file="US07298840-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="243.42mm" wi="173.91mm" file="US07298840-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="241.89mm" wi="168.49mm" orientation="landscape" file="US07298840-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="253.07mm" wi="179.83mm" file="US07298840-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<p id="p-0002" num="0001">This patent application claims the benefit of priority from U.S. Provisional Patent Application Ser. No. 60/289,967 filed on May 9, 2001. This application incorporates by reference the entire disclosure of U.S. Provisional Patent Application Ser. No. 60/289,967.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<p id="p-0003" num="0002">This invention relates to a method and system of authenticating a message received via a transmission channel.</p>
<p id="p-0004" num="0003">Data integrity and authenticity are fundamental expectations in any secure data communications system, and they comprise an assurance that information has not been modified by someone who is not authorized to do so.</p>
<p id="p-0005" num="0004">Data integrity may be provided by Message Authentication Codes (MACs). MACs are used for the integrity protection of data communications payload, since they provide a computationally efficient way of protecting large amounts of data.</p>
<p id="p-0006" num="0005">Examples of applications where MACs are used are streaming data applications. Streaming refers to a technique for transferring data such that it can be processed as a steady and continuous stream. Streaming technologies are becoming increasingly important with the growth of the Internet, because most users do not have fast enough access to downloading large multimedia files quickly. With streaming, the client browser or plug-in can start processing the data before the entire file has been transmitted, e.g. for the display of pictures, animations or videos or the playing of audio presentations. Such multimedia services are also part of the emerging third generation mobile telecommunications services.</p>
<p id="p-0007" num="0006">MACs are based on a symmetric shared secret between the sender and the receiver. The secret value is called the key. The secret key is an input variable to the MAC calculation. Only somebody who possesses the correct secret key is able to calculate the MAC value for an arbitrary message. A MAC value is an integrity check value that is calculated from and appended to the original message data. Upon receiving a message protected by a MAC, the receiver calculates a MAC check value on the basis of the received data. If the MAC check value is equal to the received integrity check value, the message is accepted as authentic. Examples of known MACs include the so-called Keyed-Hashing for Message Authentication (HMAC) algorithm which is based on cryptographic one-way hash functions such as the secure hash algorithm SHA-1 and the message-digest algorithm MD5. MACs are used to provide data integrity protection in many data communication protocols. Examples of protocols supporting MACs include the IETF TLS, the SSH and the IPSec protocols.</p>
<p id="p-0008" num="0007">It is a disadvantage of the above prior art methods for data integrity protection that they result in a low throughput in cases where data is carried over a channel with bit errors, e.g. a wireless channel or other noisy channels.</p>
<p id="p-0009" num="0008">This is a particular disadvantage in situations where real time data or a large amount of data should be transmitted at a high speed over a wireless connection.</p>
<p id="p-0010" num="0009">It is a further disadvantage of the above prior art methods that the communications performance is sensitive to the bit error rate of the communications channel.</p>
<p id="p-0011" num="0010">The above and other problems are solved by a method of authenticating data, the method comprising the steps of</p>
<p id="p-0012" num="0011">receiving a message and a corresponding first data item generated according to a first predetermined rule;</p>
<p id="p-0013" num="0012">generating a second data item according to a second predetermined rule on the basis of the received message; calculating a first distance between the received first data item and the generated second data item;</p>
<p id="p-0014" num="0013">comparing the calculated first distance with a predetermined distance value.</p>
<p id="p-0015" num="0014">Consequently, the calculation of a distance between the data items is introduced, thereby allowing an acceptance of distorted data and, hence, increasing the throughput of the transmission channels while providing a high level of security.</p>
<p id="p-0016" num="0015">Bit errors during the transmission of the message or the first data item which was calculated on the basis of the original message may cause the calculated second data item to differ from the received first data item. However, according to the invention, if the calculated second data item is sufficiently close to the first data item, the bit errors do not cause the message to be rejected at the receiver even though the calculated second data item differs from the first data item. Therefore, the number of re-transmissions due to bit errors is small. Consequently, it is an advantage of the invention that it increases the throughput of a transmission channel with bit errors.</p>
<p id="p-0017" num="0016">For an intruder, on the other hand, it is hard to generate a forged message which will result in a second data item closer to the first data item than the predetermined threshold distance. Consequently, it is an advantage of the invention that it provides a high level of security. Preferably, the first and second predetermined rules are secret, i.e. only known to the transmitter and the receiver, respectively, or they are based upon a secret key value, such that the result of the rule is hard to predict without knowledge of the secret key. The use of a secret key has the advantage that the security of the method is ensured and a flexible method is provided, as the predetermined rules may be publicly known and used with a plurality of different keys.</p>
<p id="p-0018" num="0017">A message may include data packets, streaming data, multimedia data such as video, television broadcast, video on demand, videoconferencing, voice, audio, animations, or graphics data, or other types of data, preferably comprising data where few bit errors do not corrupt the quality or usefulness of the data significantly.</p>
<p id="p-0019" num="0018">The first and second data items may represent numerical values, character strings, bit sequences or other suitable data formats. The first and second data items will also be called tags in the following. Preferably, the first and second data items are cryptographic digests or other suitable MAC values calculated by a MAC mechanism.</p>
<p id="p-0020" num="0019">It is a further advantage of the invention that the predetermined distance value, and thus the tolerated distance between the second and the first data item, may be adjusted to the known or expected error rate of a transmission channel. Consequently, an adversary can only change a small number of bits of the order of the bit error rate of the transmission channel.</p>
<p id="p-0021" num="0020">When the method further comprises the step of processing the message conditioned on a result of the step of comparing the calculated first distance with a predetermined distance value, the received message is only processed when the comparison yields a desired result. Otherwise, the message may be rejected or made subject to further authentication or verification procedures.</p>
<p id="p-0022" num="0021">In a preferred embodiment of the invention the step of processing the message comprises the step of accepting the message if the calculated first distance is smaller than the predetermined distance value.</p>
<p id="p-0023" num="0022">The message and the first data item may be received via a transmission channel, e.g. a transmission channel of a communications network, a broadcasting network, a synchronous communications system, an asynchronous communications system, a packet based communications system, or the like.</p>
<p id="p-0024" num="0023">When the message and the first data item are received via a wireless communications channel, bit errors are likely to occur during transmission and the bit error rate may vary over time according to changes in the transmission quality. Hence, the method according to the invention is particularly advantageous in connection with wireless transmission channels.</p>
<p id="p-0025" num="0024">The wireless communications may be radio-based communications, e.g. using Bluetooth™ (Bluetooth is a trademark owned by Telefonaktiebolaget LM Ericsson, Sweden), W-CDMA, GSM, CDMA-2000, TCP/IP, WAP or another suitable protocol. Alternatively, the wireless communications may be based on other electromagnetic radiation such as IR, on acoustic signals, or another wireless communications technology.</p>
<p id="p-0026" num="0025">In contrast to the prior art methods mentioned above, few bit errors are tolerated by the method according to the invention without causing rejection and re-transmission of data packets.</p>
<p id="p-0027" num="0026">In another preferred embodiment of the invention the step of generating the second data item comprises the step of applying a predetermined permutation to a third data item derived from the message. The third data item may be the received message or a data item which is a result of an initial processing of the received message. According to this embodiment a few bit changes in a binary representation of the message result in a few bit changes in the corresponding second data item, as the permutation only changes the order of bits and not the number of zeros and ones. Correspondingly, the number of bit errors is preserved by a permutation. This property is particularly advantageous in connection with a distance function that depends on the number of bit errors, such as the Hamming distance. Preferably, the permutation is a secret permutation, or it is based on a secret key value, thereby ensuring the security of the method.</p>
<p id="p-0028" num="0027">When the step of generating the second data item comprises the step of combining a fourth data item derived from the message with a predetermined fifth data item, it is difficult for an intruder to forge a message by a simple bit operation.</p>
<p id="p-0029" num="0028">In a preferred embodiment of the invention the step of combining a fourth data item derived from the message with a predetermined fifth data item comprises the step of inserting predetermined binary sequences at predetermined positions of the fourth data item. It is an advantage of this embodiment of the invention that an inversion of all bits of a message sequence by an intruder may easily be detected.</p>
<p id="p-0030" num="0029">The distance may be calculated by any suitable distance calculation function, such as the Hamming distance for bit sequences, the difference between numerical values, etc. Preferably, the distance calculation function implements a distance measure, i.e. a measure of difference with certain mathematical properties of being homogenous, subadditive and positive, thereby providing a distance calculation with properties which may be described mathematically. When the calculated distance is a Hamming distance, the distance depends only on the number of bit errors, it has well-known properties and may be efficiently calculated.</p>
<p id="p-0031" num="0030">In a preferred embodiment of the invention the method further comprises the steps of
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0031">a) generating a first sequence of message sections from the message, each message section having a predetermined length;</li>
        <li id="ul0002-0002" num="0032">b) modifying at least a first message section of the sequence of message sections;</li>
        <li id="ul0002-0003" num="0033">c) applying at least a first permutation to at least the modified first message section of the sequence of message sections;</li>
        <li id="ul0002-0004" num="0034">d) calculating at least one XOR sum of a result of at least the first permutation;</li>
        <li id="ul0002-0005" num="0035">e) calculating a hash value from the calculated at least one XOR sum.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0032" num="0036">It is an advantage of this embodiment of the invention that it provides a low forgery probability and efficiently generates a small tag which may efficiently be transmitted with the message.</p>
<p id="p-0033" num="0037">It is a further advantage of this embodiment of the invention that it ensures a reliable authentication which makes it difficult for an intruder to forge the message.</p>
<p id="p-0034" num="0038">Here, the term hash value comprises a data item generated from an input sequence, e.g. a bit sequence, according to a predetermined rule. Preferably, the hash value is smaller than the input sequence and is generated such that it is unlikely that two different input sequences result in the same hash value. Preferably, the hash value is generated by a universal hash function or an almost universal hash function.</p>
<p id="p-0035" num="0039">When the method further comprises the step of repeating the steps of applying at least one permutation and calculating an XOR sum of the at least one permutation a predetermined number of times, the security of the method according to the invention is particularly high.</p>
<p id="p-0036" num="0040">In a preferred embodiment of the invention the method further comprises the step of repeating the steps a)-e) with different permutations. It is an advantage of the invention that it results in a small tag value and provides a high level of security.</p>
<p id="p-0037" num="0041">When the method further comprises the step of encrypting the calculated hash value, additional security is provided.</p>
<p id="p-0038" num="0042">In another preferred embodiment of the invention the step of calculating the first distance further comprises the steps of</p>
<p id="p-0039" num="0043">dividing the first and second data items into corresponding first and second sets of data sections;</p>
<p id="p-0040" num="0044">calculating a second distance between a first section of the first set of sections and a corresponding second section of the second set of sections; and</p>
<p id="p-0041" num="0045">comparing the second distance with a predetermined threshold value.</p>
<p id="p-0042" num="0046">It is an advantage of the method according to the invention that is not sensitive to small bit error rates caused by random transmission errors.</p>
<p id="p-0043" num="0047">When the first data item is further generated on the basis of a first secret key code, and the step of generating the second data item on the basis of the received message further comprises the step of generating the second data item on the basis of a second secret key code, a high level of forgery protection is achieved. Even with knowledge of the first and second predetermined rules, it is hard for an intruder without knowledge of the first and second secret key codes to generate a forged message. With no knowledge of the secret key code it is hard to generate a forged message which will result in a second data item closer to the first data item than the predetermined threshold distance. Hence, according to this embodiment, the digest calculation of the second data item is based on a cryptographic method, i.e. a method using a secret key as one of the inputs, and the distance between the cryptographic digests are compared. Consequently, a high level of protection is provided in a single operation without the need for further authenticity verification steps.</p>
<p id="p-0044" num="0048">The first and second key codes may be different key codes or the same key code, and the first and second predetermined rules may be different rules or algorithms or they may be the same rule. Preferably, the first and second key codes are a shared secret of the sender and the recipient of the message. Preferably, the first and second predetermined rules are a MAC mechanism.</p>
<p id="p-0045" num="0049">The invention further relates to a method of transmitting a message from a transmitter to a receiver via a transmission channel, the method comprising the steps of at the transmitter generating a first data item according to a first predetermined rule on the basis of the message;</p>
<p id="p-0046" num="0050">transmitting the message and the generated first data item from the transmitter to the receiver;</p>
<p id="p-0047" num="0051">generating a second data item according to a second predetermined rule on the basis of the received message;</p>
<p id="p-0048" num="0052">calculating a first distance between the received first data item and the generated second data item;</p>
<p id="p-0049" num="0053">comparing the calculated first distance with a predetermined distance value.</p>
<p id="p-0050" num="0054">In a preferred embodiment of the invention, the generated first data item has a size which is smaller than a size of the message.</p>
<p id="p-0051" num="0055">It is an advantage of the invention that it is efficient and requires little overhead in the data transmission.</p>
<p id="p-0052" num="0056">In a further preferred embodiment of the invention the step of generating the first data item comprises the step of calculating a hash function on the basis of a sixth data item derived from the message. Hence, the transmitted first data item is smaller than the message.</p>
<p id="p-0053" num="0057">The invention further relates to a communications system comprising</p>
<p id="p-0054" num="0058">first processing means adapted to calculate a first data item according to a first predetermined rule on the basis of a message;</p>
<p id="p-0055" num="0059">a transmitter adapted to transmit the message and the generated first data item via a transmission channel;</p>
<p id="p-0056" num="0060">a receiver adapted to receive the transmitted message and the transmitted first data item;</p>
<p id="p-0057" num="0061">second processing means adapted to generate a second data item according to a second predetermined rule on the basis of the received message;</p>
<p id="p-0058" num="0062">to calculate a first distance between the received first data item and the generated second data item; and</p>
<p id="p-0059" num="0063">to compare the calculated first distance with a predetermined distance value.</p>
<p id="p-0060" num="0064">The invention further relates to an apparatus comprising</p>
<p id="p-0061" num="0065">a receiver adapted to receive a message and a corresponding first data item generated according to a first predetermined rule;</p>
<p id="p-0062" num="0066">first processing means adapted to generate a second data item according to a second predetermined rule on the basis of the received message;</p>
<p id="p-0063" num="0067">to calculate a first distance between the received first data item and the generated second data item; and</p>
<p id="p-0064" num="0068">to compare the calculated first distance with a predetermined distance value.</p>
<p id="p-0065" num="0069">The apparatus may be any electronic equipment or part of such electronic equipment, where the term electronic equipment includes computers, such as stationary and portable PCs, stationary and portable radio communications equipment. The term portable radio communications equipment includes mobile radio terminals such as mobile telephones, pagers, communicators, e.g. electronic organisers, smart phones, PDAs, or the like.</p>
<p id="p-0066" num="0070">In a preferred embodiment of the invention the apparatus is a mobile radio terminal;</p>
<p id="p-0067" num="0071">The invention further relates to a data signal embodied in a carrier wave for use in a method described above and in the following, the data signal comprising a message body and a first data item.</p>
<p id="p-0068" num="0072">The invention further relates to a computer program comprising program code means for performing all the steps of the method described above and in the following when said program is run on a microprocessor.</p>
<p id="p-0069" num="0073">The invention further relates to a computer program product comprising program code means stored on a computer readable medium for performing the method described above and in the following when said computer program product is run on a microprocessor.</p>
<p id="p-0070" num="0074">As the advantages of the above aspects of the invention and their respective preferred embodiments correspond to advantages of the method of authenticating a message and its corresponding embodiments described above and in the following, these will not be described again.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<p id="p-0071" num="0075">The invention will be explained more fully below in connection with preferred embodiments and with reference to the drawings, in which:</p>
<p id="p-0072" num="0076"><figref idref="DRAWINGS">FIG. 1</figref> shows a flow diagram of a method according to a first embodiment of the invention;</p>
<p id="p-0073" num="0077"><figref idref="DRAWINGS">FIG. 2</figref> shows a schematic view of a mapping according to an embodiment of the invention;</p>
<p id="p-0074" num="0078"><figref idref="DRAWINGS">FIGS. 3</figref><i>a</i>-<i>b </i>illustrate the difference between examples of distance functions according to embodiments of the invention;</p>
<p id="p-0075" num="0079"><figref idref="DRAWINGS">FIG. 4</figref> shows a schematic view of a method according to a second embodiment of the invention;</p>
<p id="p-0076" num="0080"><figref idref="DRAWINGS">FIG. 5</figref> shows a block diagram of a communications system according to an embodiment of the invention; and</p>
<p id="p-0077" num="0081"><figref idref="DRAWINGS">FIGS. 6</figref><i>a</i>-<i>c </i>show examples of message formats according to embodiments of the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0078" num="0082">The invention will be described in the context of messages represented as binary sequences. However, it is understood that a person skilled in the art will be able to carry out the invention with other message formats, e.g. by transforming the other message format into a binary sequence. Examples of other message formats include e.g. plain text, byte representations, hex-values, octal-values, MP3, MPEG, JPEG, TIFF, etc.</p>
<p id="p-0079" num="0083"><figref idref="DRAWINGS">FIG. 1</figref> shows a flow diagram of a method according to a first embodiment of the invention where integrity protection is provided to a message m <b>104</b> during the transmission of the message from a transmitting side <b>101</b> via a transmission channel <b>108</b> to a receiving side <b>110</b>.</p>
<p id="p-0080" num="0084">At the transmitting side <b>101</b> a MAC value z <b>105</b> is calculated using a MAC function <b>102</b>. The MAC function takes the message m and a secret key k <b>103</b> as inputs. The MAC value z <b>105</b> is combined with the original message m <b>104</b> by a concatenation function <b>106</b> or a combining circuit. The resulting combined message <b>107</b> is sent to the receiving side <b>110</b> via a transmission channel <b>108</b>. During the transmission, there is a risk of the message <b>107</b> being altered by an unknown process <b>109</b>. The alterations may be caused by transmission errors, or they may be due to modifications of the message by, for example, an unauthorised intruder. At the receiving side <b>110</b>, the received message m′ <b>114</b> and the received MAC value z′ <b>116</b> are extracted from the received combined message <b>111</b> by an extraction function <b>101</b> or an extraction circuit. On the basis of the received message m′ <b>114</b> and the secret key k <b>113</b>, a MAC value z″ is calculated using the MAC function <b>112</b>. Preferably, the MAC function <b>112</b> implements the same algorithm as the MAC function <b>102</b> used at the transmitting side, and the secret key k <b>113</b> is the same key as the secret key <b>103</b> used for calculating the original MAC value z <b>105</b>. According to the invention, a distance d(z′,z″) between the received MAC value z′ <b>116</b> and the calculated value z″ <b>115</b> is calculated by a distance calculation function <b>117</b> which is based on a distance function d(·,·). In a subsequent step <b>118</b> the calculated distance d is compared to a predetermined threshold t. If the distance d is larger than the threshold t, the message is rejected in step <b>119</b>, otherwise the message is accepted in step <b>120</b>.</p>
<p id="p-0081" num="0085">When using a prior art MAC method, a single error in a data packet will result in an incorrect MAC value, and the receiver will not accept the packet. As a result, the data needs to be retransmitted, irrespective of whether the bit error results from a transmission error or a change caused by an intruder. Hence, MAC protection over a channel with a high bit error rate results in a bad throughput. The MAC method according to the invention allows an adversary to change some information in a data stream. However, an adversary is not able to change more than a small amount of the information. When transmitting data with a lot of information, this is not beneficial for an adversary. On the other hand, when transmitting streaming data over a channel with errors, the method according to the invention considerably increases the throughput compared to prior art MACs.</p>
<p id="p-0082" num="0086"><figref idref="DRAWINGS">FIG. 2</figref> shows a schematic view of a mapping according to an embodiment of the invention. In general, a MAC is a function f <b>206</b> which is a mapping from a message space M <b>201</b> to a tag space Z. The function is parameterised by a key k <b>207</b> from a key space K (not shown), i.e. the exact mapping is determined by a second input parameter <b>207</b> to f, called the secret key k, such that for any kεK, mεM, ∃ f(m;k)=z, where zεZ. For example, given a value of k, the message m <b>202</b> is mapped to the tag z=f(m;k) <b>209</b> and the message m<b>2</b> <b>203</b> is mapped to the tag z<b>2</b>=f(m<b>2</b>;k). Preferably, the cardinality of Z is less than the cardinality of M in order to keep the tag size, and, consequently, the required transmission overhead for transmitting the tag is small.</p>
<p id="p-0083" num="0087">A disadvantage of the prior art MAC methods is that a message is rejected, if the calculated tag value differs from the received tag value, irrespective of how much the received message differs from the original message.</p>
<p id="p-0084" num="0088">For a MAC according to the invention, also called a streaming MAC in the following, a distance function d(·,·) is defined on the tag space Z <b>208</b>. Furthermore, let D(·,·) be a distance function defined on the message space M <b>201</b>, and let t<sub>1 </sub><b>204</b> and t<sub>2 </sub><b>212</b> be predetermined threshold values. Preferably, the function f is defined such that for an intruder with knowledge of m <b>202</b> but without information about the value of k <b>207</b> it is hard to find a message m′ <b>203</b> in M with a distance d1=D(m,m′) <b>205</b> to the original message m <b>202</b>, such that d1&gt;t<sub>1</sub>, and with a distance d<sub>2</sub>″=d(z,z″) <b>211</b> between the corresponding tags which is smaller than t<sub>2 </sub><b>212</b> . Furthermore, the function f is preferably defined such that it is hard for an intruder with knowledge of m <b>202</b> but without information about the value of k <b>207</b> to predict a value z′ <b>213</b> in Z such that the distance d<sub>2</sub>′ <b>214</b> between z′ and the correct tag z <b>209</b> is smaller than the threshold t<sub>2 </sub><b>212</b>, i.e. d<sub>2</sub>′=d(f(m;k),z′)&lt;t<sub>2</sub>.</p>
<p id="p-0085" num="0089">Hence, the steps of a method according to an embodiment of the invention may be summarised as follows:</p>
<p id="p-0086" num="0090">Step 1: The transmitter and the receiver in a communications system share a secret value k <b>207</b>. They may further agree on a distance function d and a threshold t<sub>2 </sub><b>212</b>.</p>
<p id="p-0087" num="0091">Step 2: For a message m <b>202</b> to be sent from the transmitter to the receiver a tag value z=f(m;k) <b>209</b> is calculated at the transmitter.</p>
<p id="p-0088" num="0092">Step 3: The message m <b>202</b> and the tag z <b>209</b> are sent from the transmitter to the receiver via a communications channel.</p>
<p id="p-0089" num="0093">Step 4: The receiver receives a message m′ <b>203</b> and a tag z′ <b>213</b>.</p>
<p id="p-0090" num="0094">Step 5: The receiver calculates z′ f(m′;k) <b>210</b>.</p>
<p id="p-0091" num="0095">Step 6: The receiver calculates the distance d<sub>2 </sub>d(z′,z″) <b>215</b> and compares the calculated distance with the threshold t<sub>2 </sub><b>212</b>.</p>
<p id="p-0092" num="0096">Step 7: The receiver accepts the message m′ <b>203</b> if and only if t<sub>2</sub>≧d<sub>2</sub>.</p>
<p id="p-0093" num="0097">Once a MAC function and a key is agreed upon, steps 2 through 7 may be repeated for a plurality of messages using the same function and the same key.</p>
<p id="p-0094" num="0098">In case of acceptance, the message may be further processed at the receiver. In case of rejection of a message a request for re-transmission may be sent from the receiver to the transmitter or other measures may be taken, such as informing a user, generating an event, sending a notification to the transmitter, or the like.</p>
<p id="p-0095" num="0099">Now referring to <figref idref="DRAWINGS">FIGS. 3</figref><i>a</i>-<i>b</i>, a preferred distance function on the messages is the Hamming distance. However, other distance functions may be used. The Hamming distance between two tuples is defined as the number of positions in which their components differ. For example, the Hamming distance between the binary tuples (0,0,1,1,1) and (1,1,0,0,1) is equal to four. In the following the Hamming distance between the message m and the message m′ will be denoted h(m,m′). More formally, h may be defined as</p>
<p id="p-0096" num="0100">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
<mrow>
  <mrow>
    <mrow>
      <mi>h</mi>
      <mo>⁡</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <mi>m</mi>
          <mo>,</mo>
          <msup>
            <mi>m</mi>
            <mi>′</mi>
          </msup>
        </mrow>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mo>=</mo>
    <mrow>
      <munder>
        <mo>∑</mo>
        <mrow>
          <mn>1</mn>
          <mo>≤</mo>
          <mi>i</mi>
          <mo>≤</mo>
          <mi>L</mi>
        </mrow>
      </munder>
      <mo>⁢</mo>
      <mrow>
        <mi>F</mi>
        <mo>⁡</mo>
        <mrow>
          <mo>(</mo>
          <mrow>
            <msub>
              <mi>m</mi>
              <mi>i</mi>
            </msub>
            <mo>,</mo>
            <msubsup>
              <mi>m</mi>
              <mi>i</mi>
              <mi>′</mi>
            </msubsup>
          </mrow>
          <mo>)</mo>
        </mrow>
      </mrow>
    </mrow>
  </mrow>
  <mo>,</mo>
</mrow>
</math>
</maths>
<br/>
where m and m′ are bit sequences of length L, m<sub>i </sub>is the i-th bit in m, m′<sub>i </sub>is the i-th bit in m′, and the function F is defined as
</p>
<p id="p-0097" num="0101">
<maths id="MATH-US-00002" num="00002">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>F</mi>
    <mo>⁡</mo>
    <mrow>
      <mo>(</mo>
      <mrow>
        <mi>x</mi>
        <mo>,</mo>
        <mi>y</mi>
      </mrow>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mrow>
      <mo>{</mo>
      <mtable>
        <mtr>
          <mtd>
            <mrow>
              <mn>1</mn>
              <mo>,</mo>
            </mrow>
          </mtd>
          <mtd>
            <mrow>
              <mrow>
                <mstyle>
                  <mtext>if</mtext>
                </mstyle>
                <mo>⁢</mo>
                <mstyle>
                  <mspace width="0.8em" height="0.8ex"/>
                </mstyle>
                <mo>⁢</mo>
                <mi>x</mi>
              </mrow>
              <mo>≠</mo>
              <mi>y</mi>
            </mrow>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mrow>
              <mn>0</mn>
              <mo>,</mo>
            </mrow>
          </mtd>
          <mtd>
            <mstyle>
              <mtext>otherwise</mtext>
            </mstyle>
          </mtd>
        </mtr>
      </mtable>
      <mo>}</mo>
    </mrow>
    <mo>.</mo>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0098" num="0102">In a transmission channel error model, the Hamming distance between the sent and received messages corresponds to the number of errors during transmission. In general, a MAC according to the invention should, preferably, have the property that a message is accepted, if the distance between the sent and received message sequences is small. For example, if only a few errors occur during transmission, the receiver should still accept the message.</p>
<p id="p-0099" num="0103">Now consider a message m sent by the transmitter and the message m′ received by the receiver. Preferably, a MAC method according to the invention is constructed such that all messages with h(m,m′)≦t<sub>1 </sub>are always accepted, i.e., if not more than t<sub>1 </sub>errors occur or somebody alters not more than t<sub>1 </sub>bits during transmission, the message is accepted.</p>
<p id="p-0100" num="0104">In the tag space Z, the Hamming distance may also be used as a distance function. Alternatively, different distance functions may be used. Now referring to <figref idref="DRAWINGS">FIG. 3</figref><i>a</i>, a distance function δ(·,·) according to an embodiment of the invention will be described. According to this embodiment of the invention, an arbitrary tag value <b>301</b> zεZ is divided into y different blocks <b>303</b>-<b>305</b>, preferably of equal size L, such that z=z<sub>1</sub>, Z<sub>2</sub>, Z<sub>3</sub>, . . . , Z<sub>y</sub>. In the examples of <figref idref="DRAWINGS">FIGS. 3</figref><i>a</i>-<i>b </i>y=3 and L=4. For a given threshold t<sub>2</sub>, a distance function δ on elements in Z is defined as: ∀ z, Z′εZ,</p>
<p id="p-0101" num="0105">
<maths id="MATH-US-00003" num="00003">
<math overflow="scroll">
<mrow>
  <mrow>
    <mrow>
      <mi>δ</mi>
      <mo>⁡</mo>
      <mrow>
        <mo>(</mo>
        <mrow>
          <mi>z</mi>
          <mo>,</mo>
          <msup>
            <mi>z</mi>
            <mi>′</mi>
          </msup>
        </mrow>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mo>=</mo>
    <mrow>
      <munderover>
        <mo>∑</mo>
        <mrow>
          <mi>i</mi>
          <mo>=</mo>
          <mn>1</mn>
        </mrow>
        <mi>y</mi>
      </munderover>
      <mo>⁢</mo>
      <mrow>
        <mi>g</mi>
        <mo>⁡</mo>
        <mrow>
          <mo>(</mo>
          <mrow>
            <mi>h</mi>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <mrow>
                <msub>
                  <mi>z</mi>
                  <mi>i</mi>
                </msub>
                <mo>,</mo>
                <msubsup>
                  <mi>z</mi>
                  <mi>i</mi>
                  <mi>′</mi>
                </msubsup>
              </mrow>
              <mo>)</mo>
            </mrow>
          </mrow>
          <mo>)</mo>
        </mrow>
      </mrow>
    </mrow>
  </mrow>
  <mo>,</mo>
</mrow>
</math>
</maths>
<br/>
where h is the Hamming distance and g is the function:
</p>
<p id="p-0102" num="0106">
<maths id="MATH-US-00004" num="00004">
<math overflow="scroll">
<mrow>
  <mrow>
    <mi>g</mi>
    <mo>⁡</mo>
    <mrow>
      <mo>(</mo>
      <mi>x</mi>
      <mo>)</mo>
    </mrow>
  </mrow>
  <mo>=</mo>
  <mrow>
    <mo>{</mo>
    <mrow>
      <mtable>
        <mtr>
          <mtd>
            <mi>x</mi>
          </mtd>
          <mtd>
            <mstyle>
              <mtext>if</mtext>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <mi>x</mi>
              <mo>&lt;</mo>
              <msub>
                <mi>t</mi>
                <mn>2</mn>
              </msub>
            </mrow>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mrow>
              <mi>y</mi>
              <mo>·</mo>
              <msub>
                <mi>t</mi>
                <mn>2</mn>
              </msub>
            </mrow>
          </mtd>
          <mtd>
            <mstyle>
              <mtext>if</mtext>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <mi>x</mi>
              <mo>≥</mo>
              <msub>
                <mi>t</mi>
                <mn>2</mn>
              </msub>
            </mrow>
          </mtd>
        </mtr>
      </mtable>
      <mo>.</mo>
    </mrow>
  </mrow>
</mrow>
</math>
</maths>
</p>
<p id="p-0103" num="0107">According to this embodiment, a received message-tag pair, m′,z′, is accepted if and only if δ(z′,z″)&lt;y·t<sub>2</sub>, where z″=f(m′;k). In the examples of <figref idref="DRAWINGS">FIGS. 3</figref><i>a</i>-<i>b </i>the threshold is t<sub>2</sub>=3.</p>
<p id="p-0104" num="0108">Hence, a message is rejected, if the Hamming distance between at least one of the pairs of blocks is larger than a predetermined threshold t<sub>2</sub>. If, on the other hand, the Hamming distances between all pairs of blocks are smaller than t<sub>2</sub>, the message is accepted. Compared to the Hamming distance, this distance function is less sensitive to bit errors which are randomly distributed over the tag value. This is illustrated by <figref idref="DRAWINGS">FIGS. 3</figref><i>a</i>-<i>b</i>. In <figref idref="DRAWINGS">FIG. 3</figref><i>a </i>two tag values z <b>301</b> and z′ <b>302</b> are shown with a Hamming distance of h(z,z′)=4. The bit positions <b>301</b><i>b</i>, <b>301</b><i>f</i>, <b>301</b><i>k</i>, <b>3011</b> and <b>302</b><i>b</i>, <b>302</b><i>f</i>, <b>302</b><i>k</i>, <b>3021</b>, respectively, where the two tags differ are spread over the entire sequence. Assuming a threshold t<sub>2</sub>=3, the distance according to the distance function δ described above yields four, as the Hamming distance in none of the blocks exceeds the threshold t<sub>2</sub>. The blocks <b>303</b> and <b>308</b> differ by one bit, hence g(z<sub>1</sub>, z<sub>1</sub>′)=1. The blocks <b>304</b> and <b>307</b> differ by one bit, hence g(z<sub>2</sub>, z<sub>2</sub>′)=1. The blocks <b>305</b> and <b>306</b> differ by two bits, hence g(z<sub>3</sub>, z<sub>3</sub>′)=2. In <figref idref="DRAWINGS">FIG. 3</figref><i>b</i>, the bit sequences z <b>301</b> and z′ <b>312</b> have the same Hamming distance <b>4</b> as in the example of <figref idref="DRAWINGS">FIG. 3</figref><i>a</i>. However, now the bit positions <b>301</b><i>b</i>, <b>301</b><i>c</i>, <b>301</b><i>d</i>, <b>301</b><i>f </i>and <b>312</b><i>b</i>, <b>312</b><i>c</i>, <b>312</b><i>d</i>, <b>312</b><i>f</i>, where the tags differ are clustered in the beginning of the sequences and, correspondingly, the distance function <b>6</b> yields a difference of 10: The blocks <b>303</b> and <b>318</b> differ by three bits, hence g(z<sub>1</sub>, z<sub>1</sub>′)=y*t<sub>2</sub>=9, as t<sub>2</sub>≦3. The blocks <b>304</b> and <b>317</b> differ by one bit, hence g(z<sub>2</sub>, z<sub>2</sub>′)=1. The blocks <b>305</b> and <b>316</b> do not differ, hence g(z<sub>3</sub>, z<sub>3</sub>′)=0.</p>
<p id="p-0105" num="0109">It is an advantage of this distance function that it provides an efficient and secure authentication. In particular, in a construction where the different blocks of the tag value correspond to predetermined blocks of the respective messages, an authentication method is achieved which is more sensitive to localised errors than to randomly distributed bit errors.</p>
<p id="p-0106" num="0110">It is understood that a corresponding construction may be defined for blocks of different length, e.g. in the case where the length of the message m is not an integer multiple of y. Alternatively, the message or one of the blocks may be padded, e.g. with zeros.</p>
<p id="p-0107" num="0111"><figref idref="DRAWINGS">FIG. 4</figref> shows a schematic view of a method according to a second embodiment of the invention. The method according to this embodiment utilises three insights described in the following:</p>
<p id="p-0108" num="0112">A MAC according to the invention should have the property that a small distance between messages will result in a small distance between the corresponding tags. A natural measure to use considering channel errors, is the Hamming distance. If the distance function according to the invention is based on the Hamming distance, the MAC algorithm should have the property that a few bit changes on a message will result in few bit changes in the corresponding tag. A mapping that has this property is a permutation. A permutation only changes the order of the bits in a sequence, but preserves the number of zeros and ones in the sequence. If two different binary sequences differ in, for example, n positions before a fixed permutation is applied on the sequences, the sequences will also differ in n positions after the permutation is applied.</p>
<p id="p-0109" num="0113">Secondly, considering a message sequences m m<sub>1</sub>, m<sub>2</sub>, . . . ,m<sub>n</sub>, and applying a random permutation P on this sequence, we denote the output sequence by q=q<sub>1</sub>, q<sub>2</sub>, . . . , q<sub>n</sub>, i.e., q=P(m). Denote by In(m) the inverse of the sequence m, i.e., the sequence m with each bit flipped. Clearly, P(In(m))=In(P(m)). Hence, if only a permutation is used as the basis for a streaming MAC construction, it will be easy for an adversary to forge a message by simply flipping all bits in the message and in the corresponding message tag. This may be avoided by adding a fixed binary sequence to the message sequence before the permutation.</p>
<p id="p-0110" num="0114">Thirdly, applying a permutation on a bit sequence results in a new bit sequence with the same length as the original sequence. Preferably a construction of an efficient MAC includes the use of a function that has an image that is much smaller than the function pre-image. Such a function is called a hash function and its image a hash value. A hash may be constructed by dividing the message into blocks of equal size, applying a function with the desired cryptographic properties on each block, and then sum together all the different outputs, for example using a XOR function. The XOR function of a sequence of bits may be defined as follows: Consider two binary sequences of length L: b<sub>1</sub>=b<sub>11</sub>, b<sub>12</sub>, . . . , b<sub>1L </sub>and b<sub>2</sub>=b<sub>21</sub>, b<sub>22</sub>, . . . , b<sub>2L</sub>. The XOR sum, b<sub>1</sub>⊕b<sub>2 </sub>of the two sequences equals b<sub>11</sub>⊕b<sub>21</sub>, b<sub>12</sub>⊕b<sub>22</sub>, . . . , b<sub>1L</sub>⊕b<sub>2L</sub>, i.e. the XOR is performed bitwise. Now, consider two binary message sequences of length 2L, m=m<sub>1</sub>,m<sub>2</sub>=m<sub>11</sub>,m<sub>12</sub>, . . . m<sub>1L</sub>,m<sub>21</sub>,m<sub>22</sub>, . . . m<sub>2L </sub>and m′=m′<sub>1</sub>,m′<sub>2</sub>=m′<sub>11</sub>,m′<sub>12</sub>, . . . m′<sub>1L</sub>,m′<sub>21</sub>,m<sub>22</sub>, . . . m′<sub>2L</sub>. Assume that the Hamming distance between the messages is h(m,m′)=k. Then, it follows that h(m<sub>1</sub>⊕m<sub>2</sub>, m′<sub>1</sub>⊕m′<sub>2</sub>)≦k, which is a desired property for MAC according to the invention. The above relation follows from the fact that for binary values b<sub>1</sub>,b′<sub>1</sub>,b<sub>2 </sub>and b′<sub>2</sub>, the inequality b<sub>1</sub>⊕b<sub>2</sub>≠b′<sub>1</sub>⊕b′<sub>2 </sub>is valid, if and only if b<sub>1</sub>≠b′<sub>1 </sub>and b<sub>2</sub>=b′<sub>2 </sub>or b<sub>1</sub>=b′<sub>1 </sub>and b<sub>2</sub>≠b′<sub>2</sub>.</p>
<p id="p-0111" num="0115">Now referring to <figref idref="DRAWINGS">FIG. 4</figref>, a streaming MAC method according to an embodiment of the invention comprises the following steps:</p>
<p id="p-0112" num="0116">Step 1: A message m <b>401</b> is divided into message blocks <b>401</b><i>a</i>-<b>401</b><i>d</i>, i.e. m=m<sub>1</sub>,m<sub>2</sub>, . . . , m<sub>1</sub>. Each message block has a predetermined size. Preferably, all message blocks have the same size. In this case, if the message length is not a multiple of 1, a fixed sequence may be appended so that the new message sequence becomes a multiple of 1.</p>
<p id="p-0113" num="0117">Step 2: Modify the message block sequence by inserting some fixed bits at predetermined positions of each message block, for example by appending a predetermined bit sequence. In the example of <figref idref="DRAWINGS">FIG. 4</figref>, the same bit sequence <b>403</b>, labelled 0 in <figref idref="DRAWINGS">FIG. 4</figref>, is added to all blocks, resulting in the new message blocks <b>402</b><i>a</i>-<b>402</b><i>d. </i></p>
<p id="p-0114" num="0118">Step 3: Apply different permutations on each message block <b>402</b><i>a</i>-<i>d</i>, resulting in the message blocks <b>404</b><i>a</i>-<i>d</i>, and calculate the XOR sum <b>407</b><i>a </i>of the outputs <b>404</b><i>a</i>-<i>d </i>of the permutations.</p>
<p id="p-0115" num="0119">Step 4: Repeat step 3 y times, preferably using different permutations, resulting in the message blocks <b>405</b><i>a</i>-<i>d </i>through <b>406</b><i>a</i>-<i>d </i>and the corresponding XOR sums <b>407</b><i>a</i>-<i>d</i>. An optimal choice of y may depend on the message size and/or the error rate of the transmission channel.</p>
<p id="p-0116" num="0120">Step 5: Concatenate all the different XOR sums <b>407</b><i>a</i>-<i>c </i>into one hash value q <b>408</b>.</p>
<p id="p-0117" num="0121">The steps 1-5 may be repeated once or several times with the hash value <b>408</b> as input and with a new set of permutations, preferably with a smaller value of y, in order to generate a small hash sequence while providing a strong forgery protection.</p>
<p id="p-0118" num="0122">Finally, the resulting hash value may be encrypted by taking for example the XOR sum with the output of a pseudo-random function. Then the hash value, possibly encrypted, is the streaming MAC tag of the message m.</p>
<p id="p-0119" num="0123">In the following, still referring to <figref idref="DRAWINGS">FIG. 4</figref>, the steps of the MAC method according to an embodiment of the invention will be described in more detail.</p>
<p id="p-0120" num="0124">In the following description, the following notation is used:</p>
<p id="p-0121" num="0125">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="154pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>k</entry>
<entry>secret key value.</entry>
</row>
<row>
<entry/>
<entry>m</entry>
<entry>message to be authenticated.</entry>
</row>
<row>
<entry/>
<entry>z</entry>
<entry>authentication information or message tag.</entry>
</row>
<row>
<entry/>
<entry>t<sub>2</sub></entry>
<entry>a threshold design integer value.</entry>
</row>
<row>
<entry/>
<entry>q</entry>
<entry>intermediate hash value.</entry>
</row>
<row>
<entry/>
<entry>n</entry>
<entry>binary length of the message m.</entry>
</row>
<row>
<entry/>
<entry>L</entry>
<entry>block size of message blocks.</entry>
</row>
<row>
<entry/>
<entry>l</entry>
<entry>the number of message blocks, l = ┌n/L┐.</entry>
</row>
<row>
<entry/>
<entry>y</entry>
<entry>the number of concatenated hashes.</entry>
</row>
<row>
<entry/>
<entry>r</entry>
<entry>the size of the sequences used for padding.</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Let a and b be indices labelling the repetitions of step 3 above and the message blocks, respectively, i.e. 1≦a≦y and 1≦b≦1. Denote by k a secret key value. Let P<sub>k, (a,b)</sub>(x) be a permutation that takes as input a binary sequence x of length L and as output a permuted sequence of x. We assume that P<sub>K,(a,b) </sub>is completely determined by the secret key K and the indices a,b. Preferably, given any (a,b), P<sub>k,(a,b) </sub>is selected uniformly distributed over all possible permutations on the set {1,2, . . . ,L}. This is an advantage, because, given a series of R permutations,
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>P<sub>k,(a,b)</sub><sub><sub2>1</sub2></sub>, P<sub>k(a,b)</sub><sub><sub2>2</sub2></sub>, . . . , P<sub>k,(a,b)</sub><sub><sub2>R</sub2></sub>,<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
for any (a,b) ∉{(a,b)<sub>1</sub>, (a,b)<sub>2</sub>, . . . ,(a,b)<sub>R</sub>}, it is computationally infeasible to extract information about P<sub>K,(a,b) </sub>from the above series of permutations, if one does not have knowledge about the key k.
</p>
<p id="p-0122" num="0126">Initially, let a=1.</p>
<p id="p-0123" num="0127">Step 1: Let m be the message <b>401</b> to be protected, where m may be a message in a sequence of messages. Assume that m is represented as a binary sequence, m=m<sub>1</sub>,m<sub>2</sub>, . . . ,m<sub>n</sub>. Let e be the remainder of an integer division of n with L. Concatenate m and a binary all zero sequence 0=0,0, . . . 0 of length e into a new message sequence m′=m,0 the length of which is an integer multiple of L, i.e. 1*L=n+e. It is understood that instead of the binary all zero sequence <b>0</b> any other bit sequence of length e may be used. In the example of <figref idref="DRAWINGS">FIG. 4</figref>, e=0. Divide the message sequence m,0 into blocks <b>401</b><i>a</i>-<b>401</b><i>d </i>of size L, i.e., m=m<sub>1</sub>,m<sub>2</sub>, . . . m<sub>L</sub>,m<sub>L+1</sub>,m<sub>L+2</sub>, . . . ,m<sub>2L</sub>,m<sub>2L+1</sub>, . . . ,m<sub>L·(1−1)</sub>, . . . , m<sub>n</sub>,0,0, . . . , 0=m<sub>11</sub>,m<sub>12</sub>, . . . ,m<sub>1j</sub>,m<sub>21</sub>,m<sub>22</sub>, . . . ,m<sub>2L</sub>, . . . ,m<sub>11</sub>,m<sub>12</sub>, . . . ,m<sub>1L</sub>=m′<sub>1</sub>,m′<sub>2</sub>, . . . ,m′<sub>1</sub>.</p>
<p id="p-0124" num="0128">Alternatively, other methods of dividing the message m into blocks may be used. For example, bits from predetermined positions of m may be concatenated into a block.</p>
<p id="p-0125" num="0129">Step 2: Now, let b<sub>i</sub>=b<sub>i1</sub>,b<sub>i2</sub>, . . . ,b<sub>ir</sub>, i=1, . . . ,l be a set of l predetermined binary sequences of length r. Replace m with v=M′<sub>1</sub>,b<sub>1</sub>,m′<sub>2</sub>,b<sub>2</sub>, . . . ,m′<sub>l</sub>,b<sub>l</sub>. The blocks m′<sub>1</sub>,b<sub>1</sub>, m′<sub>2</sub>,b<sub>2</sub>, . . . ,m′<sub>l</sub>,b<sub>l </sub>are illustrated as blocks <b>402</b><i>a</i>-<b>402</b><i>d </i>in <figref idref="DRAWINGS">FIG. 4</figref>. For example, all b<sub>i </sub>may be chosen to be a binary all zero sequence of length r. In a preferred embodiment, r may be chosen to be equal to t<sub>2</sub>.</p>
<p id="p-0126" num="0130">Step 3: Calculate
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>q</i><sub>a</sub><i>=P</i><sub>k,(a,l)</sub>(<i>v</i><sub>1</sub>)⊕(P<sub>k,(a,2)</sub>(<i>v</i><sub>2</sub>)⊕ . . . ⊕<i>P</i><sub>k(a,l)</sub>(<i>v</i><sub>l</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0127" num="0131">Step 4: If a&lt;y then let a=a+1 and go to Step 3, else continue with Step 5.</p>
<p id="p-0128" num="0132">Step 5: Generate q=q<sub>1</sub>, q<sub>2</sub>, . . . ,q<sub>y</sub>, i.e. a concatenation <b>508</b> of the XOR sums <b>407</b><i>a</i>-<b>407</b><i>c </i>calculated in step 3.</p>
<p id="p-0129" num="0133">Step 6: Let PRF(k) be a binary sequence of a size equal to the size of q. Preferably, PRF is a cryptographic secure pseudo-random function. Let z=PRF(K)⊕q.</p>
<p id="p-0130" num="0134">Step 7: The transmitter sends (m,z) over the channel. The receiver receives a pair (m′,z′). The receiver calculates the tag z″ of m′ according to Step 1-6. If the distance d(z′,z″)&lt;y·t<sub>2</sub>, the message is accepted, otherwise it is rejected. Preferably, the distance function d is the distance function δ described in connection with <figref idref="DRAWINGS">FIGS. 3</figref><i>a</i>-<i>b</i>. Alternatively, another distance function may be used, e.g. the Hamming distance or a distance function based on the Hamming distance. Furthermore, the threshold y·t<sub>2 </sub>may be replaced by a different threshold.</p>
<p id="p-0131" num="0135">If m is the i-th message in a sequence of messages, PRF may be chosen to be seeded by k and the index i, i.e. PRF(k,i).</p>
<p id="p-0132" num="0136">It is understood that the PRF encryption may be replaced with a different encryption function.</p>
<p id="p-0133" num="0137">The steps 1-5 may be repeated one or more times before continuing with step 6, each time using the calculated hash value q as an input m of the next iteration and, preferably, using a different set of permutations in each iteration. Preferably, y is decreased in subsequent iterations in order to generate a hash value of a small size. The hash value q of the last iteration is then used in step 6.</p>
<p id="p-0134" num="0138">It is understood that, instead of calculating the XOR sum of the permutations in step 3, the partial hash values q, may be calculated according to different rules. For example q<sub>a </sub>may be calculated recursively as:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>q</i><sub>a</sub><i>P</i><sub>k,(a,1</sub>)( . . . (<i>P</i><sub>k,(a,2)</sub>(v<sub>1</sub>)⊕v<sub>2</sub>)⊕ . . . )⊕<sub>3</sub>u<sub>1</sub>).<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
Furthermore, the order of the blocks v may be changed.
</p>
<p id="p-0135" num="0139">In the following, the method according to the embodiment described in connection with <figref idref="DRAWINGS">FIG. 4</figref> will be further illustrated by an example:</p>
<p id="p-0136" num="0140">Consider a message represented as a binary sequence m=1011 1111 0001, and consider the following parameters:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>t<sub>1</sub>=1, r=t<sub>2</sub>=2, n=12, L=2, l=6, y=2<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
With these parameters y·l=12 different permutations on the set with r+L=4 elements are needed. The permutation may be chosen at random or according to a different selection rule. Furthermore, the permutations may be part of the key. In this example the permutations are assumed to be as follows:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>P<sub>K,(1,1)</sub>={1,2,4,3}, P<sub>K,(</sub>1,2)={4,1,3,2}, P<sub>K,(</sub>1,3)={1, 4,2,3}, P<sub>K,(</sub>1,4)={1, 3,4,2}, P<sub>K,(</sub>1,5)={1,2,3,4}, P<sub>K,(</sub>1,6)={1,3,4,2}.<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>P<sub>K,(2,1)</sub>={4,1,2,3}, P<sub>K,(2,2)</sub>={3,1,4,2}, P<sub>K,(2,3)</sub>={3,4,2,1}, P<sub>K,(2,4)</sub>={2,4,1,3}, P<sub>K,(2,5)</sub>={1, 4,2,3}, P<sub>K,(2,6)</sub>={3,1,4,2}.<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0137" num="0141">Furthermore, assume that m is the first message in a sequence and that PRF(K,1)=1101 0011.</p>
<p id="p-0138" num="0142">Below it is shown how to calculate z:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>a=1.<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0139" num="0143">Step 1: m is an even multiple of 2 and, therefore, it is not necessary to pad any new bits to it (e=0).</p>
<p id="p-0140" num="0144">Step 2: v=1000 1100 1100 1100 0000 0100.</p>
<p id="p-0141" num="0145">Step 3:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>q</i>1=P<sub>K(1,1)</sub>(1000)⊕<i>P</i><sub>K,(1,2)</sub>(1100)⊕<i>P</i><sub>K,(1,3)</sub>(1100)⊕<i>P</i><sub>K,(1,4)</sub>(1100)⊕P<sub>K,(1,5)</sub>(0000)⊕P<sub>K,(1,6)</sub>(0100)=1000⊕0101⊕1010⊕1001⊕0000 ⊕0001=1111.<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0142" num="0146">Step 4: a=2. Go to Step 3.</p>
<p id="p-0143" num="0147">Step 3:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>q</i>2<i>=P</i><sub>K,(2,1)</sub>(1000)⊕<i>P</i><sub>K,(2,2)</sub>(1100)⊕<i>P</i><sub>K,(2,3)</sub>(1100)⊕<i>P</i><sub>K,(2,4)</sub>(1100)⊕<i>P</i><sub>K,(2,5)</sub>(0000)⊕<i>P</i><sub>K,(2,6)</sub>(0100)=0100⊕0101⊕0011⊕1010⊕0000⊕0001=1001.<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0144" num="0148">Step 4: a=2, Continue with Step 5.</p>
<p id="p-0145" num="0149">Step 5: q=1111 1001.</p>
<p id="p-0146" num="0150">Step 6: z=PRF(K,1)⊕q=1101 0011⊕1111 1001=0010 1010.</p>
<p id="p-0147" num="0151">Step 7: Send (m,z)=(1011 1111 0001, 0010 1010).</p>
<p id="p-0148" num="0152">It is noted that it is possible to show that an adversary who tries to replace m with m′, where h(m,m′)&gt;1, succeeds with a probability that is less than (⅝)<sup>2</sup>.</p>
<p id="p-0149" num="0153"><figref idref="DRAWINGS">FIG. 5</figref> shows a block diagram of a communications system according to an embodiment of the invention. The system comprises a transmitter <b>501</b> and a receiver <b>506</b> which communicate via a transmission channel <b>505</b>. The transmitter comprises a processing unit <b>503</b> which is connected to a storage medium <b>502</b> and a transmitter unit <b>504</b>. The receiver <b>506</b> comprises a processing unit <b>508</b> which is connected to a storage medium <b>507</b> and a receiver unit <b>509</b>.</p>
<p id="p-0150" num="0154">On the storage medium <b>502</b> of the transmitter <b>501</b>, computer-executable code is stored which, when loaded in the processing unit <b>503</b>, is adapted to implement a MAC algorithm according to the invention. Furthermore, relevant parameters for the MAC algorithm, such as a secret key, threshold values, block lengths, etc., are also stored on the storage medium <b>502</b>. The message payload to be transmitted may also be stored on the storage medium <b>502</b>. The communication between the transmitter <b>501</b> and the receiver <b>506</b> may, for example, be implemented as a layered protocol stack, e.g. according to the OSI model. At the transmitter, one of the layers of the protocol stack may include an implementation of the MAC algorithm according to the invention, where the MAC algorithm receives a message payload from a higher layer, and the resulting tag value is combined with the message payload and sent to a lower layer of the layered protocol stack which initiates the transmission of the message via the transmitter unit <b>504</b>. At the receiver the message is received by the receiver unit <b>509</b> and processed by the lowest layers of the protocol stack at the receiver. The received message is routed to the processor <b>508</b>. On the storage medium <b>507</b> computer-executable code is stored which is adapted to implement the corresponding MAC algorithm at the receiver <b>506</b> when loaded in the processing unit <b>508</b>. Furthermore, the corresponding parameters for the MAC algorithm are also stored on the storage medium <b>503</b>. The message payload and the received tag value are forwarded to the MAC program module executed on the processor <b>508</b>. Based on the comparison of tag values, the received message may either be passed to a higher layer of the protocol stack or a re-transmission of the message may be initiated. Furthermore, the message may be stored on the storage medium <b>507</b>.</p>
<p id="p-0151" num="0155">The storage media may include magnetic tape, optical disc, digital video disk (DVD), compact disc (CD or CD-ROM), mini-disc, hard disk, floppy disk, ferro-electric memory, electrically erasable programmable read only memory (EEPROM), flash memory, EPROM, read only memory (ROM), static random access memory (SRAM), dynamic random access memory (DRAM), ferromagnetic memory, optical storage, charge coupled devices, smart cards, etc.</p>
<p id="p-0152" num="0156">The processing units may include a microprocessor, an application-specific integrated circuit, or another integrated circuit, a smart card, or the like.</p>
<p id="p-0153" num="0157"><figref idref="DRAWINGS">FIG. 6</figref><i>a </i>shows a first example of a message format according to an embodiment of the invention. The message comprises a header <b>601</b> comprising information such as routing information, information about the length of the following message, information about whether authentication is to be applied, sender identification, etc. The message further comprises a message body <b>602</b> comprising the information to be transmitted and the tag value <b>603</b> calculated according to a MAC function according to the invention.</p>
<p id="p-0154" num="0158"><figref idref="DRAWINGS">FIG. 6</figref><i>b </i>shows a second example of a message format according to an embodiment of the invention. According to this example, the message, comprising a header <b>601</b>, a message body <b>602</b> and a tag value <b>603</b>, is divided into smaller data packets <b>604</b><i>a</i>-<i>e</i>. The division into the packets <b>604</b><i>a</i>-<i>e </i>may, for example, be performed by a lower layer of a protocol stack at the transmitter, and each of the packets <b>604</b><i>a</i>-<i>e </i>may include header information according to the communications protocol used. At the receiver, the message <b>602</b> and the tag value <b>603</b> are reconstructed from the received smaller messages <b>404</b><i>a</i>-<i>e </i>before the authentication check is performed.</p>
<p id="p-0155" num="0159"><figref idref="DRAWINGS">FIG. 6</figref><i>c </i>shows a third example of a message format according to an embodiment of the invention. According to this example, the message body <b>602</b> is divided into smaller messages <b>605</b><i>b</i>, <b>606</b><i>b</i>, and <b>607</b><i>b</i>, and respective tag values <b>605</b><i>c</i>, <b>606</b><i>c</i>, and <b>607</b><i>c </i>are calculated for each of the smaller messages <b>605</b><i>b</i>, <b>606</b><i>b</i>, and <b>607</b><i>b</i>. Subsequently, the messages <b>605</b>-<b>607</b>, each message comprising respective header information <b>605</b><i>a</i>, <b>606</b><i>a</i>, <b>607</b><i>a</i>, respectively, message bodies <b>605</b><i>b</i>, <b>606</b><i>b</i>, <b>607</b><i>b</i>, respectively, and tag values <b>605</b><i>c</i>, <b>606</b><i>c</i>, <b>607</b><i>c</i>, respectively, are sent to the receiver. At the receiver, the authentication check is performed for each of the messages <b>605</b>-<b>607</b> prior to the reconstruction of the message <b>602</b> from the message bodies, <b>605</b><i>b</i>, <b>606</b><i>b</i>, and <b>607</b><i>b. </i></p>
<p id="p-0156" num="0160">It is understood that other message formats may also be used within the scope of the invention. For example, the tag value may be combined with the message body in a different way, e.g. by prepending the tag value or placing it at predetermined positions within the message body. Furthermore, depending on the transmission protocol used, other ways of splitting up the message and/or including header information may be used, including the use of no header information or the sending of the tag value and the message body separately.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001" nb-file="US07298840-20071120-M00001.NB">
<img id="EMI-M00001" he="7.03mm" wi="76.20mm" file="US07298840-20071120-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00002" nb-file="US07298840-20071120-M00002.NB">
<img id="EMI-M00002" he="8.81mm" wi="76.20mm" file="US07298840-20071120-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00003" nb-file="US07298840-20071120-M00003.NB">
<img id="EMI-M00003" he="8.81mm" wi="76.20mm" file="US07298840-20071120-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00004" nb-file="US07298840-20071120-M00004.NB">
<img id="EMI-M00004" he="8.81mm" wi="76.20mm" file="US07298840-20071120-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of authenticating data, the method comprising the steps of:
<claim-text>receiving a message and a corresponding first data item generated according to a first predetermined rule;</claim-text>
<claim-text>generating a second data item according to a second predetermined rule on the basis of the received message;</claim-text>
<claim-text>calculating a first distance between the received first data item and the generated second data item;</claim-text>
<claim-text>comparing the calculated first distance with a predetermined distance; and</claim-text>
<claim-text>processing the message by accepting the message if the calculated first distance is smaller than the predetermined distance value wherein the step of processing the message includes:
<claim-text>generating a first sequence of message sections from the message, each message section having a predetermined length;</claim-text>
<claim-text>modifying at least a first message section of the sequence of message sections;</claim-text>
<claim-text>applying at least a first permutation to at least the modified first message section of the sequence of message sections;</claim-text>
<claim-text>calculating at least one XOR sum of a result of at least the first permutation; and</claim-text>
<claim-text>calculating a hash value from the calculated at least one XOR sum.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. A method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the message and the first data item are received via a wireless communications channel.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. A method according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the step of generating the second data item comprises the step of applying a predetermined permutation to a third data item derived from the message.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. A method according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the step of generating the second data item comprises the step of combining a fourth data item derived from the message with a predetermined fifth data item.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A method according to <claim-ref idref="CLM-00004">claims 4</claim-ref>, wherein the step of combining a fourth data item derived from the message with a predetermined fifth data item comprises the step of inserting predetermined binary sequences at predetermined positions of the fourth data item.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A method according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the step of calculating a first distance comprises the step of calculating a Hamming distance.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the method further comprises the step of repeating the steps of applying at least the first permutation and calculating an XOR sum a predetermined number of times.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A method according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the method further comprises the step of repeating the steps of processing the message using at least a second permutation.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A method according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the method further comprises the step of encrypting the calculated hash value.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A method according to <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the step of calculating the first distance further comprises the steps of:
<claim-text>dividing the first and second data items into corresponding first and second sets of data sections;</claim-text>
<claim-text>calculating a second distance between a first section of the first set of sections and a corresponding second section of the second set of sections; and</claim-text>
<claim-text>comparing the second distance with a predetermined threshold value.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A method according to <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein:
<claim-text>the first data item is further generated on the basis of a first secret key code; and</claim-text>
<claim-text>the step of generating the second data item on the basis of the received message further comprises the step of generating the second data item on the basis of a second secret key code.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A method according to <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein:
<claim-text>the first and second secret key codes are the same key code; and</claim-text>
<claim-text>the first and second predetermined rules are the same rule.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A communications system comprising:
<claim-text>first processing means adapted to calculate a first data item according to a first predetermined rule on the basis of a message;</claim-text>
<claim-text>a transmitter adapted to transmit the message and the generated first data item via a transmission channel;</claim-text>
<claim-text>a receiver adapted to receive the transmitted message and the transmitted first data item;</claim-text>
<claim-text>second processing means adapted to:
<claim-text>generate a second data item according to a second predetermined rule on the basis of the received message;</claim-text>
<claim-text>calculate a first distance between the received first data item and the generated second data item; and</claim-text>
<claim-text>compare the calculated first distance with a predetermined distance value; and</claim-text>
</claim-text>
<claim-text>third processing means for processing the message and adapted to:
<claim-text>generating a first sequence of message sections from the message, each message section having a predetermined length;</claim-text>
<claim-text>modifying at least a first message section of the sequence of message sections;</claim-text>
<claim-text>applying at least a first permutation to at least the modified first message section of the sequence of message sections:</claim-text>
<claim-text>calculating at least one XOR sum of a result of at least the first permutation; and</claim-text>
<claim-text>calculating a hash value from the calculated at least one XOR sum.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. An apparatus comprising:
<claim-text>a receiver adapted to receive a message and a corresponding first data item generated according to a first predetermined rule;</claim-text>
<claim-text>first processing means adapted to:
<claim-text>generate a second data item according to a second predetermined rule on the basis of the received message;</claim-text>
<claim-text>calculate a first distance between the received first data item and the generated second data item; and</claim-text>
<claim-text>compare the calculated first distance with a predetermined distance value; and</claim-text>
</claim-text>
<claim-text>second processing means for processing the message and adapted to:
<claim-text>generating a first sequence of message sections from the message, each message section having a predetermined length;</claim-text>
<claim-text>modifying at least a first message section of the sequence of message sections;</claim-text>
<claim-text>applying at least a first permutation to at least the modified first message section of the sequence of message sections;</claim-text>
<claim-text>calculating at least one XOR sum of a result of at least the first permutation; and</claim-text>
<claim-text>calculating a hash value from the calculated at least one XOR sum.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. An apparatus according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the apparatus is a mobile radio terminal.</claim-text>
</claim>
</claims>
</us-patent-grant>
