<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299349-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299349</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10062068</doc-number>
<date>20020131</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>849</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>9</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>713150</main-classification>
<further-classification>713168</further-classification>
<further-classification>380247</further-classification>
<further-classification>380270</further-classification>
<further-classification>370278</further-classification>
</classification-national>
<invention-title id="d0e53">Secure end-to-end notification</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6047357</doc-number>
<kind>A</kind>
<name>Bannon et al.</name>
<date>20000400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711133</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6052788</doc-number>
<kind>A</kind>
<name>Wesinger et al.</name>
<date>20000400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713201</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6317831</doc-number>
<kind>B1</kind>
<name>King</name>
<date>20011100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713171</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6665711</doc-number>
<kind>B1</kind>
<name>Boyle et al.</name>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709219</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6707801</doc-number>
<kind>B2</kind>
<name>Hsu</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370312</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6909702</doc-number>
<kind>B2</kind>
<name>Leung et al.</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370278</main-classification></classification-national>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>7027597</doc-number>
<kind>B1</kind>
<name>Stojancic et al.</name>
<date>20060400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>380 28</main-classification></classification-national>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2002/0042875</doc-number>
<kind>A1</kind>
<name>Shukla</name>
<date>20020400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713151</main-classification></classification-national>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2002/0101997</doc-number>
<kind>A1</kind>
<name>Curtis et al.</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>380279</main-classification></classification-national>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2002/0124090</doc-number>
<kind>A1</kind>
<name>Poier et al</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709228</main-classification></classification-national>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2002/0156921</doc-number>
<kind>A1</kind>
<name>Dutta et al.</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709246</main-classification></classification-national>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>2002/0186845</doc-number>
<kind>A1</kind>
<name>Dutta et al.</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>380247</main-classification></classification-national>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>2003/0018766</doc-number>
<kind>A1</kind>
<name>Duvvuru</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</citation>
<citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2003/0072451</doc-number>
<kind>A1</kind>
<name>Pimentel et al.</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>380270</main-classification></classification-national>
</citation>
<citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2003/0120924</doc-number>
<kind>A1</kind>
<name>Immonen</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713170</main-classification></classification-national>
</citation>
<citation>
<nplcit num="00016">
<othercit>R. Atkinson, “IP Encapsulating Security Payload (ESP)”, p. 1-12, Aug. 1995.</othercit>
</nplcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00017">
<othercit>C. Madson and N. Doraswamy, “RFC 2405: The ESP DES-CBC Cipher Algorithm with Explicit IV”, p. 1-10, Nov. 1998.</othercit>
</nplcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00018">
<othercit>S. Kent and R. Atkinson, “RFC 2406: IP Encapsulating Security Payload (ESP)”, p. 1-22, Nov. 1998.</othercit>
</nplcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00019">
<othercit>W. Stallings, “Cryptography And Network Security: Principles and Practice”, Prentice-Hall, Inc., p. 402-431, 1999.</othercit>
</nplcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00020">
<othercit>Kegel, Dan, “SSL/TLS”, www.kegel.com/ssl/, Sep. 25, 2001.</othercit>
</nplcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00021">
<othercit>Protocol Building Blocks, Bruce Schneier, Applied Crytography—Protocols, Algorithms, and Source Code in C, Associate Publisher: Katherine Schowalter, 1994, pp. 19-126 and pp. 376-410.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>26</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>713150-153</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713161</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713170-171</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713201</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713168</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380247</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380255</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380270</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380278</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380259</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380 33</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380277</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709223-228</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709246</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370352-356</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370401</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370278</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370312</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>455411</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>455410</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>726  2</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>726  3</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>7</number-of-drawing-sheets>
<number-of-figures>8</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20030145229</doc-number>
<kind>A1</kind>
<date>20030731</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Cohen</last-name>
<first-name>Josh R.</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Kramer</last-name>
<first-name>Michael</first-name>
<address>
<city>Yonkers</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="003" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Hammond</last-name>
<first-name>Bradley M.</first-name>
<address>
<city>Bellevue</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="004" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Roberts</last-name>
<first-name>Paul</first-name>
<address>
<city>Bury St. Edmunds</city>
<country>GB</country>
</address>
</addressbook>
<nationality>
<country>GB</country>
</nationality>
<residence>
<country>GB</country>
</residence>
</applicant>
<applicant sequence="005" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Simon</last-name>
<first-name>Daniel R.</first-name>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="006" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Butler</last-name>
<first-name>Lee M.</first-name>
<address>
<city>Carnation</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="007" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Zhu</last-name>
<first-name>Yuhang</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Workman Nydegger</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Microsoft Corporation</orgname>
<role>02</role>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Vu</last-name>
<first-name>Kim</first-name>
<department>2135</department>
</primary-examiner>
<assistant-examiner>
<last-name>Shaw</last-name>
<first-name>Yin-Chen</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Providing secure end-to-end notifications from a notification source to a notification sink despite the notification mechanism including one or more message transit points between the notification source and the notification sink. Initially, security information (e.g., the master security, the cryptographic algorithm, and the like) is negotiated out-of-band from the one or more message transit points so that the message transit points are not apprised of the security information. When a designated event occurs, the notification source generates a push message that includes the notification encrypted using the pre-negotiated security information. When the notification sink receives the push message, the notification sink decrypts the notification using the pre-negotiated security information, as well as supplemental information provided in the push message. Thus, the message transit points only have access to the encrypted form of the notification.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="164.00mm" wi="170.10mm" file="US07299349-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="225.55mm" wi="130.30mm" orientation="landscape" file="US07299349-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="176.45mm" wi="145.20mm" orientation="landscape" file="US07299349-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="179.75mm" wi="170.94mm" file="US07299349-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="242.49mm" wi="155.62mm" file="US07299349-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="241.72mm" wi="118.03mm" orientation="landscape" file="US07299349-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="118.62mm" wi="124.29mm" file="US07299349-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="251.80mm" wi="172.30mm" orientation="landscape" file="US07299349-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">1. The Field of the Invention</p>
<p id="p-0003" num="0002">The present invention relates to the field of notification technology. Specifically, the present invention relates to methods, systems and computer program products for providing secure end-to-end notifications over networks that include one or more intermediary message transit point.</p>
<p id="p-0004" num="0003">2. Background and Related Art</p>
<p id="p-0005" num="0004">Most would agree that intelligent decision-making requires access to relevant and timely information. Computer networking has greatly enhanced our ability to access such information, resulting in this modem era often being termed “the information age”.</p>
<p id="p-0006" num="0005">Some access to information is synchronous or “pull-oriented”. In other words, information is accessed each time a request for the information is submitted. For example, users may use Internet-enabled computers to request access to information such as Web pages, e-mail accounts, calendaring applications, or the like. In this manner, synchronous access allows for broad control over the type of information accessed.</p>
<p id="p-0007" num="0006">There are some cases in which it may be inefficient to perform synchronous access of information. For example, some information changes relatively often. A user may desire to know the current information despite such frequent changes. It that case, synchronous access would require frequent requests for updated information. Such information may include, for example, stock prices. In addition, perhaps the user does not care about the information unless the information has a certain value. For example, perhaps a user is not interested in a certain fifteen-year mortgage rate unless the value drops below 6%, at which time the user may consider refinancing. In this case, synchronous access might result in numerous requests for updated information even if the interest rate was not yet low enough to be interesting to the user.</p>
<p id="p-0008" num="0007">In order to meet avoid these inefficiencies, computer networks may also be used to implement notifications in which a user subscribes to be notified upon the occurrence of predetermined events. If the event occurs, the notification is dispatched to the user without the user needing to request each notification. Such communication is often termed asynchronous or “push-oriented” since there need not be a user-issued request before each notification.</p>
<p id="p-0009" num="0008">As a notification travels from the source computer system that generates the notification (called herein, the “notification source”) to the destination computer system that receives the notification (called herein, the “notification sink”), the notification may travel through a number of different computer systems (called herein “routing points”). While many of these routing points simply forward the notification on to the next routing point, some routing points actually may have access to the notification so as to be able to intercept the content of the notification perhaps even at the application level. Such routing points are called herein “message transit points”. Such message transit points perform useful tasks such as protocol translation in order to conform the notification with subsequent steps in the notification delivery. However, since the message transit points have access to the notification at such a high level, the message transit points may access and intercept the content of the notification.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a network <b>100</b> in which a notification source <b>101</b> issues a notification <b>102</b> to a notification sink <b>103</b> via one or more message transit points <b>104</b>. Two message transit points <b>104</b>A and <b>104</b>B are illustrated in <figref idref="DRAWINGS">FIG. 1</figref> by way of example only. In the example where there are two message transit points, there are three hops in the transmission, one from the notification source <b>101</b> to the first transit point <b>104</b><i>a </i>(represented by arrow <b>105</b>A), one from the first message transit point <b>104</b><i>a </i>to the second message transit point <b>104</b>B (represented by arrow <b>105</b>B), and one from the second message transit point <b>104</b>B to the notification sink <b>103</b>. Security is implemented on each hop.</p>
<p id="p-0011" num="0010">In some cases, it may be perfectly acceptable for the message transit points to have such access to the notification. For example, the notification may not be sensitive in which case it may not matter if the message transit points read the notification. Also, the notification may be highly sensitive, but the message transit point is within a common sphere of trust with the notification source or with the notification sink. However, there may also be cases in which the notification is sensitive and in which the message transit points <b>104</b> are not within the same sphere of trust as the notification source <b>101</b> or the notification sink <b>103</b>. However, in the prior art network illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, the message transit points <b>104</b> may potentially have unfettered access to such highly sensitive notifications.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 2</figref> illustrates a push network <b>200</b> that represents an example of the network <b>100</b> illustrated in <figref idref="DRAWINGS">FIG. 1</figref>. The push network <b>200</b> is described in the Wireless Application Protocol (also called “WAP”) specifications published by the WAP Forum. In this example, the notification source <b>101</b> of <figref idref="DRAWINGS">FIG. 1</figref> is a push initiator <b>201</b>, the notification <b>102</b> is a push message <b>202</b>, the notification sink <b>103</b> is a wireless device <b>203</b> and the at least one transit point <b>104</b> is a single transit point in the form of a push proxy gateway <b>204</b>.</p>
<p id="p-0013" num="0012">The push initiator <b>201</b> transmits the push message <b>202</b> to the push proxy gateway <b>204</b> using Push Access Protocol (also called “PAP”). In the PAP push message, eXtensible Markup Language (XML) is used to specify delivery instructions and the push content may be a Multipurpose Internet Mail Extensions (also called “MIME”) media type. The push proxy gateway <b>204</b> follows the delivery instructions in performing protocol translation from PAP to Push Over-the-Air Protocol, and in forwarding the push content to the wireless device <b>203</b> using the Push Over-the-Air protocol.</p>
<p id="p-0014" num="0013">While the push proxy gateway <b>204</b> may be co-located with the push initiator, the push proxy gateway <b>204</b> may also be maintained by a wireless carrier. This carrier may be in a different sphere of trust than the push initiator. However, in conventional notification technology, the push proxy gateway <b>204</b> may have unfettered access to the push message. Accordingly, what is desired are methods, systems, and computer program products for providing secure end-to-end notifications in networks that includes one or more message transit points.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0015" num="0014">Methods, systems, and computer program products are described for providing secure end-to-end notifications from a notification source to a notification sink despite the notification mechanism including one or more message transit points between the notification source and the notification sink. These message transit points perform more than mere routing of the notification, but have wide-ranging access to the notification so as to potentially be able to intercept the content of the notification if it is not encrypted.</p>
<p id="p-0016" num="0015">Initially, security information is negotiated out-of-band from the notification mechanism so that the message transit points are not apprised of the security information. Such security information may include, for example, a master secret, a cryptographic algorithm selection, or other information helpful to decrypt encrypted content. When a designated event occurs, the notification source generates a push message that includes the notification encrypted using the pre-negotiated security information. The push message also includes supplemental information such as a session identifier that, combined with the pre-negotiated security information, may be used to decrypt the notification. When the notification sink receives the push message, the notification sink decrypts the notification using the pre-negotiated security information, as well as the supplemental information provided in the push message.</p>
<p id="p-0017" num="0016">Note that the encrypted notification, and potentially the entire push message may be transmitted end-to-end from the notification source, through the one or more message transit points, and to the notification sink, despite protocol translations along the way. Thus, the message transit points only have access to the encrypted form of the notification. Since the message transit points were not privy to the security information that was initially negotiated between the notification source and the notification sink, it would be extremely onerous, if not impossible, for the one or more message transit points to access the content of the notification in a timely manner. Accordingly, the content of the notification would remain confidential between the notification source and the notification sink absent extreme efforts.</p>
<p id="p-0018" num="0017">In one embodiment, the notification occurs using a modification of Wireless Application Protocol (WAP). The Wireless Application Protocol includes provisions for pushing notifications from a push initiator through a push proxy gateway to a wireless device. The push initiator may be considered as being a notification source, with the wireless device being a notification sink, and with the push proxy gateway being a message transit point.</p>
<p id="p-0019" num="0018">Security may be provided hop-by-hop between the push initiator and the push proxy gateway, and separately between the push proxy gateway and the wireless device. However, the push proxy gateway has full access to the notification and may intercept the content of the notification with minimal effort. In other words, WAP has no provision for providing the end-to-end security that the principles of the present invention provide.</p>
<p id="p-0020" num="0019">WAP uses Push Access Protocol (PAP) to forward a push message from the push initiator to the push proxy gateway. In accordance with one embodiment of the invention, the PAP message includes a multipart MIME segment in the form of an Encapsulated Security Payload (ESP) object as defined by the Internet standard RFC 2406. ESP objects have conventionally been used for implementing security in an Internet Protocol context as described by RFC 2406. It would not at all be apparent that such an ESP object would be useful in the push context of WAP.</p>
<p id="p-0021" num="0020">The push proxy gateway extracts the ESP object from the PAP message, and then includes the object in a Push Over-the-Air protocol message to be delivered via Short Message Services (SMS). The wireless device then receives the SMS message with the ESP object, and then interprets the ESP object. The clear-text information in the ESP object is then used, along with the pre-negotiated security information, to decrypt the encrypted payload that includes the notification.</p>
<p id="p-0022" num="0021">Accordingly, using the principles of the present invention, a user does not have to sacrifice security when receiving notifications at a wireless device. Additional features and advantages of the invention will be set forth in the description that follows, and in part will be obvious from the description, or may be learned by the practice of the invention. The features and advantages of the invention may be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the present invention will become more fully apparent from the following description and appended claims, or may be learned by the practice of the invention as set forth hereinafter.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0023" num="0022">In order to describe the manner in which the above-recited and other advantages and features of the invention can be obtained, a more particular description of the invention briefly described above will be rendered by reference to specific embodiments thereof which are illustrated in the appended drawings. Understanding that these drawings depict only typical embodiments of the invention and are not therefore to be considered to be limiting of its scope, the invention will be described and explained with additional specificity and detail through the use of the accompanying drawings in which:</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 1</figref> schematically illustrates a conventional network in which a notification may be transmitted from a notification source to a notification sink via one or more message transit points.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 2</figref> illustrates a push network that represents a specific example of the conventional network of <figref idref="DRAWINGS">FIG. 1</figref>, in which a push proxy gateway represents a message transit point.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 3</figref> is a flowchart of a method for providing secure end-to-end notification through one or more message transit points in accordance with the present invention.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 4</figref> schematically illustrates a general network in which the present invention may operate and that includes logical flows involved with negotiating security information out-of-band and transmitting a push message that contains a notification from the notification source to the notifications sink.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 5</figref> illustrates a data structure that represents the general form of a push message in accordance with the present invention.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 6</figref> schematically illustrates a more specific network in which the present invention may operate and that includes logical flows involved with transmitting a push message in the form of an ESP object from a push initiator to a wireless device via a push proxy gateway.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 7</figref> illustrates a data structure of a push message body in the form of an Encapsulated Security Payload (ESP) object.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 8</figref> illustrates a computer system that represents one of a wide-variety of hardware environments in which the principles of the present invention may be employed.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0032" num="0031">The present invention extends to methods, systems and computer program products for providing end-to-end security when transmitting a notification from a notification source to a notification sink over a notification mechanism that includes one or more message transit points. The message transit points represent network locations that have access to the notification so as to be able to store or render the notification in readable form. The present invention facilitates secure end-to-end notification despite such message transit points.</p>
<p id="p-0033" num="0032">Initially, a notification sink such as a wireless device negotiates security information with the notification source out-of-band from the notification mechanism. In this description and in the claims, negotiating “out-of-band from the notification mechanism” means that the security information is negotiated without the message transit points becoming apprised of the security information. Instead, the security information is shared only between the notification source and sink. When a notification is to be sent, the notification source generates a notification such as a push message that includes an encrypted form of the notification, as well as clear-text supplemental information that may be used to decrypt the notification. The notification sink then uses the security information previously negotiated, as well as the supplemental information provided in the notification, to decrypt the notification. The message transit points were not apprised of the security information needed to decrypt the notification. Accordingly, the notification traverses the message transit points without the content of the notification becoming clear to the message transmit points.</p>
<p id="p-0034" num="0033">In the following description, the principles of the present invention are described using an example embodiment in which the notification is a push message. However, it will be apparent to those of ordinary skill in the art, after having reviewed this description, that the principles of the present invention may apply to notification other than push messages. In this description and in the claims, a “notification” refers to any message that is electronically communicated between two end-points, regardless of the form and content of the message, and regardless of the protocol used to communicate the message. Thus, e-mails, instant messages, or any other electronic messages may be considered notifications within the scope of this definition.</p>
<p id="p-0035" num="0034">Also, in the description and in the claims, an “automatically-generated” notification refers to a notification that is automatically generated at the notification source without synchronous user intervention. In this description and in the claims, a “subscription-based” notification refers to a notification that is generated in response to an express subscription to be notified in response to an event.</p>
<p id="p-0036" num="0035">Embodiments within the scope of the present invention may comprise a special purpose or general purpose computing device including various computer hardware, as discussed in greater detail below. Embodiments within the scope of the present invention also include computer-readable media for carrying or having computer-executable instructions or data structures stored thereon. Such computer-readable media can be any available media which can be accessed by a general purpose or special purpose computer. By way of example, and not limitation, such computer-readable media can comprise physical storage media such as RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to carry or store desired program code means in the form of computer-executable instructions or data structures and which can be accessed by a general purpose or special purpose computer.</p>
<p id="p-0037" num="0036">When information is transferred or provided over a network or another communications connection (either hardwired, wireless, or a combination of hardwired or wireless) to a computer, the computer properly views the connection as a computer-readable medium. Thus, any such connection is properly termed a computer-readable medium. Combinations of the above should also be included within the scope of computer-readable media. Computer-executable instructions comprise, for example, instructions and data which cause a general purpose computer, special purpose computer, or special purpose processing device to perform a certain function or group of functions.</p>
<p id="p-0038" num="0037">Although not required, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed by computing devices. Generally, program modules include routines, programs, objects, components, data structures, and the like that perform particular tasks or implement particular abstract data types. Computer-executable instructions, associated data structures, and program modules represent examples of the program code means for executing steps and acts of the methods disclosed herein.</p>
<p id="p-0039" num="0038">Those skilled in the art will appreciate that the invention may be practiced in network computing environments with many types of computer system configurations, including personal computers, hand-held devices, multi-processor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by local and remote processing devices that are linked (either by hardwired links, wireless links, or by a combination of hardwired or wireless links) through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 3</figref> is a flowchart of a method <b>300</b> for providing secure end-to-end notifications in accordance with the present invention. Some acts are performed by the notification source as listed in the right column of <figref idref="DRAWINGS">FIG. 3</figref> under the heading “SOURCE”. Some acts are performed by the notification sink as listed in the left column of <figref idref="DRAWINGS">FIG. 3</figref> under the heading “SINK”. Other acts are performed cooperatively by both the notification source and the notification sink as listed in the middle column of <figref idref="DRAWINGS">FIG. 3</figref> under the heading “BOTH”.</p>
<p id="p-0041" num="0040">The method <b>300</b> initially includes a step for drafting a push message so as to ensure secure end-to-end notification between the notification source and the notification sink (step <b>301</b>). This step is result-oriented and includes any corresponding acts for accomplishing this result. A particular example of such acts includes an act of the notification source and sink cooperatively negotiating security information out-of-band from the notification mechanism (act <b>302</b>) and then an act of using the security information to generate a push message that includes an encrypted form of the notification as well as clear-text supplemental information that may be used to decrypt the notification (act <b>303</b>).</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a network <b>400</b> in which there are logical flows between a notification source <b>401</b> and a notification sink <b>403</b>. Arrow <b>410</b> of <figref idref="DRAWINGS">FIG. 4</figref> represents the bi-directional communication that may be involved with negotiating the security information. In one example, the notification sink <b>403</b> may negotiate the security information by connecting to an initial browse point using browsing software running on the notification sink <b>403</b>. The initial browse point may be represented in the form of a Uniform Resource Identifier (URI). The initial browse point may be set for the notification sink through device provisioning. In addition, there may be different browse points set for different notification sources. In one embodiment, the notification sink <b>403</b> is a wireless device. In the remainder of this description, the notification sink <b>403</b> will often be referred to as wireless device <b>403</b> although the principles of the present invention are not so limited.</p>
<p id="p-0043" num="0042">The wireless device <b>403</b> securely browses to the initial browse point using, for example, the Secure Socket Layer (also called “SSL”) protocol. Using this protocol, the wireless device <b>403</b> provides a Security Parameter Index (also called “SPI”) that may be used to identify a notification session. The SPI is, for example, a 32-bit value that is unique to the wireless device <b>403</b>, and that may serve as a handle into the appropriate security context for the notification session. The wireless device <b>403</b> may also suggest other security information such as the master secret, the cryptographic algorithm (e.g., NULL for none, DES, 3DES, RC5 or the like), the key length, the has algorithm (e.g., NULL, MD5-HMAC, SHA<sub>13 </sub>HMAC, MD5<sub>13 </sub>RCA, SHA<sub>13 </sub>RCA or the like), the session expiration (in time and/or in usage), and potentially an exportable keys flag that indicates whether or not this security information is exportable. The wireless device <b>403</b> may suggest these parameters in a GET method of a HyperText Transport Protocol (HTTP) request with the parameters included as arguments in the method. The initial browse point of the notification source <b>401</b> may then respond with an acceptance or a rejection of these parameters. A rejection may also include a suggestion for alternative values. Ultimately, the required security information for the session is agreed upon.</p>
<p id="p-0044" num="0043">In one embodiment, the master secret may have a long lifetime on the order of months. To further protect the master secret from discovery during this lifetime, the master secret may be transformed through a Pseudo Random Function (also called “PRF”) to generate a different encryption key for each message. The implementation of this option may also be negotiated during this initial negotiation. More regarding the transformation of this master secret is described in commonly-owned co-pending U.S. patent application Ser. No. 09/761,363 filed Jan. 16, 2001 and entitled “Methods and Systems for Generating Encryption Keys Using Random Bit Generators”, which application is incorporated herein by references in its entirety.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 4</figref> illustrates that the notification sink <b>403</b> has access to security information <b>420</b> such as the security information <b>421</b> for the notification session just set up (session A) potentially along with other security information (represented by the vertical ellipses) associated with other notification sessions set up with the same or different notification sources. Likewise, the notification source <b>401</b> has security information <b>430</b> such as the security information <b>431</b> for the notification session just set up (session A) potentially along with other security information (represented by the vertical ellipses) associated with other notification sessions set up with the same or different notification sinks.</p>
<p id="p-0046" num="0045">Although negotiating security information “out-of-band from the notification mechanism” has been described with respect to negotiating the security information within a secure SSL session, other forms of negotiating out-of-band from the notification mechanism may be performed so long as the message transit points do not become apprised of the security information. For example, if the notification sink is a wireless device that has a docking station that connects to a desktop computer, a docked wireless device may instruct the desktop computer to use its modem to establish a telephone call with the notification source using a wired connection to negotiate the security information. The security information may then be passed to the wireless device via the docking station.</p>
<p id="p-0047" num="0046">Alternatively, negotiating out-of-band from the notification mechanism may involve the notification sources transmitting the security information to the notification sink using Wireless Application Forum (WAP) provisioning protocols. The security information may also be included with the purchase of the notification sink. For example, the security information may be contained within a memory card. A user may also place a telephone call or otherwise acquire the security information, and manually enter the security information into the notification sink. Those of ordinary skill in the art will appreciate, after having reviewed this description, that other methods for negotiating security information out-of-band from the notification mechanism may be employed, whether those methods now exist, or whether they are to be developed in the future.</p>
<p id="p-0048" num="0047">Referring to <figref idref="DRAWINGS">FIG. 3</figref>, once the security information is negotiated out-of-band from the notification mechanism (act <b>302</b>), the notification source uses the security information to generate a push message (act <b>303</b>) thus completing the step for drafting a push message so as to ensure secure end-to-end notification (step <b>301</b>) between the notification source and the notification sink. Referring to <figref idref="DRAWINGS">FIG. 5</figref>, the push message <b>500</b> includes an encrypted form of the notification represented as notification message (encrypted) <b>502</b>, as well as supplemental security information <b>501</b> that is represented in clear text and that may be used along with the security information originally negotiated to decrypt the notification message.</p>
<p id="p-0049" num="0048">The notification source <b>401</b> then initiates transmission of the push message <b>500</b> to the notification sink <b>403</b> (act <b>304</b>) via the at least one message transit point <b>404</b>. Although the push message <b>500</b> traverses through the at least one transit points <b>404</b>, the notification message portion of the push message is encrypted. Since the at least one message transit point <b>404</b> is not privy to the security information originally negotiated in act <b>302</b>, the at least one message transit point <b>404</b> is not able to decrypt the notification message <b>502</b>. Once the notification sink <b>403</b> receives the push message <b>500</b> (act <b>305</b>), the notification sink <b>403</b> decrypts the encrypted notification message <b>502</b> using the security information previously negotiated (security information <b>421</b>) along with potentially the supplemental security information <b>501</b> (act <b>306</b>). Thus end-to-end security is provided since only the notification source <b>401</b> and the notification sink <b>403</b> are able to access the clear text content of the notification message.</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. 6</figref> illustrates a specific example of a network such as network <b>400</b>. The combination of an application <b>605</b> and a push initiator <b>601</b> represent an example of a notification source <b>401</b>. The application <b>605</b> detects the occurrence of an event <b>606</b>, and then passes the event <b>606</b> to the push initiator. The push initiator <b>601</b> then composes a push message and transmits the push message to a push proxy gateway <b>604</b>.</p>
<p id="p-0051" num="0050">Specifically, the push message may be transmitted as part of a transmitted document <b>610</b> that may be, for example, a HyperText Transport Protocol (also called “HTTP”) message. Accordingly, the transmitted document <b>610</b> may contain HTTP headers <b>607</b>. The push message may be an Encapsulated Security Payload (also called “ESP”) object <b>700</b> that is contained within a Push Access Protocol (also called “PAP”) message that is part of the HTTP message. Accordingly, the transmitted document <b>610</b> may also include PAP headers <b>608</b>. In this description and in the claims, an “ESP object” is an object that is in compliance with the ESP object described in the Internet standard RFC 2406. Notwithstanding such compliance, the ESP object contains features that are not described by, nor rendered obvious in light of the RFC 2406 standard.</p>
<p id="p-0052" num="0051">The following lists an example of HTTP headers <b>607</b>.
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0052">1. POST /pushserver HTTP/1.1</li>
    <li id="ul0001-0002" num="0053">2. Host: www.pushproxygateway.com</li>
    <li id="ul0001-0003" num="0054">3. Content-Length: xxx</li>
    <li id="ul0001-0004" num="0055">4. Content-Type: multipart/related; boundary=asdlfkjiurwghasf;</li>
</ul>
</p>
<p id="p-0053" num="0056">The HTTP headers are number with lines numbers 1 through 5 for clarity in describing the headers although the actual HTTP headers would not include such line numbering. Line 1 indicates that the HTTP message is an HTTP Post message in accordance with version 1.1 of the HTTP protocol.</p>
<p id="p-0054" num="0057">Line 2 is a Host request-header field that identifies the push proxy gateway <b>604</b> using a Uniform Resource Identifier (in this case, www.pushproxygateway.com). If the port number of the push proxy gateway <b>604</b> is other than the default port for HTTP post requests, then the Host request-header field would also specify that port number.</p>
<p id="p-0055" num="0058">Line 3 is a Content-Length header field that indicates the size of the body of the HTTP message. The body of the HTTP message would include all of the HTTP message except for the HTTP headers <b>607</b>. Here, “xxx” indicates that the content length has no specified value.</p>
<p id="p-0056" num="0059">Line 4 is a Content-Type header field that indicates the media type of the HTTP message body. Here, the body is a multipart message having related components. In addition, each of the multipart components are divided by a text boundary defined by “asdlfkjiurwghasf”.</p>
<p id="p-0057" num="0060">The PAP headers <b>608</b> may be as presented in the following lines 5 through 24. In particular, the PAP headers are largely in the form of an XML document that represents a multipart segment of the multipart message.</p>
<p id="p-0058" num="0061">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="196pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry> 5.</entry>
<entry>--asdlfkjiurwghasf</entry>
</row>
<row>
<entry> 6.</entry>
<entry>Content-Type: application/xml</entry>
</row>
<row>
<entry> 7.</entry>
<entry>&lt;?xml version=“1.0”?&gt;</entry>
</row>
<row>
<entry> 8.</entry>
<entry>&lt;pap&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="182pt" align="left"/>
<tbody valign="top">
<row>
<entry> 9.</entry>
<entry>&lt;push-message</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="49pt" align="left"/>
<colspec colname="2" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry>10.</entry>
<entry>push-id=9fjeo39jf084@airstream.com</entry>
</row>
<row>
<entry>11.</entry>
<entry>deliver-after-timestamp=“2002-01-21T00:17:00Z”</entry>
</row>
<row>
<entry>12.</entry>
<entry>source-reference=“Your Stocks”</entry>
</row>
<row>
<entry>13.</entry>
<entry>ppg-notify-requested-to=“http://www.notify.com”&gt;</entry>
</row>
<row>
<entry>14.</entry>
<entry>&lt;address</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry>15.</entry>
<entry>address-value=“wappush=12345/type=</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="77pt" align="left"/>
<colspec colname="2" colwidth="140pt" align="left"/>
<tbody valign="top">
<row>
<entry>16.</entry>
<entry>user@ppg.operator.com”&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="49pt" align="left"/>
<colspec colname="2" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry>17.</entry>
<entry>&lt;/address&gt;</entry>
</row>
<row>
<entry>18.</entry>
<entry>&lt;quality-of-service</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry>19.</entry>
<entry>priority=high</entry>
</row>
<row>
<entry>20.</entry>
<entry>delivery-method=preferconfirmed</entry>
</row>
<row>
<entry>21.</entry>
<entry>bearer=SMS&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="49pt" align="left"/>
<colspec colname="2" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry>22.</entry>
<entry>&lt;/quality-of-service&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="182pt" align="left"/>
<tbody valign="top">
<row>
<entry>23.</entry>
<entry>&lt;/push-message&gt;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="196pt" align="left"/>
<tbody valign="top">
<row>
<entry>24.</entry>
<entry>&lt;/pap&gt;</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0059" num="0062">Line 5 represents the boundary of a first multipart segment (compare with the boundary definition in line 4 of the HTTP headers).</p>
<p id="p-0060" num="0063">Line 6 indicates the media-type (in this case, XML) of the first multipart segment.</p>
<p id="p-0061" num="0064">Line 7 indicates that the first multipart segment follows version 1.0 of the eXtensible Markup Language (also called “XML”) protocol.</p>
<p id="p-0062" num="0065">Line 8 is an opening tag that corresponds with a closing tag on line 24, which together indicate that the intermediary material from line 9 through line 23 represent information related to a PAP message.</p>
<p id="p-0063" num="0066">Line 9 through line 13 represents an opening tag of a push-message element, that corresponds to a closing tag on line 23. This opening tag and closing tag indicates that the material from line 14 through line 22 are elements describing the push message. The opening tag has several corresponding attributes. Line 10 is a push-id attribute that serves as an identifier for the push message. The identifier is assigned by the push initiator <b>601</b>. Line 11 is an attribute that specifies that the push message must not be delivered before the specified time. In this example, that time is Jan. 21, 2002 at 12:17 a.m. according to UTC time (“Z” indicates the use of UTC time). Line 12 identifies a contextual name of the content provider (in this case called “Your Stocks”). The content provider may be, for example, the application <b>605</b>. Line 13 identifies a URI address that responses to the PAP delivery will be directed to (in this case “http://www.notify.com”).</p>
<p id="p-0064" num="0067">Line 14 through line 17 represent an address element that instructs the push proxy gateway <b>604</b> to send the push message to a specified address (in this case, “wappush=12345/type=user@ppg.operator.com”). In this case, that address would correspond to the address of the wireless device <b>603</b>.</p>
<p id="p-0065" num="0068">Lines 18 through 22 are a quality-of-service element that instructs the push proxy gateway to send the push message using “high” priority rules and “prefer confirmed” rules. The push initiator <b>601</b> and the push proxy gateway <b>604</b> would have an understanding about what these rules are. Line 21 indicates that the push proxy gateway should use a Short text Message Service Carrier (also called “SMSC”) such as SMSC <b>609</b> when delivering the message over the air.</p>
<p id="p-0066" num="0069">Thus the first multipart segment includes a series of instructions arranged in accordance with XML directing the push proxy gateway <b>605</b> on how to send the push message to the wireless device <b>603</b>. The remainder of the multipart message includes a second multipart segment that identifies the push message to be forwarded to the wireless device <b>603</b>. In particular, the example multipart message may be as follows:</p>
<p id="p-0067" num="0070">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="168pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>25.</entry>
<entry>--asdlfkjiurwghasf</entry>
</row>
<row>
<entry/>
<entry>26.</entry>
<entry>X-WAP-Initiator-URI: http://www.initiator.com</entry>
</row>
<row>
<entry/>
<entry>27.</entry>
<entry>Content Type: application/x-esp-mime;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>28.</entry>
<entry>Name=“spap.esp”</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>29.</entry>
<entry>Content-Transfer-Encoding: base64</entry>
</row>
<row>
<entry/>
<entry>30.</entry>
<entry>Content Disposition: attachment;</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="154pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>31.</entry>
<entry>Filename=“spap.esp”</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="168pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>32.</entry>
<entry>[BLANK LINE]</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="196pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>[Encrypted contents using ESP format]</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0068" num="0071">Line 25 identifies the start of a second multipart segment. Line 26 identifies the URI of the push initiator <b>601</b> (in this case, “www.initiator.com”). Line 27 indicates that the media type of the second multipart segment includes an ESP object. Line 28 specifies the name of the ESP object as “spap.esp”. Line 29 indicates that the ESP object is encoded using Base-64 encoding. Line 30 indicates that the ESP object is to be encoded as a MIME attachment when transmitted using SMS. Line 31 repeats the file name. Line 32 is a blank line indicating that the material following line 32 until the next boundary (or until the end of the HTTP message in this case) represents the ESP object.</p>
<p id="p-0069" num="0072"><figref idref="DRAWINGS">FIG. 7</figref> schematically illustrates the structure of such the ESP object <b>700</b>. The ESP object <b>700</b> includes a Security Parameter Index (SPI) field <b>701</b> that represents a 32-bit value that identifies the notification session (and thus the security context). Recall that this 32-bit value is unique within the wireless device <b>603</b> and was one of the security information that was negotiated in act <b>302</b>. The SPI field <b>701</b> along with the Internet Protocol (IP) address of the wireless device <b>603</b> and the security protocol (in this case, ESP) define a Security Association (also called an “SA”) for the ESP object <b>700</b>.</p>
<p id="p-0070" num="0073">The ESP object <b>700</b> also includes a sequence number field <b>702</b> that is a monotonically increasing 32-bit value. When the security association is created for an ESP object, the sequence number field is initialized to zero. Each successive ESP object having the same security association has a successively incremented value in the sequence number field. The Initialization Vector (also called “IV”) field <b>703</b> represents a value that is input into the initially negotiated cryptographic algorithm in order to decrypt the notification. The SPI field <b>701</b>, the sequence number field <b>702</b>, and the initialization field <b>703</b> are in clear text. Thus, these three fields represent an example of the supplemental security information <b>501</b> of the push message <b>500</b>.</p>
<p id="p-0071" num="0074">The encrypted payload data field <b>704</b> is a variable length field that actually contains the encrypted form of the notification, as well as potentially some encrypted header fields. For example, the field <b>704</b> may include a content type field as well as a Wireless Application Protocol (also called “WAP”) application ID field. The content type field may identify the presence of XML in the multipart message, while the WAP application ID field identifies the application the device should call to process the push message. The padding field <b>705</b> ranges from zero to 255 bytes and is often used when cryptographic algorithms require the cipher text to be a certain length or, regardless of the cryptographic algorithm, padding is needed to terminate the cipher text on a 4-byte boundary. The padding length field <b>706</b> is an 8-bit value that specifies the length of the padding field <b>704</b> in bytes. The payload ID field <b>707</b> (also called the “next field” in the ESP standard) identifies the type of data included in the payload data field <b>703</b>. The payload data field <b>704</b>, the padding field <b>705</b>, the padding length field <b>706</b>, and the payload ID field <b>707</b> are all encrypted. The payload data field <b>704</b> represents an example of the notification message <b>502</b> of the push message <b>500</b>. ESP object <b>700</b> may also include authentication data field <b>708</b> that includes a digital signature for authenticating the push initiator <b>601</b>.</p>
<p id="p-0072" num="0075">Note that the notification itself, being represented in the payload data field <b>704</b>, is also encrypted. Accordingly, the push proxy gateway <b>604</b> cannot decrypt the notification. Thus, the notification remains a secret between the notification source (e.g., the push initiator <b>601</b>) and the notification sink (e.g., the wireless device <b>603</b>), even though the notification passes through at least one message transit point (e.g., push proxy gateway <b>604</b>) during transmission.</p>
<p id="p-0073" num="0076">Although a specific example of a message transit point has been provided as being a push proxy gateway, other types of message transit points may include a corporate proxy server associated with the wireless device <b>603</b>. For example, the notification may first be dispatched to the corporate proxy server, and then passed through a push proxy gateway to the wireless device, thus involving two message transit points.</p>
<p id="p-0074" num="0077">The precise hardware that implements the principles of the present invention is not important to the present invention. For example, the notification source <b>401</b> and the each of the at least one message transit point <b>404</b> may be a server, a server cluster, or any other general-purpose or special purpose computing system, regardless of its physical form, so long as at is capable of implementing the principles of the present invention. In addition, the notification source <b>401</b> may be co-located and/or within a common sphere of trust with one or more of the at least one message transmit points <b>404</b>. For example, the push initiator <b>601</b> may be co-located and/or within a common sphere of trust with the push proxy gateway <b>604</b>.</p>
<p id="p-0075" num="0078">Also, the notification sink <b>403</b> may also be any general-purpose or special-purpose computing device or system that is capable of receiving the push message. While notification to wireless devices allows for timely information to follow a wireless device user, the principles of the present invention are useful in other types of computing devices or systems as well, regardless of whether the computer devices and system are mobile.</p>
<p id="p-0076" num="0079">Notwithstanding the independence of the principles of the present invention on the hardware operating environment, an example hardware environment is described for the sake of completeness and clarity, but not for the purpose of limiting the scope of the invention to any particular hardware environment.</p>
<p id="p-0077" num="0080">With reference to <figref idref="DRAWINGS">FIG. 8</figref>, an example system for implementing the invention includes a general purpose computing device in the form of a computer <b>820</b>, including a processing unit <b>821</b>, a system memory <b>822</b>, and a system bus <b>823</b> that couples various system components including the system memory <b>822</b> to the processing unit <b>821</b>. The system bus <b>823</b> may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory includes read only memory (ROM) <b>824</b> and random access memory (RAM) <b>825</b>. A basic input/output system (BIOS) <b>826</b>, containing the basic routines that help transfer information between elements within the computer <b>820</b>, such as during start-up, may be stored in ROM <b>824</b>. A computer such as computer <b>820</b> may run each of the notification source <b>401</b>, the at least one message transmit points <b>404</b>, the notification sink. Although the computer <b>820</b> is illustrated as being a desk-top computer, compact devices are now capable of implementing general-purpose computing functionality, with some difference in memory and processing capability, and some limitations in user interfaces as compared to desk top computers.</p>
<p id="p-0078" num="0081">The computer <b>820</b> may also include a magnetic hard disk drive <b>827</b> for reading from and writing to a magnetic hard disk <b>839</b>, a magnetic disk drive <b>828</b> for reading from or writing to a removable magnetic disk <b>829</b>, and an optical disk drive <b>830</b> for reading from or writing to removable optical disk <b>831</b> such as a CD-ROM or other optical media. The magnetic hard disk drive <b>827</b>, magnetic disk drive <b>828</b>, and optical disk drive <b>830</b> are connected to the system bus <b>823</b> by a hard disk drive interface <b>832</b>, a magnetic disk drive-interface <b>833</b>, and an optical drive interface <b>834</b>, respectively. The drives and their associated computer-readable media provide nonvolatile storage of computer-executable instructions, data structures, program modules and other data for the computer <b>820</b>. Although the exemplary environment described herein employs a magnetic hard disk <b>839</b>, a removable magnetic disk <b>829</b> and a removable optical disk <b>831</b>, other types of computer readable media for storing data can be used, including magnetic cassettes, flash memory cards, digital versatile disks, Bernoulli cartridges, RAMs, ROMs, and the like.</p>
<p id="p-0079" num="0082">Program code means comprising one or more program modules may be stored on the hard disk <b>839</b>, magnetic disk <b>829</b>, optical disk <b>831</b>, ROM <b>824</b> or RAM <b>825</b>, including an operating system <b>835</b>, one or more application programs <b>836</b>, other program modules <b>837</b>, and program data <b>838</b>. A user may enter commands and information into the computer <b>820</b> through keyboard <b>840</b>, pointing device <b>842</b>, or other input devices (not shown), such as a microphone, joy stick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit <b>821</b> through a serial port interface <b>846</b> coupled to system bus <b>823</b>. Alternatively, the input devices may be connected by other interfaces, such as a parallel port, a game port or a universal serial bus (USB). A monitor <b>847</b> or another display device is also connected to system bus <b>823</b> via an interface, such as video adapter <b>848</b>. In addition to the monitor, personal computers typically include other peripheral output devices (not shown), such as speakers and printers.</p>
<p id="p-0080" num="0083">The computer <b>820</b> may operate in a networked environment using logical connections to one or more remote computers, such as remote computers <b>849</b><i>a </i>and <b>849</b><i>b</i>. Remote computers <b>849</b><i>a </i>and <b>849</b><i>b </i>may each be another personal computer, a server, a router, a network PC, a peer device or other common network node, and typically include many or all of the elements described above relative to the computer <b>820</b>, although only memory storage devices <b>850</b><i>a </i>and <b>850</b><i>b </i>and their associated application programs <b>836</b><i>a </i>and <b>836</b><i>b </i>have been illustrated in <figref idref="DRAWINGS">FIG. 8</figref>. The logical connections depicted in <figref idref="DRAWINGS">FIG. 8</figref> include a local area network (LAN) <b>851</b> and a wide area network (WAN) <b>852</b> that are presented here by way of example and not limitation. Such networking environments are commonplace in office-wide or enterprise-wide computer networks, intranets and the Internet.</p>
<p id="p-0081" num="0084">When used in a LAN networking environment, the computer <b>820</b> is connected to the local network <b>851</b> through a network interface or adapter <b>853</b>. When used in a WAN networking environment, the computer <b>820</b> may include a modem <b>854</b>, a wireless link, or other means for establishing communications over the wide area network <b>852</b>, such as the Internet. The modem <b>854</b>, which may be internal or external, is connected to the system bus <b>823</b> via the serial port interface <b>846</b>. In a networked environment, program modules depicted relative to the computer <b>820</b>, or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing communications over wide area network <b>852</b> may be used.</p>
<p id="p-0082" num="0085">Accordingly, the principles of the present invention allow for the secure end-to-end notification over networks that have one or more transit points. The present invention may be embodied in other specific forms without departing from its spirit or essential characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the invention is, therefore, indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed and desired to be secured by United States Letters Patent is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. In a network that includes at least one notification source and at least one notification sink, the network supporting a notification mechanism by which the notification source passes notifications to the notification sink via at least one message transit point, a method for securely passing a notification from the notification source to the notification sink using the notification mechanism while providing end-to-end security despite the existence of the at least one message transit point, the method comprising the following:
<claim-text>an act of negotiating security information between the notification source and the notification sink out of band from the notification mechanism over which the notification source is configured to send notifications to the notification sink, which notifications are secured using the negotiated security information, the out-of-band negotiating occurring through a network connection that excludes the at least one message transit point, and such that the at least one message transit point through which the notification mechanism subsequently sends notifications from the notification source to the notification sink is bypassed during the out of band negotiating;</claim-text>
<claim-text>after the security information has been negotiated, an act of using the security information to generate an HTTP message that includes an encrypted form of the notification, the HTTP message being included in a PAP message containing an ESP object, wherein the PAP message has at least one PAP header, and wherein the at least one PAP header include a schema document specifying an address of the notification sink for facilitating point-to-point transmission of the generated message, the generated HTTP message further including clear-text supplemental information that may be used by the notification sink to decrypt the notification using the security information; and</claim-text>
<claim-text>an act of initiating transmission of the HTTP message to the notification sink via the at least one message transit point using the notification mechanism, wherein the notification sink is configured to decrypt the notification using the clear-text supplemental information included in the HTTP message and the security information previously negotiated between the notification source and the notification sink.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. A method in accordance with <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the act of using the security information to generate an HTTP message that includes an encrypted form of the notification comprises the following:
<claim-text>an act of using the security information to generate an HTTP message that includes an encrypted form of an automatically-generated notification.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. A method in accordance with <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the act of using the security information to generate an HTTP message that includes an encrypted form of the notification comprises the following:
<claim-text>an act of using the security information to generate an HTTP message that includes an encrypted form of a subscription-based notification.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. A method in accordance with <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least one message transit point comprises a server maintained by a wireless carrier, wherein the act of initiating transmission of the HTTP message to the notification sink comprises the following:
<claim-text>an act of initiating transmission of the HTTP message to a wireless device via the server maintained by the wireless carrier.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A method in accordance with <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least one message transit point comprises a server, wherein the act of initiating transmission of the HTTP message to the notification sink comprises the following:
<claim-text>an act of transmitting the HTTP message to the server using a first protocol, wherein the server transmits the HTTP message to a wireless device using a second protocol.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A method in accordance with <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the act of transmitting the HTTP message to the server using a first protocol comprises the following:
<claim-text>an act of transmitting the HTTP message to a Push Proxy Gateway (PPG).</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A method in accordance with <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the HTTP message is included as a multipart segment.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A method in accordance with <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the server is configured to extract the HTTP message from the PAP message and transmit the HTTP message to the wireless device.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A method in accordance with <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the server is configured to extract the HTTP message from the PAP message and encode the HTTP message in a Push Over-the-Air protocol message.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A method in accordance with <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the clear-text supplemental information that may be used to decrypt the notification using the security information comprises a session identifier field.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A method in accordance with <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the encrypted form of the notification comprises a payload data field.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A method in accordance with <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the at least one message transmit point comprises a corporate server.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A method in accordance with <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the act of negotiating security information between the notification source and the notification sink comprises the following:
<claim-text>an act of establishing a secure session between the notification source and the notification sink.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. A method in accordance with <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the act of establishing a secure session between the notification source and the notification sink comprises the following:
<claim-text>an act of establishing a Secure Socket Layer (SSL) session between the notification source and the notification sink.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A method in accordance with <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the act of negotiating security information between the notification source and the notification sink comprises:
<claim-text>an act of negotiating a master secret shared by the notification source and the notification sink.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A method in accordance with <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the act of negotiating security information between the notification source and the notification sink comprises:
<claim-text>an act of negotiating a cryptographic algorithm to be used when encrypting and decrypting notifications.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. In a network that includes at least one notification source and at least one notification sink, the network supporting a notification mechanism by which the notification source passes notifications to the notification sink via at least one message transit point, a method for securely passing a notification from the notification source to the notification sink using the notification mechanism while providing end-to-end security despite the existence of the at least one message transit point, the method comprising the following:
<claim-text>a step for drafting a message so as to ensure secure end-to-end notification between the notification source and the notification sink, including an act of negotiating security information between the notification source and the notification sink out of band from the notification mechanism over which the notification source is configured to send notifications to the notification sink, which notifications are secured using the negotiated security information, the out-of-band negotiating occurring through a network connection that excludes the at least one message transit point, and such that the at least one message transit point through which the notification mechanism subsequently sends notifications from the notification source to the notification sink is bypassed during the out of band negotiating, and wherein the drafted message is an HTTP message that includes an encrypted form of the notification, the HTTP message being included in a PAP message containing an ESP object and at least one PAP header, wherein the at least one PAP header includes a schema document specifying an address corresponding to the notification sink for facilitating point-to-point transmission of the drafted HTTP message, and the HTTP message further including clear-text supplemental information; and</claim-text>
<claim-text>an act of initiating transmission of the HTTP message to the notification sink using the address of the notification sink and via the at least one message transit point using the notification mechanism, wherein the notification sink is configured to decrypt the notification using the clear-text supplemental information included in the HTTP message and the security information previously negotiated between the notification source and the notification sink.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. A computer program product for use in a network that includes at least one notification source and at least one notification sink, the network supporting a notification mechanism by which the notification source passes notifications to the notification sink via at least one message transit point, the computer program product for implementing a method for securely passing a notification from the notification source to the notification sink using the notification mechanism while providing end-to-end security despite the existence of the at least one message transit point, the computer program product comprising:
<claim-text>one or more computer-readable storage media having stored thereon computer executable instructions that, when executed by a processor, cause a computing system to perform the method for securely passing the notification, the method including:</claim-text>
<claim-text>negotiating security information between the notification source and the notification sink out of band from the notification mechanism over which the notification source is configured to send notifications to the notification sink, which notifications are secured using the negotiated security information, the out-of-band negotiating occurring through a network connection that excludes the at least one message transit point, and such that the at least one message transit point through which the notification mechanism subsequently sends notifications from the notification source to the notification sink is bypassed during the out of band negotiating;</claim-text>
<claim-text>using the security information to generate an HTTP message after the security information has been negotiated, the HTTP message including an encrypted form of the notification, and the HTTP message being included within a PAP message containing an ESP object and at least one PAP header, the at least one PAP header including a schema document specifying an address of the notification sink for facilitating point-to-point transmission of the generated HTTP message, the generated HTTP message further including clear-text supplemental information that may be used by the notification sink to decrypt the notification using the security information; and causing the HTTP message to be transmitted to the notification sink via the at least one message transit point using the notification mechanism, wherein the notification sink is configured to decrypt the notification using the clear-text supplemental information included in the HTTP message and the security information previously negotiated between the notification source and the notification sink.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. A computer program product in accordance with <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein causing the HTTP message to be transmitted to the notification sink comprise the following:
<claim-text>causing the HTTP message to be transmitted to the server using a first protocol, wherein the server transmits the HTTP message to a wireless device using a second protocol.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. A computer program product in accordance with <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein causing the HTTP message to be transmitted to the server using a first protocol comprise the following:
<claim-text>causing the HTTP message to be transmitted to a Push Proxy Gateway (PPG).</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. A computer program product in accordance with <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein negotiating security information between the notification source and the notification sink comprises the following:
<claim-text>establishing a secure session between the notification source and the notification sink.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. In a network that includes at least one notification source and at least one notification sink, the network supporting a notification mechanism by which the notification source passes notifications to the notification sink via at least one message transit point, a method for securely receiving a notification from the notification source using the notification mechanism while providing end-to-end security despite the existence of the at least one message transit point, the method comprising the following:
<claim-text>an act of negotiating security information between the notification source and the notification sink out of band from the notification mechanism over which the notification source is configured to send notifications to the notification sink, which notifications are secured using the negotiated security information, the out-of-band negotiating occurring through a network connection that excludes the at least one message transit point, and such that the at least one message transit point through which the notification mechanism subsequently sends notifications from the notification source to the notification sink is bypassed during the out of band negotiating;</claim-text>
<claim-text>after the security information has been negotiated, an act of receiving an HTTP message from the notification source that was received via the at least one message transit point using the notification mechanism, wherein the HTTP message includes an encrypted form of the notification, the HTTP message being included in a PAP message with an ESP object and one or more PAP headers, wherein the one or more PAP headers includes a schema document specifying an address of the notification sink for facilitating point-to-point transmission of the HTTP message, the HTTP message further including clear-text supplemental information that may be used by the notification sink to decrypt the notification using security information; and</claim-text>
<claim-text>an act of using the security information previously negotiated between the notification source and notification sink along with the clear-text supplemental information included in the HTTP message to decrypt the encrypted form of the notification also included in the HTTP message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. A method in accordance with <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein the act of receiving the HTTP message in the PAP message with the ESP object comprises the following:
<claim-text>an act of receiving the ESP object as a MIME attachment encoded with a Push Over-the-Air protocol message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. A computer program product for use in a network that includes at least one notification source and at least one notification sink, the network supporting a notification mechanism by which the notification source passes notifications to the notification sink via at least one message transit point, the computer program product for implementing a method for securely receiving a notification from the notification source to the notification sink using the notification mechanism while providing end-to-end security despite the existence of the at least one message transit point, the computer program product comprising:
<claim-text>one or more computer-readable storage media having stored thereon computer-executable instructions that, when executed by a processor, cause a computing system to perform the method for securely receiving the notification, the method including:</claim-text>
<claim-text>negotiating security information between the notification source and the notification sink out of band from the notification mechanism over which the notification source is configured to send notifications to the notification sink, which notifications are secured using the negotiated security information, the out-of-band negotiating occurring through a network connection that excludes the at least one message transit point, and such that the at least one message transit point through which the notification mechanism subsequently sends notifications from the notification source to the notification sink is bypassed during the out of band negotiating;</claim-text>
<claim-text>detecting the receipt of an HTTP message from the notification source after negotiating the security information between the notification source and the notification sink, the HTTP message including an encrypted form of the notification, and the HTTP message including a PAP message containing an ESP object and at least one PAP header, wherein the at least one PAP header includes a schema document specifying an address of the notification sink for facilitating point-to-point transmission of the generated HTTP message, the HTTP message further including clear-text supplemental information that may be used by the notification sink to decrypt the notification using security information, wherein the HTTP message is received via the at least one message transit point using the notification mechanism; and</claim-text>
<claim-text>using the security information previously negotiated between the notification source and notification sink along with the clear-text supplemental information included in the HTTP message to decrypt the encrypted form of the notification also included in the HTTP message.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. A method as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the schema document is an XML document specifying the address of the notification sink.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. A method as recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein negotiating security information comprises negotiating a session identifier unique within the notification sink, and wherein the generated HTTP message further includes a security association, the security association including the session identifier, an IP address of the notification sink, and a security protocol according to which the message is encrypted.</claim-text>
</claim>
</claims>
</us-patent-grant>
