<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298650-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298650</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11134158</doc-number>
<date>20050520</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="regional">
<country>EP</country>
<doc-number>04102232</doc-number>
<date>20040520</date>
</priority-claim>
</priority-claims>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>11</class>
<subclass>C</subclass>
<main-group>16</main-group>
<subgroup>04</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>11</class>
<subclass>C</subclass>
<main-group>7</main-group>
<subgroup>10</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>11</class>
<subclass>C</subclass>
<main-group>7</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>11</class>
<subclass>C</subclass>
<main-group>8</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>36518512</main-classification>
<further-classification>36518905</further-classification>
<further-classification>36518912</further-classification>
<further-classification>36523008</further-classification>
<further-classification>3652385</further-classification>
</classification-national>
<invention-title id="d0e61">Page buffer for a programmable memory device</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5724284</doc-number>
<kind>A</kind>
<name>Bill et al.</name>
<date>19980300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>3651852</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6278636</doc-number>
<kind>B1</kind>
<name>Lee</name>
<date>20010800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6735116</doc-number>
<kind>B2</kind>
<name>Lee et al.</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>36518517</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2003/0072175</doc-number>
<kind>A1</kind>
<name>Kawamura</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>36518517</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2003/0076719</doc-number>
<kind>A1</kind>
<name>Byeon et al.</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2003/0117856</doc-number>
<kind>A1</kind>
<name>Lee et al.</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2004/0001356</doc-number>
<kind>A1</kind>
<name>Kawamura et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>36518511</main-classification></classification-national>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2006/0007774</doc-number>
<kind>A1</kind>
<name>Zanardi et al.</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>365235</main-classification></classification-national>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2006/0039197</doc-number>
<kind>A1</kind>
<name>Khouri et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>36518512</main-classification></classification-national>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>EP</country>
<doc-number>0 608 075</doc-number>
<date>19940700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00011">
<othercit>Seungjae Lee et al., “A 3.3V 4Gb Four-Level NAND Flash Memory with 90nm CMOS Technology”, ISSCC 2004/Session 2 Non-Volatile Memory/2.7, IEEE International Solid-State Circuits Conference, 2004, XP010722148, ISBN: 0-7803-8267-6.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00012">
<othercit>European search Report for Application EP 04 10 2232 Dated May 2, 2005.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>18</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>36518512</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>36518905</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>36518912</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>3652385</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>36523008</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>2</number-of-drawing-sheets>
<number-of-figures>2</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20060039197</doc-number>
<kind>A1</kind>
<date>20060223</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Khouri</last-name>
<first-name>Osama</first-name>
<address>
<city>Milan</city>
<country>IT</country>
</address>
</addressbook>
<nationality>
<country>IT</country>
</nationality>
<residence>
<country>IT</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Zanardi</last-name>
<first-name>Stefano</first-name>
<address>
<city>Seriate</city>
<country>IT</country>
</address>
</addressbook>
<nationality>
<country>IT</country>
</nationality>
<residence>
<country>IT</country>
</residence>
</applicant>
<applicant sequence="003" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Martinozzi</last-name>
<first-name>Giulio</first-name>
<address>
<city>Massa Marittima</city>
<country>IT</country>
</address>
</addressbook>
<nationality>
<country>IT</country>
</nationality>
<residence>
<country>IT</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Jorgenson</last-name>
<first-name>Lisa K.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Bongini</last-name>
<first-name>Stephen</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="03" rep-type="attorney">
<addressbook>
<orgname>Fleit Kain Gibbons Gutman Bongini &amp; Bianco P.L.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>STMicroelectronics S.r.l.</orgname>
<role>03</role>
<address>
<city>Agrate Brianza</city>
<country>IT</country>
</address>
</addressbook>
</assignee>
<assignee>
<addressbook>
<orgname>Hynix Semiconductor Inc.</orgname>
<role>03</role>
<address>
<city>Kyoungki-Do</city>
<country>KR</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Pham</last-name>
<first-name>Ly Duy</first-name>
<department>2827</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A page buffer is provided for an electrically programmable memory that includes multiple memory cells forming multiple memory pages. The page buffer includes a register for at least temporarily storing data read from or to be written to the memory cells of a selected memory page. The register includes multiple latches and multiple buffer elements. Each of the latches is coupled to at least one signal line for transferring the data bit that is stored in the latch. Each of the buffer elements decouples an output of a corresponding one of the latches from the signal line, with the buffer element driving the signal line according to the data bit stored in the corresponding latch. Also provided is a method of transferring data from a register to signal lines in an electrically programmable memory.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="159.60mm" wi="227.41mm" file="US07298650-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="264.67mm" wi="185.17mm" file="US07298650-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="243.16mm" wi="164.51mm" orientation="landscape" file="US07298650-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is based upon and claims priority from prior European Patent Application No. 04 102 232.8, filed May 20, 2004, the entire disclosure of which is herein incorporated by reference.</p>
<heading id="h-0002" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">The present invention generally relates to the field of solid-state memories, particularly to semiconductor memories, and even more particularly to the field of non-volatile memories that are electrically programmable.</p>
<heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0004" num="0003">Non-volatile memories are commonly used in several applications in which the data stored in the memory device needs to be preserved even in the absence of a power supply. Within the class of non-volatile memories, electrically programmable (and erasable) memories, such as flash memories, have become very popular in applications in which the data to be stored is not immutable (e.g., in the case of a consolidated code for a microprocessor), but it is instead necessary from time to time to store new data, or to update the data already stored.</p>
<p id="p-0005" num="0004">Typically, the memory device includes an arrangement of memory cells, disposed for example in rows and columns, so as to form a matrix.</p>
<p id="p-0006" num="0005">Depending on the way the memory cells in the matrix are interconnected, two classes of flash memories can be identified: those having a NOR architecture (or “NOR flash memories”), and those having a NAND architecture, (referred to as “NAND flash memories”). Roughly speaking, in a NOR architecture the memory cells of the same matrix column are connected in parallel to the same bitline, whereas in a NAND architecture groups of memory cells of the same matrix column are serially interconnected so as to form strings, which strings are then connected in parallel to each other to the same bitline.</p>
<p id="p-0007" num="0006">Compared to NOR flash memories, NAND flash memories are more compact (a lower number of contacts in the matrix are required), and they are also better suited for applications such as file storage.</p>
<p id="p-0008" num="0007">In the NAND architecture, the memory space is ideally partitioned into a plurality of memory pages, with each page corresponding to a block of memory cells that, in operation, are read or written simultaneously, i.e., in parallel to each other. The number of memory cells in each block determines the size (i.e., the number of bits) of the memory page. Nowadays, memory pages of 512 bytes are rather typical, but larger memory pages are also encountered, for example of 2 KB.</p>
<p id="p-0009" num="0008">Clearly, the memory cannot have so high a number of Input/Output (“I/O”) terminals as to enable transferring in parallel of so long of data words; usually, eight or sixteen I/O terminals are in fact provided. Thus, some kind of “segmentation” of the memory page is necessary for interfacing the memory with the outside world.</p>
<p id="p-0010" num="0009">For this purpose, a circuit arrangement called “page buffer” is provided in the memory for managing the operations of reading the information stored in the memory cells of a selected memory page, or writing new information thereto. In very general terms, the page buffer includes a buffer register of size equal to that of the memory page, in which data read (in parallel) from the memory cells of a selected page are temporarily stored, before being serially outputted in chunks of, e.g., eight or sixteen bits, depending on the number of I/O terminals of the memory. Similarly, when data are to be written into the memory, the page buffer is replenished with data received serially in the eight- or sixteen-bit chunks, and, when the buffer has eventually been filled, the data are written in parallel into the memory cells of a given, selected memory page.</p>
<p id="p-0011" num="0010">The page buffer includes a relatively high number of volatile storage elements, typically bi-stable elements or latches; the number of latches is proportional (in particular, equal) to the size (in number of bits) of the memory page. Thus, the page buffer is a circuit block that needs to be carefully designed (both at the circuit and at the physical layout level), so as to ensure that it does not occupy too large a semiconductor area, and it is efficient, particularly from the power consumption viewpoint.</p>
<p id="p-0012" num="0011">If the operations to be performed on the memory cells are simply a “PAGE READ” (an operation involving reading data from a selected memory page) and a page write or “PAGE PROGRAM” (writing data into a selected memory page), the page buffer may in principle include a single register, with a number of latches equal to the size (in bits) of the memory pages. However, more complex operations may be desirable and required, and in these cases the structure of the page buffer may need to be upgraded. For example, in some applications it might be necessary that the memory is capable of performing operations such as a “COPY-BACK PROGRAM” and a “CACHE PROGRAM”. In a CACHE PROGRAM operation, data to be written into a memory page can be loaded into the page buffer while another memory page is still being written with data previously loaded in the page buffer; in this way, the time necessary for programming different memory pages in sequence is reduced. A COPY-BACK PROGRAM operation is instead exploited for copying the data contained in a given memory page into another memory page, in a way that is managed completely internally to the memory, without the necessity of outputting the data. A page buffer adapted to implement these two additional operations needs to include a pair of buffer registers (and thus two arrays of latches) that can be coupled to two selectable packets of bit lines of the matrix. In this case, the requirements of careful design of the page buffer are even stricter.</p>
<p id="p-0013" num="0012">There has been identified some problems affecting the known page buffers.</p>
<p id="p-0014" num="0013">As mentioned above, the latches making up the registers in the page buffer are volatile storage elements, and such elements, in a simple but common practical implementation, are formed by two CMOS inverters connected to each other so as to form a loop, i.e., with the output of one inverter connected to the input of the other. In a generic program operation (either a PAGE PROGRAM or a CACHE PROGRAM or COPYBACK PROGRAM), a generic bit of the data word to be written into a selected memory cell is first loaded into the latch, and then the content of the latch is transferred onto the selected bitline by activating an electrical connection of the latch output to the bitline (normally, selection pass MOSFETs are used to this end). The bitline normally has associated therewith a relatively high stray capacitance, which is typically on the order of some picofarads, and is normally precharged to a program inhibition voltage. When the latch output is connected to the bitline, a charge sharing takes place, whereby the charge stored in the bitline capacitance and in a parasitic capacitance associated with the latch output is redistributed between such two capacitances. The latch output capacitance is however far smaller than the bitline capacitance (in a typical design, the latch output capacitance may be on the order of some femtofarads, i.e., roughly three orders of magnitude lower than the bitline capacitance). The result of the charge sharing is that the bitline capacitance may easily prevail over the driving capability of the latch, and the voltage at the latch output vary depending on the bitline voltage. This may cause the latch to be incapable of driving the bitline in a way that is sufficient to cause the programming into the desired state of the selected memory cell (the latch is not capable of bringing the bitline from the initial, program inhibition voltage to a voltage adapted to cause programming of the selected memory cell) and, in the worst cases, the latch may even be caused to switch, with the consequence that the data bit stored in the latch is modified.</p>
<p id="p-0015" num="0014">A similar problem is experienced during a read operation (such as a PAGE READ). In this case, the generic latch of the page buffer register, after having been loaded with the data bit read from the selected memory cell, is connected to a data line for transporting the data bit from the page buffer latch to output buffer circuits and then to the I/O terminal of the memory. The data line, similarly to the bitline, usually has associated therewith a relatively high stray capacitance, substantially higher than the latch output capacitance. Thus, the charge sharing between the latch output capacitance and the data line parasitic capacitance may easily cause the latch to be incapable of properly driving the data line, or even to switch and lose the stored data bit.</p>
<p id="p-0016" num="0015">It is observed that the problems described above are experienced both in the case in which the page buffer includes only one register, and in cases of more complex page buffers, with two (and possibly more) registers.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0017" num="0016">In view of these drawbacks, it is an object of the present invention to provide an improved page buffer that is less affected, or not affected at all, by the above-mentioned drawbacks.</p>
<p id="p-0018" num="0017">One embodiment of the present invention provides a page buffer for an electrically programmable memory that includes memory cells forming memory pages. The page buffer includes a register for at least temporarily storing data read from or to be written to the memory cells of a selected one of the memory pages. The register includes latches and buffer elements. Each of the latches is coupled to at least one signal line for transferring a data bit that is stored in the latch. Each of the buffer elements decouples an output of a corresponding one of the latches from the signal line, with the buffer element driving the signal line according to the data bit that is stored in the corresponding latch.</p>
<p id="p-0019" num="0018">Another embodiment of the present invention provides an electrically programmable memory that includes memory cells forming memory pages, and a page buffer coupled to the memory cells. The page buffer includes a register for at least temporarily storing data read from or to be written to the memory cells of a selected one of the memory pages. The register includes latches and buffer elements. Each of the latches is coupled to at least one signal line for transferring a data bit that is stored in the latch. Each of the buffer elements decouples an output of a corresponding one of the latches from the signal line, with the buffer element driving the signal line according to the data bit that is stored in the corresponding latch.</p>
<p id="p-0020" num="0019">A further embodiment of the present invention provides a method of transferring data from a register to signal lines in an electrically programmable memory. The memory includes memory cells forming memory pages, and a page buffer that includes the register. The signal lines transfer the data stored in the register to a selected one of the memory pages and/or an output circuit of the memory. According to the method, data read from or to be written to the memory cells of a selected one of the memory pages is at least temporarily stored in the register, and outputs of the register are buffered so as to decouple the outputs of the register from the signal lines.</p>
<p id="p-0021" num="0020">Other objects, features, and advantages of the present invention will become apparent from the following detailed description. It should be understood, however, that the detailed description and specific examples, while indicating preferred embodiments of the present invention, are given by way of illustration only and various modifications may naturally be performed without deviating from the present invention.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 1</figref> shows the functional blocks of a NAND flash memory according to a preferred embodiment of the present invention; and</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 2</figref> is a circuit schematic of the page buffer of the memory of <figref idref="DRAWINGS">FIG. 1</figref> in accordance with one embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS</heading>
<p id="p-0024" num="0023">Preferred embodiments of the present invention will be described in detail hereinbelow with reference to the attached drawings.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a non-volatile semiconductor memory <b>100</b> according to a preferred embodiment of the present invention. The memory <b>100</b> is an electrically-programmable, non-volatile semiconductor memory, for example a flash memory.</p>
<p id="p-0026" num="0025">The flash memory <b>100</b> is integrated in a chip of semiconductor material, and includes a matrix <b>105</b> of memory cells <b>110</b> arranged in a plurality of rows and a plurality of columns.</p>
<p id="p-0027" num="0026">In this embodiment, each memory cell <b>110</b> consists of an N-channel MOS transistor having a charge-storage element, such as a conductive floating gate that is adapted to be charged by injected electrons. Without going into excessive detail, in an erased condition (associated by convention with a stored logic value of “1”), the memory cell <b>110</b> has a low threshold voltage value. The memory cell <b>110</b> is programmed by injecting electric charges into its floating gate. In the programmed condition (associated by convention with a stored logic value of “0”), the memory cell <b>110</b> has a high threshold voltage value. Therefore, when a selected memory cell <b>110</b> is biased for reading its content, the memory cell <b>110</b> will be conductive if erased or non-conductive if programmed.</p>
<p id="p-0028" num="0027">The flash memory <b>100</b> has a NAND architecture. In the matrix <b>105</b>, groups of, e.g., eight, sixteen or even more (e.g., thirty-two) memory cells <b>110</b> are connected in series to each other to form a memory cell string, and different memory cell strings belonging to the same matrix column are connected in parallel to each other to the same bitline BL.</p>
<p id="p-0029" num="0028">The memory cells <b>110</b> of a generic string are in particular connected in series between a source select N-channel MOS transistor <b>120</b><i>s </i>and a drain select N-channel MOS transistor <b>120</b><i>d</i>. A generic, intermediate memory cell <b>110</b> in the memory cell string has its drain terminal connected to the source terminal of an adjacent memory cell <b>110</b> in the string, and its source terminal connected to the drain terminal of another adjacent memory cell <b>110</b> in the string. One of the two end memory cells <b>110</b> located at the ends of the string has its drain terminal connected to the source terminal of the drain select transistor <b>120</b><i>d</i>; the drain terminal of the drain select transistor <b>120</b><i>d </i>is connected to the corresponding bitline BL, as well as to the drain terminal of the corresponding drain select transistor <b>120</b><i>d </i>of an adjacent memory cell string. Likewise, the other end memory cell <b>110</b> of the string has its source terminal connected to the drain terminal of the source select transistor <b>120</b><i>s</i>; the source terminal of the source select transistor <b>120</b><i>s </i>is connected to the source terminal of the corresponding source select transistor <b>120</b><i>s </i>of another adjacent memory cell string.</p>
<p id="p-0030" num="0029">The control gate terminals of the memory cells <b>110</b> in each row are connected to a corresponding wordline WL. The gate terminals of the drain select transistors <b>120</b><i>d </i>belonging to a common row of the matrix <b>105</b> are all connected to a corresponding drain select line DSL; similarly, the gate terminals of the source select transistors <b>120</b><i>s </i>belonging to a common row are all connected to a corresponding source select line SSL. The drain terminals of the drain select transistors <b>120</b><i>d </i>belonging to a common column of the matrix <b>105</b> are connected to a corresponding bitline BL. Conversely, the source terminals of all of the source select transistors <b>120</b><i>s </i>in the matrix <b>105</b> are connected to a common source line SL (which is typically kept at a reference voltage, or ground).</p>
<p id="p-0031" num="0030">The memory cells <b>110</b> belonging to the same row are logically partitioned into memory pages. Assuming, merely by way of example, that the matrix <b>105</b> includes 8192 bitlines BL, two memory pages of 512 bytes each for each wordline WL are defined; for example, a first page consisting of the memory cells <b>110</b> in an even position, and a second page consisting of the memory cells <b>110</b> in an odd position. Thus, if, still by way of example, the matrix <b>105</b> includes 2048 wordlines WL, the memory <b>100</b> has a total of 4096 memory pages of 512 bytes each. The number of bitlines and wordlines, as well as the size of the memory page, may vary greatly, and the examples given herein are not meant to limit the present invention. For example, the number of memory pages that are associated with a generic wordline may be higher than two, particularly multiples of two, such as four, eight and so on.</p>
<p id="p-0032" num="0031">The flash memory <b>100</b> receives an address code ADR for selecting a desired memory page. A portion of the address code ADR is supplied to a row decoder <b>125</b><i>r</i>, which selects the desired word line WL, as well as the drain select line DSL and the source select line SSL of the corresponding memory sector <b>115</b>. Another portion of the address code ADR is supplied to a column decoder <b>125</b><i>c</i>; the column decoder <b>125</b><i>c </i>connects the desired bit lines BL to a page buffer <b>130</b>.</p>
<p id="p-0033" num="0032">As will be described in greater detail below, the page buffer <b>130</b> is exploited as temporary storage during read/write operations on the memory cells <b>110</b> of the selected pages.</p>
<p id="p-0034" num="0033">The page buffer <b>130</b> is in communication with I/O buffers <b>140</b>, which are in turn associated with I/O terminals I/O of the flash memory <b>100</b>.</p>
<p id="p-0035" num="0034">The operation of the flash memory <b>100</b> is generally managed by a control unit <b>135</b>, for example a microcontroller.</p>
<p id="p-0036" num="0035">A generic memory page is selected by selecting a given wordline WL, and a packet of bitlines BL. For example, if two memory pages of 512 bytes each exist for each wordline, one page corresponding to the memory cells in even positions and the other page to the memory cells in odd positions, the packet of selected bitlines BL includes the 4096 bitlines in even positions or the 4096 bitlines in odd positions.</p>
<p id="p-0037" num="0036">During a read operation (PAGE READ), a data word (consisting of, e.g., 512 bytes) stored in the selected memory page is read out and latched into the page buffer <b>130</b>. The data word, temporarily stored in the page buffer <b>130</b>, is then serially outputted through the I/O terminals I/O in chunks of, e.g., eight or sixteen bits.</p>
<p id="p-0038" num="0037">In greater detail, in order to access a given memory cell <b>110</b> for reading the content thereof, the drain select transistor <b>125</b><i>d </i>and the source select transistor <b>125</b><i>s </i>in the memory cell string to which the cell belongs are turned on, by asserting the drain select line DSL and the source select line SSL (for example, these two lines are brought to a voltage equal to the supply voltage Vdd of the memory, e.g., 3 V). The bitline BL to which there is connected the string of cells containing the memory cell to be read is selected by the column decoder <b>125</b><i>c</i>. The row decoder <b>125</b><i>r </i>biases the wordline WL to which the selected memory cell belongs to a voltage that is intermediate between the erased threshold voltage value and the programmed threshold voltage value (e.g., ground). The remaining wordlines WL controlling the gates of the other memory cells of the same string are all brought to a potential that is sufficiently high to ensure that these memory cells are turned on irrespective of their programming state (for example, a voltage of approximately 10V). All of the other wordlines WL (associated with different memory cell strings) are for example kept grounded.</p>
<p id="p-0039" num="0038">During a write operation (PAGE PROGRAM), a data word to be written, received from outside the memory through the I/O terminals I/O, is loaded into the page buffer <b>130</b>. The data word to be written is received serially in, e.g., eight- or sixteen-bits chunks, and the page buffer <b>130</b> is thus replenished with data in a sequence of steps; when the buffer has eventually been filled, the data are written in parallel into the memory cells of a given selected page.</p>
<p id="p-0040" num="0039">In order to access a given memory cell <b>110</b> for programming it, the drain select transistor <b>125</b><i>d </i>in the memory cell string to which the cell belongs is turned on by asserting the drain select line DSL (for example, bringing this line to the supply voltage Vdd), whereas the source select transistor <b>125</b><i>s </i>is kept off by keeping the source select line SSL deasserted (e.g., grounded). The bitline BL to which there is connected the string of cells containing the memory cell to be programmed is selected by the column decoder <b>125</b><i>c</i>. The row decoder <b>125</b><i>r </i>biases the wordline WL to which the selected memory cell belongs to a high programming voltage, e.g., 20 V; the remaining wordlines WL controlling the gates of the other memory cells of the same string are all brought to a potential (e.g., approximately 10 V) that is sufficiently high to ensure that these memory cells are turned on irrespective of their programming state, but sufficiently lower than the programming voltage, so as not to cause spurious programming. All the other wordlines WL (associated with different memory cell strings) are for example kept grounded.</p>
<p id="p-0041" num="0040">In order to program the selected memory cell, the bitline BL is kept grounded, so that the drain select transistor <b>125</b><i>d </i>is surely kept on; the ground voltage at the bitline, propagating through the drain select transistor and the channel of the memory cells in the string, reaches the channel of the memory cell to be programmed. Here, the voltage difference of approximately 20 V between the control gate and the channel that is experienced by the selected memory cell is sufficient to cause electron tunneling into the floating gate. On the contrary, if the bitline is biased at a higher potential, for example equal to the supply voltage (Vdd, e.g., 3 V), like the drain select line DSL, the drain select transistor <b>125</b><i>d </i>turns off as soon as the voltage of the memory cell string rises following (due to capacitive coupling) the voltage applied to the wordlines; the channels of the memory cells of the selected memory cell string thus remain floating, and the string channel voltage is raised to a value such that the control gate-to-channel voltage difference at the selected memory cell is not sufficient to cause significant electron tunneling, and the memory cell is not programmed. In this way, by applying to the selected bitlines the proper voltage, the cells <b>110</b> of the selected page to be brought to the logic value “0” are then programmed, while the other cells <b>110</b> are left unchanged.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 2</figref> shows the circuit structure of the page buffer <b>130</b> according to one embodiment of the present invention.</p>
<p id="p-0043" num="0042">In the exemplary embodiment herein described, it is assumed that the page buffer <b>130</b> is adapted to implement operations more complex than a simple PAGE READ and a simple PAGE PROGRAM; in particular, it is assumed that the page buffer is adapted to implement operations such as a CACHE PROGRAM and a COPYBACK PROGRAM. The page buffer <b>130</b> thus includes two registers, namely a main register <b>130</b><i>m </i>and a cache register <b>130</b><i>c</i>, visible in <figref idref="DRAWINGS">FIG. 1</figref>, with each of the registers <b>130</b><i>m </i>and <b>130</b><i>c </i>including a number of latches corresponding to, in particular equal to the size (number of bits) of, the memory page. <figref idref="DRAWINGS">FIG. 2</figref> depicts the circuit structure of a page buffer unit that includes one such latch of the main register <b>130</b><i>m </i>and the corresponding latch of the cache register <b>130</b><i>c</i>, and shows the way these two latches are operatively coupled to one another.</p>
<p id="p-0044" num="0043">The page buffer includes a read/write unit <b>205</b> for each pair of adjacent bit lines. Particularly, an even bit line BLe and an odd bit line BLo are connected to a common node <b>210</b> through respective N-channel MOS transistors <b>215</b><i>e </i>and <b>215</b><i>o</i>. The transistors <b>215</b><i>e </i>and <b>215</b><i>o </i>have their respective drain terminals connected to the corresponding bit lines BLe and BLo, and their source terminals connected to the common node <b>210</b>; the gate terminals of the transistors <b>215</b><i>e </i>and <b>215</b><i>o </i>are controlled by respective select signals BLSe and BLSo. Two N-channel MOS transistors <b>220</b><i>e </i>and <b>220</b><i>o </i>are provided, each one for precharging/discharging the respective bit line BLe and BLo to a predefined biasing voltage VIRPWR (such a precharge/discharge operation is for example performed before any read/write operation). For this purpose, the transistors <b>220</b><i>e </i>and <b>220</b><i>o </i>have their source terminals connected to the corresponding bit lines BLe and BLo; the drain terminals of the transistors <b>220</b><i>e </i>and <b>220</b><i>o </i>are connected together and to a terminal providing the biasing voltage VIRPWR. The gate terminals of the transistors <b>220</b><i>e </i>and <b>220</b><i>o </i>are controlled by respective precharge/discharge signals DISCHe and DISCHo.</p>
<p id="p-0045" num="0044">A P-channel MOS transistor <b>225</b> is used for precharging the node <b>210</b> at the beginning of the generic read/write operation. For this purpose, the transistor <b>225</b> has its drain terminal connected to the node <b>210</b>, its source terminal connected to a terminal providing a supply voltage Vdd (for example, 3 V), and its gate terminal controlled by a precharge signal PRECH# (the suffix # being used to indicate that the signal is asserted at the logic value “0”—corresponding to the ground potential—and is deasserted at the logic value “1”—corresponding to the supply voltage Vdd). Although in some embodiments the signal PRECH# is a digital signal, nothing prevents an analog signal from being used, taking any value between ground and the supply voltage Vdd.</p>
<p id="p-0046" num="0045">The read/write unit <b>205</b> includes a main latch <b>230</b><i>m </i>(one of the latches making up the main register <b>130</b><i>m</i>) and a cache latch <b>230</b><i>c </i>(the corresponding latch of the cache register <b>130</b><i>c</i>). The cache latch <b>230</b><i>c </i>is used to load and temporarily store the target value of a data bit to be written into the corresponding selected cell; the main latch <b>230</b><i>m </i>is used to write the target value received from the cache latch <b>205</b><i>m </i>into the selected memory cell, or to read and temporarily store the data bit stored in the selected memory cell.</p>
<p id="p-0047" num="0046">The main latch <b>230</b><i>m </i>is formed by two inverters <b>235</b><i>am </i>and <b>235</b><i>bm </i>connected in a loop, with the input terminal of the inverter <b>235</b><i>am </i>connected to the output terminal of the inverter <b>235</b><i>bm </i>so as to define a node <b>237</b><i>am </i>that provides a signal Qm, and with the output terminal of the inverter <b>235</b><i>am </i>connected to the input terminal of the inverter <b>235</b><i>bm </i>so as to define a node <b>237</b><i>bm </i>that provides a signal Qm# that is the logical complement of the signal Qm.</p>
<p id="p-0048" num="0047">An N-channel MOS transistor <b>240</b><i>m </i>is used to reset the main latch <b>230</b><i>m</i>. For this purpose, the transistor <b>240</b><i>m </i>has its drain terminal connected to the node <b>237</b><i>am</i>, its source terminal connected to ground and its gate terminal controlled by a main latch reset signal MRST. The main latch <b>230</b><i>m </i>is set by two N-channel MOS transistors <b>245</b><i>m </i>and <b>250</b><i>m </i>that are connected in series. The transistor <b>245</b><i>m </i>has its drain terminal connected to the node <b>237</b><i>bm </i>and its source terminal connected to the drain terminal of the transistor <b>250</b><i>m</i>; the source terminal of the transistor <b>250</b><i>m </i>is connected to ground. The gate terminal of the transistor <b>245</b><i>m </i>is controlled by the voltage at the node <b>210</b>, whereas the gate terminal of the transistor <b>250</b><i>m </i>is controlled by a latching or read signal READ.</p>
<p id="p-0049" num="0048">An N-channel MOS transistor <b>265</b> and, according to this embodiment of the present invention, a buffer element BUF are used to couple the main latch <b>230</b><i>m </i>to the node <b>210</b>, and thus to the selected bit line BLe or BLo, in order to program the selected memory cell <b>110</b> during a write operation. For this purpose, the transistor <b>265</b> has its drain terminal connected to the node <b>210</b> and its source terminal connected to an output of the buffer element BUF, which, in a simple but not limitative embodiment, is comprised of an inverter having its input connected to the node <b>237</b><i>bm</i>. The gate terminal of the transistor <b>265</b> is controlled by a programming signal PGM.</p>
<p id="p-0050" num="0049">In an alternative embodiment, the buffer element BUF includes more than one inverter, for example connected in cascade, and is either inverting or non-inverting; in the latter case it may have an input connected to the node <b>237</b><i>am </i>instead of the node <b>237</b><i>bm. </i></p>
<p id="p-0051" num="0050">The read data bit that has been loaded into the main latch <b>230</b><i>m </i>during the read operation is placed on an I/O data line I/O-LINE, which is connected to a respective I/O buffer and, then, to a respective I/O terminal I/O, by the buffer element BUF and an N-channel MOS transistor <b>270</b>, which has its drain terminal connected to the output of the buffer element BUF, its source terminal connected to the line I/O-LINE and its gate terminal controlled by a signal DOUT that, when asserted, enables transfer of the data bit stored in the main latch <b>230</b><i>m </i>to the output buffers and then to the respective I/O terminal I/O.</p>
<p id="p-0052" num="0051">The cache latch <b>230</b><i>c </i>is formed by two inverters <b>235</b><i>ac </i>and <b>235</b><i>bc </i>connected in a loop. The input terminal of the inverter <b>235</b><i>ac </i>is connected to the output terminal of the inverter <b>235</b><i>bc </i>to define a node <b>237</b><i>ac </i>that provides a signal Qc; likewise, the output terminal of the inverter <b>235</b><i>ac </i>is connected to the input terminal of the inverter <b>235</b><i>bc </i>to define a node <b>237</b><i>bc </i>that provides a signal Qc# that is the logical complement of the signal Qc.</p>
<p id="p-0053" num="0052">An N-channel MOS transistor <b>240</b><i>c </i>is used to reset the cache latch <b>230</b><i>m</i>. For this purpose, the transistor <b>240</b><i>c </i>has its drain terminal connected to the node <b>237</b><i>bc</i>, its source terminal connected to ground and its gate terminal controlled by a reset signal CRST. The cache latch <b>230</b><i>c </i>is set by two N-channel MOS transistors <b>245</b><i>c </i>and <b>250</b><i>c </i>that are connected in series. Particularly, the transistor <b>245</b><i>c </i>has its drain terminal connected to the node <b>237</b><i>ac </i>and its source terminal connected to the drain terminal of the transistor <b>250</b><i>c</i>; the source terminal of the transistor <b>250</b><i>c </i>is connected to ground. The gate terminal of the transistor <b>245</b><i>c </i>is controlled by the voltage at the node <b>210</b>, while the gate terminal of the transistor <b>250</b><i>c </i>is controlled by a latching signal CLCH.</p>
<p id="p-0054" num="0053">Two N-channel MOS transistors <b>280</b><i>a </i>and <b>280</b><i>b </i>are used to load a data bit to be written into the cache latch <b>230</b><i>c </i>during an input phase, at the beginning of a write operation. For this purpose, the transistor <b>280</b><i>a </i>has its drain terminal connected to the node <b>237</b><i>ac</i>, and the transistor <b>280</b><i>b </i>has its drain terminal connected to the node <b>237</b><i>bc</i>. The gate terminal of the transistor <b>280</b><i>b </i>receives an input signal DI (whose logic state represents the target value to be loaded into the cache latch <b>230</b><i>c</i>), while the gate terminal of the transistor <b>280</b><i>a </i>receives a signal DI# that is the logical complement of the signal DI. The source terminals of the transistors <b>280</b><i>a </i>and <b>280</b><i>b </i>are both connected to the I/O data line I/O-LINE, which, at the beginning of the write operation, is kept grounded (for example, by a MOS transistor that is activated to tie line I/O-LINE to the ground line).</p>
<p id="p-0055" num="0054">The cache latch <b>230</b><i>c </i>further includes an N-channel MOS transistor <b>290</b> for transferring the target value to the main latch <b>230</b><i>m</i>. For this purpose, the transistor <b>290</b> has its drain terminal connected to the node <b>237</b><i>ac</i>, its source terminal connected to the common node <b>210</b> and its gate terminal is controlled by an transfer enabling signal TRAN.</p>
<p id="p-0056" num="0055">Before any read/write operation on a selected bit line BL, such as the bit line BLe (similar considerations apply to the other bit line BLo), the corresponding precharge/discharge signal DISCHe is asserted. As a consequence, the transistor <b>220</b><i>e </i>turns on, so as to apply the biasing voltage VIRPWR to the selected bit line BLe.</p>
<p id="p-0057" num="0056">In order to perform a PAGE READ operation, only the main latch <b>230</b><i>m </i>is used. The selected bitline BLe (selected by the column decoder <b>125</b><i>c</i>) is connected (through the transistor <b>215</b><i>e</i>) to the common node <b>210</b>, and is precharged (by the transistor <b>225</b>) to the proper initial value, in the example herein considered the supply voltage Vdd. The other bitline BLo, which is not selected (transistor <b>215</b><i>o </i>is off), is discharged (through the transistor <b>220</b><i>o</i>) to the voltage VIRPWR, preferably to ground (so as to limit the capacitive coupling).</p>
<p id="p-0058" num="0057">As mentioned in the foregoing, the drain select transistor <b>120</b><i>d </i>and the source select transistor <b>120</b><i>s </i>are turned on by the row decoder <b>125</b><i>r</i>, by asserting the drain select line DSL and the source select line SSL. Furthermore, the row decoder <b>125</b><i>r </i>biases the wordline WL to which the selected memory cell <b>110</b> belongs to a voltage that is intermediate between the erased memory cell threshold voltage value and the programmed memory cell threshold voltage value; the remaining wordlines controlling the gates of the other memory cells <b>110</b> of the same string are all brought to a potential that is sufficiently high to ensure that such memory cells are turned on irrespective of their programming state.</p>
<p id="p-0059" num="0058">There follows an evaluation phase, during which if the accessed memory cell is erased the potential of the bitline BLe, and thus that of the node <b>210</b>, falls to ground, whereas if the memory cell is programmed the potential of the bitline BLe, and thus that of the node <b>210</b>, remains at the precharge potential (Vdd).</p>
<p id="p-0060" num="0059">Then, the potential at the node <b>210</b> is sensed by asserting the signal READ, thereby turning the transistor <b>250</b><i>m </i>on. The logic state corresponding to the potential at the node <b>210</b> is thus loaded into the main latch <b>230</b><i>m. </i></p>
<p id="p-0061" num="0060">Finally, the signal PBDO is asserted and the transistor <b>270</b> is turned on, so that the logic state latched in the main latch <b>230</b><i>m </i>is brought onto the I/O data line I/O-LINE, driven by the buffer element BUF. In this way, the read data bit is transferred to the I/O buffers <b>140</b>, and then to one of the I/O terminals I/O.</p>
<p id="p-0062" num="0061">In a PAGE PROGRAM operation, the two bitlines BLe and BLo are preliminarily precharged to the same program inhibition voltage, e.g., 3 V.</p>
<p id="p-0063" num="0062">The target data bit to be written into the selected memory cell <b>110</b> is first loaded into the cache latch <b>230</b><i>c</i>. For this purpose, the I/O data line I/O-LINE (and thus the source terminals of the transistors <b>280</b><i>a </i>and <b>280</b><i>b</i>) is kept grounded. The target data bit (represented by the signal DI) and its logical complement (represented by the signal DI#) are then applied to the gate terminals of the transistors <b>280</b><i>b </i>and <b>280</b><i>a</i>, respectively. Therefore, if the target data bit is “1” the transistor <b>280</b><i>b </i>turns on (while the transistor <b>280</b><i>a </i>remains off), so as to bring the node <b>237</b><i>bc </i>to ground; in this way, the signal Qc# is brought to the logic value “0” and the signal Qc is brought to the logic value “1”. Conversely, if the target data bit is “0”, the transistor <b>280</b><i>a </i>turns on (while the transistor <b>280</b><i>b </i>remains off), so as to bring the node <b>237</b><i>ac </i>to ground; in this way, the signal Qc takes the logic value “0” and the signal Qc# takes the logic value “1”.</p>
<p id="p-0064" num="0063">At the same time, the main latch <b>230</b><i>m </i>is reset by asserting the reset signal MRST. As a result, the transistor <b>240</b><i>m </i>turns on; in this way, the signal Qm is brought to the logic value “0” and the signal Qm# is brought to the logic value “1”.</p>
<p id="p-0065" num="0064">The target data bit contained in the cache latch <b>230</b><i>m </i>is then transferred to the main latch <b>230</b><i>m </i>by asserting the signal TRAN. The gate terminal of the transistor <b>245</b><i>m </i>is thus brought to the voltage present at the node <b>237</b><i>ac</i>; in this way, if the signal Qc is at the logic value “1” the transistor <b>245</b><i>m </i>turns on, while if the signal Qc is at the logic value “0” the transistor <b>245</b><i>m </i>remains off. The signal READ is then asserted, so as to turn the transistor <b>250</b><i>m </i>on. Therefore, if the transistor <b>245</b><i>m </i>is on (logic state at node Qc equal to “1”) the node <b>237</b><i>bm </i>is brought to ground (with the signal Qm# that takes the logic value 0 and the signal Qm that takes the logic value 1). Conversely, if the transistor <b>245</b><i>m </i>is off (logic state at node Qc equal to “0”) the logic value in the main latch <b>230</b><i>m </i>is not changed (with the signal Qm# at the logic value “1” and the signal Qm at the logic value “0”).</p>
<p id="p-0066" num="0065">By asserting the signal PGM, the transistor <b>265</b> is turned on. Depending on the logic value at the node <b>237</b><i>bm</i>, the buffer element BUF drives the selected bit line BLe to the proper voltage. In this way, when the selected memory cell is to be programmed (signal Qm at the logic value “0”), the potential of the selected bitline BLe is brought to ground, and the selected memory cell is thus biased in a condition favorable to cause tunneling of electric charges into its floating gate.</p>
<p id="p-0067" num="0066">Usually, a program verify phase follows the programming phase.</p>
<p id="p-0068" num="0067">Another operation that can be performed by the page buffer herein described is the CACHE PROGRAM. In this case, similarly to the previously described PAGE PROGRAM operation, the target data bit to be written into the selected memory cell is first loaded into the cache latch <b>230</b><i>c</i>, and then transferred into the main latch <b>230</b><i>m</i>, from which the data bit is then applied to the selected bit line. It can be appreciated that after the data bit has been moved from the cache latch <b>230</b><i>c </i>into the main latch <b>230</b><i>m</i>, the cache latch is available, and can be used to load another data bit corresponding to another memory page to be written, even if the programming of the previous data bit is still going on. In practice, while the main latch <b>230</b><i>m </i>applies (through the buffer element BUF and the transistor <b>265</b>) the data bit to be programmed to the node <b>210</b>, the cache latch <b>230</b><i>c</i>, isolated from the node <b>210</b> by the fact that the transistor <b>290</b> is off, receives and stores a new data bit, in the same way as is described above.</p>
<p id="p-0069" num="0068">A still further operation that can be implemented using the page buffer described herein is the COPYBACK PROGRAM operation, which is used to copy the content of a selected memory page into another selected memory page, in a way that is totally transparent to the outside world and without the need to output data. In this case, a selected memory cell is accessed, and the content thereof is read as in the previously described PAGE READ operation. However, instead of loading the logic state corresponding to the potential developing at the node <b>210</b> into the main latch <b>230</b><i>m</i>, such a logic state is loaded into the cache latch <b>230</b><i>c</i>, by asserting the signal CLCH. The data bit loaded into the cache latch <b>230</b><i>c </i>is then transferred into the main latch in the same way as is described above in connection with the PAGE PROGRAM operation, by asserting the signals TRAN and READ. Finally, the data bit stored in the main latch <b>230</b><i>m </i>is applied to the selected bit line in the same way as is described above in connection with the PAGE PROGRAM operation, by asserting the signal PGM.</p>
<p id="p-0070" num="0069">The four operations described above are merely exemplary, and not meant to be limiting; other operations are possible.</p>
<p id="p-0071" num="0070">The provision of the buffer element BUF decouples the output (in the example herein described, the node <b>237</b><i>bm</i>, and in alternative embodiments the node <b>237</b><i>am</i>) of the main latch of the page buffer latch (in the example shown, the main latch <b>230</b><i>m</i>) from lines such as the bitline and the I/O data line, which have a relatively high capacitive load associated therewith. Thus, the output of the page buffer latch is never “short-circuited” (directly connected to the bitline or to the I/O data line).</p>
<p id="p-0072" num="0071">This prevents the latch itself from not being able to properly drive the selected bitline to the proper voltage due to effects of charge sharing between the (heavy) stray capacitance associated with the selected bitline or the I/O data line and the (tiny) parasitic capacitance associated with the latch output.</p>
<p id="p-0073" num="0072">Thus, the provision of the buffer element BUF overcomes the problems encountered during the transfer of the write data bit from the main latch to the selected bitline, or the transfer of the read data bit from the main latch to the I/O data line.</p>
<p id="p-0074" num="0073">Expediently, the provision of the buffer element BUF allows the write operations to be implemented in a different way compared to the conventional way in which they are implemented.</p>
<p id="p-0075" num="0074">As described in the foregoing, conventionally, when a selected memory cell of a selected bitline, e.g., the bitline BLe, is to be programmed, both the bitlines BLe and BLo are actually precharged to the program inhibition voltage (typically, the supply voltage Vdd). Subsequently, the data bit stored in the main latch <b>230</b><i>m </i>is transferred only to the selected bitline BLe (by activating the transistor <b>215</b><i>e</i>). If the content of the main latch is a “1”, the selected bitline BLe remains charged at the program inhibition voltage, for example the supply voltage Vdd. This inhibits the tunneling of electrons into the floating gate of the selected memory cell, for the reasons described in the foregoing; otherwise, if the content of the main latch is a “0”, the selected bitline BLe is discharged to ground. In the conventional page buffer, it is the very main latch of the page buffer that has the function of discharging the bitline stray capacitance, and this gives rise to the problems discussed above. It can be appreciated that, according to this conventional procedure, all the bitlines, particularly all the bitlines of the selected memory page, are first precharged to the program inhibition voltage; then, in the selected memory page, a number of bitlines equal to the number of “0”s in the data word to be programmed need to be discharged to ground. This is disadvantageous.</p>
<p id="p-0076" num="0075">Using the page buffer according to the embodiment of the present invention herein described, it is possible to avoid the initial precharge of all of the bitlines to the program inhibition voltage. All of the bitlines are instead initially discharged to ground. Then, it is the main latch <b>230</b><i>m </i>of the page buffer that charges to the program inhibition voltage the bitlines corresponding to memory cells not to be programmed; all the bitlines to which memory cells to be programmed belong already are at the correct potential. This avoids an unnecessary precharge followed by a discharge of the bitlines containing the memory cells to be programmed.</p>
<p id="p-0077" num="0076">Although in the foregoing reference has been made to a page buffer including two registers, namely a main register and a cache register, this is not intended to be limiting. The present invention can just as well be applied in a case in which the page buffer includes only one register, or more than two registers. Also, although the buffer element has been shown as being provided only in association with one register (the main register) of the page buffer, this is not meant to be limiting. The buffer element can as well be provided in association with the other register (the cache register).</p>
<p id="p-0078" num="0077">Although the present invention has been disclosed and described by way of an embodiment, it is apparent to those skilled in the art that several modifications to the described embodiment, as well as other embodiments of the present invention are possible without departing from the scope thereof as defined in the appended claims.</p>
<p id="p-0079" num="0078">For example, although the page buffer has been described as having the same size as the memory page, this is not meant to be limiting. The page buffer may have for example a bigger size than the memory page.</p>
<p id="p-0080" num="0079">Additionally, many modifications may be made to adapt a particular situation to the teachings of the present invention without departing from the central inventive concept described herein. Furthermore, an embodiment of the present invention may not include all of the features described above. Therefore, it is intended that the present invention not be limited to the particular embodiments disclosed, but that the invention include all embodiments falling within the scope of the appended claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A page buffer for an electrically programmable memory that includes a plurality of memory cells forming a plurality of memory pages, the page buffer comprising:
<claim-text>a register for at least temporarily storing data read from or to be written to the memory cells of a selected one of the memory pages, the register comprising:
<claim-text>a plurality of latches, each of the latches being coupled to at least two signal lines for transferring a data bit that is stored in the latch, the at least two signal lines including a bitline that is coupled to a plurality of the memory cells and a data line that is coupled to an output interface of the memory; and</claim-text>
<claim-text>a plurality of buffer elements, each of the buffer elements decoupling an output of a corresponding one of the latches from the signal lines, the buffer element including an input that is coupled to the output of the corresponding latch, and an output that is selectively coupled to both the bitline and the data line so as to selectively drive the bitline or the data line according to the data bit that is stored in the corresponding latch.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The page buffer according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the bitline transports the data bit to be written to a selected one of the memory cells that is coupled to the bitline.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The page buffer according to <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the data line transports the data bit read from a selected one of the memory cells to the output interface of the memory.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The page buffer according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein each of the latches of the register includes first and second inverters connected in a loop.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The page buffer according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the input of the buffer element is connected to an output of the first inverter of the corresponding latch, and the output of the buffer element is connected to a node that is selectively coupled to the bitline and the data line.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The page buffer according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the data line transports the data bit read from a selected one of the memory cells to the output interface of the memory.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The page buffer according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein each of the latches of the register includes first and second inverters connected in a loop.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The page buffer according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the input of the buffer element is connected to an output of the first inverter of the corresponding latch, and the output of the buffer element is connected to a node that is selectively coupled to the bitline and the data line.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The page buffer according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein each of the buffer elements of the register is an inverting buffer.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The page buffer according to <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein each of the buffer elements of the register is a non-inverting buffer.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The page buffer according to <claim-ref idref="CLM-00001">claim 1</claim-ref>,
<claim-text>wherein the register is a main register, and</claim-text>
<claim-text>the page buffer further comprises a cache register that is coupled to the main register, the data to be written to the memory cells of the selected memory page being loaded into the cache register and then transferred from the cache register to the main register for writing to the memory cells.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The page buffer according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>a first transistor having a first terminal coupled to the output of the buffer element and a second terminal coupled to the bitline for selectively transferring a data bit that is stored in the corresponding latch to the bitline; and</claim-text>
<claim-text>a second transistor having a first terminal coupled to the output of the buffer element and a second terminal coupled to the data line for selectively transferring a data bit that is stored in the corresponding latch to the data line.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. An electrically programmable memory comprising:
<claim-text>a plurality of memory cells forming a plurality of memory pages;</claim-text>
<claim-text>a plurality of bitlines coupled to the memory cells;</claim-text>
<claim-text>a plurality of data lines coupled to an output interface of the memory; and</claim-text>
<claim-text>a page buffer coupled to the memory cells, the page buffer comprising:
<claim-text>a register for at least temporarily storing data read from or to be written to the memory cells of a selected one of the memory pages, the register comprising:
<claim-text>a plurality of latches, each of the latches being coupled to at least two signal lines of the memory for transferring a data bit that is stored in the latch, the at least two signal lines including a corresponding one of the bitlines and a corresponding one of the data lines; and</claim-text>
<claim-text>a plurality of buffer elements, each of the buffer elements decoupling an output of a corresponding one of the latches from the signal lines, the buffer element including an input that is coupled to the output of the corresponding latch, and an output that is selectively coupled to both the corresponding bitline and the corresponding data line so as to selectively drive the corresponding bitline or the corresponding data line according to the data bit that is stored in the corresponding latch.</claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The memory according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the corresponding bitline transports the data bit to be written to a selected one of the memory cells that is coupled to the corresponding bitline.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The memory according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the corresponding data line transports the data bit read from a selected one of the memory cells to the output interface of the memory.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The memory according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein each of the latches of the register of the page buffer includes first and second inverters connected in a loop.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The memory according to <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the input of the buffer element is connected to an output of the first inverter of the corresponding latch, and the output of the buffer element is connected to a node that is selectively coupled to the corresponding bitline and the corresponding data line.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The memory according to <claim-ref idref="CLM-00013">claim 13</claim-ref>,
<claim-text>wherein the register of the page buffer is a main register, and</claim-text>
<claim-text>the page buffer further comprises a cache register that is coupled to the main register, the data to be written to the memory cells of the selected memory pane being loaded into the cache register and then transferred from the cache register to the main register for writing to the memory cells.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
