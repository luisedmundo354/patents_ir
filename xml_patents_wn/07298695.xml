<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298695-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298695</doc-number>
<kind>B1</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10378388</doc-number>
<date>20030303</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>1089</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>J</subclass>
<main-group>1</main-group>
<subgroup>16</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370218</main-classification>
<further-classification>370244</further-classification>
<further-classification>714  2</further-classification>
</classification-national>
<invention-title id="d0e53">Method and apparatus for delaying start of restoration of low priority services</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>3878436</doc-number>
<kind>A</kind>
<name>Bogel</name>
<date>19750400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>361 72</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6925054</doc-number>
<kind>B1</kind>
<name>Atterton et al.</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370218</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2002/0178397</doc-number>
<kind>A1</kind>
<name>Ueno et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714  4</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2004/0114595</doc-number>
<kind>A1</kind>
<name>Doukai</name>
<date>20040600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370389</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>2007/0041316</doc-number>
<kind>A1</kind>
<name>Chaudhuri</name>
<date>20070200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370218</main-classification></classification-national>
</citation>
</references-cited>
<number-of-claims>46</number-of-claims>
<us-exemplary-claim>40</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>370216-228</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370241-252</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370375</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370389</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370380</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370369</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714  4</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714  2</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714418</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714712</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>361 72</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709224</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709220-222</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>8</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60401148</doc-number>
<kind>00</kind>
<date>20020805</date>
</document-id>
</us-provisional-application>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Cortez</last-name>
<first-name>Bruce Gilbert</first-name>
<address>
<city>Marlboro</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Durinovic-Johri</last-name>
<first-name>Sanja</first-name>
<address>
<city>Aberdeen</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="003" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Johri</last-name>
<first-name>Pravin Kumar</first-name>
<address>
<city>Aberdeen</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="004" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Paggi</last-name>
<first-name>John</first-name>
<address>
<city>Bayville</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="005" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Zelingher</last-name>
<first-name>Simon S</first-name>
<address>
<city>Morganville</city>
<state>NJ</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>AT&amp;T Corp.</orgname>
<role>02</role>
<address>
<city>New York</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Pezzlo</last-name>
<first-name>John</first-name>
<department>2616</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">The present invention relates generally to restoration of low priority services in a network. More particularly, the invention encompasses a method and an apparatus for delaying the start of the restoration of low priority services in a communication network. The invention further includes multiple schemes for restoring low priority services. The network could consist of optical, ATM, FR, or IP/MPLS switches and cross-connects.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="106.76mm" wi="151.38mm" file="US07298695-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="235.03mm" wi="129.20mm" file="US07298695-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="168.32mm" wi="144.36mm" file="US07298695-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="236.47mm" wi="144.36mm" file="US07298695-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="122.17mm" wi="155.19mm" file="US07298695-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="136.06mm" wi="109.98mm" file="US07298695-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="132.25mm" wi="152.48mm" file="US07298695-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATION</heading>
<p id="p-0002" num="0001">The present invention is related to Provisional Patent Application Ser. No. 60/401,148, filed on Aug. 5, 2002, entitled “A scheme for delaying the start of restoration of low priority services,” the disclosure of which is incorporated herein by reference.</p>
<heading id="h-0002" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">The present invention relates generally to restoration of low priority services in a network. More particularly, the invention encompasses a method and an apparatus for delaying the start of the restoration of low priority services in a communication network. The invention further includes multiple schemes for restoring low priority services.</p>
<heading id="h-0003" level="1">BACKGROUND INFORMATION</heading>
<p id="p-0004" num="0003">This invention relates to circuit-based communication networks, such as an optical switch or optical cross connect network, an ATM network, a Frame Relay network, a network of MPLS (Multi-Protocol Label Switching) enabled label switched routers, a network of Lambda (optical wavelength) routers, to name a few. In all such networks, circuits are provisioned between pairs of switches and numerous classes of services are carried on these circuits. Certain classes of circuits can be given preferential treatment over others. For example, there may be two classes of service—Premium and Basic—and Premium service circuits may receive priority treatment over any Basic service circuit.</p>
<p id="p-0005" num="0004">These communication networks also consist of a number of switches which are connected by communication links. There could be multiple links between a given pair of switches and not every pair of switches needs to be connected to each other. Links could be of various sizes that are generally expressed in bandwidth units such as DS3, OC3, OC12, OC48, to name a few.</p>
<p id="p-0006" num="0005">All of these networks use routing and signaling protocols to automate a variety of functions, such as, for example, self-discovery of network resources, construction and maintenance of an identical link-state database of routing information across all switches (within an “Area”, “Peer Group,” etc.), automatic provisioning and restoration of circuits, determination of paths for provisioning and restoration of circuits, detection of network failure conditions, flooding of information related to any change in the state of the network to all switches, including failures of switches and links, change in available bandwidth on a link, to name a few.</p>
<p id="p-0007" num="0006">The routing and signaling protocols, including OSPF, MPLS, PNNI, etc. and variants of these standard protocols, have been adapted to specific networks or applications.</p>
<p id="p-0008" num="0007">These networks are characterized by the fact that the intelligence is distributed in every switch and is not centralized in one or more central locations. Typically, all switches run the same set of protocols although the functions performed by the switches may vary somewhat based on how switches are used. For example, “border switches” in an OSPF area have greater functionality than other switches. Thus, the switches while employing the same or similar protocols operate independently of each other. Any co-ordination of activities between switches is done by sending messages to each other in ways prescribed by the routing and signaling protocols.</p>
<p id="p-0009" num="0008">Communication circuits are established over a path or a sequence of links and switches through the network. Ties between equally desirable paths are typically broken in arbitrary but fixed order. The problems with restoration of circuits are also all well known in the art. There are many solutions that have been proposed and some have been implemented. For example, one current routing protocol always picks the shortest path with available capacity.</p>
<p id="p-0010" num="0009">While the routing protocols aim at disseminating network state information throughout the network in a timely fashion, this process also uses up valuable processing resources to formulate the routing messages and to send them out, as well as to assimilate the information that is received from the routing messages. Consequently, there is a trade-off between the rate at which routing messages are sent with updated network information, and the amount of processing resources devoted to process just the routing messages. In order to address this concern, various timers are used by the routing protocols (as well as the signaling protocols) to control the rate at which these messages are sent. For example, updates of available bandwidth on a link may be sent no more than once every second and, therefore, the routing information may not be completely up to date. This is particularly true when a number of network events happen in a short amount of time, as is typically the case during a network failure involving the release and restoration of many circuits.</p>
<p id="p-0011" num="0010">Also, in any large network failure scenario when multiple circuits are affected, there will be multiple switches that are source switches to these failed circuits. These switches initiate restoration in a “distributed” fashion, that is, without any co-ordination between the various switches. It is also well established that restoration for a failed circuit starts as soon as the source switch receives a release message for that circuit. Furthermore, the switches invoke the same algorithm for obtaining restoration paths and generally have identical link-state routing databases on which this path is calculated.</p>
<p id="p-0012" num="0011">It is also well known that each individual switch maintains the priority order between the different service types of the failed circuits sourced on that switch, but it has no way of assuring that priority order across all the switches involved in the restoration is maintained or synchronized. In fact, it is well known in the art that under some circumstances Basic circuits sourced on one switch can start to restore before Premium circuits sourced on another switch have had a chance to restore; one reason could be simply because of the number of failed Basic and Premium circuits sourced at each switch. For example, the first switch may have just a few Premium circuits that may have failed, while the second switch may have had more Premium circuits that have failed. And, as soon as the first switch initiates the restoration of its share of Premium circuits, it would then start on the restoration of its Basic circuits, while the second switch would still be working on its Premium circuits. Having Basic circuits compete with Premium circuits for remaining network resources may compromise the performance of Premium circuits. Thus, there is a need for a method that assures that Premium circuits are restored before Basic circuits, at least with a high probability, and that the restoration of Basic circuits does not interfere with the restoration of Premium circuits.</p>
<p id="p-0013" num="0012">This invention overcomes the problems of the prior art. The invention works to restore low priority services in a network. More particularly, the invention encompasses a method and an apparatus for delaying the start of the restoration of low priority services in a communication network. This leads to an efficient process for all service restoration.</p>
<heading id="h-0004" level="1">PURPOSES AND SUMMARY OF THE INVENTION</heading>
<p id="p-0014" num="0013">The invention is a novel method and an apparatus for delaying the start of the restoration of low priority services in a communication network. Therefore, one purpose of this invention is to delay the start of the restoration of low priority services in a communication network. Another purpose of this invention is to provide restoration of communication service in a very efficient and economical manner.</p>
<p id="p-0015" num="0014">One aspect of this invention comprises a method for restoring failed circuits within a communication network, comprising the steps of: (a) identifying at least one failed circuit, and (b) triggering at least one delay parameter for the restoration of the failed circuit.</p>
<p id="p-0016" num="0015">Another aspect of this invention comprises a method for restoring failed circuits within a communication network, comprising the steps of: identifying at least one failed circuit, and triggering at least one schedule for the restoration of the failed circuit.</p>
<p id="p-0017" num="0016">Still another aspect of this invention comprises a program storage device readable by machine, tangibly embodying a program of instructions executable by the machine to perform method steps for restoring failed circuits within a communication network, the method steps comprising: (a) identifying at least one failed circuit, and (b) triggering at least one delay parameter for the restoration of the failed circuit.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0018" num="0017">The features of the invention believed to be novel and the elements characteristic of the invention are set forth with particularity in the appended claims. The drawings are for illustration purposes only and are not drawn to scale. Furthermore, like numbers represent like features in the drawings. The invention itself, both as to organization and method of operation, may best be understood by reference to the detailed description which follows taken in conjunction with the accompanying drawings in which:</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 1</figref> is an exemplary network which is used to illustrate the present invention.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 2</figref> is a flow diagram to illustrate failure detection and release of affected circuits.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram to illustrate processing of release messages.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 4</figref> is a flow diagram to illustrate scheduling restoration of failed circuits.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 5</figref> is a flow diagram to illustrate a restoration procedure.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 6</figref> is a flow diagram to illustrate scheduling restoration of failed circuits using the present invention.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 7</figref> is a flow diagram to illustrate failure detection and release of affected circuits using the present invention.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 8</figref> is a flow diagram to illustrate another embodiment of scheduling restoration of failed circuits using the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0027" num="0026">The prior art provides a plurality of methods and apparatus for provisioning a new (service) circuit. For example, a new circuit order between a pair of switches may be provisioned as follows:
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0027">(a) One of the switches would be selected as the “source” of the circuit and the other as the “destination.”</li>
        <li id="ul0002-0002" num="0028">(b) The “source” switch then would calculate a path for the circuit using information collected by a routing protocol. The information typically includes network topology and available network resources, to name a few. The path preferably must have sufficient network resources to meet the quality of service requirements of the circuit, for example, bandwidth, delay, to name a few.</li>
        <li id="ul0002-0003" num="0029">(c) The “source” switch then would set up the circuit using the signaling protocol. A “setup” message is then sent out along the selected path of the circuit. Each switch in the path checks to see if the requested resources are available and then allocates the resources to the circuit. If all switches are able to allocate the resources, then the setup succeeds; otherwise there is failure along the path. An unsuccessful setup attempt may result in a “crankback” to the “source”, and as a result it then tries to set the circuit up on a different path. It is preferred that the new path also has sufficient resources to meet the needs of the circuit.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0028" num="0030">Paths are generated in a variety of ways. For example, paths can be generated by using variants of Dijkstra's shortest path algorithm. This algorithm takes advantage of the fact that each link typically has a provisioned administrative weight. Links may be bi-directional and may have different weights in either direction, but this issue will be ignored for the sake of simplicity. The weight of a path is the sum of the weight of the links in the path. Dijkstra's algorithm seeks to find the path with the minimum weight. It is possible that there may be several paths with identical weights. This is particularly the case when there are several links between a given pair of nodes. Typically, many of these links may be assigned the same weight. Under these conditions, substituting one link for another will result in paths with identical weight.</p>
<p id="p-0029" num="0031">Typical Dijkstra implementations select among equal weight links (and sometimes paths) in a fixed order. These implementations try to fill up the selected link before another link is selected and in this manner it tries to maximize the fill of the links with circuits on them. The resulting effect is to leave the remaining links empty and thus capable of accepting large circuits.</p>
<p id="p-0030" num="0032">Under other conditions, a hash function defined on certain parameters could be used to distribute the various circuits over the different links available in a pseudo-random fashion. The hash function concept is more common in traditional IP (Internet Protocol) networks that typically do not do any restoration of circuits.</p>
<p id="p-0031" num="0033">In pure circuit networks, such as optical networks, it is preferred to leave the maximum available space on (some) links to accommodate large circuits. However, randomized link selection defeats this objective, as circuits will occupy (some) space on all links.</p>
<p id="p-0032" num="0034">Whenever there is a failure, such as a fiber cut or a switch failure, to name a few, a number of circuits in the link may be impacted. Normally, the switches adjacent to the failure first detect the failure condition. These switches identify the circuits affected by it and then initiate signaling messages to release these circuits. The “release” messages travel back to the “source” and the “destination” of the circuit, releasing all resources held by the circuit along the way. The source switch then needs to determine a new path and tries to establish the failed circuit on this new path. This is called restoring the circuit. The new path must have sufficient resources to meet the needs of the circuit. It must also avoid the failed part of the network. Information about the failed part is disseminated by the routing protocol but there may be a short delay in getting this information. The release and/or crankback message may also contain information regarding where the circuit (setup) failed. Generally, the procedure used to restore the circuit is similar to the method used to provision it in the first place. However, often there are some variations. In some cases, switches pre-calculate a restoration path for each circuit. If this is the case, then this path is attempted first whenever the circuit fails. However, if the setup or restoration attempt on this pre-calculated path fails, then the Dijkstra algorithm may be used to obtain a new path.</p>
<p id="p-0033" num="0035">Unsuccessful restoration attempts also result in crankbacks, and it is also possible that a circuit may crankback a plurality of times before it is finally restored. Each crankback increases the amount of time the service associated with the circuit suffers an outage. Thus it is also desirable that the number of crankbacks be minimized. The failed circuits all compete for the same available network resources during restoration. It is also possible that there are insufficient network resources to restore all failed circuits. In this case, some of the circuits will not restore and remain in the failed state.</p>
<p id="p-0034" num="0036">It should also be understood that often there are many types of services that comprise the various circuits. It is an accepted practice to release the failed circuits in a priority order based on the type of service and also to initiate the re-establishment of circuits in a similar priority order. Thus, the higher priority Premium service circuits may be released first and then the lower priority Basic service circuits are released. Similarly, at the source nodes of the released circuits, restoration may be attempted first for the Premium class of circuits and then for the Basic class of circuits.</p>
<p id="p-0035" num="0037">For successful restoration, particularly with large failure events such as fiber cuts, there must also be adequate spare (restoration) bandwidth in the network. Often a fiber cut takes out several links. Consequently, the network may maintain many spare links' worth of restoration capacity on potential restoration paths. Since failures can occur anywhere in the network, spare restoration capacity is maintained throughout the network.</p>
<p id="p-0036" num="0038">Once the failure conditions are cleared from the network, the restored circuits may be “reverted” back to their original (service) paths from the restoration paths. This involves releasing the circuit on the restoration path and then setting it up on the original path. The switches typically maintain a record of the original path. Since failure conditions are typically repaired within a short period of time, such as within a few hours, restoration is considered temporary. However, a restored service that stays up for many months or years, like service provisioning, is considered (more) permanent. Thus, as it is desirable to calculate the “best” path during provisioning, similarly restoration may be attempted on any available path, however undesirable. For example, the restoration path may be very long and the restored circuit may thus hold on to a lot of network resources. However, it should be remembered that the circuit will (soon) give up these resources when it reverts.</p>
<p id="p-0037" num="0039">As stated earlier, this invention overcomes the problems of the prior art in a number of ways, such as to delay the start of the restoration of Basic circuits in all the switches. This could be done in a variety of ways, such as to delay the start of the restoration of Basic circuits in all the switches by a suitable amount of time. This time could depend on the number of Premium and Basic circuits that are expected to fail and can also be provisioned by the administrator of the network. The delayed start of the restoration of the Basic circuits will leave sufficient time for the Premium circuits to restore.</p>
<p id="p-0038" num="0040">One way to implement this invention would be to introduce a delay parameter that could be provisioned for the Basic circuits in every switch. After a circuit failure, as each release message for a Basic circuit arrives at the “source” switch, the switch would start, for example, a timer for the duration specified by the delay parameter and wait for the expiration of the timer before it initiates the restoration of this Basic circuit. And, after the timer expires, the restoration of the failed Basic circuit would proceed by methods well known in the prior art. It is currently envisioned that this delay parameter would only be used when the failed circuit is being restored.</p>
<p id="p-0039" num="0041"><figref idref="DRAWINGS">FIG. 1</figref> is an exemplary network <b>10</b> which is used to illustrate the present invention. The network <b>10</b> has a plurality of switches (SW) <b>101</b>-<b>106</b> and a plurality of point-to-point communication links <b>201</b>-<b>207</b>. In a typical network <b>10</b>, switches <b>101</b>-<b>106</b> are connected with point-to-point communication links <b>201</b>-<b>207</b>—for example, OC48 (Optical Carrier level 48), OC12, OC3, DS3 communication links, to name a few. One can also have multiple links between a pair of switches (not shown). Each link <b>201</b>-<b>207</b> is bi-directional and with potentially different characteristics in each direction. For example, each link could have different bandwidth (BW) and administrative weight in each direction. For the sake of simplicity, the invention will be illustrated assuming that all the links have the same characteristics in either direction. Switches <b>101</b>-<b>106</b> can also automatically discover the network and set up circuits using known link-state routing and signaling protocols. Examples of such switches are optical switches, ATM switches, FR switches, and IP/MPLS routers, and examples of protocols are OSPF (Open Shortest Path First), PNNI (Private Network-to-Network Interface), MPLS (Multi-Protocol Label Switching), to name a few. The switches can also be provisioned with network information. Multiple links can also be grouped into an “aggregated link” to ease the burden of link-state protocol. Circuits are established between a pair of switches and a circuit could traverse multiple switches in between. The (service) route of the circuit is the set of links (and switches) on which it is set up. For ease of understanding, the rest of the invention will be described in terms of optical switches and OC48 links between switches. The point-to-point communication link <b>201</b> connects switch <b>101</b> and switch <b>102</b> to each other.</p>
<p id="p-0040" num="0042">For the purpose of understanding this invention, let us assume that the link <b>201</b> comprises two component OC48 lines; therefore the bandwidth (BW) in the direction from switch <b>101</b> to switch <b>102</b> would be 96 STS1 (Synchronous Transport Signal level 1) slots (2×OC48). The bandwidth in the direction from switch <b>102</b> to switch <b>101</b> would be 96 STS1 slots (2×OC48). Let us also assume that the administrative weight in the direction from switch <b>101</b> to switch <b>102</b> is 200, and the administrative weight in the direction from switch <b>102</b> to switch <b>101</b> is also 200. Let us also assume that the available bandwidth in the direction from switch <b>101</b> to switch <b>102</b> would be 10 STS1 slots, and the available bandwidth in the direction from switch <b>102</b> to switch <b>101</b> would also be 10 STS1 slots. This also implies that the existing circuits are using 86 STS1 slots (<b>96</b>-<b>10</b>).</p>
<p id="p-0041" num="0043">For the purpose of understanding this invention, let us assume that there is a failure within the network that causes a circuit <b>301</b> to fail. The restoration path for the circuit <b>301</b> could include switches <b>101</b>, <b>104</b>, <b>105</b> and <b>103</b>, and links <b>205</b>, <b>206</b> and <b>207</b>.</p>
<p id="p-0042" num="0044"><figref idref="DRAWINGS">FIG. 2</figref> is a flow diagram illustrating failure detection and release of affected circuits. At step <b>21</b> the network detects LOS (Loss of Signal) on a link. At step <b>23</b> the link as failed is marked and a routing LSA (Link State Advertisement) message is triggered to advertise the link failure. At step <b>25</b> the circuits routed on the link are identified. De-allocation of resources held by each circuit is done at step <b>27</b>. At step <b>29</b> a signal (release) message is sent to source/destination of each circuit. The order in which each of these steps are done can vary.</p>
<p id="p-0043" num="0045"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram illustrating processing of release messages. At step <b>31</b> a release message is received. This message could be from another switch or another module in the same switch. De-allocation of resources held by the circuit is done at step <b>33</b>. At step <b>35</b> it is determined whether or not the switch is the source of the circuit. If the switch is the source, then at step <b>36</b> the restoration of the circuit is scheduled and the processing of the release completes at step <b>38</b>. If the switch is not the source, then at step <b>37</b> it is determined whether or not the switch is the destination of the circuit. If the switch is the destination, then this process is completed at step <b>38</b>. If the switch is not the destination, then at step <b>39</b> the release message is forwarded to the next switch along the route of the circuit.</p>
<p id="p-0044" num="0046"><figref idref="DRAWINGS">FIG. 4</figref> is a flow diagram illustrating scheduling restoration of failed circuits. At step <b>41</b> a message or trigger is received to schedule restoration for a failed circuit. A prioritized list of circuits waiting to be restored is obtained at step <b>43</b>. At step <b>45</b> priority of failed circuit with respect to other failed circuits on the list is calculated. At step <b>47</b> the failed circuit is inserted into the priority list, and the restoration procedure is activated at step <b>49</b>.</p>
<p id="p-0045" num="0047"><figref idref="DRAWINGS">FIG. 5</figref> is a flow diagram illustrating a restoration procedure. At step <b>51</b> a message or trigger is received to start the restoration procedure. At step <b>53</b> it is determined if there are any failed circuits in the prioritized list of the failed circuits. If there are no failed circuits, then the restoration procedure is completed at step <b>54</b>. However, if there are failed circuits, then the circuit at the head of the list or on top of the list is picked at step <b>55</b>. At step <b>57</b> resources needed by this circuit in this switch are allocated. At step <b>58</b> the restoration route for the circuit is calculated. A signaling (setup) message to the next switch along the route of circuit is sent at step <b>59</b>, and step <b>53</b> is repeated until the restoration procedure has been completed.</p>
<p id="p-0046" num="0048"><figref idref="DRAWINGS">FIG. 6</figref> is a flow diagram illustrating scheduling restoration of failed circuits using the present invention. At step <b>61</b> a message or trigger is received to schedule restoration for a failed circuit. At step <b>62</b> it is determined whether or not the failed circuit is a low priority circuit. If the failed circuit is a low priority circuit, then at step <b>63</b> the restoration has to wait for a time specified as discussed in this invention. If the failed circuit is not a low priority circuit, then at step <b>64</b> a prioritized list of circuits waiting to be restored is obtained. At step <b>65</b> priority of failed circuit with respect to other circuits in the list is calculated. At step <b>67</b> the failed circuit is inserted into the prioritized list. The restoration procedure is activated at step <b>69</b>.</p>
<p id="p-0047" num="0049">In one embodiment, the time the restoration has to wait is provisioned in the switches, and the switches simply use this value in step <b>63</b>. The value could be a fixed number or randomly sampled from a distribution with certain parameters. In another embodiment, as described in <figref idref="DRAWINGS">FIG. 7</figref>, this time is calculated by the switch sending the original release message and is passed in the release message to the switch doing the restoration. The time could be a function of the number of circuits that have failed and could vary from circuit to circuit. For example, if more circuits are failed, then a larger value of time may be used. In yet another embodiment, described in <figref idref="DRAWINGS">FIG. 8</figref>, the switch scheduling the restoration determines the time. Again, it could be a function of the number of releases this switch has received and could vary from circuit to circuit.</p>
<p id="p-0048" num="0050"><figref idref="DRAWINGS">FIG. 7</figref> is a flow diagram illustrating failure detection and release of affected circuits using the present invention. At step <b>21</b> the network detects LOS (Loss of Signal) on a link. At step <b>23</b> the link that has failed is marked and a routing LSA message is triggered to advertise the link failure. At step <b>25</b> the circuits routed on the link are identified. De-allocation of resources held by each circuit is done at step <b>27</b>. At step <b>78</b> a delay for each circuit is calculated. At step <b>79</b> a signaling (release) message is sent to the source/destination of each circuit with the recommended delay for each of the circuits.</p>
<p id="p-0049" num="0051"><figref idref="DRAWINGS">FIG. 8</figref> is a flow diagram illustrating another embodiment of scheduling restoration of failed circuits using the present invention. At step <b>61</b> a message or trigger is received to schedule restoration for a failed circuit. At step <b>62</b> it is determined whether or not the failed circuit is a low priority circuit. If the failed circuit is a low priority circuit, then at step <b>82</b> it is added to the count of released circuits. Then at step <b>84</b> the process has to wait for a time that is a function of number of released circuits and then step <b>64</b> is triggered. If the failed circuit is not a low priority circuit, then at step <b>64</b> a prioritized list of circuits waiting to be restored is obtained. At step <b>65</b> priority of a failed circuit with respect to other circuits in the list is calculated. At step <b>67</b> the failed circuit is inserted into the prioritized list. The restoration procedure is activated at step <b>69</b>. It should be appreciated that step <b>82</b> could also be performed between steps <b>62</b> and <b>64</b>. Additionally, any function can be used in step <b>84</b>.</p>
<p id="p-0050" num="0052">This invention can be easily extended to a plurality of classes of services. Multiple delay parameters can also be provisioned in the switches, one for each class of service. The highest priority service class need not be delayed—that is, it's delay parameter could be set at zero.</p>
<p id="p-0051" num="0053">The delay parameter could be different for different switches. The amount a circuit is to be delayed could be also be specified by the switch releasing the circuit in the release message for the circuit. Thus, the release message could be modified to carry the amount of the desired delay.</p>
<p id="p-0052" num="0054">Instead of a fixed amount of delay for a service class, this amount could vary based on the number of circuits affected by the failure. It could be a step function based on the number of releases that arrive at a switch. For example, the first 5 Basic circuit releases arriving at a switch within a certain time interval could be delayed by an amount equal to the delay parameter, the next 5 by twice the delay parameter, and so on. The switches will need to implement a way to count the number of releases in time intervals of specified sizes and also have a way to provision how the varying delay amount is to be calculated. The variable delays could also be specified by the switch releasing the circuits.</p>
<p id="p-0053" num="0055">The switch releasing the circuits could calculate a delay parameter for each circuit based on all failed circuits. For example, it could simulate the restoration paths for each circuit, decide which circuits may compete with each other for network resources, and then decide to delay certain circuits by specified amounts of time to minimize the contention for network resources seen by higher priority services. A wide variety of methods can be used to do these calculations.</p>
<p id="p-0054" num="0056">The timer used to delay a circuit may be jittered, as it is standard practice to generally jitter timers in routing and signaling protocols.</p>
<p id="p-0055" num="0057">This invention is applicable to other MPLS-based IP (Internet Protocol) networks and the traditional ATM and Frame Relay (FR) networks as well. This invention can also be used with any communication network with switches capable of establishing circuits—for example, Frame Relay switches, ATM switches, IP/MPLS routers, Optical switches, digital and optical cross-connects, to name a few.</p>
<p id="p-0056" num="0058">While the present invention has been particularly described in conjunction with a specific preferred embodiment, it is evident that many alternatives, modifications and variations will be apparent to those skilled in the art in light of the foregoing description. It is therefore contemplated that the appended claims will embrace any such alternatives, modifications and variations as falling within the true scope and spirit of the present invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for restoring failed circuits within a communication network, comprising the steps of:
<claim-text>(a) identifying at least one failed circuit,</claim-text>
<claim-text>(b) triggering at least one delay parameter for the restoration of said failed circuit,</claim-text>
<claim-text>(c) determining if the failed circuit is a low priority circuit, and</claim-text>
<claim-text>(d) if said failed circuit is a low priority circuit then waiting for a specific triggering event to initiate said restoration.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the delay parameter is provisioned for each circuit.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein a release message arriving at a source switch of the failed circuit triggers said at least one delay parameter.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein a release message arriving at a source switch of the failed circuit carries said at least one delay parameter.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said at least one delay parameter is selected from a group consisting of a timer, a fixed value, a variable delay function and a step delay function.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein different classes of services have different delay parameters.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein a first circuit has at least one first delay parameter, and a second circuit has at least one second delay parameter.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein a first switch has at least one first delay parameter, and a second switch has at least one second delay parameter.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein a timer used to delay circuit restoration is jittered.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising generating at least one list of at least one failed circuit waiting to be restored.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising inserting at least one new failed circuit in said list and updating said list.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising generating at least one priority list of at least one failed circuit waiting to be restored.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising inserting at least one new failed circuit in said priority list and updating said priority list.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising calculating delay for each failed circuit and sending at least one release message to a source and/or destination of each circuit with said calculated delay.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A method for restoring failed circuits within a communication network comprising the steps of:
<claim-text>(a) identifying at least one failed circuit, and</claim-text>
<claim-text>(b) triggering at least one schedule for the restoration of said failed circuit,</claim-text>
<claim-text>wherein at least one of said at least one failed circuit has at least one delay parameter.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A method for restoring failed circuits within a communication network, comprising the steps of:
<claim-text>identifying at least one failed circuit,</claim-text>
<claim-text>determining service priority of said failed circuit,</claim-text>
<claim-text>obtaining a priority list of other circuits waiting to be restored,</claim-text>
<claim-text>calculating the priority of said failed circuit with respect to other circuits on said list, and</claim-text>
<claim-text>inserting said failed circuit in said priority list and activating at least one restoration procedure for said failed circuit,</claim-text>
<claim-text>wherein if the service priority of said failed circuit is low, then adding at least one delay parameter in the restoration procedure.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. A method for restoring failed circuits within a communication network, comprising the steps of:
<claim-text>(a) detecting loss of service on at least one link,</claim-text>
<claim-text>(b) advertising failure of said at least one link,</claim-text>
<claim-text>(c) identifying at least one failed circuit on said link,</claim-text>
<claim-text>(d) determining service priority of said at least one failed circuit,</claim-text>
<claim-text>(e) de-allocating resources held by each circuit on said link</claim-text>
<claim-text>(f) calculating delay for each circuit on said link, and</claim-text>
<claim-text>(g) sending at least one message to each source and/or destination of each circuit with recommended delay for each of said failed circuit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the delay for each circuit is calculated based on the service priority of said failed circuit.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. A method for triggering a schedule for restoration of failed circuits within a communication network, comprising the steps of:
<claim-text>identifying at least one failed circuit,</claim-text>
<claim-text>determining service priority of said failed circuit,</claim-text>
<claim-text>obtaining a priority list of other circuits waiting to be restored,</claim-text>
<claim-text>calculating priority of said failed circuit with respect to other failed circuits on said list, and</claim-text>
<claim-text>inserting said failed circuit in said priority list and activating at least one restoration procedure for the restoration of said failed circuit,</claim-text>
<claim-text>wherein if the service priority of said failed circuit is low, then adding at least one delay parameter in the restoration procedure of said failed circuit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. A method in which failed circuits within a communication network are inserted into a prioritized list for restoration and are thereafter restored based on their position in the list, the method comprising delaying the insertion of at least an identified one of said failed circuits into the list, said failed circuit being identified based on at least one criterion.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The method of <claim-ref idref="CLM-00020">claim 20</claim-ref> wherein said criterion is that said failed circuit belongs to a particular class of circuits.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref> wherein the amount of delay depends on which of a plurality of classes of circuits said failed circuit belongs to.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The method of <claim-ref idref="CLM-00021">claim 21</claim-ref> wherein said particular class of circuits comprises circuits that have a lower priority than other circuits within said communication network.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The method of <claim-ref idref="CLM-00020">claim 20</claim-ref> wherein the amount of delay is determined individually for said failed circuit.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The method of <claim-ref idref="CLM-00020">claim 20</claim-ref> wherein said method is performed by a switch within said network that was the source switch of said failed circuit.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The method of <claim-ref idref="CLM-00025">claim 25</claim-ref> wherein the amount of delay is contained in a release message received by said source switch.</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The method of <claim-ref idref="CLM-00025">claim 25</claim-ref> wherein the amount of delay is based on the number of circuits sourced at said source switch.</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The method of <claim-ref idref="CLM-00020">claim 20</claim-ref> wherein said network comprises a plurality of switches, wherein said method is performed by one of said switches, and wherein the amount of delay is a function of which of said plurality of switches is performing said method.</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. The method of <claim-ref idref="CLM-00020">claim 20</claim-ref> wherein said network comprises a plurality of switches, wherein an individual one of said switches determines the amount of delay and sends a message containing the determined delay to at least a switch within said network that was the source switch of said failed circuit, and wherein said method is performed by said source switch.</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. The method of <claim-ref idref="CLM-00029">claim 29</claim-ref> wherein said individual one of said switches is a switch adjacent to the failure of said failed circuit and wherein said message is release message.</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. A method for use in a communication network that comprises switches interconnected by links, at least ones of said links having respective circuits thereon, the method comprising detecting that at least one of said links has failed, and initiating the restoration of failed circuits that were on the failed link, the restoration of at least one of said failed circuits being delayed by at least a selected amount of delay, wherein the amount of said delay depends on which one of a plurality of classes of circuits said failed circuit belongs to.</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. The method of <claim-ref idref="CLM-00031">claim 31</claim-ref> wherein said one of said classes of circuits comprises circuits that have a lower priority than other circuits within said communication network.</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. A method for use in a communication network that comprises switches interconnected by links, at least ones of said links having respective circuits thereon, the method comprising detecting that at least one of said links has failed, and initiating the restoration of failed circuits that were on the failed link, the restoration of at least one of said failed circuits being delayed by at least a selected amount of delay, wherein the amount of said delay is determined individually for said failed circuit.</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. The method of <claim-ref idref="CLM-00031">claim 31</claim-ref> wherein said method is performed by a switch within said network that was the source switch of said failed circuit.</claim-text>
</claim>
<claim id="CLM-00035" num="00035">
<claim-text>35. The method of <claim-ref idref="CLM-00034">claim 34</claim-ref> wherein the amount of said delay is contained in a release message arriving at said source switch.</claim-text>
</claim>
<claim id="CLM-00036" num="00036">
<claim-text>36. The method of <claim-ref idref="CLM-00034">claim 34</claim-ref> wherein the amount of said delay is based on the number of circuits sourced at said source switch.</claim-text>
</claim>
<claim id="CLM-00037" num="00037">
<claim-text>37. The method of <claim-ref idref="CLM-00031">claim 31</claim-ref> wherein said network comprises a plurality of switches, wherein said method is performed by one of said switches, and wherein the amount of said delay is a function of which of said plurality of switches is performing said method.</claim-text>
</claim>
<claim id="CLM-00038" num="00038">
<claim-text>38. The method of <claim-ref idref="CLM-00031">claim 31</claim-ref> wherein said network comprises a plurality of switches, wherein an individual one of said switches determines the amount of said delay and sends a message containing the determined delay to at least a switch that was a source switch of said failed circuit, and wherein said method is performed by said source switch.</claim-text>
</claim>
<claim id="CLM-00039" num="00039">
<claim-text>39. The method of <claim-ref idref="CLM-00038">claim 38</claim-ref> wherein said individual one of said switches is a switch adjacent to the failure of said failed circuit and wherein said message is release message.</claim-text>
</claim>
<claim id="CLM-00040" num="00040">
<claim-text>40. Apparatus for use in a communication network through which a plurality of circuits have been established, the apparatus being adapted to
<claim-text>receive indications that particular ones of said circuits have failed, and</claim-text>
<claim-text>initiate a restoration for at least ones of said failed circuits,</claim-text>
<claim-text>the apparatus being further adapted to ensure that, for each of particular identified ones of said failed circuits, there is at least a predetermined amount of delay between a) the receipt of the indication that that circuit had failed and b) initiation of the restoration of that failed circuit,</claim-text>
<claim-text>the apparatus being further adapted to identify said failed circuit based on its belonging to a particular class of circuits.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00041" num="00041">
<claim-text>41. The invention of <claim-ref idref="CLM-00040">claim 40</claim-ref> wherein the amount of said delay depends on said particular class of circuits.</claim-text>
</claim>
<claim id="CLM-00042" num="00042">
<claim-text>42. The invention of <claim-ref idref="CLM-00040">claim 40</claim-ref> wherein said particular class of circuits comprises circuits that have a lower priority than other circuits within said communication network.</claim-text>
</claim>
<claim id="CLM-00043" num="00043">
<claim-text>43. The invention of <claim-ref idref="CLM-00040">claim 40</claim-ref> wherein the amount of said delay is determined individually for said failed circuit.</claim-text>
</claim>
<claim id="CLM-00044" num="00044">
<claim-text>44. The invention of <claim-ref idref="CLM-00040">claim 40</claim-ref> wherein said apparatus is further adapted to be a source switch in said communication network.</claim-text>
</claim>
<claim id="CLM-00045" num="00045">
<claim-text>45. The invention of <claim-ref idref="CLM-00044">claim 44</claim-ref> wherein said apparatus is further adapted to determine the amount of said delay based on the number of circuits sourced thereat.</claim-text>
</claim>
<claim id="CLM-00046" num="00046">
<claim-text>46. The invention of <claim-ref idref="CLM-00040">claim 40</claim-ref> wherein said apparatus is further adapted to determine the amount of said delay from a received release message.</claim-text>
</claim>
</claims>
</us-patent-grant>
