<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298293-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298293</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11436259</doc-number>
<date>20060518</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>03</class>
<subclass>M</subclass>
<main-group>5</main-group>
<subgroup>02</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>341 56</main-classification>
</classification-national>
<invention-title id="d0e43">Method for encoding data</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5486828</doc-number>
<kind>A</kind>
<name>Mikami</name>
<date>19960100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>341 59</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6559980</doc-number>
<kind>B1</kind>
<name>Joffe</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358442</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6912646</doc-number>
<kind>B1</kind>
<name>Khu</name>
<date>20050600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711219</main-classification></classification-national>
</citation>
</references-cited>
<number-of-claims>18</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>341 59</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>341 95</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>341106</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>341 56</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>341 57</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>360 40</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>21</number-of-drawing-sheets>
<number-of-figures>42</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60687604</doc-number>
<kind>00</kind>
<date>20050603</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20060273935</doc-number>
<kind>A1</kind>
<date>20061207</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Narayanan</last-name>
<first-name>Sarukkai R.</first-name>
<address>
<street>3121 N. Harvey Pkwy.</street>
<city>Oklahoma City</city>
<state>OK</state>
<postcode>73118</postcode>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Dunlap, Codding &amp; Rogers, P.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<last-name>Narayanan</last-name>
<first-name>Sarukkai R.</first-name>
<role>04</role>
<address>
<city>Oklahoma City</city>
<state>OK</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Young</last-name>
<first-name>Brian</first-name>
<department>2819</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method for encoding data includes a super cooling process wherein an input stream is manipulated, encoded and summarized to form entities that represent the input stream in a different form in super cooled sets. The super cooled sets can be used for example for the transmission and/or storage of the information contained within the input stream.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="102.95mm" wi="81.11mm" file="US07298293-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="186.69mm" wi="120.73mm" file="US07298293-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="221.23mm" wi="165.44mm" file="US07298293-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="216.15mm" wi="150.54mm" orientation="landscape" file="US07298293-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="171.79mm" wi="41.49mm" file="US07298293-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="222.33mm" wi="139.28mm" orientation="landscape" file="US07298293-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="202.69mm" wi="115.91mm" file="US07298293-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="217.59mm" wi="128.86mm" file="US07298293-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="225.13mm" wi="138.18mm" file="US07298293-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="220.13mm" wi="200.74mm" orientation="landscape" file="US07298293-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="145.46mm" wi="83.31mm" file="US07298293-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="227.16mm" wi="150.88mm" file="US07298293-20071120-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="227.33mm" wi="123.27mm" file="US07298293-20071120-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="204.39mm" wi="159.43mm" file="US07298293-20071120-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="141.05mm" wi="53.34mm" file="US07298293-20071120-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="178.39mm" wi="161.63mm" file="US07298293-20071120-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="223.69mm" wi="160.87mm" file="US07298293-20071120-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="112.18mm" wi="138.35mm" file="US07298293-20071120-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="194.06mm" wi="141.14mm" file="US07298293-20071120-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="222.33mm" wi="141.14mm" file="US07298293-20071120-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="221.15mm" wi="159.68mm" file="US07298293-20071120-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="75.35mm" wi="166.79mm" file="US07298293-20071120-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">The present application claims priority to the provisional application identified by the U.S. Ser. No. 60/687,604, filed on Jun. 3, 2005, the entire content of which is hereby expressly incorporated herein by reference.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT</heading>
<p id="p-0003" num="0002">Not applicable.</p>
<heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0004" num="0003">In general, data encoding involves the process of representing information using fewer data units or bits than a more direct representation would require. While various algorithms and techniques have been developed for encoding data, there is a continuing need for an effective and readily implemented encoding method. It is to such methods, and systems implementing the same, that the present invention is directed.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 1</figref> shows a block diagram of a system for encoding data, which is constructed in accordance with the present invention.</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 2</figref> shows a flow chart illustrating a general method for encoding data in accordance with the present invention.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 3</figref> is a flow chart illustrating one embodiment of a method for encoding data in accordance with the present invention.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIGS. 4A-4Y</figref> cooperate to illustrate the method for encoding data for an exemplary input stream, more particularly.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 4A</figref> shows an exemplary input stream.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 4B</figref> shows an exemplary rippled input stream.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 4C</figref> shows an exemplary rotated rippled input stream generated in the formation of an exemplary source stream.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 4D</figref> shows the rotated rippled input stream of <figref idref="DRAWINGS">FIG. 4C</figref> with an added end droplet so as to form the exemplary source stream.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 4E</figref> shows a formation of an exemplary encoded source stream from the source stream of <figref idref="DRAWINGS">FIG. 4D</figref>.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 4F</figref> shows a formation of an exemplary series of source pucks from the exemplary encoded source stream of <figref idref="DRAWINGS">FIG. 4E</figref>.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 4G</figref> shows the series of source pucks from <figref idref="DRAWINGS">FIG. 4F</figref>.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 4H</figref> shows an exemplary rotated duplicate rippled stream generated in the formation of an exemplary reverse stream.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 4I</figref> shows an exemplary reversed, rotated duplicate rippled stream generated in the formation of the exemplary reverse stream.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 4J</figref> shows the reversed, rotated duplicate rippled stream of <figref idref="DRAWINGS">FIG. 4I</figref> with an added end droplet so as to form the exemplary reverse stream.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 4K</figref> shows a formation of an exemplary encoded reverse stream from the reverse stream of <figref idref="DRAWINGS">FIG. 4J</figref>.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 4L</figref> shows a formation of an exemplary series of reverse pucks from the exemplary encoded reverse stream of <figref idref="DRAWINGS">FIG. 4K</figref>.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 4M</figref> shows the series of reverse pucks from <figref idref="DRAWINGS">FIG. 4L</figref>.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 4N</figref> shows an exemplary first group formed from a portion of the series of source pucks of <figref idref="DRAWINGS">FIG. 4G</figref> and a portion of the series of reverse pucks of <figref idref="DRAWINGS">FIG. 4M</figref></p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 4O</figref> shows an exemplary second group formed from a portion of the series of source pucks of <figref idref="DRAWINGS">FIG. 4G</figref> and a portion of the series of reverse pucks of <figref idref="DRAWINGS">FIG. 4M</figref>.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 4P</figref> shows an exemplary first group bubble formed from the first group of <figref idref="DRAWINGS">FIG. 4N</figref>.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 4Q</figref> shows an exemplary set of gum drop pairs formed from the first group bubble of <figref idref="DRAWINGS">FIG. 4P</figref>.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 4R</figref> shows an exemplary set of gum drop pair types and counts for odd and even gum drop pairs of <figref idref="DRAWINGS">FIG. 4Q</figref>.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 4S</figref> shows an exemplary set of adjacent gum drop pairs formed from the first group bubble of <figref idref="DRAWINGS">FIG. 4P</figref>, and an exemplary set of adjacent gum drop pairs types and counts for the adjacent gum drop pairs.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 4T</figref> shows an exemplary super cooled set for the first group of <figref idref="DRAWINGS">FIG. 4N</figref>.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 4U</figref> shows an exemplary second group bubble formed from the second group of <figref idref="DRAWINGS">FIG. 4O</figref>.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 4V</figref> shows an exemplary set of gum drop pairs formed from the second group bubble of <figref idref="DRAWINGS">FIG. 4U</figref>.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 4W</figref> shows an exemplary set of gum drop pair types and counts for odd and even gum drop pairs of <figref idref="DRAWINGS">FIG. 4V</figref>.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 4X</figref> shows an exemplary set of adjacent gum drop pairs formed from the second group bubble of <figref idref="DRAWINGS">FIG. 4U</figref>, and an exemplary set of adjacent gum drop pairs types and counts for the adjacent gum drop pairs.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 4Y</figref> shows an exemplary super cooled set for the second group of <figref idref="DRAWINGS">FIG. 4O</figref>.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 5</figref> shows a flow chart illustrating one embodiment of an encoding subroutine for forming the series of source pucks in accordance with the present invention.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 6</figref> shows one embodiment of a two tier encoding scheme.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 7</figref> shows a flow chart illustrating one embodiment of an encoding subroutine for forming the series of reverse pucks in accordance with the present invention.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 8</figref> shows an exemplary first group and an exemplary second group having two inversion duets.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 9</figref> shows a flow chart illustrating one embodiment of a grouping subroutine for forming the first group and second group in accordance with the present invention.</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 10</figref> shows a summarization subroutine for the gum drop pairs of the first group.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 11</figref> shows a summarization subroutine for the gum drop pairs of the second group.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 12A</figref> shows a formation of an exemplary lock component and an exemplary key component for the first group in accordance with the present invention.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 12B</figref> shows an exemplary combination applied to the lock component and the key component of <figref idref="DRAWINGS">FIG. 12A</figref>, and the resulting set of adjacent gum drop pair types and count for the first group.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 13</figref> shows a block diagram illustrating a frame constructed in accordance with the present invention.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 14</figref> shows an exemplary first group and second group having mirrored pucks.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 15</figref> shows a double helix structure associated with an exemplary subset of duets of the present invention.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 16A-16B</figref> cooperate to show application of one embodiment of a transformation process to the subset of duets of <figref idref="DRAWINGS">FIG. 20</figref>, more particularly:</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 16A</figref> shows the transformation of the subset of duets into DNA pairs. <figref idref="DRAWINGS">FIG. 16B</figref> shows a flow chart illustrating the transformation process and the transformation of an exemplary first duet as the transformation process is applied.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0048" num="0047">The term “encoding”, and derivations thereof, as used herein generally refers to the process by which a set of data units are represented in a different form, for example for the purpose of storing or transmitting the data units; and the term “decoding”, and derivations thereof, as used herein generally refers to the process of restoring a compressed set of data units to its normal or original form, for example for the purpose of processing, displaying or otherwise using the data units.</p>
<p id="p-0049" num="0048">Referring now to the drawings, and in particular to <figref idref="DRAWINGS">FIGS. 1 and 2</figref>. Shown in <figref idref="DRAWINGS">FIG. 1</figref> and designated therein by a reference numeral <b>10</b> is a system for data encoding, and shown in <figref idref="DRAWINGS">FIG. 2</figref> is a general method for data encoding which is preformed by the system <b>10</b>.</p>
<p id="p-0050" num="0049">The novel encoding process of the present invention is referred to herein by the Applicant by the term “super cooling”. In general, during the super cooling process, a stream of data units, which is referred to herein as an “input stream”, is manipulated, encoded and summarized to form entities that represent the input stream in a different form. This representative form of the original input stream is referred to herein as “super cooled sets”. The super cooled sets can be used for example for the transmission and/or storage of the information contained within the input stream.</p>
<p id="p-0051" num="0050">In one embodiment, the system <b>10</b> includes a control unit <b>18</b>. The control unit <b>18</b> can be any computational device capable of executing the super cooling process or logic. In one embodiment, the control unit <b>18</b> executes a super cooling program contained in a storage device <b>20</b>. The storage device <b>20</b>, which can be for example a read-only memory device, stores the program code and commands required for operation by the control unit <b>18</b> in performing the super cooling process on the input stream. Alternately, the super cooling process may be incorporated into the control unit <b>18</b> itself.</p>
<p id="p-0052" num="0051">With reference now to <figref idref="DRAWINGS">FIG. 3</figref>, the operation of the control unit <b>18</b>, i.e., the performing of the super cooling process, will now be described. At a step <b>20</b>, the control unit <b>18</b> receives or reads the input stream. The input stream comprises a plurality of sequential binary data units or bits, i.e. 1's and 0's. The individual data units of the input stream are generally referred to herein by the Applicant by the term “droplets.” For example, shown in <figref idref="DRAWINGS">FIG. 4A</figref> is an exemplary input stream which is used herein for purposes of discussion and clarity of understanding, and to illustrate the various steps of the super cooling process to achieve the final super cooled sets (as shown in <figref idref="DRAWINGS">FIGS. 4B-4Y</figref>). For the exemplary input stream of <figref idref="DRAWINGS">FIG. 4A</figref>, there are forty-four droplets.</p>
<p id="p-0053" num="0052">Once the input stream is received, the control unit <b>18</b> branches to a step <b>22</b> where the length of the input stream is analyzed, and lengthened if needed. To perform the super cooling process of the present invention, though not mandatory, it is advantageous for the total number of droplets or length of the input stream to be an odd multiple of the number four (e.g., 3×4=12, 5×4=20, 11×4=44, etc.). Therefore, if the input stream does not have a length that is an odd multiple of the number four, in the step <b>22</b> one or more data units or binary streams which Applicant refers to herein as “padding droplets,” or collectively as “after spray,” are concatenated or added to the end of the input stream to meet this requirement. The values of the padding droplets are arbitrary, however the padding droplets have to be identified as being extraneous to the input stream. For purposes of discussion and clarity of understanding, any padding droplets that are added to the input stream are considered as part of the input stream in the discussion that follows. (Note that in the example shown in <figref idref="DRAWINGS">FIG. 4A</figref>, the exemplary input stream contains forty-four droplets which is an odd multiple of four, and thus no padding droplets are required.)</p>
<p id="p-0054" num="0053">Within the input stream, there is the possibility that there will be a sequence of consecutive droplets which are repeated, i.e., which have the same value. When there is a sequence of greater than three droplets of the same value, the sequence is referred to herein as a “run.” Runs can negatively affect the super cooling process of the present invention by causing ambiguities and anomalies. As such, it is desirable to break up any runs that may exist in the input stream. Therefore, after the step <b>22</b>, the control unit <b>18</b> branches to a step <b>24</b>, wherein additional droplets are introduced into the input stream in a pre-determined sequence. This step <b>24</b> is referred to herein by the Applicant as “rippling” (or derivations thereof) and the additional droplets are referred to herein as “ripple droplets.” Rippling of the input stream forms what is referred to herein as a “rippled input stream.”</p>
<p id="p-0055" num="0054">There are different ways to perform the rippling step <b>24</b>. In one embodiment, the rippling step <b>24</b> comprises introducing a ripple droplet after each consecutive input stream droplet, except the last droplet, wherein the ripple droplets are alternated in value as each ripple droplet is inserted into the input stream. In such an embodiment, the rippling can be either “0-1 rippling” or “1-0 rippling.” For 0-1 rippling, the first ripple droplet introduced is a zero, the second ripple droplet is a one, the third ripple droplet is a zero, and so on. For 1-0 rippling, the first ripple droplet introduced into the input stream is a one, the second ripple droplet is a zero, the third ripple droplet is a one, and so on.</p>
<p id="p-0056" num="0055">For example, shown in <figref idref="DRAWINGS">FIG. 4B</figref> is the exemplary input stream of <figref idref="DRAWINGS">FIG. 4A</figref> with 0-1 rippling, which results in eighty-seven droplets. The first four ripple droplets in the rippled input stream of <figref idref="DRAWINGS">FIG. 4B</figref> are indicated by a downward arrow over each ripple droplet for purposes of illustration.</p>
<p id="p-0057" num="0056">Once the rippled input stream is achieved, the control unit <b>18</b> branches to a step <b>28</b>, wherein a duplicate of the rippled input stream is generated, which is referred to herein by the Applicant by the term “duplicate rippled stream”.</p>
<p id="p-0058" num="0057">At this point, the rippled input stream and the duplicate rippled stream are each provided as an input to different sets of logic. The rippled input stream will be discussed first for purposes of clarity of understanding. However, it should be understood that the logic for the rippled input stream and the logic for the duplicate rippled stream can be performed in any order or simultaneously. In other words, it should be understood that various steps of the super cooling process that lend themselves to be performed in other orders or in parallel can be implemented as such to shorten the execution time of the present invention.</p>
<p id="p-0059" num="0058">For the rippled input stream, the control unit <b>18</b> branches to a step <b>32</b> wherein the rippled input stream is “rotated to the right” such that each of the droplets in the rippled input stream is shifted a position to the right, and the right-most droplet is looped to or deposited in the left-most position which is vacated. In one preferred embodiment, the rippled input stream is rotated to the right by N+1 droplets, where N is the total number of droplets in the input stream (including any padding droplets). As such, it can be seen that the relative ordering of the droplets is generally preserved, however the start (or first) droplet and the end (or last) droplet in the stream are different. For example, shown in <figref idref="DRAWINGS">FIG. 4C</figref> is the exemplary rippled input stream of <figref idref="DRAWINGS">FIG. 4B</figref> rotated to the right by 44+1 or 45 droplets.</p>
<p id="p-0060" num="0059">The control unit <b>18</b> then branches to a step <b>34</b>, wherein a final end droplet is added to the end of the rotated rippled input stream so as to form an even number of droplets. In one embodiment, the final end droplet is set equal to the first droplet of the rotated rippled input stream to make the total count of droplets even. For example, shown in <figref idref="DRAWINGS">FIG. 4D</figref> is the rotated rippled input stream of <figref idref="DRAWINGS">FIG. 4C</figref> with the final end droplet having a value of “0” added at the end. The resulting stream of the steps <b>32</b> and <b>34</b> is referred to herein as a “source stream.”</p>
<p id="p-0061" num="0060">It should be understood that while the super cooling process is described in one embodiment as “rotating” droplets when forming the source stream, the source stream can be equivalently generated by defining a starting offset at which to begin forming the source stream from the droplets of the rippled input stream. If the first droplet in the rippled input stream is considered to have an offset of zero, then the starting offset should be defined to be N−2, where N is the length of the input stream (including any padding droplets). For example, for the rippled input stream of <figref idref="DRAWINGS">FIG. 4B</figref>, the starting offset would be defined as 44−2 or 42. Therefore, the droplet at offset <b>42</b> (with the first droplet of the rippled input stream being at offset zero) would be the first droplet of the source stream. Then the succeeding droplets of the rippled input stream would be put in the source stream until the end of the rippled input stream is reached, and then continue on to the beginning of the rippled input stream until the droplet at offset <b>41</b> is reached. Then the final end droplet can be added to the end so as to form an even number of droplets in the source stream.</p>
<p id="p-0062" num="0061">Once the source stream is generated in the steps <b>32</b> and <b>34</b>, the control unit <b>18</b> branches to an encoding subroutine, which shown in <figref idref="DRAWINGS">FIG. 3</figref> as a step <b>36</b>, wherein the droplets of the source stream are formed into representative entities referred to herein by the Applicant by the term “pucks” or “drop pairs”. Because the pucks are formed from the source stream at this point, the pucks are more specifically referred to herein by the Applicant by the term “source pucks.”</p>
<p id="p-0063" num="0062">For purposes of clarity of understanding the scheme for formation of the pucks, an interim step is gone through in the encoding subroutine <b>36</b>. The encoding subroutine <b>36</b> is shown in more detail in <figref idref="DRAWINGS">FIG. 5</figref>. In a step <b>40</b> of the encoding subroutine <b>36</b>, the control unit <b>18</b> takes two consecutive (side-by-side) and unique droplets in the source stream to form a pairing which is referred to herein as a “drop”, and then assigns to each drop a predetermined symbol according to the values of the droplets in the drop. The plurality of encoded drops collectively form an encoded source stream comprising a plurality of symbols which represent the droplets of the source stream.</p>
<p id="p-0064" num="0063">The collective group of predetermined symbols used to encode the drops of the source stream are referred to herein as a “drop code.” Since the drops are formed from two consecutive droplets and the droplets are binary in nature, there are four possible drop combinations: 00, 01, 10, and 11. In one embodiment, the first four letters of the alphabet are the predetermined symbols, wherein the letter “A” is assigned to a drop having the value 00; the letter “B” is assigned to a drop having the value 01; the letter “C” is assigned to a drop having the value 10; and the letter “D” is assigned to a drop having the value 11.</p>
<p id="p-0065" num="0064">For example, shown in <figref idref="DRAWINGS">FIG. 4E</figref> is the source stream of <figref idref="DRAWINGS">FIG. 4D</figref> wherein the droplets of the source stream have been paired in groups of two to form drops (as indicated by a horizontal line under each drop) and then the encoded source stream resulting from application of the drop code to each fo the drops (wherein each resulting encoded drop is indicated by a vertical down arrow under its corresponding drop). The source stream is thereby converted from a binary stream to a quad stream.</p>
<p id="p-0066" num="0065">While the predetermined symbols of the drop code have been described herein as being A, B, C, and D by way of illustration, it should be understood by those skilled in the art that this particular designation is arbitrary and that any distinct letter or other symbol may be chosen to represent one of the four drop combinations. For example, the letters W, X, Y, Z; the letters A, C, G, T; the letters P, M, C, Q; the letters G, K, A, R; etc., could be used to represent the four drop combinations.</p>
<p id="p-0067" num="0066">Also, the present invention contemplates the utilization of two equivalent types of encoding: “single tier” encoding and “two tier” encoding. It can be seen that the droplets of the rippled input stream can be assigned as an “even” droplet or an “odd” droplet, depending on its position in the data stream. For example, if the first or leftmost droplet is considered an even droplet, the next consecutive droplet would be an odd droplet, and the next consecutive droplet would be an even droplet, and so on. When the rippled input stream's even and odd droplets are taken together in one sequential series, or in one tier, when applying the drop code, as generally discussed above, the encoding is termed herein by the Applicant as single tier encoding. However, when the rippled input stream's even and odd droplets are separated into two series or tiers before applying the drop code, the encoding process is termed herein by the Applicant as two tier encoding.</p>
<p id="p-0068" num="0067">To encode the two tiers, the drops are still formed by taking one even droplet and one odd droplet (from the first and second tiers, respectively). However, two letters are assigned to each possible combination of droplets, i.e., 00, 01, 10, and 11. Then which of the two letters to be assigned to a droplet is dependent on whether the encoding is being performed on the first tier or the second tier. For example, shown in <figref idref="DRAWINGS">FIG. 6</figref> and taking the exemplary drop code discussed above of A, B, C and D, the possible combinations for two tier encoding is given. The first tier is encoded by assigning the value “00” (given by a “0” even droplet from the first tier and a “0” odd droplet from the second tier) the letter “A”; while for encoding the second tier, the value “00” is assigned the letter “D”. For encoding the first tier, the value “01” (given by a “0” even droplet from the first tier and a “1” odd droplet from the second tier) is assigned the letter “B”; while for encoding the second tier, the value “01” is assigned the letter “C”. For encoding the first tier, the value “10” (given by a “1” even droplet from the first tier and a “0” odd droplet from the second tier) is assigned the letter “C”; while for encoding the second tier, the value “10” is assigned the “B”. For encoding the first tier, the value “11” (given by a “1” even droplet from the first tier and a “1” odd droplet from the second tier) is assigned the letter “D”; while for encoding the second tier, the value “11” is assigned the letter “A”.</p>
<p id="p-0069" num="0068">As shown in <figref idref="DRAWINGS">FIG. 5</figref>, once the source code has been encoded, the control unit <b>18</b> branches to a step <b>42</b> of the encoding subroutine <b>36</b>. In the step <b>42</b>, the plurality of symbols of the encoded source stream are then paired to form a series of source pucks. As a result of the pairing, each source puck includes two consecutive symbols or drops of the encoded source stream. However, the symbols are not unique to only one source puck. The series of source pucks include overlapping symbols between adjacent source pucks in that a succeeding source puck in the series of source pucks will included as its first (or left) drop the second (or right) drop of a preceding source puck; and each preceding source puck will include as its second (or right) drop the first (or left) drop of a succeeding source puck. Thus, it can be seen that the first puck in the series of source pucks (which does not succeed another source puck) will only have one “overlapping” drop (its right drop) with one other source puck in the series of source pucks; and the last puck in the series of source pucks (which does not precede another source puck) will only have one “overlapping” drop (its left drop) with one other source puck in the series of source pucks.</p>
<p id="p-0070" num="0069">For example, shown in <figref idref="DRAWINGS">FIG. 4F</figref> is the encoded source stream of <figref idref="DRAWINGS">FIG. 4E</figref> wherein the encoded drops of the encoded source stream have been paired to form source pucks (as indicated by alternating horizontal lines below the pairings of encoded drops). The source pucks are further identified in <figref idref="DRAWINGS">FIG. 4F</figref> by an alphanumeric identifier having the prefix “SP” located under each source puck. Also, for purposes of further discussion herein, each of the source pucks of <figref idref="DRAWINGS">FIG. 4F</figref>, and its corresponding alphanumeric identifier, is shown in series in <figref idref="DRAWINGS">FIG. 4G</figref>. As can be seen, the pairing step <b>42</b> of the encoding subroutine <b>36</b> should result in an odd number of source pucks.</p>
<p id="p-0071" num="0070">For the duplicate rippled stream discussed above, the control unit <b>18</b> branches to a step <b>44</b>, as shown in <figref idref="DRAWINGS">FIG. 3</figref>. In step <b>44</b>, the duplicate rippled stream is “rotated to the left” such that each of the droplets in the duplicate rippled stream is shifted a position to the left, and the left-most droplet is looped to the right-most position which is vacated. The duplicate rippled stream is rotated to the left to the same degree that the rippled input stream is rotated to the right during formation of the source stream (e.g., by N+1 droplets). For example, shown in <figref idref="DRAWINGS">FIG. 4H</figref> is the duplicate rippled stream (which is a duplicate of the rippled input stream shown in <figref idref="DRAWINGS">FIG. 4B</figref>) which is rotated to the left by 44+1 or 45 droplets.</p>
<p id="p-0072" num="0071">The control unit then branches to a step <b>46</b>, wherein the droplets of the rotated duplicate rippled stream are reversed in order. For example, shown in <figref idref="DRAWINGS">FIG. 4I</figref> is the rotated duplicate rippled stream of <figref idref="DRAWINGS">FIG. 4H</figref> which has been reversed in order. The droplets of the rotated duplicated rippled stream can be reversed in order by rotating the droplets or by defining a starting offset, in a similar manner as discussed above with reference to the source stream. The control unit <b>18</b> then branches to a step <b>48</b>, wherein a final end droplet is added to the end of the rotated and reversed duplicate rippled stream. In one embodiment, the final end droplet is equal to the first droplet of the rotated and reversed duplicate rippled stream to make the total count of droplets even. The resulting stream of the steps <b>44</b>, <b>46</b> and <b>48</b> is referred to herein as a “reverse stream.”</p>
<p id="p-0073" num="0072">Similar to the source stream, it should be understood that while the super cooling process is described in one embodiment as “rotating” droplets to form the reverse stream, the reverse stream can be equivalently generated by defining a starting offset at which to begin forming a pre-reversal stream from which the reverse stream is generated. If the first droplet in the duplicate rippled stream is considered to have an offset of zero, then the starting offset should be defined to be N+1, where N is the length of the input stream (including any padding droplets). For example, for the duplicate rippled stream which is duplicated from the rippled input stream of <figref idref="DRAWINGS">FIG. 4B</figref>, the starting offset would be defined as 44+1 or 45. Therefore, the droplet at offset <b>45</b> (with the first droplet of the duplicate rippled stream being at offset zero) would be the first droplet of the pre-reversal stream. Then the succeeding droplets of the duplicate rippled stream would be taken in reverse order and put in the reversal stream until the beginning of the duplicate rippled stream is reached, and then continue on to the end of the duplicate rippled stream until the droplet at offset <b>45</b> is reached. This accomplishes the same end result to obtain the reverse stream without the need to from the duplicate rippled stream, rotating it left and then reversing it.</p>
<p id="p-0074" num="0073">Once the reverse stream is generated in the steps <b>44</b>, <b>46</b> and <b>48</b>, the control unit <b>18</b> branches to an encoding subroutine, which is shown in <figref idref="DRAWINGS">FIG. 3</figref> as a step <b>50</b>. The encoding subroutine <b>50</b> for the reverse stream is similar to the encoding subroutine <b>36</b> discussed above with reference to the source stream. Therefore, for purposes of brevity, the encoding subroutine <b>50</b> for the reverse stream is discussed summarily below.</p>
<p id="p-0075" num="0074">For purposes of clarity of understanding the scheme for formation of the pucks, an interim step is gone through in the encoding subroutine <b>50</b>. The encoding subroutine <b>50</b> for the reverse stream is shown in more detail in <figref idref="DRAWINGS">FIG. 7</figref>. At a step <b>52</b>, the plurality of droplets of the reverse stream are paired to form drops, and each drop is assigned a predetermined symbol according to the values of the droplets in the drop so as to form an encoded reverse stream comprising a plurality of symbols. Preferably, the drop code used to form the encoded reverse stream is the same as the drop code used to form the encoded source stream (e.g. A, B, C, and D). For example, shown in <figref idref="DRAWINGS">FIG. 4K</figref> is the reverse stream of <figref idref="DRAWINGS">FIG. 4J</figref> wherein the droplets of the reverse stream have been paired to form drops (as indicated by a horizontal line under each drop) and then the encoded reverse stream resulting from application of the drop code to each of the drops (wherein each resulting encoded drop is indicated by a vertical down arrow under its corresponding drop). The reverse stream is thereby converted from a binary stream to a auad stream.</p>
<p id="p-0076" num="0075">Once the drops of the reverse stream are encoded, the control unit <b>18</b> branches to a step <b>60</b> of the encoding subroutine <b>50</b>, wherein the plurality of drops or symbols of the encoded reverse stream are paired so as to form a series of pucks in a similar manner as discussed above for the formation of the source pucks. However, since the pucks are formed from the reverse stream in the steps <b>52</b> and <b>60</b>, the pucks are specifically referred to herein by the Applicant by the term “reverse pucks.”</p>
<p id="p-0077" num="0076">Each reverse puck includes two consecutive drops of the encoded reverse stream, wherein the series of reverse pucks include overlapping drops between adjacent reverse pucks in that a succeeding reverse puck in the series of reverse pucks will include as its first (or left) drop the second (or right) drop of a preceding reverse puck, and each preceding reverse puck will include as its second (or right) drop the first (or left) drop of a succeeding reverse puck. For example, shown in <figref idref="DRAWINGS">FIG. 4L</figref> is the encoded reverse stream of <figref idref="DRAWINGS">FIG. 4K</figref> wherein the encoded drops of the reverse stream have been paired to form reverse pucks (as indicated by alternating horizontal lines under the pairings of encoded drops). The reverse pucks are further identified in <figref idref="DRAWINGS">FIG. 4L</figref> by an alphanumeric identifier having the prefix “RP” located under each reverse puck. Also, for purposes of further discussion herein, each of the reverse pucks of <figref idref="DRAWINGS">FIG. 4L</figref>, and its corresponding alphanumeric identifier, is shown in series in <figref idref="DRAWINGS">FIG. 4M</figref>. As can be seen, the pairing step <b>60</b> of the encoding subroutine <b>50</b> should also result in an odd number of reverse pucks (which is also equal to the number of source pucks in the series of source pucks).</p>
<p id="p-0078" num="0077">It should be noted that every puck in the series of source pucks shown in <figref idref="DRAWINGS">FIG. 4G</figref> has two symbols which are different from each other except generally one, which is located about the middle of the series of source pucks. The same is true for the series of reverse pucks shown in <figref idref="DRAWINGS">FIG. 4M</figref>. The source puck and the reverse puck which have two symbols that are equal or the same symbol are referred to herein by Applicant as an “inversion puck” or “middle puck.” For example, the inversion puck in <figref idref="DRAWINGS">FIG. 4G</figref> is the source puck identified by the alphanumeric identifier “SP<b>22</b>”, which has a value of CC, and the inversion puck in <figref idref="DRAWINGS">FIG. 4M</figref> is the reverse puck identified by the alphanumeric identifier “RP<b>23</b>”, which has a value of BB.</p>
<p id="p-0079" num="0078">It should be noted that while generally only one inversion puck will exist in the series of source pucks and in the series of reverse pucks, there are situations in which more than one inversion puck will exist in the series of source pucks and in the series of reverse pucks, depending on the number of droplets in the input stream. This is shown by way of example in <figref idref="DRAWINGS">FIG. 8</figref>, wherein the series of source pucks and the series of reverse pucks shown therein have been formed in the manner discussed above for another exemplary input stream, which is equivalent to only the first thirty-six droplets of the exemplary input stream shown in <figref idref="DRAWINGS">FIG. 4A</figref>.</p>
<p id="p-0080" num="0079">It can be seen in <figref idref="DRAWINGS">FIG. 8</figref> that in the series of source pucks, there are now two inversion pucks, and in the series of reverse pucks there are now two inversion pucks. To account for or anticipate for the possibility of such occurrences, the super cooling process in one embodiment assigns two pucks as inversion pucks, regardless of whether there are two pucks that have two symbols which are the same. When there are two pucks, each of which have two symbols which are the same, the two pucks are assigned as the inversion pucks. For example, in <figref idref="DRAWINGS">FIG. 8</figref>, the two inversion pucks in the series of source pucks will be the source pucks labeled as “SP<b>18</b>” and “SP<b>19</b>”, and the two inversion pucks in the series of reverse pucks will be the reverse pucks labeled as “RP<b>18</b>” and “RP<b>19</b>”. However, when only one puck exists which has two symbols which are the same, which is referred to herein as a “true inversion puck”, it is assigned as one of the inversion pucks. Then for the series of source pucks, the source puck which succeeds the true inversion puck in the series will be assigned as the second inversion puck for the series of source pucks. For the series of reverse pucks, the reverse puck which precedes the true inversion puck in the series will be assigned as the second inversion puck for the series of reverse pucks. For example, in <figref idref="DRAWINGS">FIG. 4G</figref>, the two inversion pucks will be the source puck labeled as “SP<b>22</b>” (which is the true inversion puck) and the source puck labeled as “SP<b>23</b>” which succeeds it; and in <figref idref="DRAWINGS">FIG. 4M</figref>, the two inversion pucks will be the reverse puck labeled as “RP<b>23</b>” (which is the true inversion puck) and the reverse puck labeled as “RP<b>22</b>” which precedes it.</p>
<p id="p-0081" num="0080">It can further be seen that when segments of the series of source pucks and segments of the series of reverse pucks are analyzed in a side-by-side comparison, there is a correspondence between the series of source pucks and the series of reverse pucks. In the comparison, each of the series of source pucks and the series of reverse pucks are first separated into two segments, which are referred to herein as a “top half” and a “bottom half.” The segments are generally formed about the inversion pucks. The top half of the series of source pucks includes the inversion pucks and the source pucks that precede the inversion pucks. The bottom half of the series of source pucks includes the inversion pucks and the source pucks that succeed the inversion pucks. Likewise, the top half of the series of reverse pucks includes the inversion pucks and the reverse pucks that precede the inversion puck, and the bottom half of the series of reverse pucks includes the inversion pucks and the reverse pucks that succeed the inversion pucks.</p>
<p id="p-0082" num="0081">As shown for example in <figref idref="DRAWINGS">FIG. 4N</figref>, when the top half of reverse pucks of <figref idref="DRAWINGS">FIG. 4M</figref> is grouped with the bottom half of the source pucks of <figref idref="DRAWINGS">FIG. 4G</figref> taken in reverse order so as to allow for a side-by-side comparison, it can be seen that generally each reverse puck (with the exception of the first reverse puck) in the top half of reverse pucks has a value which is the reverse of the value of a source puck located in a preceding position in the reverse ordered, bottom half of source pucks. (The precedential relationship between the reverse pucks in the top half of reverse pucks and the source pucks in the reverse ordered, bottom half of source pucks is indicated in <figref idref="DRAWINGS">FIG. 4N</figref> by slanted lines drawn therebetween). In other words, it can be seen that the symbols of each reverse puck represents binary values which are the reverse of the binary values represented by the symbols of the corresponding precedential source puck.</p>
<p id="p-0083" num="0082">Consider for example the embodiment discussed above wherein the drop code utilized to generate the source pucks and reverse pucks included the symbol A to represent the binary values 00. Those values in reverse are still 00 and therefore the symbol A would again be used to represent that reversal of values. Likewise, the symbol D represents the binary values 11. Those values in reverse are still 11 and therefore the symbol D would again be used to represent that reversal of values. However, the symbol B represents the binary values 01. Those values in reverse are now 10 and therefore a different symbol, symbol C, would be used to represent that reversal of values. Likewise, the symbol C represents the binary values 10. Those values in reverse are now 01 and therefore a different symbol, symbol B, would be used to represent that reversal of values.</p>
<p id="p-0084" num="0083">Now in the case of the pucks, if for example the reverse puck includes the symbols AD, which represents 0011 (as for RP<b>2</b>), the corresponding preceding source puck represents the reverse of those binary values which is 1100 or the symbols DA (as for SP<b>43</b>). As another example, if the reverse puck includes the symbols DC, which represents 1110 (as for RP<b>3</b>), the corresponding preceding source puck represents the reverse of those binary values, which is 0111 or the symbols BD (as for SP<b>42</b>). As yet another example, if the reverse puck includes the symbols CB, which represents 1001 (as for RP<b>4</b>), the corresponding preceeding puck represents the reverse of those binary values, which is 1001 or the symbols CB (as for SP<b>41</b>).</p>
<p id="p-0085" num="0084">Likewise, there is also a reverse correspondence between the “top half” of the source pucks and the “bottom half” of the reverse pucks taken in reverse order. In other words, when the top half of the source pucks and the bottom half of the reverse pucks taken in reverse order are grouped together and analyzed in a side-by-side comparison, a reverse correspondence exists in that the symbols of each source puck represents binary values which are the reverse of the binary values represented by the symbols of a corresponding precedential reverse puck. For example in <figref idref="DRAWINGS">FIG. 4O</figref> is the top half of source pucks of <figref idref="DRAWINGS">FIG. 4G</figref> grouped with the bottom half of the reverse pucks of <figref idref="DRAWINGS">FIG. 4M</figref> taken in reverse order. (The precedential relationship between the source pucks in the top half of source pucks and the reverse pucks in the reverse ordered, bottom half of reverse pucks is indicated in <figref idref="DRAWINGS">FIG. 4O</figref> by slanted lines drawn therebetween).</p>
<p id="p-0086" num="0085">To exploit these reverse relationships, the control unit <b>18</b> branches to a grouping subroutine, which is shown in <figref idref="DRAWINGS">FIG. 3</figref> as a step <b>64</b>, wherein the series of source pucks resulting from the step <b>36</b> and the series of reverse pucks resulting from step <b>50</b> discussed above are segmented, reordered and grouped to form a first group and a second group.</p>
<p id="p-0087" num="0086">The grouping subroutine <b>64</b> is shown in more detail in <figref idref="DRAWINGS">FIG. 9</figref>. In the grouping subroutine <b>64</b>, the control unit branches to a step <b>70</b>, wherein the inversion pucks are located within the series of source pucks by identifying at least one source puck in the series of source pucks having two symbols which are equal or the same, as discussed above. The control unit <b>18</b> then branches to a step <b>72</b>, wherein the series of source pucks are segmented generally about the inversion pucks so as to form a top segment of source pucks (also referred to herein as a “first segment”) and a bottom segment of source pucks (also referred to herein as a “second segment”). The top segment of source pucks includes the inversion pucks and all the source pucks that precede the inversion pucks in the series of source pucks. The bottom segment of source pucks includes the inversion pucks and the source pucks that succeed the inversion pucks in the series of source pucks.</p>
<p id="p-0088" num="0087">Likewise for the series of reverse pucks, the control unit <b>18</b> in a step <b>74</b> locates the one or more inversion pucks within the series of reverse pucks by identifying at least one reverse puck in the series of reverse pucks having two symbols that are equal or the same, in a manner as discussed above. The control unit <b>18</b> then branches to a step <b>76</b>, wherein the series of reverse pucks are segmented generally about the inversion pucks to form a top segment of reverse pucks (also referred to herein as a “third segment”) and a bottom segment of reverse pucks (also referred to herein as a “fourth segment”). The top segment of reverse pucks includes the inversion pucks and the reverse pucks that precede the inversion puck in the series of reverse pucks. The bottom segment of reverse pucks includes the inversion pucks and the reverse pucks that succeed the inversion pucks in the series of reverse pucks.</p>
<p id="p-0089" num="0088">Although the grouping subroutine <b>64</b> is discussed above in terms of the steps <b>70</b> and <b>72</b> and then the steps <b>74</b> and <b>76</b>, it should be understood that the steps <b>70</b> and <b>72</b> can be preformed subsequent to or simultaneously with the steps <b>74</b> and <b>76</b>.</p>
<p id="p-0090" num="0089">Once the source pucks and the reverse pucks have been segmented in the steps <b>72</b> and <b>76</b>, respectively, the control unit branches to a step <b>78</b> of the grouping subroutine <b>64</b>, wherein the top segment of reverse pucks is grouped with the bottom segment of source pucks taken in reverse order to form the first group; and the top segment of source pucks is grouped with the bottom segment of reverse pucks taken in reverse order to form the second group. (See <figref idref="DRAWINGS">FIGS. 4N and 4O</figref> for an exemplary first group and an exemplary second group, respectively, which results from the series of source pucks of <figref idref="DRAWINGS">FIG. 4G</figref> and the series of reverse pucks of <figref idref="DRAWINGS">FIG. 4M</figref>.)</p>
<p id="p-0091" num="0090">Once the first group and second group are formed in the step <b>64</b>, the control unit <b>18</b> at this point utilizes the first group and the second group as an input to different sets of logic, although the sets of logic are similar. The first group will be discussed first for purposes of clarity of understanding. However, it should be understood that the logic for the first group and the logic for the second group can be performed in any order or simultaneously.</p>
<p id="p-0092" num="0091">As shown in <figref idref="DRAWINGS">FIG. 3</figref>, after the first group is formed in step <b>64</b>, the control unit <b>18</b> branches to a step <b>82</b>, wherein the source pucks and the reverse pucks in the first group are reordered to form an ordering referred to herein as a “first group bubble.” In general, the process of reordering the source pucks and reverse pucks is referred to herein by the Applicant by the term “bubbling” or derivations thereof. To bubble the first group to form the first group bubble, the first reverse puck in the top segment of reverse pucks is assigned to a first entry of the first group bubble, followed by a plurality of entries comprising pairings of each succeeding reverse puck in the top segment of reverse pucks with its corresponding precedential source puck in the reverse ordered, bottom segment of source pucks. This operation is more specifically referred to as “Right/Left” bubbling.</p>
<p id="p-0093" num="0092">Each of the reverse relationship pairings resulting from the bubbling step <b>82</b> is referred to herein by the Applicant by the term “duet.” The final duets or last entries of the first group bubble, which includes the pairings of the inversion pucks in the top segment of reverse pucks and the inversion pucks in the reverse ordered bottom segment of source pucks, are referred to herein as “inversion duets.” For example, shown in <figref idref="DRAWINGS">FIG. 4P</figref> is an exemplary first group bubble resulting from the bubbling of the first group of <figref idref="DRAWINGS">FIG. 4N</figref> in a manner as discussed above. The first reverse puck (RP<b>1</b>) is given as BA, which is followed by a plurality of duets starting with AD-DA (RP<b>2</b>-SP<b>43</b>), DC-BD (RP<b>3</b>-SP<b>42</b>), CB-CB (RP<b>4</b>-SP<b>41</b>), and so on. The last two entries of the first group bubble are the inversion duets AB-CA (RP<b>22</b>-SP<b>23</b>) and BB-CC (RP<b>23</b>-SP<b>22</b>). (Note that the duets, as well as other combinations of pucks, are shown and discussed herein with a “-” placed therebetween for purposes of visual clarity, and the “-” generally has no other value or significance with regards thereto).</p>
<p id="p-0094" num="0093">It can be seen that the first reverse puck in the first group bubble is not paired in a duet. This first unpaired puck is referred to herein by the Applicant by the term “bubble scum.” The set of duets following the bubble scum, with the exclusion of the inversion duets, is referred to herein by the term “bubble core.”</p>
<p id="p-0095" num="0094">The adjacent pucks in adjacent duets in the bubble core in a sense “glue” the pucks together and when taken in the correct order in the bubble, substantially define the original input stream. Therefore, as part of the super cooling process, they are paired together in step <b>82</b> to form a plurality of entities referred to by the Applicant as “gum drop pairs” or “gum pucks”. In other words, the gum drop pairs are pairings of adjacent pucks in adjacent duets in the bubble core (one being a source puck from a preceding duet and one being a reverse puck from a succeeding duet). The gum drop pairs are also referred to herein by the Applicant by the terms “inner pairs.” The collective gum drop pairs are referred to herein by the Applicant as a “bubble gum set.” Because the gum drop pairs are formed only within the bubble core, it can be seen that two pucks, the first and last pucks in the bubble core, will not have an adjacent puck to be paired with to form a gum drop pair, and therefore are not part of the bubble gum set.</p>
<p id="p-0096" num="0095">For example, shown in <figref idref="DRAWINGS">FIG. 4Q</figref> is the bubble gum set comprising the gum drop pairs for the first group as determined from the first group bubble of <figref idref="DRAWINGS">FIG. 4P</figref>. The first gum drop pair of the bubble gum set shown in <figref idref="DRAWINGS">FIG. 4Q</figref> is the pairing of the adjacent pucks in the first pair of adjacent duets in the bubble core, which is DA-DC (SP<b>43</b>-RP<b>3</b>). The following gum drop pairs are BD-CB (SP<b>42</b>-RP<b>4</b>), CB-BA (SP<b>41</b>-RP<b>5</b>), and so on, and ends with the last gum drop pair of CA-BA (SP<b>25</b>-RP<b>21</b>). It can be seen that the first and last pucks in bubble core shown in <figref idref="DRAWINGS">FIG. 4P</figref>, which are AD (RP<b>2</b>) and AC (SP<b>24</b>) are not part of the bubble gum set.</p>
<p id="p-0097" num="0096">The next stage of the super cooling process performed by the control unit <b>18</b> involves a summarization technique. In the previous steps of the super cooling process discussed above, the relative order of entities has been generally maintained. In the following steps, the entities are summarized. These summation entities result in an unordered representation of at least a portion of the input stream, containing in them positional information.</p>
<p id="p-0098" num="0097">Once the first group bubble has been formed in the step <b>82</b>, the control unit <b>18</b> branches to a summarization subroutine, which is shown in <figref idref="DRAWINGS">FIG. 3</figref> as a step <b>98</b>. In general, in the summarization subroutine <b>98</b>, the gum drop pairs are summarized so as to represent the information therein in a more concise manner. To summarize the gum drop pairs, the set of gum drop pairs are evaluated to determine how many gum drop pairs contain the same sequence of drops or symbols. For each unique sequence or combination of drops within the set of gum drop pairs, which is also referred to herein as a “gum drop pair type”, a count value is assigned representing the number of gum drop pairs which contain that gum drop pair type.</p>
<p id="p-0099" num="0098">One embodiment of the summarization subroutine <b>98</b> is shown in more detail in <figref idref="DRAWINGS">FIG. 10</figref>. In a first step <b>100</b> of the summarization subroutine <b>98</b>, the gum drop pairs in the first group bubble are defined as an “odd” or “even” depending on the placement or order of the gum drop pair within the bubble gum set of the first group bubble. For example, also shown in <figref idref="DRAWINGS">FIG. 4Q</figref> next to each gum drop pair is an odd/even assignment for purposes of illustration, wherein each of the odd gum drop pairs are identified by the character “o” next to the gum drop pair, and each of the even gum drop pairs are identified by the character “e” next to the gum drop pair.</p>
<p id="p-0100" num="0099">In a step <b>102</b> of the summarization subroutine <b>98</b>, the odd set of gum drop pairs are evaluated to determine how many gum drop pairs contain the same sequence of drops or symbols, i.e., have the same gum drop pair type; and similarly the even set of gum drop pairs are evaluated to determine how many gum drop pairs have the same gum drop pair type. For each unique gum drop pair type contained within the sets of odd and even gum drop pairs, a count value is assigned representing the number of gum drop pairs which contain that gum drop pair type in both the odd set of gum drop pairs and the even set of gum drop pairs. For example, shown in <figref idref="DRAWINGS">FIG. 4R</figref> is the odd set of gum drop pairs of <figref idref="DRAWINGS">FIG. 4Q</figref> for the first group, and the unique gum drop pair types from the odd set with the count of gum drop pairs having that unique gum drop pair type. Below the odd set of gum drop pairs in <figref idref="DRAWINGS">FIG. 4R</figref> is the even set of gum drop pairs of <figref idref="DRAWINGS">FIG. 4Q</figref> for the first group, and the unique gum drop pair types from the even set with the count of gum drop pairs having that unique gum drop pair type.</p>
<p id="p-0101" num="0100">While the summarization subroutine <b>98</b> has been described above in one embodiment as defining the gum drop pairs as odd or even in step <b>100</b> and then determining gum drop pair types and counts for the odd and even set of gum drop pairs in step <b>102</b>, it should be understood that the odd/even characterization of step <b>100</b> can be dropped and the gum drop pair types and counts be determined for the collective set of gum drop pairs in step <b>102</b>.</p>
<p id="p-0102" num="0101">Also, the present invention contemplates that the gum drop pairs can be summarized and represented in a different manner. For example, it can be seen that there is a correspondence between adjacently disposed gum drop pairs in that the second or right puck (i.e., the right pair of two symbols or drops) of a preceding gum drop pair has a reverse relationship with the first or left puck (i.e., the left pair of two symbols or drops) of a succeeding gum drop pair. For example, if the right puck of the preceding gum drop pair includes the symbols DC, which represents the value 1110, the left puck of the succeeding gum drop pair includes symbols which represent the reverse of that value, 0111, which is BD.</p>
<p id="p-0103" num="0102">To utilize this relationship between adjacently disposed gum drop pairs, the summarization subroutine <b>98</b> in one embodiment further includes a step <b>104</b> which takes the gum drop pairs resulting from the step <b>82</b> for the first group bubble and represents them in a partial form, which is referred to herein by the Applicant by the term “adjacent gum drop pairs”. In general, to form each adjacent gum drop pairs in the step <b>104</b>, two consecutive and adjacently disposed gum drop pairs (one odd and one even) are taken together, which is referred to herein by the Applicant as a “fully qualified” representation of the gum drop pairs. Then, from the adjacent gum drop pairs, the repetitive information in the preceding gum drop pair is omitted. The process of removing the repetitive information in the representation of two adjacently disposed gum drop pairs is referred to herein by the Applicant as a “partially qualified” representation of gum drop pairs.</p>
<p id="p-0104" num="0103">For example, shown in <figref idref="DRAWINGS">FIG. 4S</figref> are the fully qualified adjacently disposed gum drop pairs for the first group of <figref idref="DRAWINGS">FIG. 4Q</figref>, and the resulting partially qualified adjacent gum drop pairs derived therefrom. The omitted puck in the adjacent gum drop pairs is represented by a “:” in <figref idref="DRAWINGS">FIG. 4S</figref> for purposes of illustration and clarity, however it should be understood that the “:” has no other significance in regards thereto. The three remaining pucks of the adjacent gum drop pairs is referred to herein by the Applicant as a “triplet.” However, it should be understood that each of the adjacent gum drop pairs includes information indicative of two gum drop pairs (one even and one odd), and thus is actually indicative of four pucks.</p>
<p id="p-0105" num="0104">Once the partially qualified adjacent gum drop pairs for the first group are formed in the step <b>104</b>, the control unit <b>18</b> branches to a step <b>105</b>, wherein the set of adjacent gum drop pairs are evaluated to determine any adjacent gum drop pairs which contain the same sequence of drops or symbols, in a similar manner as discussed above for the gum drop pair counts. For each unique sequence of drops in the adjacent gum drop pairs, which is referred to herein as an “adjacent gum drop pairs type”, a count value is assigned representative of the number of the adjacent gum drop pairs which contain that sequence. For example, also shown in <figref idref="DRAWINGS">FIG. 4S</figref> are the corresponding adjacent gum drop pairs types and counts for the first group.</p>
<p id="p-0106" num="0105">A final step <b>106</b> performed by the control unit <b>18</b> for the super cooling process for the first group is to derive a super cooled set for the first group, which represents a portion of the information within the original input stream in a different form containing positional information. In one embodiment, the super cooled set includes data indicative of the following elements for the first group: 1) the total number of droplets in the input stream, 2) the number of source pucks in the first group, 3) the number of reverse pucks in the first group, 4) the bubble scum puck for the first group, 5) the starting or first gum drop pair and the starting adjacent gum drop pairs in the bubble gum set for the first group, 6) the ending or last gum drop pair and ending adjacent gum drop pairs in the bubble gum set for the first group, 7) the odd and even gum drop pair types and counts 8) the adjacent gum drop pairs types and counts for the first group, 9) the inversion pucks (or duets) in the first group, and 10) the padding droplets (after spray).</p>
<p id="p-0107" num="0106">For example, shown in <figref idref="DRAWINGS">FIG. 4T</figref> is an exemplary super cooled set for the first group. (Note that element ten is not applicable in the exemplary super cooled set since the exemplary input stream from which it is derived did not have any padding droplets, and is denoted as such in <figref idref="DRAWINGS">FIG. 4T</figref> by a “N/A” for purposes of illustration. Also, the parenthetical references in <figref idref="DRAWINGS">FIG. 4T</figref> are only included for purposes of illustration and clarity.)</p>
<p id="p-0108" num="0107">In a similar manner as the first group, once the second group has been formed in the step <b>64</b>, the control unit branches to a step <b>110</b> as shown in <figref idref="DRAWINGS">FIG. 3</figref>, wherein the source pucks and the reverse pucks in the second group are reordered to form an ordering referred to herein as a “second group bubble”. Similar to the step <b>82</b> discussed above for the first group bubble, to form the second group bubble in the step <b>110</b>, the first source puck in the top segment of source pucks (or the bubble scum of the second group bubble) is followed by a plurality of pairings of each succeeding source puck in the top segment of source pucks with its corresponding precedential reverse puck in the reverse ordered, bottom segment of reverse pucks. These pairings are likewise referred to as duets, with the final pairings being inversion duets of the second group bubble. The set of duets, excluding the inversion duets, is likewise referred to as the bubble core of the second group bubble. Similarly, a pairing of adjacent pucks in adjacent duets in the bubble core of the second group bubble (one being a reverse puck from a preceding duet and one being a source puck from a succeeding duet) is likewise referred to herein by the term “inner pair,” or “gum drop pair” and the collective gum drop pairs of the second bubble group are referred to herein by the term “bubble gum set” for the second group. Again, the first and last puck in the bubble core will be unpaired and are not be used to form a gum drop pair.</p>
<p id="p-0109" num="0108">For example, shown in <figref idref="DRAWINGS">FIG. 4U</figref> is an exemplary second group bubble resulting from bubbling of the second group of <figref idref="DRAWINGS">FIG. 4O</figref> in a manner as discussed above, and shown in <figref idref="DRAWINGS">FIG. 4V</figref> is the bubble gum set comprising the gum drop pairs for the second group as determined from the second group bubble of <figref idref="DRAWINGS">FIG. 4U</figref>.</p>
<p id="p-0110" num="0109">Once the second group bubble has been formed in the step <b>110</b>, the control unit <b>18</b> branches to a summarization subroutine which is shown in <figref idref="DRAWINGS">FIG. 3</figref> as a step <b>114</b>. Once embodiment of the summarization subroutine <b>114</b> for the second group, which is similar to the summarization subroutine <b>98</b> discussed above for the first group, is shown in more detail in <figref idref="DRAWINGS">FIG. 11</figref>. In a first step <b>120</b> of the summarization subroutine <b>114</b>, the gum drop pairs in the second group bubble are defined as an “odd” or “even” depending on the placement or order of the gum drop pair within the bubble gum set of the second group bubble. For example, also shown in <figref idref="DRAWINGS">FIG. 4V</figref> next to each gum drop pair is an odd/even assignment for purposes of illustration, wherein each of the odd gum drop pairs are identified by the character “o” next to the gum drop pair, and each of the even gum drop pairs are identified by the character “e” next to the gum drop pair.</p>
<p id="p-0111" num="0110">In a step <b>122</b> of the summarization subroutine <b>114</b>, the odd set of gum drop pairs are evaluated to determine how many gum drop pairs contain the same sequence of drops or symbols, and similarly, the even set of gum drop pairs are evaluated to determine how many gum drop pairs contain the same sequence of drops or symbols. For each unique sequence of drops contained within the odd and even gum drop pairs, which is also referred to herein as a “gum drop pair type”, a count value is assigned representing the number of gum drop pairs which contain that gum drop pair type in both the odd set of gum drop pairs and the even set of gum drop pairs for the second group. For example, shown in <figref idref="DRAWINGS">FIG. 4W</figref> is the odd set of gum drop pairs of <figref idref="DRAWINGS">FIG. 4V</figref> for the second group, and the unique gum drop pair types from the odd set with the count of gum drop pairs having that unique gum drop pair type. Below the odd set of gum drop pairs in <figref idref="DRAWINGS">FIG. 4W</figref> is the even set of gum drop pairs of <figref idref="DRAWINGS">FIG. 4V</figref> for the second group, and the unique gum drop pair types from the even set with the count of gum drop pairs having that unique gum drop pair type.</p>
<p id="p-0112" num="0111">While the summarization subroutine <b>114</b> has been described above in one embodiment as defining the gum drop pairs as odd or even in step <b>120</b> and then determining gum drop pair types and counts for the odd and even set of gum drop pairs in step <b>122</b>, it should be understood that the odd/even characterization of step <b>120</b> can be dropped and the gum drop pair types and counts determined for the collective set of gum drop pairs in step <b>122</b>.</p>
<p id="p-0113" num="0112">Similar to the summarization subroutine <b>98</b> discussed above for the first group, the summarization subroutine <b>114</b> for the second group in one embodiment includes a step <b>124</b> wherein adjacent gum drop pairs are formed from the gum drop pairs of the second group. Then once the adjacent gum drop pairs for the second group are formed, the control unit <b>18</b> branches to a step <b>126</b> wherein the set of adjacent gum drop pairs are evaluated to determine the adjacent gum drop pairs types and counts for the second group. For example, shown in <figref idref="DRAWINGS">FIG. 4X</figref> are the resulting fully and partially qualified adjacent gum drop pairs for the second group of <figref idref="DRAWINGS">FIG. 4V</figref>, and the corresponding adjacent gum drop pairs types and counts.</p>
<p id="p-0114" num="0113">As shown in <figref idref="DRAWINGS">FIG. 3</figref>, a final step <b>128</b> performed by the control unit <b>18</b> for the super cooling process for the second group is to derive a super cooled set for the second group, which represents a portion of the information within the original input stream in a different form, containing positional information, in a similar manner as discussed above in step <b>106</b> for the first group. In one embodiment, the super cooled set includes data indicative of the following elements for the second group: 1) the total number of droplets in the input stream, 2) the number of source pucks in the second group, 3) the number of reverse pucks in the second group, 4) the bubble scum puck for the second group, 5) the starting or first gum drop pair and the starting adjacent gum drop pairs in the bubble gum set for the second group, 6) the ending or last gum drop pair and the ending adjacent gum drop pairs in the bubble gum set for the second group, 7) the odd and even gum drop pair types and counts for the second group, 8) the adjacent gum drop pairs types and counts for the second group, 9) the inversion pucks (or duets) in the second group, and 10) the padding droplets (after spray).</p>
<p id="p-0115" num="0114">For example, shown in <figref idref="DRAWINGS">FIG. 4Y</figref> is a super cooled set for the second group. (Note that element ten is not applicable in the exemplary super cooled set since the exemplary input stream from which it is derived did not have any padding droplets, and is denoted as such by a “N/A” for purposes of illustration. Also, the parenthetical references in <figref idref="DRAWINGS">FIG. 4Y</figref> are only included for purposes of illustration and clarity.)</p>
<p id="p-0116" num="0115">It should be understood that while the super cooled sets for the first and second groups have been described herein in one embodiment as including ten elements each, elements within the super cooled set for the first group and for the second group (taken individually or in combination) which lend themselves to being repetitive, redundant, or otherwise unnecessary can be omitted accordingly (however redundancy can be beneficial, such as for example for checking validity or to ensure structural consistency between super cooled sets). For example, since the number of droplets in the input stream is already provided in the super cooled set for the first group, it may be omitted from the second group. Further, elements that lend themselves to being derived from one or more other elements can likewise be omitted accordingly since such information can be obtained indirectly form the other elements. Further, while the super cooling process has been discussed in terms of generating a super cooled set for the first group and a super cooled set for the second group, it should be understood that the elements thereof may be combined together and provided in a common super cooled set in accordance with the present invention.</p>
<p id="p-0117" num="0116">Once the super cooled sets are determined for the first group and second group in the steps <b>106</b> and <b>128</b>, respectively, the control unit <b>18</b> outputs the super cooled sets so that the super cooled sets can be utilized (e.g., transmitted and/or stored).</p>
<p id="p-0118" num="0117">The super cooled sets of the present invention can be outputted in its whole form, which the Applicant refers to herein as being in an “open box mode” representation of the input stream. This is the preferred mode of representing the input stream when the information within the input stream is not sensitive to confidentiality or in the public domain. However, in instances where information is of a confidential or sensitive nature, each of the super cooled sets is “encrypted” by a method referred to herein by the Applicant by the term “lock box mode.” Because the lock box mode can be applied similarly to any super cooled set, only the super cooled set for the first group is discussed in further detail with reference to <figref idref="DRAWINGS">FIGS. 12A-12B</figref> for purposes of brevity and clarity.</p>
<p id="p-0119" num="0118">The lock box mode consists of a “lock” component <b>170</b>, a “key” component <b>172</b> and a “combination” component <b>174</b>, that when combined, provides the super cooled set in the open box mode. To “lock” the super cooled set so as put the super cooled set in the lock box mode, at least a portion of the super cooled set for the first group is divided into two parts, one of which is used for forming the lock component <b>170</b> and one of which is used for forming the key component <b>172</b>. In one embodiment, the adjacent gum drop pair types and counts of the super cooled set is the portion of the super cooled set which is divided into the two parts, as shown for example in <figref idref="DRAWINGS">FIG. 12A</figref>. The division of the adjacent gum drop pairs types and counts can be done in any manner, but are preferably divided so as to maximize bandwidth efficiency. A predetermined mathematical operation is then applied to the counts in each part, which results in the lock component <b>170</b> and the key component <b>172</b>. In one embodiment, as shown for example in <figref idref="DRAWINGS">FIG. 12A</figref>, the mathematical operations are predetermined numbers which are added to or subtracted from the adjacent gum drop pair counts.</p>
<p id="p-0120" num="0119">The combination component <b>174</b> of the lock box mode is the reverse of the mathematical operations applied to form the lock component <b>170</b> and key component <b>172</b>. Therefore it can be seen that to transform the super cooled set from the lock box mode to the open box mode, the combination component <b>174</b> (which reverses the mathematical operation for each adjacent gum drop pair count) is applied to the lock component <b>170</b> and to the key component <b>172</b>. The resulting adjacent gum drop pair counts in the lock component <b>170</b> are then combined to the resulting adjacent gum drop pairs counts in the key component <b>172</b> to obtain the full counts for the adjacent gum drop pairs of the super cooled set for the first group. For example, shown in <figref idref="DRAWINGS">FIG. 12B</figref> is the combination component <b>174</b> being applied to the lock component <b>170</b> and key component <b>172</b> of <figref idref="DRAWINGS">FIG. 12A</figref>, and the resulting super cooled set in the open box mode after the resulting adjacent gum drop pairs of the lock component <b>170</b> and the key component <b>172</b> have been combined.</p>
<p id="p-0121" num="0120">In the lock box mode, the lock component <b>170</b>, the key component <b>172</b>, and the combination component <b>174</b> are preferably transmitted and/or stored apart so that there is no indication of the input stream being represented by the super cooled set until the lock, key and combination components <b>170</b>, <b>172</b> and <b>174</b> are combined to derive the super cooled set in the open box mode. Further encryption can result from the use of multiple lock components <b>170</b>, key components <b>172</b>, and/or combination components <b>174</b>.</p>
<p id="p-0122" num="0121">While the present invention is described in one embodiment as encrypting the super cooled input stream set using the lock box mode for transmission and storage, it should be understood that the present invention contemplates that any encryption technique known in the art or later developed can be utilized during the transmission and/or storage of the super cooled input stream set in accordance with the present invention. Further, while only the adjacent gum drop pair counts have been discussed and shown by way of illustration as being modified in the lock box mode, it should be understood that the present invention contemplates that other information contained within the super cooled set can also be modified in the lock box mode.</p>
<p id="p-0123" num="0122">It should be pointed out that the encoding technique containing positional information of the present invention discussed herein is really a summation process. Counts for each entity defined is in the form similar to the number system used in every day life where counts are expressed in the units ones, tens, hundreds, thousands, etc., to represent the number of objects. This is normally recognized to be a “geometric” representation of the object counts. Therefore by inference, it should be pointed out that this method of summation leads to a “geometric” encoding of information with positional information implicit in it.</p>
<p id="p-0124" num="0123">Due to the summarization technique of the super cooling process, the present invention allows for information to be present in the encoded and un-coded formats within a frame or fixed memory space (e.g., one megabyte of storage). Along with the un-coded data in this frame, the super cooled sets may represent the en-coded data in some other frame, as shown for example in <figref idref="DRAWINGS">FIG. 13</figref>. Generally, the super cooled sets will represent the en-coded and summarized data in some other frame. Repeated super cooling of data in a frame comprising the super cooled set from the previous or last cycle performed and the non-super cooled data in the current frame (which is new data) is referred to herein by the Applicant by the term “super freezing”. This process can be repeated ad-infinitLlm to obtain a final super frozen set consisting of the first group and second group super frozen sets (which is the same as a super cooled set for the final frame) from which all the frames can be derived. In essence what is accomplished is geometric encoding of geometrically compressed information leading to infinite compression.</p>
<p id="p-0125" num="0124">In addition to the various processes described above, Applicant further presents two other phenomena observed in relation to the super cooling process of the present invention. First, it should be noted that a special case arises in step <b>32</b> of the super cooling process if the rippled input stream is rotated to the right in the formation of the source stream, and the duplicate rippled stream is rotated to the left in the formation of the reverse stream, by N positions (rather than N+1 positions). In this case, the source and reverse pucks lose their precedence relationship and exhibit a “mirrored” relationship when they are divided into the first group and second group in step <b>64</b>, wherein the source pucks and reverse pucks in the same position in the side-by-side comparison are evenly matched (with one exception in the second group: RP <b>43</b>=AA-SP<b>1</b>=CA). Pucks that are in the same position and exhibiting the mirrored relationship are referred to herein by the Applicant as “twins”.</p>
<p id="p-0126" num="0125">For example, shown in <figref idref="DRAWINGS">FIG. 14</figref> is the resulting first group and the second group when the exemplary rippled input stream of <figref idref="DRAWINGS">FIG. 4C</figref> is rotated to the right by N droplet positions and the exemplary duplicate rippled stream (which is a duplicate of the rippled input stream of <figref idref="DRAWINGS">FIG. 4B</figref>) is rotated to the left N droplet positions. The mirrored relationships are indicated by a horizontal line drawn between the reverse pucks and source pucks in <figref idref="DRAWINGS">FIG. 14</figref> for purposes of illustration.</p>
<p id="p-0127" num="0126">With regard to the second observation, it was discussed above in reference to the super cooling process that the source pucks and the reverse pucks have a precedential reverse relationship when the top half of the source pucks is compared side-by-side to the bottom half of the reverse pucks taken in reverse order, and the top half of the series of reverse pucks is compared side-by-side to the bottom half of the source pucks taken in reverse order. The precedential reverse relationship arises in that substantially each reverse puck in the top half of reverse pucks has a value which is the reverse of the value of a source puck located in a preceding position in the reverse ordered, bottom half of source pucks; and substantially each source puck in the top half of source pucks has a value which is the reverse of the value of a reverse puck in the top half of reverse pucks. By taking the duets, which are the pairs of reverse pucks and source pucks having the precedential reverse relationship, it can be seen that the duets have a double helix arrangement, similar to that seen in DNA.</p>
<p id="p-0128" num="0127">For example, shown in <figref idref="DRAWINGS">FIG. 15</figref> is a subset of duets taken from the exemplary bubble core of duets of <figref idref="DRAWINGS">FIG. 4P</figref> for the first group. Next to the subset of duets are two representations of the subset. In the leftmost representation of the subset, the reverse relationship between drops of the duets are shown by arrows drawn therebetween. The non-relationships (as between adjacent duets) are shown by the dotted lines drawn therebetween. If the arrows and the dotted lines are taken to be part of the same line, they result in a double helix, as shown in the rightmost representation of the subset. Applicant believes this phenomenon explains how the double helix nature of the DNA structure comes about.</p>
<p id="p-0129" num="0128">It is Applicant's belief that the bubble groups of the super cooling process of the present invention is the same as DNA, but in a slightly different mold. To see how the arrangement of drops from the exemplary subset of duets of <figref idref="DRAWINGS">FIG. 15</figref> relates to the double helix arrangement of DNA, a transformation process is applied to the subset of duets, as shown in <figref idref="DRAWINGS">FIGS. 16A-16B</figref> and as discussed further below. The Applicant believes that the reason for this modification is the nature of replication associated with DNA. The rightmost structure of <figref idref="DRAWINGS">FIG. 15</figref> does not lend itself to easy replication.</p>
<p id="p-0130" num="0129">Shown in <figref idref="DRAWINGS">FIG. 16A</figref> is the subset of duets in the different stages of the transformation process, as will be discussed further below with reference to <figref idref="DRAWINGS">FIG. 16B</figref>. In <figref idref="DRAWINGS">FIG. 16A</figref>, the subset of duets is shown first. Shown next thereto is a representation of a first double helix structure (as indicated by the vertical and horizontal lines) for the subset of duets after the first step of the transformation (labeled as process <b>550</b>) is applied. Then shown is a second double helix structure using a single tier encoded representation of the subset of duets using the first helix and resulting in the second helix structure from the next step of the transformation process (labeled as process <b>554</b>), followed by a two tier encoded DNA representation with the first helix and the second helix resulting from the last step of the transformation process (labeled as process <b>558</b>).</p>
<p id="p-0131" num="0130">Note that the letters “A”, “B”, “C”, and “D” are used in the DNA representation here. They map to the common DNA sequence letters “A”, “C”, “G”, and “T” although not necessarily on a one-to-one basis.</p>
<p id="p-0132" num="0131">The transformation process applied to the subset of duets is shown in a general flow diagram in <figref idref="DRAWINGS">FIG. 16B</figref>, with an example shown below wherein the first duet of the subset of duets is shown during each step of the transformation process for purposes of illustration. From the illustration of the transformation process for the first duet, one skilled in the art will understand how to apply the transformation process to the other duets.</p>
<p id="p-0133" num="0132">As shown in <figref idref="DRAWINGS">FIG. 16B</figref>, in a step <b>550</b> of the transformation process, the drops in the bottom or second puck in the duet are swapped or reversed in order. For example, as shown in <figref idref="DRAWINGS">FIG. 16B</figref> for the first duet, the bottom puck is the source puck DA. After swapping the drops in the bottom puck, the bottom puck of the duet now has a value of AD (as also shown in <figref idref="DRAWINGS">FIG. 16A</figref>). In a step <b>554</b>, the set of four drops in the duet at this point are then rotated counter-clockwise by one position or ninety degrees. For example, as shown in <figref idref="DRAWINGS">FIG. 16B</figref>, the result of rotating the set of four drops in the duet is a top “puck” with a value DD and a bottom “puck” with a value AA (as also shown in <figref idref="DRAWINGS">FIG. 16A</figref>). In a step <b>558</b>, the drops at this point are then converted from single tier encoding to two-tier encoding. For example, as shown in <figref idref="DRAWINGS">FIG. 16B</figref>, the result of converting the drops from single tier encoding to two-tier encoding is a top “puck” with a value DA and a bottom “puck” with a value AD (as also shown in <figref idref="DRAWINGS">FIG. 16A</figref>). Each of the resulting “pucks” of the transformation process is referred to herein by the Applicant as a “DNA pair”.</p>
<p id="p-0134" num="0133">Thus it can be seen that the reverse of the transformation process applied to two adjacent DNA pairs yields the duets of the bubble core. In other words, by taking two adjacent DNA pairs, converting the DNA pairs to single tier encoding, rotating the DNA pair values clockwise by ninety degrees, and reversing the order of the bottom pair, the duet values result and can be subsequently decoded into an ordered binary stream by reversing the steps recited above for encoding the ordered binary stream into the DNA pair values. Therefore, Applicant believes that one application of the present invention is its use in converting the helix structure of DNA into a binary sequence so as to retrieve a data stream in the form of 0's and 1's which represents the information contained in the DNA structure.</p>
<p id="p-0135" num="0134">Further, the Applicant believes that if the DNA sequence has strictly sequenced information and their summarized values are to be found in the stem cell set, then transforming the DNA to a binary sequence of values and super cooling it would yield information that closely corresponds to those facets of the stem cell set which are represented in the DNA. From this established correspondence, it should be possible to derive the binary sequence of those features of the stem cell set which are not represented in the DNA, such as the regeneration of most organs.</p>
<p id="p-0136" num="0135">From the above description, it is clear that the present invention is well adapted to carry out the objects and to attain the advantages mentioned herein, as well as those inherent in the invention. Although the foregoing invention has been described in some detail by way of illustration and example for purposes of clarity of understanding, it will be apparent to those skilled in the art that certain changes and modifications may be practiced without departing from the spirit and scope of the present invention, as described herein. Thus, the present invention is not intended to be limited to the embodiment shown but is to be accorded the widest scope consistent with the principles and features described herein.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for encoding an ordered binary stream, the method comprising the steps of:
<claim-text>converting the ordered input binary into an ordered input quad stream by taking two adjacent binary values to form drops; and using encoding on drops to form the ordered input quad stream.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step of encoding is defined further as encoding the drops into a single tier format.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the binary stream in the single tier format is taken as a whole.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step of encoding is defined further as encoding the drops into a two-tier format.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the two-tier format includes an odd component and an even component.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A method for encoding an ordered binary input stream, comprising the steps of:
<claim-text>analyzing the length of the ordered binary input stream to determine whether the number of digits in the ordered binary input stream is an odd multiple of four; and</claim-text>
<claim-text>appending the ordered binary input string with a number of digits sufficient to increase the length of the ordered binary input stream to a number of digits that is an odd multiple of four.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising the step of inserting alternately 0's and 1's starting with either a “0” or a “1” into the ordered binary input stream, after the binary strings have been appended thereto, after each binary value of the ordered input stream to obtain a rippled binary stream retaining the original order of the ordered binary input stream.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, further comprising the steps of:
<claim-text>copying the rippled binary stream to form two identical rippled binary streams;</claim-text>
<claim-text>rotating one of the rippled binary streams to the right a number of positions to produce a source stream; and</claim-text>
<claim-text>rotating the other one of the rippled binary streams to the left the same number of positions and reversing the rippled binary stream that has been previously rotated to the left to form a reverse stream.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref>, further comprising the step of converting the source and reverse binary streams into quad streams by representing each adjacent pair of bits by a letter indicative of the value of the adjacent pair.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein adjacent letters in the quad streams are characterized as drops and wherein adjacent drops form drop pairs representative of the source stream and reverse stream with the ordering of the drop pairs in the source stream and reverse stream representing positional information with respect to the original binary input stream.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising the step of dividing each of the source and reverse streams into substantial halves to form a top half and a bottom half of the source stream, and a top half and a bottom half of the reverse stream; such that the top half and the bottom half of each of the source and reverse streams includes at least one drop pair having same drop values.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising the step of forming two segments, one of the segments comprising the top half of the source stream and the bottom half of the reverse stream, and the other one of the segments comprising the top half of the source stream and bottom half of the reverse stream.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00012">claim 12</claim-ref>, further comprising the step of indexing, in one of the segments, the top half of the source stream and the bottom half of the reverse stream in a side-by-side relationship such that the drop pairs in the top half of the source stream have a same but reverse relationship to the drop pairs in the bottom half of the reverse stream.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising the step of indexing, in the other one of the segments, the bottom half of the source stream and the top half of the reverse stream in a side-by-side relationship such that the drop pairs in the bottom half of the source stream have a same but reverse relationship to the drop pairs in the top half of the reverse stream.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, further comprising the step of merging the drop pairs in the segments such that the drop pairs having a side-by-side relationship form duets having the same binary values but reversed in order.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the resultant merged drop pairs form a “bubble”, and wherein the bubble includes a first drop pair which is unpaired, followed by a series of duets to form a “bubble core”.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein a second drop pair of a top most duet and a first drop pair of a second duet form an adjacency relationship to form adjacent gum drop pairs; the set of all adjacent gum drop pairs together with the top most drop pair and the bottom most drop pair of the bubble core, and the unpaired first drop pair represent the binary input stream.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the duets of the bubble core exhibit a property commonly understood as a double helix DNA sequence.</claim-text>
</claim>
</claims>
</us-patent-grant>
