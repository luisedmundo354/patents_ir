<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299181-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299181</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10881685</doc-number>
<date>20040630</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>215</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>10</class>
<subclass>L</subclass>
<main-group>15</main-group>
<subgroup>18</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>10</class>
<subclass>L</subclass>
<main-group>15</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>704257</main-classification>
<further-classification>704275</further-classification>
</classification-national>
<invention-title id="d0e53">Homonym processing in the context of voice-activated command systems</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4468756</doc-number>
<kind>A</kind>
<name>Chan</name>
<date>19840800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>704  4</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>4777600</doc-number>
<kind>A</kind>
<name>Saito et al.</name>
<date>19881000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715535</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5729659</doc-number>
<kind>A</kind>
<name>Potter</name>
<date>19980300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>704270</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6067520</doc-number>
<kind>A</kind>
<name>Lee</name>
<date>20000500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>704270</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6094634</doc-number>
<kind>A</kind>
<name>Yahagi et al.</name>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>704260</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6163767</doc-number>
<kind>A</kind>
<name>Tang et al.</name>
<date>20001200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>704231</main-classification></classification-national>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6269335</doc-number>
<kind>B1</kind>
<name>Ittycheriah et al.</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>704270</main-classification></classification-national>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6804330</doc-number>
<kind>B1</kind>
<name>Jones et al.</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>379 8801</main-classification></classification-national>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6925154</doc-number>
<kind>B2</kind>
<name>Gao et al.</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>379 8803</main-classification></classification-national>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2002/0128831</doc-number>
<kind>A1</kind>
<name>Ju et al.</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>704231</main-classification></classification-national>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2003/0009335</doc-number>
<kind>A1</kind>
<name>Schalkwyk et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>704257</main-classification></classification-national>
</citation>
<citation>
<nplcit num="00012">
<othercit>Mitjushin, Leonid. “An Agreement Corrector for Russian”, International Conference on Computational Lingustics, 1996, pp. 776-781.</othercit>
</nplcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00013">
<othercit>Palopoli, L., Sacca, D., Ursino, D. “Semi-automatic, semantic discovery of properties from database schemes”, Database Engineering and Applications Symposium 1998, pp. 244-253.</othercit>
</nplcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00014">
<othercit>Takahashi, M., Shinchu, T., Yoshimura, K., Shudo, K. “Processing Homonyms in the Kana-to-Kanji Conversion”, International Conference on Computational Linguistics, 1996 vol. 2, pp. 1135-1138.</othercit>
</nplcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00015">
<othercit>A. Sethy et al. “A Syllable Based Approach for Improved Recognition of Spoken Names,” ISCA Pronunciation Modeling and Lexicon Adaptation, 2002, pp. 1-4.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00016">
<othercit>F. Beaufays et al. “Learning Linguistically Valid Pronunciations from Acoustic Data,” ISCA Archive EUROSPEECH 2003—8th European Conference on Speech Communication and Technology, pp. 1-4.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00017">
<othercit>F. Beaufays et al. “Learning Name Pronunciations in Automatic Speech Recognition Systems,” 15th IEEE International Conference on Tools With Artificial Intelligence, Nov. 1993, pp. 1-8.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00018">
<othercit>N. Deshmukh et al. “Advances in Automatic Generation of Multiple Pronunciations for Proper Nouns,” prepared for Speech Research Group, Texas Instruments, Institute for Signal and Information Processing, Sep. 1997, pp. 1-40.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00019">
<othercit>“Nortel Networks Corporate Directory Dialer,” 2003, Nortel Networks.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00020">
<othercit>Dr. M. Spiegel “The Difficulties with Names,” Speech Technology Magazine, Jun. 2003, pp. 1-5.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00021">
<othercit>Llitjos, A. and Black, A.; “Evaluation and Collection of Proper Name Pronunciations Online,” citeseer.ist.psu.edu/535078.html, pp. 247-254.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00022">
<othercit>A. Llitjos. “Improving Pronunciation Accuracy of Proper Names with Language Origin Classes,” Proceedings of the Seventh ESSLLI Student Session, 2002, pp. 1-17.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00023">
<othercit>Y. Dong et al. “<i>Improved Name Recognition with User Modeling,</i>” in Proceedings of EUROSPEECH 2003, Geneva Switzerland, pp. 1-4.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00024">
<othercit>Deshmukh, N. and Picone, J.; “Automatic Generation of N-best Proper Noun Pronunciations,” Prepared for Speech Research Group, Texas Instruments, Inc. Institute for Signal and Information Processing Aug. 1996, pp. 1-44.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>19</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>7</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20060004571</doc-number>
<kind>A1</kind>
<date>20060105</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Ju</last-name>
<first-name>Yun-Cheng</first-name>
<address>
<city>Bellevue</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Ollason</last-name>
<first-name>David</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="003" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Bhatia</last-name>
<first-name>Siddharth</first-name>
<address>
<city>Kirkland</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Westman, Shamplin &amp; Kelly, P.A.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Microsoft Corporation</orgname>
<role>02</role>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Hudspeth</last-name>
<first-name>David</first-name>
<department>2626</department>
</primary-examiner>
<assistant-examiner>
<last-name>Sked</last-name>
<first-name>Matthew J</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A computer-implemented method is disclosed for creating a grammar to be processed by a speech recognition engine in the context of a voice-activated command system. The method includes receiving a database containing a plurality of terms and identifying a set of terms that are pronounced the same but spelled differently. The method also includes placing a single term within the grammar to represent the set of terms.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="207.69mm" wi="129.03mm" file="US07299181-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="230.29mm" wi="177.88mm" orientation="landscape" file="US07299181-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="189.40mm" wi="172.97mm" file="US07299181-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="229.45mm" wi="131.91mm" file="US07299181-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="205.32mm" wi="123.19mm" file="US07299181-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="216.83mm" wi="129.62mm" file="US07299181-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="230.80mm" wi="169.33mm" file="US07299181-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="234.61mm" wi="154.60mm" file="US07299181-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">The present invention generally pertains to voice-activated command systems. More specifically, the present invention pertains to methods for improving the accuracy of voice-dialing applications through processing of homonyms.</p>
<p id="p-0003" num="0002">Homonyms pose unique challenges to voice-dialing applications; even beyond speech recognition accuracy problems. In many instances, known applications treat two names as collisions only if the spelling of the names is identical. Therefore, even with perfect speech recognition, it is not uncommon for known systems to ask a caller to make a selection from a plurality of terms having identical pronunciations but different spellings. Since the caller cannot “see” spelling differences over the phone, it becomes easy to understand why homonyms are prone to being a source of confusion and incorrect call transfers.</p>
<p id="p-0004" num="0003">An example will help to further define the nature of challenges posed by homonyms to voice-dialing systems. For the purpose of illustration, it will be assumed that “craig” and “kraig” are pronounced the same. Under these circumstances, in the context of many voice-dialing systems, a caller will be presented with a voice prompt in the nature of “Are you looking for Craig or Kraig”. Because the caller is essentially blind to the difference in spelling, there is a fifty percent chance that a caller seeking a connection to “kraig” will be connected to “craig”, and vice versa. As the number of homonyms within a system increases, there are corresponding decreases in system connection accuracy and consistency.</p>
<p id="p-0005" num="0004">Some voice-dialing solutions are configured to empower a caller to somehow distinguish between names having a common pronunciation utilizing an identifier other than spelling. For example, a caller might ask for “Mike Andersen”. The system might include one listing for “Mike Andersen” and two listings for “Mike Anderson”. Presented with this homonym scenario, known systems generally are not equipped to accurately determine which listing the caller desires. Some systems are configured to present additional identifying information in order to empower the caller to make an informed selection decision. For example, the system might pose a selection inquiry to the caller such as “Are you looking for Mike Anderson in building <b>6</b>, Mike Anderson in building <b>7</b>, or Mike Anderson in building <b>12</b>?”. Despite being ignorant of any differences in the spelling of Anderson, the caller can make a selection based on an alternate criteria (i.e., building location). In many cases, the caller will be more familiar with spelling differences than with a given set of additional identifying information.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0006" num="0005">Embodiments of the present invention pertain to a computer-implemented method for creating a grammar to be processed by a speech recognition engine in the context of a voice-activated command system. The method includes receiving a database containing a plurality of terms and identifying a set of terms that are pronounced the same but spelled differently. The method also includes placing a single term within the grammar to represent the set of terms.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram representation of a general computing environment in which illustrative embodiments of the present invention may be practiced.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 2</figref> is a schematic block representation of a voice-dialing system.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 3</figref> is a block flow diagram illustrating steps associated with routing a call.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 4</figref> is a block flow diagram illustrating steps associated with homonym identification.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 5</figref> is a block flow diagram illustrating steps associated with generation of a grammar.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 6</figref> is a block flow diagram illustrating steps associated with confirmation and disambiguation.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 7</figref> is a block flow diagram illustrating steps associated with the processing of quasi-homonyms.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS</heading>
<p id="h-0005" num="0000">I. Exemplary Environments</p>
<p id="p-0014" num="0013">Various aspects of the present invention pertain to the processing of homonyms in context of voice-dialing applications. Embodiments of the present invention can be implemented in association with a call routing system, wherein a caller identifies with whom they would like to communicate and the call is routed accordingly. Embodiments can also be implemented in association with a voice message system, wherein a caller identifies for whom a message is to be left and the call or message is sorted and routed accordingly. Embodiments can also be implemented in association with a combination of call routing and voice message systems. It should also be noted that the present invention is not limited to call routing and voice message systems. These are simply examples of systems within which embodiments of the present invention can be implemented.</p>
<p id="p-0015" num="0014">Prior to discussing embodiments of the present invention in detail, exemplary computing environments within which the embodiments and their associated systems can be implemented will be discussed.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an example of a suitable computing environment <b>100</b> within which embodiments of the present invention and their associated systems may be implemented. The computing system environment <b>100</b> is only one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of the invention. Neither should the computing environment <b>100</b> be interpreted as having any dependency or requirement relating to any one or combination of illustrated components.</p>
<p id="p-0017" num="0016">The present invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well-known computing systems, environments, and/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, telephony systems, distributed computing environments that include any of the above systems or devices, and the like.</p>
<p id="p-0018" num="0017">The invention may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. The invention is designed to be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules are located in both local and remote computer storage media including memory storage devices. Tasks performed by the programs and modules are described below and with the aid of figures. Those skilled in the art can implement the description and figures as processor executable instructions, which can be written on any form of a computer readable media.</p>
<p id="p-0019" num="0018">With reference to <figref idref="DRAWINGS">FIG. 1</figref>, an exemplary system for implementing the invention includes a general-purpose computing device in the form of a computer <b>110</b>. Components of computer <b>110</b> may include, but are not limited to, a processing unit <b>120</b>, a system memory <b>130</b>, and a system bus <b>121</b> that couples various system components including the system memory to the processing unit <b>120</b>. The system bus <b>121</b> may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus also known as Mezzanine bus.</p>
<p id="p-0020" num="0019">Computer <b>110</b> typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer <b>110</b> and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer <b>110</b>.</p>
<p id="p-0021" num="0020">Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term “modulated data signal” means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.</p>
<p id="p-0022" num="0021">The system memory <b>130</b> includes computer storage media in the form of volatile and/or nonvolatile memory such as read only memory (ROM) <b>131</b> and random access memory (RAM) <b>132</b>. A basic input/output system <b>133</b> (BIOS), containing the basic routines that help to transfer information between elements within computer <b>110</b>, such as during start-up, is typically stored in ROM <b>131</b>. RAM <b>132</b> typically contains data and/or program modules that are immediately accessible to and/or presently being operated on by processing unit <b>120</b>. By way of example, and not limitation, <figref idref="DRAWINGS">FIG. 1</figref> illustrates operating system <b>134</b>, application programs <b>135</b>, other program modules <b>136</b>, and program data <b>137</b>.</p>
<p id="p-0023" num="0022">The computer <b>110</b> may also include other removable/non-removable volatile/nonvolatile computer storage media. By way of example only, <figref idref="DRAWINGS">FIG. 1</figref> illustrates a hard disk drive <b>141</b> that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive <b>151</b> that reads from or writes to a removable, nonvolatile magnetic disk <b>152</b>, and an optical disk drive <b>155</b> that reads from or writes to a removable, nonvolatile optical disk <b>156</b> such as a CD ROM or other optical media. Other removable/non-removable, volatile/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive <b>141</b> is typically connected to the system bus <b>121</b> through a non-removable memory interface such as interface <b>140</b>, and magnetic disk drive <b>151</b> and optical disk drive <b>155</b> are typically connected to the system bus <b>121</b> by a removable memory interface, such as interface <b>150</b>.</p>
<p id="p-0024" num="0023">The drives and their associated computer storage media discussed above and illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, provide storage of computer readable instructions, data structures, program modules and other data for the computer <b>110</b>. In <figref idref="DRAWINGS">FIG. 1</figref>, for example, hard disk drive <b>141</b> is illustrated as storing operating system <b>144</b>, application programs <b>145</b>, other program modules <b>146</b>, and program data <b>147</b>. Note that these components can either be the same as or different from operating system <b>134</b>, application programs <b>135</b>, other program modules <b>136</b>, and program data <b>137</b>. Operating system <b>144</b>, application programs <b>145</b>, other program modules <b>146</b>, and program data <b>147</b> are given different numbers here to illustrate that, at a minimum, they are different copies.</p>
<p id="p-0025" num="0024">A user may enter commands and information into the computer <b>110</b> through input devices such as a keyboard <b>162</b>, a microphone <b>163</b>, and a pointing device <b>161</b>, such as a mouse, trackball or touch pad. Other input devices (not shown) may include a joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit <b>120</b> through a user input interface <b>160</b> that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor <b>191</b> or other type of display device is also connected to the system bus <b>121</b> via an interface, such as a video interface <b>190</b>. In addition to the monitor, computers may also include other peripheral output devices such as speakers <b>197</b> and printer <b>196</b>, which may be connected through an output peripheral interface <b>195</b>.</p>
<p id="p-0026" num="0025">The computer <b>110</b> is operated in a networked environment using logical connections to one or more remote computers, such as a remote computer <b>180</b>. The remote computer <b>180</b> may be a personal computer, a hand-held device, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer <b>110</b>. The logical connections depicted in <figref idref="DRAWINGS">FIG. 1</figref> include a local area network (LAN) <b>171</b> and a wide area network (WAN) <b>173</b>, but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.</p>
<p id="p-0027" num="0026">When used in a LAN networking environment, the computer <b>110</b> is connected to the LAN <b>171</b> through a network interface or adapter <b>170</b>. When used in a WAN networking environment, the computer <b>110</b> typically includes a modem <b>172</b> or other means for establishing communications over the WAN <b>173</b>, such as the Internet. The modem <b>172</b>, which may be internal or external, may be connected to the system bus <b>121</b> via the user input interface <b>160</b>, or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer <b>110</b>, or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation, <figref idref="DRAWINGS">FIG. 1</figref> illustrates remote application programs <b>185</b> as residing on remote computer <b>180</b>. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.</p>
<p id="p-0028" num="0027">It should be noted that the present invention can be carried out on a computer system such as that described with respect to <figref idref="DRAWINGS">FIG. 1</figref>. However, the present invention can be carried out on a server, a computer devoted to message handling, or on a distributed system in which different portions of the present invention are carried out on different parts of the distributed computing system.</p>
<p id="h-0006" num="0000">II. Voice-Dialing System</p>
<p id="p-0029" num="0028">A. System Overview</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 2</figref>, in accordance with one aspect of the present invention, is a schematic block diagram of a voice-dialing system <b>204</b>. System <b>204</b> is illustratively implemented within one of the computing environments discussed in association with <figref idref="DRAWINGS">FIG. 1</figref>. System <b>204</b> includes a voice-dialer application <b>206</b> having access to a database of callers <b>208</b>. System <b>204</b> also includes a speech recognition engine <b>210</b> having a context-free-grammar (CFG) <b>212</b>. It should be noted that application <b>206</b>, database <b>208</b>, speech recognition engine <b>210</b>, and CFG <b>212</b> need not necessarily be implemented within the same computing environment. For example, application <b>206</b> and its associated database <b>208</b> could be operated from a first computing device that is in communication via a network with a different computing device operating recognition engine <b>210</b> and its associated CFG <b>212</b>. These and other distributed implementations are within the scope of the present invention.</p>
<p id="p-0031" num="0030">Generally speaking, callers <b>202</b> interact with system <b>204</b> in order to be routed to a particular call recipient <b>214</b>. <figref idref="DRAWINGS">FIG. 3</figref> is a block flow diagram illustrating steps associated with routing a call in accordance with one aspect of the present invention. In accordance with step <b>302</b>, a caller <b>202</b> verbally interacts with voice-dialer application <b>206</b> (e.g., verbally communicates in response to recorded or speech-simulated voice prompts). During the interaction, the caller provides a speech sample representative of a desired call recipient <b>214</b>. The speech sample is illustratively provided to speech recognition engine <b>210</b>.</p>
<p id="p-0032" num="0031">In accordance with step <b>304</b>, speech recognition engine <b>210</b> applies CFG <b>212</b> in order to identify a potential speech recognition match that corresponds to a call recipient. In accordance with step <b>306</b>, speech recognition engine <b>210</b> provides voice-dialer application <b>206</b> with information pertaining to the speech recognition match. In accordance with step <b>308</b>, voice-dialer application <b>206</b> references the received information against a collection of potential call recipients listed in database <b>208</b>. In accordance with block <b>310</b>, voice-dialer application <b>206</b> communicates with the caller to facilitate confirmation and/or disambiguation as necessary to select a particular call recipient from database <b>208</b>. Finally, in accordance with block <b>312</b>, the call is appropriately routed from the caller <b>202</b> to a selected call recipient <b>214</b>.</p>
<p id="p-0033" num="0032">In order to support the described automated voice-dialer functionality, speech recognition engine <b>210</b> is provided with a list of words or phrases organized in a grammar, which in <figref idref="DRAWINGS">FIG. 2</figref> is identified as CFG <b>212</b>. The grammar illustratively contains a collection of representations of potentially recognizable words and/or phrases organized to support the speech recognition process. For example, phrases organized into the grammar might include representations of names such as Bill Thompson, Bruce Smith, Jack Taylor, etc. The words and/or phrases represented in CFG <b>212</b> illustratively correspond to a list of individuals identified within database <b>208</b>, wherein each individual is a different potential call recipient (e.g., the database includes a different phone extension for each individual).</p>
<p id="p-0034" num="0033">There is a reasonable possibility that database <b>208</b> will include more than one distinct individual with the same name (e.g., two people having the name Jane Smith wherein each individual is associated with a different employee identification number). There is also a reasonable likelihood that database <b>208</b> will include multiple individuals having a name with a common pronunciation but with different spellings (e.g., Mike Andersen and Mike Anderson). This latter scenario is a homonym scenario.</p>
<p id="p-0035" num="0034">While CFG <b>212</b> does generally correspond to database <b>208</b>, not every name in the database need necessarily be independently represented in the CFG. In the context of some known voice-dialing systems, the grammar applied by a speech recognition engine will not include distinct entries for multiple listings having the same spelling. For example, if the database includes four instances of “Mike Anderson”, then only one of those instances needs to be incorporated into the grammar (primarily because the SR engine has traditionally been configured to return a single match result, which is referenced in the database for multiple text-based matches). The described merging of identical entries within the CFG does not address homonym ambiguity. Many known systems will include a separate entry in the CFG for every unique spelling of a name in the database, even if two names are spelled differently but pronounced the same.</p>
<p id="p-0036" num="0035">Accordingly, in the context of many known voice-dialing systems, when an input from a caller is compared by a speech recognition engine to the associated grammar, a returned match could correspond to any one of multiple entries in the CFG having the same pronunciation (but different spellings). It is not uncommon for the input to be compared to multiple entries having the same pronunciation, regardless of the fact that only a single match indication will be returned. It is also not uncommon that the speech recognition engine will be configured to return a single match result regardless of the number of match instances in the grammar under analysis.</p>
<p id="p-0037" num="0036">In accordance with one aspect of the present invention, the contents of the grammar delivered to, and applied by, the speech recognition engine are economized through a detection and consolidation of words and/or phrases demonstrating homonym characteristics.</p>
<p id="p-0038" num="0037">B. Homonym Detection</p>
<p id="p-0039" num="0038">In accordance with one embodiment, a word level homonym detection process is carried out prior to construction of the CFG grammar. Homonyms are identified based on the pronunciation of terms in database <b>208</b>. Pronunciation of the terms is illustratively determined based on speech recognition (or text-to-speech) models and/or information stored in application lexicon dictionaries. Once homonyms have been identified, the grammar to be provided to the speech recognition engine can be economized through an elimination of homonym-based ambiguity. For example, supposing database <b>208</b> contains 50,000 names incorporating 42,000 words, it is likely that the corresponding grammar can be economized through a consolidation of homonym-oriented matches.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 4</figref> is a block flow diagram illustrating steps associated with homonym detection in accordance with one aspect of the present invention. As is indicated by block <b>402</b>, a pronunciation signature is created for each database term. In accordance with one embodiment, a pronunciation signature is a distinct pronunciation for a given term. Pronunciation information can come from a variety of sources such as, but not limited to, an application dictionary or a speech recognition dictionary. A speech recognition dictionary illustratively includes common pronunciations of terms. An application dictionary illustratively includes more directly asserted pronunciations. For example, a term having a pronunciation listed in the speech recognition dictionary can have a different pronunciation listed in the application dictionary. This might be desirable, for example, if an individual's name is actually pronounced differently than the default listed in the speech recognition dictionary. In accordance with one embodiment, if a term is listed in the application dictionary, the pronunciation of that word specified in the speech recognition dictionary is ignored. In other words, pronunciations in the application dictionary are assumed to be more accurate and therefore take precedence. Accordingly, for every distinct term in the database, a query is made to retrieve an internal pronunciation from a speech recognition dictionary (or a user application lexicon that overrides the default speech recognition pronunciation).</p>
<p id="p-0041" num="0040">In accordance with block <b>404</b>, the next step in the homonym detection process is a grouping of terms based on matching pronunciation signatures. As is indicated by block <b>406</b>, words in the same group assumedly contain the same set of pronunciations and are therefore considered homonyms. In other words, the union of all pronunciations is used as a key to group terms into homonym classes. All of the words in a same class will illustratively have the same pronunciation. As a result, they are interchangeable from the speech recognition point of view (e.g., one class might include “Mike Anderson” and “Mike Andersen”, wherein both terms are identically pronounced). Terms that do not demonstrate a homonym nature will only have one entry in their class. Terms having a homonym nature will have more than one entry (multiple entries that are pronounced the same but spelled differently).</p>
<p id="p-0042" num="0041">In accordance with one embodiment, a homonym replacement table is constructed by including a listing of terms that are associated with classes having a size greater than 1. The homonym replacement table illustratively includes one entry for each multiple-term class. The one entry is illustratively the most predominant spelling within the class. For example, for a class that includes three instances of “Jeff Smith” and one instance of “Geoff Smith”, the homonym replacement table will include “Jeff Smith”. In another example, for a class that includes two instances of “Michelle Wilson” and one instance of “Michele Wilson”, the homonym replacement table will include simply “Michelle Wilson”.</p>
<p id="p-0043" num="0042">C. Grammar Consolidation</p>
<p id="p-0044" num="0043">In accordance with one embodiment, the homonym replacement table is applied term by term as names are inserted into the context free grammar to be applied by the speech recognition engine within the voice-dialing system. For each set of pronunciations in a homonym class, only one unique term is incorporated into the CFG (assumedly the “most popular” term derived from the homonym replacement table). Accordingly, given the consolidation of terms having a homonym nature, the overall size of the CFG is reduced. Therefore, the overall quantity of reference resources required for speech recognition is generally reduced. The reduction in size of the CFG enables a reduction in the number of “fan outs” as compared to searching a CFG that incorporates homonym ambiguity.</p>
<p id="p-0045" num="0044">In accordance with one embodiment, the memory resources freed up by homonym term elimination are invested in a provision of additional means for improving speech recognition performance in terms of accuracy and/or response time. For example, the speech recognition engine can be configured for greater accuracy because more memory becomes available for storing additional recognition hypotheses, thereby enabling a reduction in reliance on aggressive pruning for recognition purposes.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 5</figref> is a block flow diagram demonstrating one embodiment of the described economization of a CFG constructed for application within a voice-dialing system. In accordance with block <b>502</b>, for each group of homonym terms (e.g., for each homonym class), the most popular entry (e.g., based on frequency) is selected as the representative of that group. In accordance with block <b>504</b>, a homonym replacement table is created and includes the most popular form for each homonym class. Corresponding actual spelling forms of each homonym listed in the replacement table continues to be stored in the database.</p>
<p id="p-0047" num="0046">As entries corresponding to database terms are added to the CFG, in accordance with block <b>506</b>, a check is performed to see if a given database term is included in the replacement table. In accordance with block <b>508</b>, if a term is included in the replacement table, then the term is replaced with the representative for that group. In accordance with block <b>510</b>, terms having exact spellings are reduced to a single occurrence in the CFG if necessary.</p>
<p id="p-0048" num="0047">In accordance with one embodiment, as original spellings of names are added to, or eliminated from, the database (e.g., as employees come and go), the homonym replacement table is re-populated and the speech recognition grammar is re-generated. In other words, when terms are added, replaced, and/or eliminated, the homonym replacement table is re-populated and the speech recognition grammar is re-generated. Similarly, when pronunciations are added, replaced, and/or eliminated (e.g., new pronunciation added to an application dictionary), the homonym replacement table is re-populated and the speech recognition grammar is re-generated. In accordance with one embodiment, re-population and/or re-generation is performed periodically, after a predetermined number of changes have occurred or every time a change occurs, depending on application preferences.</p>
<p id="p-0049" num="0048">D. Conformation and Disambiguation</p>
<p id="p-0050" num="0049">For many voice-dialing systems, it is common for a caller to be presented with an audio presentation of a name during a confirmation and/or disambiguation process. For example, a caller might be presented with an audio presentation of a phrase such as “Did you say Mike Anderson”, which the caller can confirm or reject based on perceived accuracy. The homonym replacement table assumedly contains common spellings for each incorporated term demonstrating a homonym nature. Accordingly, the homonym replacement table represents an excellent source for the generation of the audio representations that are presented to a caller. Both automated and human-based generation of audio name representations are more likely to produce accurate pronunciations if provided with a common rather than uncommon spelling. If the audio representations are automatically generated, it is more likely that a common spelling will correspond to a common pronunciation. If the audio presentations are generated by a human voice actor, the actor is more likely to get the pronunciation correct if he or she is presented with a spelling with which they may already be familiar.</p>
<p id="p-0051" num="0050">Regardless of whether name representations are derived automatically or through recording of a human voice, the work required to generate audio representations of all terms in a database is generally reduced in accordance with the present invention because only one pronunciation representation needs to be generated for each homonym term. In the case of audio representations generated by voice actors, this provides some level of increased privacy because the actor will likely be presented with only one homonym term without being made privy to the fact that there are multiple employees or individuals having the same name within the corresponding organization. Further, the actor is shielding from seeing every spelling the names of every individual within the organization.</p>
<p id="p-0052" num="0051">Another aspect of the present invention pertains to confirmation and disambiguation processing. Once the speech recognition engine has returned a result based on an analysis of an input against the CFG, a general confirmation process begins, which may include disambiguation in instances of true collisions (multiple instances of the same spelling) or homonym collisions (multiple spellings but a common pronunciation). In accordance with one embodiment, true collisions and homonym collisions are initially treated the same way in terms of confirmation/disambiguation. For example, possible name collisions resulting from homonyms (e.g., “John Reid” and “John Reed”) are initially merged into regular name collisions and distinct pronunciations are initially presented to the caller in the form of a confirmation dialogue (e.g., “Did you say John Reed”). Once a pronunciation has been confirmed, then disambiguation is performed if necessary. For homonym collisions, spelling information is illustratively utilized as a basis for conducting disambiguation (e.g., “Would you like John R-E-I-D” or “John R-E-E-D”).</p>
<p id="p-0053" num="0052">Accordingly, in accordance with one aspect of the present invention, the confirmation dialogue initially presents a unique pronunciation for caller confirmation. Because this is true, the caller will not first be confronted with a confusing and ambiguous phrase such as “I have two names for you to choose from: 1. John Reid and 2. John Reed”. Instead, the initial confirmation will simply be in the nature of “Did you say John Reed”.</p>
<p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. 6</figref>, in accordance with one aspect of the present invention, is a block flow diagram representing a confirmation and disambiguation process. As is indicated by block <b>602</b>, the process begins with a simple confirmation of pronunciation (e.g., “Did you say John Reed”). As is indicated by block <b>604</b>, there is then a determination as to whether there is any collision. As is indicated by block <b>606</b>, if there is not any collision, then processing (e.g., call routing based on the selected database entry) can occur immediately.</p>
<p id="p-0055" num="0054">As is indicated by block <b>608</b>, if there is a collision then a determination is made as to whether there is a homonym conflict or a true collision. In accordance with one embodiment, homonym conflicts are identified through reference to the homonym replacement table. If there is no homonym conflict, then, in accordance with block <b>610</b>, some form of traditional true collision disambiguation is conducted (e.g., “Would you like John Andersen in building <b>6</b> . . . or John Andersen in building <b>9</b>”). In accordance with block <b>611</b>, processing of the call is executed in accordance with the disambiguation result (i.e., in accordance with selection preferences indicated by the caller).</p>
<p id="p-0056" num="0055">If there is a homonym conflict, as is indicated by block <b>612</b>, a homonym disambiguation process can be executed based on different spellings (“Would you like John R-E-I-D or John R-E-E-D”). As is indicated by block <b>614</b>, there is then a determination as to whether a spelling selected by the caller corresponds to multiple listings (i.e., a true collision). If not, in accordance with block <b>616</b>, processing is executed in accordance with the caller's expressed selection. If a true collision is encountered, then, in accordance with block <b>618</b>, some form of traditional true collision disambiguation is conducted (e.g., similar to block <b>610</b>) and, in accordance with block <b>620</b>, processing of the call is executed accordingly.</p>
<p id="p-0057" num="0056">E. Quasi-Homonyms</p>
<p id="p-0058" num="0057">Another aspect of the present invention pertains to “quasi-homonyms”, which are illustratively defined as a set of terms having a same pronunciation, wherein one of the terms also has a second pronunciation that is not the same as compared to the other member or members of the set. In other words, a quasi-homonym is an instances wherein multiple terms with different spellings have a consistent pronunciation (i.e., homonym nature) but at least one of the listings has a unique pronunciation. For example, the word “Stephen” can be pronounced as either “s tee ven” or “stef an”, while the word “Steven” has only one pronunciation (“s tee ven”). Because Stephen and Steven are not straight homonyms, they generally should not be merged within the context free grammar.</p>
<p id="p-0059" num="0058">In accordance with one aspect of the present invention, the problems presented by quasi-homonyms to a voice-dialing system are addressed within the context of the other embodiments described herein. By skipping the common practice of “word level” recognition of names and detecting homonyms at the individual pronunciation level, both homonyms and quasi-homonyms can be detected. Once detected, a voice-dialing system can be configured to efficiently and accurately handle the quasi-homonym scenario. For example, when a caller indicates the pronunciation “s tee ven”, the system assumes the caller wants either “Steven” or “Stephen”. However, when the caller indicates the pronunciation “stef an”, then system is configured to recognize that the caller wants “Stephen” but not “Steven”.</p>
<p id="p-0060" num="0059">One aspect of the present invention pertains to quasi-homonym detection. As has been described previously, the present invention provides a system wherein homonym words of each unique pronunciation are detected and identified based on speech recognition internal pronunciations and application lexicon dictionaries. As has been described, a homonym replacement table can be constructed. In accordance with one embodiment, a quasi-homonym replacement table is created for grammar mapping purposes (e.g., for mapping Stephen to “s tee ven; stef an”, and Steven to “s tee ven” within the speech recognition grammar). For example, consider a scenario wherein the system is presented with 7 words (A-G) and 6 unique pronunciations (P<b>1</b>-P<b>6</b>), wherein the pronunciation dictions is distributed as follows:</p>
<p id="p-0061" num="0060">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="147pt" align="center"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" rowsep="1">TABLE 1</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Word</entry>
<entry>Pronunciations</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>A</entry>
<entry>P1</entry>
</row>
<row>
<entry/>
<entry>B</entry>
<entry>P1, P2</entry>
</row>
<row>
<entry/>
<entry>C</entry>
<entry>P2, P3</entry>
</row>
<row>
<entry/>
<entry>D</entry>
<entry>P3</entry>
</row>
<row>
<entry/>
<entry>E</entry>
<entry>P4</entry>
</row>
<row>
<entry/>
<entry>F</entry>
<entry>P4</entry>
</row>
<row>
<entry/>
<entry>G</entry>
<entry>P5, P6</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The corresponding quasi-homonym replacement table will illustratively look like:
</p>
<p id="p-0062" num="0061">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="147pt" align="center"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" rowsep="1">TABLE 2</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Word</entry>
<entry>Pronunciations</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>A</entry>
<entry>P1</entry>
</row>
<row>
<entry/>
<entry>B</entry>
<entry>P1, P2</entry>
</row>
<row>
<entry/>
<entry>C</entry>
<entry>P2, P3</entry>
</row>
<row>
<entry/>
<entry>D</entry>
<entry>P3</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0063" num="0062">Because words E and F are regular homonyms, they do not appear in TABLE 2. Although word G has two pronunciations, it is not included in TABLE 2 because none of its pronunciations are shared with another word.</p>
<p id="p-0064" num="0063">Another aspect of the present invention pertains to a formatting of the CFG to handle a quasi-homonym scenario. In accordance with one embodiment, terms included in the quasi-homonym replacement table are replaced with pronunciations, which are themselves placed within the CFG. Once provided with pronunciation information in quasi-homonym scenarios, the CFG is equipped to support identification of which quasi form has been presented. In accordance with one embodiment, substitution of pronunciations that correspond to the quasi-homonym replacement table is in addition to application of the homonym replacement table (described in relation to other embodiments) wherein consolidation of terms within the context free grammar is accomplished for regular homonyms. For example, consider a scenario wherein there are 9 employees (E<b>1</b>-E<b>9</b>) in a database as follows:</p>
<p id="p-0065" num="0064">
<tables id="TABLE-US-00003" num="00003">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="56pt" align="left"/>
<colspec colname="1" colwidth="35pt" align="center"/>
<colspec colname="2" colwidth="126pt" align="center"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" rowsep="1">TABLE 3</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Employee</entry>
<entry>Name</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>E1</entry>
<entry>A</entry>
</row>
<row>
<entry/>
<entry>E2</entry>
<entry>A</entry>
</row>
<row>
<entry/>
<entry>E3</entry>
<entry>B</entry>
</row>
<row>
<entry/>
<entry>E4</entry>
<entry>C</entry>
</row>
<row>
<entry/>
<entry>E5</entry>
<entry>C</entry>
</row>
<row>
<entry/>
<entry>E6</entry>
<entry>D</entry>
</row>
<row>
<entry/>
<entry>E7</entry>
<entry>E</entry>
</row>
<row>
<entry/>
<entry>E8</entry>
<entry>F</entry>
</row>
<row>
<entry/>
<entry>E9</entry>
<entry>G</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The full name table corresponding to the grammar to be applied by the speech recognition engine within the voice-dialing system illustratively looks like:
</p>
<p id="p-0066" num="0065">
<tables id="TABLE-US-00004" num="00004">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="49pt" align="left"/>
<colspec colname="1" colwidth="35pt" align="center"/>
<colspec colname="2" colwidth="133pt" align="center"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" rowsep="1">TABLE 4</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Full Name</entry>
<entry>Employee</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>P1</entry>
<entry>E1, E2, E3</entry>
</row>
<row>
<entry/>
<entry>P2</entry>
<entry>E3, E4, E5</entry>
</row>
<row>
<entry/>
<entry>P3</entry>
<entry>E4, E5, E6</entry>
</row>
<row>
<entry/>
<entry>E</entry>
<entry>E7, E8</entry>
</row>
<row>
<entry/>
<entry>G</entry>
<entry>E9</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Since P<b>1</b> (pronunciation <b>1</b>) is shared between word A and B, Employees E<b>1</b>, E<b>2</b>, and E<b>3</b> are added to the record of P<b>1</b>. The word E and F are regular homonyms so the word F is replace by word E in the system and that is why employees E<b>7</b> and E<b>8</b> are associated with the name E. Names E and G are not listed on the pronunciation level because it is more efficient for the speech recognition engine to work with words when possible.
</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 7</figref>, in accordance with one aspect of the present invention, is a block flow diagram demonstrating steps associated with identifying and processing quasi-homonyms. The process illustratively begins with homonym detection, for example, as illustrated and discussed in relation to <figref idref="DRAWINGS">FIG. 4</figref>. A result of the homonym detection is illustratively a collection of terms divided into classes, wherein terms within each class generally demonstrate matching pronunciation signatures and are therefore considered homonyms. As is indicated by block <b>702</b>, a homonym replacement table is created to identify classes having a homonym nature (pronunciation classes having more than one term with different spellings). The homonym replacement table illustratively indicates the most “popular” form or spelling for each homonym pronunciation. When multiple terms with different spellings appear in both a same and different pronunciation class, then this is an indication of a quasi-homonym. In accordance with block <b>704</b>, quasi-homonym replacement table is created to catalogue identified quasi-homonyms for subsequent processing.</p>
<p id="p-0068" num="0067">As terms are placed into the grammar, a check is performed against the homonym replacement table. In accordance with block <b>706</b>, if a term is included in the homonym replacement table, then it is the “popular” representation or spelling for that term that is placed into the grammar (duplicate spelling are eliminated from the grammar if necessary). Before the grammar is consolidated based on a homonym entry, in accordance with block <b>708</b>, an additional check is performed against the quasi-homonym replacement table. If a term is in the quasi-homonym table, then the different pronunciations are added to the grammar rather than an entry in word form.</p>
<p id="p-0069" num="0068">As is indicated by block <b>710</b>, when a quasi-homonym input is compared to the CFG during operation of the voice-dialing system, the results of the speech recognition process will be tailored to the particular pronunciation of the input (e.g., if the input is “stef an”, then the outcome of the speech recognition process will not be “Steven”). In accordance with block <b>712</b>, subsequent conformation and disambiguation will be based on an analysis of collisions in light of the particular returned form of the quasi-homonym.</p>
<p id="p-0070" num="0069">In the context of examples described above, if a caller input is consistent with a pronunciation of “Stephen” with a “stef an” pronunciation, then only “Stephan” is considered for subsequent conflict detection and disambiguation processing (i.e., as described in relation to <figref idref="DRAWINGS">FIG. 6</figref>). The CFG will support return of a result consistent with the pronunciation received. On the other hand, if the caller input is consistent with “Steven” pronounced “s tee ven”, then, as has been described, entries consistent with both “Steven” and “Stephen” will be calculated into the conformation and disambiguation process. The CFG will return a result consistent with the pronunciation received.</p>
<p id="p-0071" num="0070">Although the present invention has been described with reference to particular embodiments, workers skilled in the art will recognize that changes may be made in form and detail without departing from the spirit and scope of the invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for constructing a grammar to be processed by a speech recognition engine in the context of a voice-activated command system, the method comprising:
<claim-text>receiving a database containing a plurality of terms;</claim-text>
<claim-text>identifying a set of terms from said plurality that are pronounced the same but spelled differently; and</claim-text>
<claim-text>placing a reduced number of terms within the grammar to represent said set of terms wherein the reduced number of terms is fewer than the number of terms in the set of terms.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein placing a reduced number of terms within the grammar comprises placing a single term selected from the set of terms.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein placing a reduced number of terms within the grammar comprises placing a single term selected from the set of terms as a popular spelling.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein identifying a set of terms comprises obtaining a pronunciation for each of the plurality of terms in the database.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein identifying a set of terms further comprises organizing the plurality of terms into a plurality of pronunciation classes, wherein each pronunciation class corresponds to a distinct pronunciation, and wherein one class corresponds to said set of terms.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein obtaining a pronunciation comprises obtaining a pronunciation from a speech recognition dictionary.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein obtaining a pronunciation comprises obtaining a pronunciation from an application dictionary.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein placing a reduced number of terms within the grammar comprises placing a single spelling of a name within the grammar to represent a set of terms having homonym characteristics.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein identifying a set of terms comprises identifying a set of words having homonym characteristics.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A computer-implemented method for accomplishing disambiguation in the context of a voice-activated command system, the method comprising:
<claim-text>providing an input to a speech recognition engine for processing relative to a grammar that corresponds to a database containing a plurality of terms;</claim-text>
<claim-text>receiving from the speech recognition engine an output related to the input and corresponding to a first one of the plurality of terms wherein the output includes a spelling of a person's name;</claim-text>
<claim-text>identifying, based at least in part on the output, a second one of the plurality of terms that is pronounced the same as the first but is spelled differently;</claim-text>
<claim-text>utilizing the spellings of the first and second terms as one basis for distinguishing between the first and second terms during a disambiguation process; and</claim-text>
<claim-text>wherein providing an input to a speech recognition engine for processing relative to a grammar comprises providing an input to a speech recognition engine for processing relative to a grammar that contains a single entry for each pronunciation reflected in the database.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein utilizing the spellings comprises utilizing the spellings as one basis to determine which of the first and second terms should be selected for subsequent processing.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein said output is the first one of the plurality of terms.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein providing an input to a speech recognition engine comprises receiving a speech input and providing a representation of the speech input to the speech recognition engine.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein receiving a speech input comprises receiving a speech input from a caller.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein receiving a speech input comprises receiving a spoken name.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein receiving an output comprises receiving a textual representation of a person's name.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein identifying a second one of the plurality of terms comprises referencing a homonym replacement table.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein utilizing the spellings for distinguishing comprises:
<claim-text>presenting the spellings of the first and second terms to a caller;</claim-text>
<claim-text>receiving an input from the caller corresponding to one of the first and second terms; and</claim-text>
<claim-text>selecting for subsequent processing the one of the first and second terms that corresponds to the input.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. A speech recognition system comprising:
<claim-text>a context free grammar that includes a representation of a plurality of database terms including a representation of a first database term but not a second database term, the first and second database terms having a common pronunciation but a different spelling; and</claim-text>
<claim-text>a speech recognition engine that utilizes the context free grammar as a basis for identifying a voice-activated command.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
