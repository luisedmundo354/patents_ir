<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298783-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298783</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10661297</doc-number>
<date>20030912</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>KR</country>
<doc-number>10-2002-0063541</doc-number>
<date>20021017</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>854</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>B</subclass>
<main-group>14</main-group>
<subgroup>06</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>10</class>
<subclass>L</subclass>
<main-group>19</main-group>
<subgroup>00</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>375244</main-classification>
<further-classification>704212</further-classification>
</classification-national>
<invention-title id="d0e71">Method of compressing sounds in mobile terminals</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4437087</doc-number>
<kind>A</kind>
<name>Petr</name>
<date>19840300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>341 51</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5153913</doc-number>
<kind>A</kind>
<name>Kandefer et al.</name>
<date>19921000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>704260</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6018520</doc-number>
<kind>A</kind>
<name>Okada</name>
<date>20000100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370336</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6085079</doc-number>
<kind>A</kind>
<name>Tabeta</name>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>455403</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>GB</country>
<doc-number>2 339 644</doc-number>
<kind>A</kind>
<date>20000200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>JP</country>
<doc-number>2255977</doc-number>
<date>19901000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>JP</country>
<doc-number>2271723</doc-number>
<date>19901100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>JP</country>
<doc-number>9069785</doc-number>
<date>19970300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>KR</country>
<doc-number>1997-0056108</doc-number>
<date>19970700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>KR</country>
<doc-number>144633</doc-number>
<date>19980400</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>KR</country>
<doc-number>2000-0031184</doc-number>
<date>20000500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>KR</country>
<doc-number>2001-0066401</doc-number>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>KR</country>
<doc-number>2002-0097389</doc-number>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00014">
<othercit>Shamoon et al., “A Rapidly Adaptive Lossless Compression Algorithm for High Fidelity Audio Coding”, Mar. 29-31, 1994, Proceedings of Data Compression Conference, 1994. pp. 430-439.</othercit>
</nplcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00015">
<othercit>European Search Report, application No. 03 020 105.7, dated Oct. 24, 2003.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00016">
<othercit>Gyoun-Yon Cho, et al.; “<i>On the efficient compression algorithm of the voice traffic</i>”; 2<sup>nd </sup>Asia-Pacific Conference on Communications, Proceedings of Asia-Pacific Conference on Communications. APCC'95, Osaka, Japan, Jun. 13-16, 1995, pp. 166-170 vol. 1.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00017">
<othercit>“<i>Principle and Technology of Digital Communication</i>”, pp. 85-87, Oct. 31, 1999.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00018">
<othercit>Text of Examiner's Written Opinion (2 pps) from corresponding Chinese Application No. 03160040.9 referring to article titled “Principle and Technology of Digital Communication”.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>3</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>375244</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375242</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375253</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>704212</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>704211</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>704201</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>704200</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>704503</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>704504</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>381 34</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>341143</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20040077342</doc-number>
<kind>A1</kind>
<date>20040422</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Cho</last-name>
<first-name>Gyoun-Yon</first-name>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
<nationality>
<country>KR</country>
</nationality>
<residence>
<country>KR</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Ohlandt, Greeley, Ruggiero &amp; Perle L.L.P.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Pantech Co., Ltd</orgname>
<role>03</role>
<address>
<city>Seoul</city>
<country>KR</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Ghayour</last-name>
<first-name>Mohammed</first-name>
<department>2611</department>
</primary-examiner>
<assistant-examiner>
<last-name>Panwalkar</last-name>
<first-name>Vineeta</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method of compressing sounds in mobile terminals according to the present invention transforms pulse code modulations (PCM) codes, which are source data of bell sounds using recorded sounds or voice memos and are generated by sampling the sounds, through applying a differential method and, then, compresses the PCM codes using Lempel Ziv Welch (LZW) compresses technique, thus reducing a storage space required for storing bell sounds using sounds or voice memos in mobile terminals. According to the present invention, compression efficiency is maximized upon using LZW algorithm by transforming PCM code through applying differential method, thereby increasing restoration efficiency of original sounds and heightening compression efficiency by about 50%, compared with the existing compression storage method using ADPCM.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="127.42mm" wi="130.98mm" file="US07298783-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="153.33mm" wi="143.17mm" file="US07298783-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="223.18mm" wi="154.01mm" file="US07298783-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="202.95mm" wi="169.42mm" file="US07298783-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="221.49mm" wi="148.76mm" file="US07298783-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="106.76mm" wi="161.63mm" file="US07298783-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="110.83mm" wi="163.07mm" file="US07298783-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">The present application is claiming priority of Korean Patent Application No. 10-2002-0063541 dated Oct. 17, 2002.</p>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">1. Field of the Invention</p>
<p id="p-0004" num="0003">The present invention relates to a method of compressing bell sounds using recorded sounds and voice memos (hereinafter, referred to ‘sounds’) in mobile terminals and, more particularly, to a method of compressing sounds in mobile terminals, which compresses pulse code modulation (PCM) code generated by sampling sounds, using Lempel Ziv Welch (LZW) compression technique by applying a differential method.</p>
<p id="p-0005" num="0004">2. Description of the Related Art</p>
<p id="p-0006" num="0005">Generally, mobile terminals use Musical Instrument Digital Interface (MIDI) or recorded bell sounds in order to inform users of phone calls. MIDI bell sounds have been developing from existing mono-poly sounds to poly-poly sounds, and the recorded bell sounds use recorded music or voice to satisfy personal taste. Also, mobile terminals store voices so as to store details of the calling during on the line or to leave a memo during call waiting.</p>
<p id="p-0007" num="0006">Presently, a method of storing sounds including bell sounds and voice memos used in mobile terminals uses a method of storing sounds using Adaptive Differential Pulse Code Modulation (ADPCM) compression algorithm without using sounds coder/decoder (CODEC) for supporting high tone quality provided by mobile terminals. Such ADPCM compression algorithm can reduce a storage space by about half level, but it cannot resist a degradation of tone quality.</p>
<p id="p-0008" num="0007">In the existing method of storing sounds, voices are stored by transforming data sampled into PCM using ADPCM. PCM algorithm has been disclosed in International Telecommunications Union-Telecommunication Standardization Sector (ITU-T) G.711 Recommendations and ADPCM algorithm has been disclosed in ITU-T G.721 Recommendations.</p>
<p id="p-0009" num="0008">The sounds storage method using the existing ADPCM described above has been improved, but it still has problems in that memories are excessively consumed and original sounds cannot be restored as they are because the method uses compression technique causing damage of source data.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0010" num="0009">Accordingly, the present invention has been made to solve the above-mentioned problems occurring in the prior art, and an object of the present invention is to provide a method of compressing sounds, which increases compression efficiency by transforming input data to be suitable for LZW compression algorithm through applying differential method to PCM code generated by sampling sounds.</p>
<p id="p-0011" num="0010">In order to achieve at least the above objects, in whole or in parts, there is provided a method of compressing sounds in mobile terminals, including: initializing differential code corresponding to difference between adjacent PCM codes among PCM codes generated by sampling input sounds, in a dictionary table; sequentially reading PCM codes generated by sampling actually inputted input sounds, transforming the PCM codes into corresponding differential codes initialized in the dictionary table, and outputting the differential codes; and registering the outputted differential codes in a dictionary through dictionary generation algorithm.</p>
<p id="p-0012" num="0011">Preferably, in initializing the differential codes in the dictionary table, the differential codes are 6-bit differential codes and the number of the differential codes is 64.</p>
<p id="p-0013" num="0012">Preferably, said sequentially reading the PCM codes, transforming the PCM codes into differential codes, and outputting the differential codes includes: producing differential code variables that are differences between previously read PCM code and presently read PCM code; and differently outputting the differential codes according to the produced differential code variables' values.</p>
<p id="p-0014" num="0013">Preferably, in said differently outputting the differential codes according to the produced differential code variables' values, if the produced differential code variables' values are in a certain range, the differential code variables are outputted as they are, on the other hand, if the produced differential code variables' values are not in the certain range, the differential code variables are transformed and outputted.</p>
<p id="p-0015" num="0014">Preferably, the certain range is a range that the produced differential code variables' values are equal to or more than 0 and less than 31.</p>
<p id="p-0016" num="0015">Preferably, if the produced differential code variables' values are not in the certain range, the differential code variables are classified again according to the values of differential code variables, and the corresponding differential code variables are transformed in different manners according to the classified values and outputted.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE FIGURES</heading>
<p id="p-0017" num="0016">The above and other objects, features and advantages of the present invention will be more apparent from the following detailed description taken in conjunction with the accompanying drawings, in which:</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 1</figref> is a flow chart of processes for sound compression in mobile terminals according to one preferred embodiment of the present invention;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 2</figref> is a flow chart of differencing process illustrated in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 3</figref> is a flow chart of dictionary generation function in the compressing process illustrated in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 4</figref> illustrates output bit string of code word according to one preferred embodiment of the present invention;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 5</figref> illustrates a structure of code word table of sound data according to one preferred embodiment of the present invention;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 6</figref> illustrates the probability of PCM code of sampling sound data according to one preferred embodiment of the present invention; and</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 7</figref> illustrates the probability of differential code according to one preferred embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0025" num="0024">Hereinafter, preferred embodiments of the present invention will be described with reference to the accompanying drawings.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 1</figref> is a flow chart of processes for sound compression in mobile terminals according to one preferred embodiment of the present invention, whose first process is to initialize 64 code words for 6-bit differential code in a dictionary table (S<b>110</b>).</p>
<p id="p-0027" num="0026">That is to say, as a result of analysis of PCM code obtained by sampling the recorded sounds in order to construct a code word required for sounds compression, the difference between neighboring PCM codes (the absolute value of a certain value obtained by subtracting one PCM code from neighboring PCM code) is less than 32, so that only 64 code words that may be generated are stored in the dictionary table as differential codes, and code word variable (C1), which indicates the next code word to be registered, is initialized as the number of N5 (N5=65), which is initial dictionary entry number.</p>
<p id="p-0028" num="0027">Then, the stored PCM codes are sequentially read one by one (S<b>120</b>). The read PCM codes are processed with differencing so as to be mapped into 64 differential codes initialized in the dictionary table (S<b>130</b>). The differential codes after differencing are outputted to a function of compression (S<b>140</b>).</p>
<p id="p-0029" num="0028">According to the function of compression, the differential codes are compressed by using dictionary generation algorithm and the compressed code words are outputted and stored in a memory. At this time, the dictionary generation algorithm generates dictionary trees suitable for the differential codes.</p>
<p id="p-0030" num="0029">The steps (S<b>120</b>, S<b>130</b> and S<b>140</b>) are repeated until all the PCM codes obtained by sampling are read (S<b>150</b>).</p>
<p id="p-0031" num="0030">Then, when the differencing and compressing of all the PCM codes are completed, a flush is finally conducted (S<b>160</b>). According to a storage method in a memory, data is stored by 8-bit or 16-bit. Since the number of bits of compressed data is variable, final data stored in a memory may not correspond to 8-bit or 16-bit. Thus, bits left are filled with 0 and the above process is called ‘flush’.</p>
<p id="p-0032" num="0031">Respective processes of sound compression will be described in detail with reference to the drawings.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 2</figref> is a flow chart of a process for differencing the PCM codes (S<b>130</b>).</p>
<p id="p-0034" num="0033">Referring to <figref idref="DRAWINGS">FIG. 2</figref>, the corresponding differencing process is to transform 8-bit PCM code into 6-bit differential code, wherein PCM code previously read (old) is subtracted by PCM code presently read (cur) so as to obtain the differential value of PCM code, and the subtracted value is stored in differential code variable (temp) (S<b>201</b>).</p>
<p id="p-0035" num="0034">Then, it is checked whether or not the value of differential code variable is within a range of initialized differential codes so as to map input sounds into 64 differential codes initialized in the dictionary table, using the differential code variable.</p>
<p id="p-0036" num="0035">For example, if the value of differential code variable ranges from 0 to 31 (31 is not included) (S<b>202</b>), the corresponding differential code variable is outputted as a differential code because the corresponding code variable is a differential code initialized in the dictionary table (S<b>203</b>). And, if the value ranges from −32 to 0 (0 is not included) (S<b>204</b>), 6-bit complement for 2 of differential code variable is outputted as differential code (S<b>205</b>).</p>
<p id="p-0037" num="0036">However, when the value of differential code variable exceeds the range of differential code initialized in the dictionary table, differential code variable goes through a certain processing. When the value of differential code variable ranges from −160 to −32 (−160 is not included) (S<b>206</b>), differential code 32 is outputted in order to indicate that the value of differential code variable is less than −32 and, then, an absolute value of the corresponding differential code variable divided by 2 is outputted as differential code (S<b>207</b> and S<b>208</b>).</p>
<p id="p-0038" num="0037">When differential code variable ranges from 31 to 159 (159 is not included) (S<b>209</b>), differential code 31 is outputted in order to indicate that the corresponding differential code variable exceeds 31 and, then, a value of the corresponding differential code variable divided by 2 is outputted as differential code (S<b>210</b> and S<b>211</b>).</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 3</figref> is a flow chart showing a step (S<b>140</b>) of compressing differential code transformed by the differencing process, using dictionary generation algorithm. A dictionary generated for compressing differential code can be previously generated upon fabricating mobile terminals or upon initially storing sounds.</p>
<p id="p-0040" num="0039">Referring to <figref idref="DRAWINGS">FIG. 3</figref>, a case where a character string is not added to the dictionary is one where the character string exceeds the maximum number (N7) of character string (S<b>301</b>) or where the character string is previously registered in the dictionary (S<b>302</b>). The character string is allocated to a new code word C1 except upon the above two cases (S<b>303</b>).</p>
<p id="p-0041" num="0040">Then, new code word C1 increases by 1 so as to be allocated to the code word of character string to be generated next (S<b>304</b>). When the increased C1 is equal to or more than the number of code word (N2) (S<b>305</b>), the number of N5, initial dictionary entry number, is allocated to the C1 (S<b>306</b>). The steps (S<b>304</b> to S<b>306</b>) are repeated until a node allocated to the C1 is a leaf node indicating last character of the character string in the dictionary tree, or a node that is not used (C1=NULL) (S<b>307</b>).</p>
<p id="p-0042" num="0041">Where the node allocated to the C1 is a leaf node or the node that is not used, C1 is deleted from the dictionary tree in order for new code word of the character string to be allocated (S<b>308</b>).</p>
<p id="p-0043" num="0042">When the compression has been completed through the above steps, generated code word is outputted and stored in a memory. To reduce the size of compressed code word, a process is conducted as follows. That is to say, in order to obtain accurate character string when decompressing the compressed code word, the corresponding code word is outputted as to satisfy the following equations.
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(<i>C</i>1+<i>lim</i>)≦2<sup>┌log</sup><sup><sub2>2</sub2></sup><sup>(C1+1)┐</sup>−1  [equation 1]<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>lim=C</i>3<i>−C</i>1−1  [equation 2]<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>C</i>3=2<sup>┌ log</sup><sup><sub2>2</sub2></sup><sup>(C1+1)┐</sup>  [equation 3]<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where C1 is the number of code word presently allocated, lim means a limit value capable of reducing bits, and <sup>┌log</sup><sup><sub2>2</sub2></sup><sup>(C1+1)┐</sup> means minimum integer larger than <sup>log</sup><sup><sub2>2</sub2></sup><sup>(C1+1)</sup>. Accordingly, when code word is changed into bit string, if the code word is smaller than a predetermined limit value lim, it is outputted as <sup>┌log</sup><sup><sub2>2</sub2></sup><sup>(C1+1)┐−1</sup> bit, and if the code word is larger than a limit value, it is outputted as <sup>┌log</sup><sup><sub2>2</sub2></sup><sup>(C1+1)┐</sup> bit.
</p>
<p id="p-0044" num="0043">For example, as shown in <figref idref="DRAWINGS">FIG. 4</figref>, since lim=(1024-750-1)=273, when C1 is 750. Code words ranging 0 to 273 upon being compressed are coded by 9 bits and outputted, and code words ranging 274 to 749 are coded by 10 bits after adding 274 to respective code words and are outputted.</p>
<p id="p-0045" num="0044">When decompressed, code word bits are read by 9 bits. If the read value is smaller than 274, the value itself is taken as a code word, on the other hand, if the value is larger than 274, code word bits are read again by 10 bits and a certain value subtracting 274 from the read value is taken as a code word.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 5</figref> illustrates a structure of the dictionary table according to one preferred embodiment of the present invention. The code words ranging 0 to 63 are defined as differential code, code words ranging 64 to 127 as 7-bit coding area, code words ranging 128 to 255 as 8-bit coding area, and finally code words ranging 2048 to 4095 as 12-bit coding area.</p>
<p id="p-0047" num="0046">In order to evaluate performance of the method of compressing sounds according to the present invention, compression algorithm is implemented using C language and tested. For sound data, actual human voice is recorded at 8000 samples per second (64 Kbps) and used.</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 6</figref> illustrates the probability of PCM code of sampling sound data, and <figref idref="DRAWINGS">FIG. 7</figref> illustrates the probability of differential code, which records difference based on data from <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0049" num="0048">Compressibility of sounds according to the present invention is obtained by dividing the size of sounds data before compression by the size of sounds data after compression. With the result of this, samples 1 to 4 have compressibility of 3.00, 3.66, 3.35, and 2.5, respectively and average value of 3.13.</p>
<p id="p-0050" num="0049">As described above, the present invention can reduce the number of kinds of code word, a parameter which heightens performance of LZW compression algorithm, by applying differential method to PCM code generated by sampling sounds and can enhance sound compression efficiency by increasing the number of repeated character string.</p>
<p id="p-0051" num="0050">Although preferred embodiments of the present invention have been described for illustrative purposes, those skilled in the art will appreciate that various modifications, additions and substitutions are possible, without departing from the scope and spirit of the invention as disclosed in the accompanying claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of compressing sounds in mobile terminals, comprising:
<claim-text>initializing a differential code corresponding to difference between adjacent PCM codes among PCM codes generated by sampling input sounds in a dictionary table;</claim-text>
<claim-text>sequentially reading PCM codes generated by sampling actually inputted input sounds, transforming the PCM codes into corresponding differential codes initialized in the dictionary table, and outputting the differential codes; and</claim-text>
<claim-text>registering the outputted differential codes in a dictionary through a dictionary generation algorithm,</claim-text>
<claim-text>wherein said sequentially reading the PCM codes, transforming the PCM codes into differential codes, and outputting the differential codes comprises:</claim-text>
<claim-text>producing differential code variables that are differences between a previously read PCM code and a presently read PCM code; and</claim-text>
<claim-text>differently outputting differential codes according to the produced differential code variables' values in said differently outputting differential codes are according to the produced differential code variables' values wherein the differential code variables are outputted as they are when the produced differential code variables' values are in a certain range, and the differential code variables are transformed and outputted when the produced differential code variables' are not in the certain range.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the certain range is a range that the produced differential code variables' values are equal to or more than 0 and less than 31.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the differential code variables are classified again according to the values of differential code variables when the produced differential code variables' values are not in the certain range, and the corresponding differential code values are transformed in different manners according to the classified values and outputted.</claim-text>
</claim>
</claims>
</us-patent-grant>
