<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07297044-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07297044</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10228447</doc-number>
<date>20020826</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>784</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>A</section>
<class>63</class>
<subclass>H</subclass>
<main-group>33</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>446454</main-classification>
<further-classification>446175</further-classification>
</classification-national>
<invention-title id="d0e53">Method, apparatus, and system to synchronize processors in toys</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>3846603</doc-number>
<kind>A</kind>
<name>Houser</name>
<date>19741100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>200458</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>4169335</doc-number>
<kind>A</kind>
<name>Betancourt</name>
<date>19791000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>446297</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>4913676</doc-number>
<kind>A</kind>
<name>Koguchi et al.</name>
<date>19900400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>446300</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5446236</doc-number>
<kind>A</kind>
<name>Nakada et al.</name>
<date>19950800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification> 84102</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5452901</doc-number>
<kind>A</kind>
<name>Nakada et al.</name>
<date>19950900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>446454</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5587545</doc-number>
<kind>A</kind>
<name>Nakada et al.</name>
<date>19961200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>5873765</doc-number>
<kind>A</kind>
<name>Rifkin et al.</name>
<date>19990200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6037679</doc-number>
<kind>A</kind>
<name>Pirillo</name>
<date>20000300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>307125</main-classification></classification-national>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6075195</doc-number>
<kind>A</kind>
<name>Gabai et al.</name>
<date>20000600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6110000</doc-number>
<kind>A</kind>
<name>Ting</name>
<date>20000800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6246927</doc-number>
<kind>B1</kind>
<name>Dratman</name>
<date>20010600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>700246</main-classification></classification-national>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6264523</doc-number>
<kind>B1</kind>
<name>Simmons</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>446143</main-classification></classification-national>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>6491566</doc-number>
<kind>B2</kind>
<name>Peters et al.</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>6682392</doc-number>
<kind>B2</kind>
<name>Chan</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>446335</main-classification></classification-national>
</citation>
<citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>6822154</doc-number>
<kind>B1</kind>
<name>Thai</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification> 84609</main-classification></classification-national>
</citation>
<citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>2002/0077021</doc-number>
<kind>A1</kind>
<name>Cho et al.</name>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>2002/0155783</doc-number>
<kind>A1</kind>
<name>Chan</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>2002/0187722</doc-number>
<kind>A1</kind>
<name>Fong et al.</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00019">
<document-id>
<country>JP</country>
<doc-number>07163765</doc-number>
<kind>A</kind>
<date>19950600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00020">
<document-id>
<country>JP</country>
<doc-number>07246284</doc-number>
<kind>A</kind>
<date>19950900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>26</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>446436</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>446454</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>446175</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>700245-249</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>9</number-of-drawing-sheets>
<number-of-figures>10</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20040038620</doc-number>
<kind>A1</kind>
<date>20040226</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Small</last-name>
<first-name>David</first-name>
<address>
<city>San Jose</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Farley</last-name>
<first-name>Brian</first-name>
<address>
<city>Dublin</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Blakely, Sokoloff, Taylor &amp; Zafman LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Shoot the Moon Products II, LLC</orgname>
<role>02</role>
<address>
<city>Pleasanton</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Pezzuto</last-name>
<first-name>Robert E.</first-name>
<department>3714</department>
</primary-examiner>
<assistant-examiner>
<last-name>Rada, II</last-name>
<first-name>Alex P.</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">The invention generally relates to a method, apparatus, and system to synchronize timers or clocks of toys. A play-set includes a first toy having a first timer and a start button. The first toy can be designated as a master when the start button is depressed. After being designated as the master, the first toy sends a synchronization signal to begin synchronization. The play-set also includes a second toy communicatively linked to the first toy. The second toy has a second timer, and synchronizes the second timer to the first timer of the first toy in response to the synchronization signal. After timer synchronization, scripts are selected and a script start signal synchronizes the beginning of script play.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="131.23mm" wi="183.81mm" file="US07297044-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="146.22mm" wi="195.33mm" orientation="landscape" file="US07297044-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="215.98mm" wi="148.93mm" orientation="landscape" file="US07297044-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="189.40mm" wi="149.61mm" orientation="landscape" file="US07297044-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="219.03mm" wi="173.48mm" orientation="landscape" file="US07297044-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="214.88mm" wi="122.85mm" file="US07297044-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="251.12mm" wi="135.97mm" orientation="landscape" file="US07297044-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="199.47mm" wi="171.87mm" orientation="landscape" file="US07297044-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="231.82mm" wi="170.52mm" orientation="landscape" file="US07297044-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="224.37mm" wi="98.04mm" orientation="landscape" file="US07297044-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF INVENTION</heading>
<p id="p-0002" num="0001">The invention generally relates to a method, apparatus, and system to synchronize programs, timers or clocks of microprocessors or audio processors used in toys.</p>
<heading id="h-0002" level="1">BACKGROUND OF INVENTION</heading>
<p id="p-0003" num="0002">Over the last few decades, designers in the toy field have developed many types of toys using low cost microprocessors and audio processors. An audible toy can be defined as a device that outputs audio or audible sounds. The audio or audible sounds can be used to narrate a portion of a dialog. These low cost processors are typically operated with resistor oscillators to generate an internal processor clock. The oscillation frequency of these resistor oscillators can vary dramatically from unit to unit due to a number of factors. Many of these processor resistor oscillators have an oscillation specification tolerance of +/−10% for any given resistor value, a voltage deviation tolerance of up to 12.5% per volt and a temperature deviation tolerance of up to 7% over the operating range. When designing toy applications using these low cost processors, frequency deviations in the processor clock may need to be taken into account.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0004" num="0003"><figref idref="DRAWINGS">FIG. 1A</figref> illustrates an exemplary play-set or neighborhood with a plurality of toys or toy characters in accordance with one embodiment of the invention.</p>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 1B</figref> illustrates an alternative play-set or neighborhood in accordance with one embodiment of the invention.</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 2A</figref> illustrates a pair of toys or toy characters that can synchronize with each other via wireless communication in accordance with one embodiment of the invention.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 2B</figref> illustrates a plurality of toys or toy characters touching hands in order to facilitate wired communication in accordance with one embodiment of the invention.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 2C</figref> shows an exemplary play-set or neighborhood having a stage in order to facilitate wired communication in accordance with one embodiment of the invention.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 3</figref> is an exemplary flowchart outlining the synchronization process and the independent performance of scripts by toy characters in accordance with one embodiment of the invention.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 4</figref> shows an exemplary cycle diagram for each of N toy characters in accordance with one embodiment of the invention.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 5A</figref> illustrates an exemplary functional block diagram of the components for an toy character with wired communication.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 5B</figref> illustrates an exemplary functional block diagram for of components for toy characters with wireless communication.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an exemplary timing diagram showing exemplary activities or cycles implemented by the toys or toy characters in a play-set or neighborhood.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0014" num="0013">The invention relates to a method, apparatus, and system to synchronize programs, timers or clocks of toys. The synchronization process allows processors, such as microprocessors or sound processors in separate toys or toy characters to synchronize the programs and/or timing structure in each with respect to one another. The program and timing synchronization may be facilitated by a momentary dual contact between the toys, thereafter the toys can be disconnected and remain in synchronization for a period of time. The program and timing synchronization can also be facilitated wirelessly by a very short burst of communication between the toys, thereafter the toys need not communicate and will remain in time synchronization for a period of time. Multiple toys can be synchronized together by selecting one as a master with other toys in a neighborhood remaining as slaves. The master toy generates a synchronization timing pulse that is broadcast in the neighborhood to all the slave toys and stored as a base reference for timing. Each slave toy measures the timing pulse in order to synchronize their processors timers with the master toy's processor timers.</p>
<p id="p-0015" num="0014">Each processor has a timer which is a programmable division of the CPU clock. The timer in each processor may be a hardware timer or counter or alternatively a software timer or counter. In either case, the timer or counter is used for synchronization. In a system, the slave toys will synchronize their timers to match that of the master toy so that scripts can be played by each in a synchronized manner. With their timers or counters running at the same speed and advancing at the same time, scripted events can be triggered at appropriate moments in time.</p>
<p id="p-0016" num="0015">Each count of the timer or counter may be several hundred to several million processor clock cycles depending upon the frequency of processor that is used. The processor clock in each toy of a neighborhood may be operating at a different frequency due to a number of factors. These factors may include that each processor is designed to operate at a different frequency or that the processors are running at different frequencies due to frequency tolerance variations attributed to processor component tolerances, external oscillator component tolerances, voltage variances or temperature variances. In order to have the timer or counter in each toy advance at the same time, the toys in the neighborhood must determine the number of counts of the processor clock that each toy measures for a particular period of time. To facilitate this time period synchronization, the master unit transmits a synchronization signal to all the slaves in the neighborhood. This synchronization signal declares to all units in the neighborhood a period of time as perceived by the master. This time period for instance may be 512 counts of the master units' counter which for purposes of example may represent 64 ms as perceived by the master processor. Each slave unit measures this time period using its own counter that may be running at a different rate due to differences in its processor clock frequency. The slave units then divide this measured time period by 512 counts as this is the number of counts used by the master unit to generate the signal. In doing so each slave unit can determine the number of its own CPU clock cycles that represent 1 count of the master units timer. By way of example, slave unit <b>1</b> may measure this time period as 457 counts and slave unit <b>2</b> may measure this time period as 590 counts. The slave units store this number of CPU clock cycles per timer count in order to allow all units in the neighborhood to match the timer counting rate of the master unit. The matched timers can now be used by each unit to control a script or program event timer so that each unit will be able to advance the script or program at this agreed upon rate and thereby maintain synchronization with respect to one another.</p>
<p id="p-0017" num="0016">Whether or not the toys processors are synchronized, the master unit must generate a program start pulse. If a script length is very short such as 5 seconds to 10 seconds in length, very accurate processor timing synchronization is not as critical as starting the scripts simultaneously. If on the other hand the script length is long such as 30 seconds to many minutes, timer synchronization becomes very critical. In either event, it is desirable that all scripts start at substantially the same time.</p>
<p id="p-0018" num="0017">The synchronization provided by the invention allows separate toys to perform various tasks in synchronization such as simulating an intelligent voice dialogue without having the toys in actual continuous communication with one another. Pre-programmed scripts can be used to generate a voice dialogue, motion functions, light sequences or any other I/O script to form a play sequence of one or more toys. In one embodiment, each toy may be assigned a designated role with a designated script. There may be lead roles and supporting roles performed by the synchronized toys. In another embodiment, each toy has all the scripts for each role. The toy selected as the master toy plays the lead role and the other toys remain as slave toys and play supporting roles. In another embodiment, there are multiple toys in a neighborhood with identical lead roles for which only one will play the lead role at a time. The remaining toys with the identical lead roles return to a lower power sleep mode in one embodiment or alternatively play a supporting role in another embodiment. In all cases scripts are programmed to take into account only the toys that are present during the synchronization process. A line of toys may contain eight unique characters or toy variations. The scripts can be written to accommodate all eight unique characters or toy variations. In practice, there may be anywhere from two to eight toys present in a neighborhood for synchronization. In the synchronization process the toys in a neighborhood include a unique character or toy identification. The identity of the toys or toy characters present and the identity of the scripts to be performed can be communicated during synchronization. The pre-programmed scripts may be embedded within the software code of the processors or alternatively stored external to the processor. In another embodiment, the script can be hard coded in hardware.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 1A</figref> illustrates an exemplary play-set or neighborhood <b>100</b>A with a plurality of toys or toy characters <b>102</b> in accordance with one embodiment of the invention. The plurality of toys or toy characters <b>102</b> may also be considered as a toy system or a system of toys. The play-set or neighborhood <b>100</b>A may be a room within a house or an area in which the plurality of toy characters may communicate. The neighborhood <b>100</b>A includes a first toy character <b>102</b>A, second toy character <b>102</b>B, a third toy character <b>102</b>C, and a fourth toy character <b>102</b>D. It should be noted that more or less than four toy characters <b>102</b> can be included in the neighborhood <b>100</b>A with at least two toy characters <b>102</b> being in the neighborhood for the purpose of synchronization. In one embodiment, the toys or toy characters in the neighborhood are audible toys or audible toy characters with audible sound generation. In another embodiment, the toys or toy characters in the neighborhood are mechanical toys or mechanical toy characters with mechanical movement. In another embodiment, the toys or toy characters in the neighborhood are toys or toy characters with both mechanical movement and audible sound generation.</p>
<p id="p-0020" num="0019">The toy characters <b>102</b>A-<b>102</b>D have the capability of communicating wirelessly among themselves. For the purpose of synchronization, each of the toy characters <b>102</b>A-<b>102</b>D initially acts as a slave toy or slave toy character initially listening for a synchronization signal. Each of the toy characters <b>102</b>A-<b>102</b>D includes a button or switch or some other means for an end user to select one as a master toy. For example, a user may choose toy character <b>102</b>B to be the master by pressing a button or switch or other means thereon. In which case, the remaining toy characters in the neighborhood <b>100</b>A remain slaves. With toy character <b>102</b>B being the master, toy characters <b>102</b>A, <b>102</b>C, and <b>102</b>D are slaves to the toy character <b>102</b>B for the purposes of synchronization. The button or switch may be a push-button to close a switch in a circuit or a slideable knob that slides to close a switch for example.</p>
<p id="p-0021" num="0020">Furthermore, each of the toys or toy characters <b>102</b>A-<b>102</b>D in the neighborhood <b>100</b>A has a script of sounds and/or voices that each toy character may uniquely generate through a speaker. For example, assume that the play-set or neighborhood <b>100</b>A is a firehouse with the toy characters <b>102</b>A-<b>102</b>D being firemen. In which case, a user may select or designate one of the firemen <b>102</b>A-<b>102</b>D to be the Fire Chief and the master for synchronization purposes. To designate one of the firemen to be the Fire Chief and the master, the user may push a button or switch on the selected fireman to select it as the Fire Chief and the master.</p>
<p id="p-0022" num="0021">The master toy character sends out a synchronization signal to the slave toy characters that are listening for the synchronization signal. The slave toys or toy characters then synchronize their timers or clocks to this synchronization signal, so that each toy character may audibly and synchronously perform its respective role in the neighborhood <b>100</b>A in accordance with a designated script. Once the toy characters <b>102</b>A-<b>102</b>D have synchronized their respective timers or clocks, they may independently run and generate audible sounds or programmed events in accordance with a designated script. For example, if toy character <b>102</b>B is the Fire Chief and the master, it may audibly report through its speaker into the neighborhood <b>100</b>A that there is a fire somewhere, and may ask the other firemen to get ready to go to the fire. The other firemen, functioning as slaves or slave toy characters <b>102</b>A, <b>102</b>C-<b>102</b>D, may then report to the master <b>102</b>B that they are ready to go to the fire and thus simulate that they are interacting with one another.</p>
<p id="p-0023" num="0022">Referring now to <figref idref="DRAWINGS">FIG. 1B</figref>, an alternative embodiment of the invention is described. <figref idref="DRAWINGS">FIG. 1B</figref> illustrates an alternative play-set or neighborhood <b>100</b>B in accordance with one embodiment of the invention. The neighborhood <b>100</b>B may be a construction site, a firehouse, a racing pit, a police station or a bakery or some other ordinarily experienced setting in which individuals may audibly communicate. In this embodiment, the toy characters <b>102</b>A′, <b>102</b>B′, <b>102</b>C′ and <b>102</b>D′, initially touch each other for the purpose of synchronization. With the toy characters <b>102</b>A′, <b>102</b>B′, <b>102</b>C′ and <b>102</b>D′ physically touching, the user may select one toy character to be a master and the remaining toy characters to be slaves. After the selection of the master, the toy characters <b>102</b>′ synchronize to the frequency and timing of the clock of the processor of the master. Once the toy characters <b>102</b>′ are synchronized, they may be moved away from each other to positions within the neighborhood and may simulate their interactivity by audibly communicating outward into the neighborhood <b>100</b>B. <figref idref="DRAWINGS">FIG. 1B</figref> illustrates toy characters <b>102</b>B′, <b>102</b>C′ and <b>102</b>D′ being moved in the neighborhood after synchronization with the master toy character <b>102</b>A′.</p>
<p id="p-0024" num="0023">Referring now to <figref idref="DRAWINGS">FIG. 2A</figref>, toy characters <b>102</b>A and <b>102</b>B are illustrated. The toy characters <b>102</b>A and <b>102</b>B can synchronize with each other via wireless communication. The wireless communication <b>202</b> may be infrared communication (IR), radio frequency communication (RF), Ultrasound, Magnetic-wave, visible light or any other techniques that allows sensing of the presence or absence of a signal without direct contact between units. Each toy character <b>102</b>A and <b>102</b>B includes a start button <b>204</b> and a speaker <b>206</b>. The user can utilize the start button <b>204</b> to select which of the toy characters in a neighborhood is to be the master while the other toy characters in the neighborhood remain slaves. The speaker <b>206</b> can be used to generate sound effects to simulate interaction between the toy characters <b>102</b>.</p>
<p id="p-0025" num="0024">Each toy character <b>102</b> may include an antenna to transmit and receive wireless RF signals. For example, the antenna may be located in the arm <b>209</b> of the toy character <b>102</b>. Alternatively, the antenna may be placed elsewhere on the toy character <b>102</b>. In the case of Ultrasound, each toy character <b>102</b> may further include an ultrasonic transducer to generate and receive ultrasonic signals. In the case of infrared each toy may further include an infrared LED and an infrared detector to transmit and receive infrared signals.</p>
<p id="p-0026" num="0025">Referring now to <figref idref="DRAWINGS">FIG. 2B</figref>, toy characters <b>102</b>A′, <b>102</b>B′ and <b>102</b>C′ are illustrated. The toy characters <b>102</b>A′, <b>102</b>B′, and <b>102</b>C′ touch each other at the hands <b>208</b> in order to facilitate wired communication. For example, hands <b>208</b> of characters <b>102</b>A′, <b>102</b>B′, and <b>102</b>C′ are coupled together in order to facilitate communication between them. While the hands <b>208</b> can be used as the connection for communication, other contacts and connections may be made between the toy characters <b>102</b>′ to facilitate wired communication among the characters <b>102</b>′ in a neighborhood.</p>
<p id="p-0027" num="0026">Each toy character <b>102</b>′ includes the start button <b>204</b> and the speaker <b>206</b>. As discussed previously, the start button <b>204</b> is for selecting which of the characters <b>102</b>′ shall be the master to which the other remaining characters will be slaves for synchronization purposes. In <figref idref="DRAWINGS">FIG. 2B</figref>, the start button <b>204</b> is shown on top of the head <b>210</b> of each of the characters <b>102</b>′. In practice, the start button <b>204</b> may be located elsewhere on the character and may also be a switch a touch pad or any other user activated input to the processor.</p>
<p id="p-0028" num="0027">Referring now to <figref idref="DRAWINGS">FIG. 2C</figref>, an exemplary play-set or neighborhood <b>100</b>C having toy characters <b>102</b>A′,<b>102</b>B′ and a stage <b>220</b> is shown. In <figref idref="DRAWINGS">FIG. 2C</figref>, wired communication may occur through the neighborhood or play-set <b>100</b>C. A stage <b>220</b> may be provided so that the characters <b>102</b>′ may communicate using wired communication. The feet <b>215</b> of each character <b>102</b>′ can couple to the stage <b>220</b> for wired communication. Thus The characters <b>102</b>′ may be physically separated yet be able to synchronize through the stage <b>220</b> and their respective feet <b>215</b>.</p>
<p id="p-0029" num="0028">Referring now to <figref idref="DRAWINGS">FIGS. 2A-2C</figref>, each toy character <b>102</b> and <b>102</b>′ includes a processor <b>200</b>. The processor <b>200</b> in each may be operating at a different CPU clock frequency with respect to the others due to CPU oscillator specification tolerances, age and drift in the clock oscillation circuitry, component variations, voltage differences provided by the battery or power <b>201</b> to the processor <b>200</b> and temperature variations. Each toy character <b>102</b> and <b>102</b>′ also includes a battery <b>201</b> coupled to the processor <b>200</b> to provide power to the processor <b>200</b>. Each toy character <b>102</b> further includes a speaker <b>206</b> coupled to the processor <b>200</b> <b>50</b> that the processor can generate audible sounds. The start switch or button <b>204</b> may have one pole that couples to ground or power and another pole that couples to the processor <b>200</b> in order to signal the processor <b>200</b> that the character <b>102</b> or <b>102</b>′ has been selected as a master. Wireless communication and wired communication allows one processor <b>200</b> to communicate to other processors <b>200</b> to synchronize the toy characters <b>102</b> or <b>102</b>′ in a neighborhood <b>100</b>A, <b>100</b>B, or <b>100</b>C.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 3</figref> is an exemplary flowchart outlining a process <b>300</b> in which the toys or toy characters in the play-set or neighborhood synchronize their clocks and independently perform their respective roles in accordance with a designated script. In box <b>302</b>, the units or characters are initially all slaves. Each toy character listens for a synchronization signal emanated from a chosen master or a selection by a user to become a master.</p>
<p id="p-0031" num="0030">In box <b>304</b>, a master is chosen by having its start button or switch selected. In box <b>306</b>, the master communicates to the slaves that it is time to synchronize. In box <b>308</b>, the master and the slaves synchronize themselves together. The synchronization process may contain one or all of the following functions; wake up signal, script identification, timer synchronization pulse, toy identification and script start signal. In box <b>310</b>, the master and slaves perform their respective roles in a designated script in unison. The, toy or toy characters can independently perform their respective roles in a designated script, such that continuous communication among the toy characters would not be necessary. In box <b>312</b>, the toy characters have completed performing their respective roles in the designated script, and return to the begin box <b>302</b> where they become slaves once again and are listening for the synchronization signal or selection by a user to become a master so that the process <b>300</b> can be repeated.</p>
<p id="p-0032" num="0031">Referring now to <figref idref="DRAWINGS">FIG. 4</figref>, an exemplary cycle diagram is illustrated for N toy characters. Cycle diagram <b>400</b>A illustrates a toy character that is initially a slave then becomes a master momentarily and then after completing the script becomes a slave once again. The cycle diagram <b>400</b>B illustrates a character that is continuously a slave with respect to the cycles of cycle diagram <b>400</b>A. The cycle diagram <b>400</b>N represents the other N slaves that may be in the neighborhood and that remain in a continuous slave mode or cycle with respect to the cycles of cycle diagram <b>400</b>A illustrated in <figref idref="DRAWINGS">FIG. 4</figref>. Since the scripts of each character may differ in length, the audible signals generated by each may end earlier or later than one another.</p>
<p id="p-0033" num="0032">All toy characters are initially slaves listening for a synchronization signal as illustrated in cycle diagrams <b>400</b>A, <b>400</b>B, and <b>400</b>N. The user may designate one toy character as the master for example by selecting the start button. The start button is illustrated as designating a master in cycle <b>402</b> of the cycle diagram <b>400</b>A. Once the start button is depressed, the master communicates to the slaves to begin the wake-up and acknowledgement cycle <b>404</b>A, <b>404</b>B, . . . , <b>404</b>N. During the wake-up and acknowledgement cycle <b>404</b>A, <b>404</b>B, . . . , <b>404</b>N, the slaves restart themselves.</p>
<p id="p-0034" num="0033">Following the wake-up and acknowledgement cycle <b>404</b>A, <b>404</b>B, . . . , <b>404</b>N, the master communicates to the slaves to begin the synchronization cycle <b>406</b>A, <b>406</b>B, . . . , <b>406</b>N. During the synchronization cycle <b>406</b>A, <b>406</b>B, . . . , <b>406</b>N, the slaves synchronize their timers or clocks to the clock of the master. At the end of the synchronization cycle <b>406</b>A, <b>406</b>B, . . . , <b>406</b>N, the toy characters are in sync and can begin the roll-call cycle <b>408</b>A, <b>408</b>B, . . . , <b>408</b>N. During the roll-call cycle, the slaves generally announce their presence to the master.</p>
<p id="p-0035" num="0034">After the roll-call cycle <b>408</b>A, <b>408</b>B, . . . , <b>408</b>N is complete, the toy characters begin a script selection cycle <b>410</b>A, <b>410</b>B, . . . , <b>410</b>N to choose a script. Following the script selection cycle <b>410</b>A, <b>410</b>B, . . . , <b>410</b>N, the master toy may generate a script start signal <b>411</b> in order to initiate the slave toy characters to perform their respective roles in the chosen or designated script during the script play cycle <b>412</b>A, <b>412</b>B, . . . , <b>412</b>N. That is, the script start signal <b>411</b> synchronizes the script play and begins the script play cycle <b>412</b>A, <b>412</b>B, . . . , <b>412</b>N. After the script start signal <b>411</b> and during the script play cycle <b>412</b>A, . . . , <b>412</b>N, there is no more communication needed between the toy characters. At the end of the script play cycle <b>412</b>A, <b>412</b>B, . . . , <b>412</b>N of each respective character, the character returns to a slave mode listening for another synchronization signal from a character that is chosen to be a master. During cycle <b>414</b>A, cycle <b>414</b>B, and cycle <b>414</b>N, the toy characters return to being slaves. As discussed previously, the master is the character which has its start button pushed first.</p>
<p id="p-0036" num="0035">After being synchronized together in unison, each of the toy characters runs open loop performing their script independent of each other. The script is in essence a toy dialog simulating interaction between toy characters in the play-set or neighborhood. The script generally consists of multiple roles. In one embodiment, the script consists of six roles (one role for the master, and five roles for the slaves). In this embodiment, if more than six roles are present in the play-set or neighborhood, one or more slave characters would be duplicates of either one or more slave characters or of the master character. If multiple units of the same character exist in the play-set or neighborhood, all units of that character will perform the same role.</p>
<p id="p-0037" num="0036">Referring now to <figref idref="DRAWINGS">FIG. 5A</figref>, an exemplary functional block diagram of the components for a wired character <b>102</b>′ is illustrated. In <figref idref="DRAWINGS">FIG. 5A</figref>, a power supply or battery <b>201</b> has one terminal coupled to ground <b>500</b> and another terminal coupled to node <b>501</b>, referred to as positive power supply terminal. The processor <b>200</b> couples to the positive power supply terminal <b>501</b> and also to ground <b>500</b>. The processor <b>200</b> has an oscillator input coupled to a resistor <b>502</b> to generate an oscillating clock. An opposite end of the resistor <b>502</b> couples to the positive power supply terminal <b>501</b> to couple a current into the oscillator input to cause an oscillator circuit within the processor <b>200</b> to oscillate a specific frequency based of the value of the resistor.</p>
<p id="p-0038" num="0037">The processor <b>200</b> may also couple to a wired transmitter connector <b>504</b> through a transmit terminal, and to a wired receiver connector <b>506</b> through a receive terminal. In addition, the processor <b>200</b> couples to a pole of the start switch <b>204</b> through a master selection input terminal. The processor <b>200</b> further includes a counter or timer <b>514</b>. The counter or timer <b>514</b> may be a hardware counter or timer implemented within the processor or alternatively can be a software counter or timer which is programmed into processor.</p>
<p id="p-0039" num="0038">The script may be stored into an on chip memory <b>510</b> within the processor <b>200</b> or alternatively may be stored into an external memory chip <b>510</b>′. The processor <b>200</b> couples to the speaker <b>206</b> to convert the electrical signals into audible sounds. The processor <b>200</b> uses the stored script to generate electrical signals.</p>
<p id="p-0040" num="0039">In one embodiment, a pole of the start button <b>204</b> couples to the positive power supply <b>501</b>. In an alternate embodiment, the pole of the start button <b>204</b> may couple to ground <b>500</b>. In any event the start button is coupled to the processor in such a way as to allow the user to send a signal to the processor.</p>
<p id="p-0041" num="0040">The wired transmitter connector <b>504</b> may be a plug or a jack or a contact that can electrically couple to a wired receiver connector <b>506</b> of another character. The wired receiver connector <b>506</b> may be a plug or a jack or a contact that can electrically couple to a wired transmitter connector <b>504</b> of another character. Alternatively connectors <b>504</b> and <b>506</b> may be a single 2pole plug or jack.</p>
<p id="p-0042" num="0041">Referring now to <figref idref="DRAWINGS">FIG. 5B</figref>, a functional block diagram of components in an toy character to facilitate wireless communication is illustrated. The wired transmitter connector <b>504</b> and the wired receiver connector <b>506</b> in <figref idref="DRAWINGS">FIG. 5A</figref> are replaced with a wireless transmitter <b>524</b> and a wireless receiver <b>526</b> respectively in <figref idref="DRAWINGS">FIG. 5B</figref>. Otherwise the functional blocks are similar to those described in <figref idref="DRAWINGS">FIG. 5A</figref> and will not be repeated here again for brevity.</p>
<p id="p-0043" num="0042">The wireless transmitter <b>524</b> may be an infrared wireless transmitter, a radio frequency wireless transmitter, an Ultrasound transmitter, a Magnetic-wave transmitter, or other known types of wireless transmitter. In the case of a radio frequency transmitter, wireless transmitter <b>524</b> would couple to an antenna <b>522</b>A. In case the wireless transmitter <b>524</b> is an infrared wireless transmitter, a lens <b>520</b>A may or may not be placed in front of an infrared light emitting diode in order to collimate outgoing infrared signals.</p>
<p id="p-0044" num="0043">The wireless receiver <b>526</b> may be an infrared wireless receiver, a radio frequency wireless receiver, an Ultrasound receiver, a Magnetic-wave receiver, or other known types of wireless receiver. In the case of a radio frequency receiver, the wireless receiver <b>526</b> may couple to the antenna <b>522</b>B, alternatively antenna <b>522</b>B may be physically the same antenna as <b>522</b>A. In the case of an infrared wireless receiver, a lens <b>520</b>B may or may not be placed in front of an infrared photo-diode to provide focus and optical gain to receive incoming infrared signals.</p>
<p id="p-0045" num="0044">Referring now to <figref idref="DRAWINGS">FIG. 6</figref>, an exemplary timing diagram of signals showing exemplary activities or cycles implemented by the toys or toy characters <b>102</b> or <b>102</b>′ in a play-set or neighborhood is illustrated. It should be noted that the timing diagram of signals of <figref idref="DRAWINGS">FIG. 6</figref> shows exemplary activities or cycles implemented-for a neighborhood or play-set including six toys or toy characters. It is to be understood that two or more toy characters may be present in a neighborhood and synchronized together. Alternatively, a single toy or toy character may be in a neighborhood and operate in a stand alone or single unit mode.</p>
<p id="p-0046" num="0045">The baseband signals communicated between toys in a neighborhood, such as those illustrated in <figref idref="DRAWINGS">FIG. 6</figref>, may be modulated onto a center carrier frequency for wireless transmission and demodulated off of the center carrier frequency for wireless reception. In which case, the receivers may be designed to receive a wide range of frequencies around the center carrier frequency in case the difference between the processor clock speeds of the toys is large. Alternatively, the baseband signals communicated between toys in a neighborhood may be directly transmitted and received without modulation in the case of wired communication or some forms of wireless communication, such as infrared.</p>
<p id="p-0047" num="0046">In the description of the timing diagram below, the following notations will be adopted:
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0047">Txm—denotes time point x that is applicable to the master (m) unit.</li>
        <li id="ul0002-0002" num="0048">Txf—denotes time point x that is applicable to the fastest (f) slave unit.</li>
        <li id="ul0002-0003" num="0049">Txs—denotes time point x that is applicable to the slowest (s) slave unit.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0048" num="0050">In addition, “true times” and “absolute times” will also be used in the description of the timing diagram below. “True times” are generally times measured by the outside world. “Absolute times” are generally true times that are measured from time T<b>0</b>m. It is to be understood that other timing references may be used.</p>
<p id="p-0049" num="0051">At time T<b>0</b>m, the master toy or toy character is awaken when its start button is pressed or selected and its processor clock begins to oscillate. Time T<b>0</b>m may be referred to as 0 milli-seconds (msec) absolute. In one embodiment, the processor of the master would finish restarting or exiting or coming out of sleep or idle mode at approximately 65,536 processor cycles after the start button of the master is pressed or selected. In this embodiment, the processor of the master would finish restarting or exiting or coming out of a sleep or idle mode at a true time in a range from about 18 msec to about 25 msec if the processor operated at about 3.58 MHz. The sleep or idle mode is a low power mode of operation for an toy character.</p>
<p id="p-0050" num="0052">At time T<b>1</b>, the master toy or toy character sends a wake-up signal to the slaves to generally tell the slaves to restart or to exit or to come out of the sleep or idle mode. The sending of the wake-up signal begins the wake-up cycle. In one embodiment, T<b>1</b> is in the range of 20 msec to 30 msec absolute time.</p>
<p id="p-0051" num="0053">At time T<b>2</b>f and T<b>2</b>s, the fastest and slowest slave toys respectively finish restarting or exiting or coming out of sleep or idle mode. In one embodiment, the fastest slave finishes restarting or exiting or coming out of sleep or idle mode at a true time of approximately T<b>1</b>+20 msec.</p>
<p id="p-0052" num="0054">At time T<b>3</b>, the master toy releases the wake-up signal to generally signify that the wake-up cycle has ended. As stated above, the wake-up cycle is generally a time duration in which slaves restart themselves. The master should release the wake-up signal at a time that is selected to generally ensure that the slowest slave can wake up and still see about 2 msec of the wake-up signal. In one embodiment, T<b>3</b> is in the range of T<b>1</b>+32 msec true time to T<b>1</b>+48 msec true time depending on the processor frequency.</p>
<p id="p-0053" num="0055">At time T<b>4</b>f, the fastest slave toy sends an ACK or acknowledgement signal to the master. In one embodiment, T<b>4</b>f is approximately T<b>3</b>+4 msec true time. The slave generally uses the ACK signal to inform the master that the slave exists. In one embodiment, the ACK signal occurs for a duration of approximately 10 msec. At time T<b>4</b>s, the slowest slave toy sends an ACK or acknowledgement signal to the master. In one embodiment, T<b>4</b>s occurs at approximately T<b>3</b>+8 msec.</p>
<p id="p-0054" num="0056">At time T<b>5</b>f, the fastest slave toy releases the ACK signal. In one embodiment, TSf is approximately T<b>3</b>+12 msec true time. At time T<b>5</b>s, the slowest slave toy releases the ACK signal. In one embodiment, T<b>5</b>s is approximately T<b>3</b>+20 msec true time.</p>
<p id="p-0055" num="0057">At time T<b>6</b>n, if the master toy character has not yet received or sensed an ACK signal from a slave, the master assumes that it exists alone in neighborhood or play-set and that it should operate in a single-unit mode which may also be referred to as standalone mode. If the master were to operate in the singleunit mode, it would produce standalone sound at approximately 76 msec to 114 msec absolute time.</p>
<p id="p-0056" num="0058">However, if the master toy character receives at least one ACK signal, the master selects to operate in a multi-unit mode and begins time synchronization and script control activities. The activities occurring at time T<b>7</b>, T<b>8</b>, T<b>9</b>, T<b>10</b>, T<b>11</b>, T<b>12</b>, and T<b>13</b> will be described below. It should be noted that these activities are generally related to time synchronization and script control, and would therefore occur only if toy characters in the neighborhood or play-set operate in the multi-unit mode.</p>
<p id="p-0057" num="0059">At time T<b>7</b>, the first rising edge of a TIMING SYNC or timing synchronization signal occurs. In one embodiment, T<b>7</b> is in the range of approximately 80 msec to 120 msec absolute time. The master sends the TIMING SYNC or timing synchronization signal to the slaves to generally instruct the slaves to synchronize their clocks or timers with the clock or timer of the master. At time T<b>8</b>, the second rising edge of the TIMING SYNC signal occurs. In one embodiment, T<b>8</b> is in the range of T<b>7</b>+52 msec true time to T<b>7</b>+78 msec true time. The slaves use the time interval from T<b>7</b> to T<b>8</b> to calibrate their clocks or timers to match the clock or timer of the master.</p>
<p id="p-0058" num="0060">At time T<b>9</b>, the second falling edge of the TIMING SYNC or timing synchronization signal occurs. In one embodiment, time T<b>9</b> has a range of approximately 136 msec to 204 msec absolute time. At time T<b>9</b>, slaves should have finished synchronizing their clocks or timers with the clock or timer of the master.</p>
<p id="p-0059" num="0061">At time T<b>10</b>, each slave toy character in the neighborhood or play-set waits for a period of time before sending a roll-call signal to the master. In one embodiment, the slave toys wait for approximately 5 ms before starting roll call, each slave toy then sends out its identifying signal in specific time increments. Slave toys are programmed to respond at specific intervals after T<b>9</b> so that the master toy can identify specifically which toy or toys have responded. By sending the roll-call signal, the slave generally announces its presence in the neighborhood or play-set. In one embodiment, roll-call signals have a duration of 10 msec.</p>
<p id="p-0060" num="0062">As stated above, the timing diagram of <figref idref="DRAWINGS">FIG. 6</figref> shows activities or cycles implemented for a neighborhood or play-set that includes six slave toy characters. Thus, each slave sends a roll-call signal in one of six allotted time slots, T<b>10</b>A, T<b>10</b>B, T<b>10</b>C, T<b>10</b>D, T<b>10</b>E, and T<b>10</b>F. In one embodiment, the time slots have an aggregate time period in the range of about 52 msec to about 78 msec true time ending at approximately 188 to approximately 282 msec absolute time.</p>
<p id="p-0061" num="0063">At time T<b>11</b>, the master toy waits for a time period before sending script identification (ID) to the slaves to select a script. In one embodiment, the sending of the script ID lasts about 68 msec to about 102 msec true time ending at approximately 256 msec to approximately 384 msec absolute time.</p>
<p id="p-0062" num="0064">As previously stated, the script is in essence a toy dialog simulating interactive communication (i.e., interaction) between the toy characters in the play-set or neighborhood. The script generally consists of multiple roles. In one embodiment, the script consists of six roles (one role for the master, and five roles for the slaves). In this embodiment, if more than five roles are present in the play-set or neighborhood, one or more slaves would be duplicates of either one or more slaves or of the master. If multiple toys of the same character exist in the play-set or neighborhood, all units of that character will perform the same role.</p>
<p id="p-0063" num="0065">At time T<b>12</b>, the master toy character sends a begin-script signal to the slaves in the neighborhood or play-set. The begin-script signal generally tells the slaves to start playing the script specified by the script ID that the master previously sent at time T<b>11</b>. In one embodiment, the begin-script signal lasts 20 msec. At time T<b>13</b>, the falling edge of the begin-script signal occurs and starts script playing by the slaves. In one embodiment, time T<b>13</b> occurs at approximately 272 msec to 408 msec absolute time.</p>
<p id="p-0064" num="0066">The specific order of information in the synchronization protocol may be re-arranged to suit the specific application. For instance the toys to be synchronized may not be programmed to enter into an off or low power state and therefore the T<b>1</b> wake up pulse may not be necessary. Similarly, the acknowledge signal of T<b>4</b> and T<b>5</b> may not be used and the system can wait for roll call T<b>10</b> to determine if any other characters are in the neighborhood.</p>
<p id="p-0065" num="0067">While certain exemplary embodiments have been described and shown in the accompanying drawings, it is to be understood that such embodiments are merely illustrative of and not restrictive on the broad invention, and that this invention not be limited to the specific constructions and arrangements shown and described, since various other modifications may occur to those ordinarily skilled in the art. The invention may be implemented in hardware, software, firmware or a combination thereof and utilized in systems, subsystems, components or sub-components thereof. When implemented in software, the elements of the invention are essentially the code segments to perform the necessary tasks. The program or code segments can be stored in a processor readable medium or transmitted by a computer data signal embodied in a carrier wave over a transmission medium or communication link. The “processor readable medium” may include any medium that can store or transfer information. Examples of the processor readable medium include an electronic circuit, a semiconductor memory device, a ROM, a flash memory, an erasable ROM (EROM), a floppy diskette, a CD-ROM, an optical disk, a hard disk, a fiber optic medium, a radio frequency (RF) link, etc. The computer data signal may include any signal that can propagate over a transmission medium such as electronic network channels, optical fibers, air, electromagnetic, RF links, etc. The code segments may be downloaded via computer networks such as the Internet, Intranet, etc. In any case, the invention should not be construed as limited by such embodiments, but rather construed according to the claims that follow below.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A play-set comprising:
<claim-text>a master toy having a first timer to measure time and a first processor, the master toy to transmit a synchronization signal including a time period reference to begin a synchronization process to synchronize time and scripts; and</claim-text>
<claim-text>at least one slave toy having a second timer to measure time and a second processor, the slave toy being momentarily bi-directionally communicatively linked to the master toy to acknowledge itself to the master toy and to synchronize its second timer to the time period reference of the master toy in response to the synchronization signal such that master and slave toy thereafter perform synchronized scripts without further communication.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The play-set of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the slave toy is physically coupled momentarily to the master toy to facilitate wired communication during the synchronization process.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The play-set of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>a stage physically coupled to the master toy and the slave toy to facilitate wired communication between the master toy and the slave toy.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The play-set of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the master toy and the slave toy momentarily communicate using wireless communication.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The play-set of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the slave toy to send an acknowledgement signal to the master toy, and</claim-text>
<claim-text>the master toy to operate in a multi-unit mode in response to the acknowledgement signal.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The play-set of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein
<claim-text>the slave toy to send a roll-call signal to the master toy to announce the character identification of the slave toy.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The play-set of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the master toy to send a script identification (ID) to the slave toy to select a script.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The play-set of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the master toy and the slave toy to perform roles in a selected script by generating sounds.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The play-set of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein
<claim-text>the master toy to transmit a script start signal to the slave toy to simultaneously start a time synchronized scripted sequence.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A method comprising:
<claim-text>selecting a first toy having a first timer to designate as a master toy,</claim-text>
<claim-text>transmitting a synchronization signal from the master toy including a time period reference to begin a synchronization process to synchronize time and scripts; and</claim-text>
<claim-text>receiving the synchronization signal including the time period reference at at least one slave toy having a second timer, the slave toy being momentarily bi-directionally communicatively linked to the master toy to acknowledge itself to the master toy and to synchronize its second timer to the time period reference of the master toy in response to the synchronization signal;</claim-text>
<claim-text>wherein the master toy and slave toy thereafter perform synchronized scripts without further communication.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:
<claim-text>coupling the slave toy to the master toy to facilitate wired communication during the synchronization period.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:
<claim-text>coupling the master toy and the slave toy to a stage to facilitate wired communication between the master toy and the slave toy.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:
<claim-text>using wireless communication to facilitate communication between the master toy and the slave toy.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:
<claim-text>sending a wake-up signal from the master toy to the slave toy for the slave toy to restart.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:
<claim-text>sending an acknowledgement signal from the slave toy to the master toy for the master toy to operate in a multi-unit mode.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:
<claim-text>sending a roll-call signal from the slave toy to the master toy to announce the character identification of the slave toy.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:
<claim-text>sending a script identification (ID) from the master toy to the slave toy to select a script.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:
<claim-text>sending a start signal from the first toy to the at least one additional toy to synchronize the start of script play.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, further comprising:
<claim-text>generating sounds when the master toy and the slave toy perform time synchronized roles in a selected script.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein
<claim-text>the selecting of the first toy to designate as the master is preformed by pressing a button to close a switch.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein
<claim-text>the selecting of the first toy to designate as the master is preformed by sliding a slideable knob to close a switch.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. A toy system comprising:
<claim-text>a plurality of toys communicatively linked to each other, each of the plurality of toys including:</claim-text>
<claim-text>a battery to provide power;</claim-text>
<claim-text>a processor coupled to the battery to receive power, the processor receiving a clock and including a timer, the timer to determine time as a function of the clock;</claim-text>
<claim-text>a selectable switch coupled to the processor, the selectable switch to designate one of the plurality of toys as a master toy and the remainder of the plurality of toys as slave toys;
<claim-text>wherein the master toy includes a first timer to measure time, the master toy to transmit a synchronization signal including a time period reference to begin a synchronization process to synchronize time and scripts; and</claim-text>
<claim-text>wherein the slave toy includes a second timer to measure time, the slave toy being momentarily bi-directionally communicatively linked to the master toy to acknowledge itself to the master toy and to synchronize its respective second timer to the time period reference of the master toy in response to the synchronization signal such that master and slave toy thereafter perform synchronized scripts without further communication.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The toy system of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein
<claim-text>the plurality of toys are momentarily physically coupled together to facilitate wired communication during synchronization.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The toy system of <claim-ref idref="CLM-00022">claim 22</claim-ref>, further comprising:
<claim-text>a stage physically coupled to the plurality of toys to facilitate wired communication between the plurality of toys during synchronization.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The toy system of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein the plurality of toys further include:
<claim-text>a wireless transmitter so that the master toy can wirelessly transmit the synchronization signal; and</claim-text>
<claim-text>a wireless receiver so that the slave toys can wirelessly receive the synchronization signal.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The toy system of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein
<claim-text>the master toy to send a start script signal to the slave toys and begin script play; and</claim-text>
<claim-text>the slave toys to synchronize the beginning of their script with the start script signal and begin script play in response thereto.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
