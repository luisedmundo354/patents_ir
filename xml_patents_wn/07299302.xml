<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299302-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299302</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10953335</doc-number>
<date>20040930</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>2004-084424</doc-number>
<date>20040323</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>406</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>14</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>28</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>710  5</main-classification>
<further-classification>710 22</further-classification>
<further-classification>710 33</further-classification>
<further-classification>710 52</further-classification>
</classification-national>
<invention-title id="d0e71">Direct memory access control apparatus and method</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6542941</doc-number>
<kind>B1</kind>
<name>Simpson, III</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710 30</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>JP</country>
<doc-number>5-216808</doc-number>
<date>19930800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>8</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>12</number-of-drawing-sheets>
<number-of-figures>12</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20050216605</doc-number>
<kind>A1</kind>
<date>20050929</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Muro</last-name>
<first-name>Tomoharu</first-name>
<address>
<city>Kawasaki</city>
<country>JP</country>
</address>
</addressbook>
<nationality>
<country>JP</country>
</nationality>
<residence>
<country>JP</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Staas &amp; Halsey LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Fujitsu Limited</orgname>
<role>03</role>
<address>
<city>Kawasaki</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Park</last-name>
<first-name>Ilwoo</first-name>
<department>2182</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">In a DMA control apparatus for controlling data transfer from a memory to a transfer destination apparatus in accordance with a command assigned from a processing apparatus, a data transfer command assigned from the processing apparatus is stored in a command storage device and when the data transfer command includes transfer data to be transferred to the transfer destination apparatus, the transfer data is read out from the command storage device, thereby transferring the read-out data to the transfer destination apparatus.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="230.80mm" wi="165.86mm" file="US07299302-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="231.48mm" wi="105.16mm" file="US07299302-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="241.22mm" wi="158.67mm" file="US07299302-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="217.85mm" wi="150.54mm" file="US07299302-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="248.41mm" wi="173.48mm" file="US07299302-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="180.00mm" wi="127.93mm" file="US07299302-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="208.62mm" wi="166.62mm" file="US07299302-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="149.94mm" wi="140.12mm" file="US07299302-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="231.31mm" wi="167.13mm" file="US07299302-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="195.83mm" wi="165.10mm" file="US07299302-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="209.30mm" wi="167.05mm" file="US07299302-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="239.01mm" wi="171.70mm" file="US07299302-20071120-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="154.35mm" wi="106.51mm" file="US07299302-20071120-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION </heading>
<p id="p-0002" num="0001">1. Field of the Invention</p>
<p id="p-0003" num="0002">The present invention relates to an apparatus and a method for controlling direct memory access (DMA) in a data processing apparatus that requires high-speed data transfer.</p>
<p id="p-0004" num="0003">2. Description of the Related Art</p>
<p id="p-0005" num="0004">In a computer system, it is desirable to perform effective high-capacity data transfer between memories or a memory and an input/output device (I/O device). DMA is a well known method for solving this problem (refer to, for example, Japanese laid-open Patent application No 05-216,808).</p>
<p id="p-0006" num="0005">An I/O device transfers data to a memory and receives data transferred from the memory. This device includes a memory apparatus and an interface apparatus. DMA has a mechanism in which exclusive hardware called a DMA control circuit controls data transfer on the basis of a command from the central processing unit (CPU), instead of the CPU, itself, controlling the data transfer in a computer system.</p>
<p id="p-0007" num="0006">The command that is issued to a DMA control circuit from a CPU is called a descriptor. A method such that the DMA control circuit autonomously reads out the descriptor from a memory and refers to the descriptor after the CPU prepares the descriptor on the memory is widely used.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 1A</figref> shows a configuration example of a conventional data processing apparatus provided with a DMA control circuit. The data processing apparatus of <figref idref="DRAWINGS">FIG. 1A</figref> comprises a data transfer control apparatus <b>101</b> and I/O devices <b>102</b><i>a </i>and <b>102</b><i>b</i>. The data transfer control apparatus <b>101</b> comprises a CPU <b>111</b>, a memory <b>112</b>, a memory controller <b>113</b> and an I/O controller <b>114</b>.</p>
<p id="p-0009" num="0008">A CPU <b>111</b>, a memory <b>112</b> and an I/O controller <b>114</b> are connected to the memory controller <b>113</b>. The I/O devices <b>102</b><i>a </i>and <b>102</b><i>b </i>are connected to the I/O controller <b>114</b>. The number of I/O devices connected to the I/O controller <b>114</b> is not restricted to two and generally, one or a plurality of I/O devices is connected.</p>
<p id="p-0010" num="0009">The memory controller <b>113</b> controls data transfer between the CPU <b>111</b> and the memory <b>112</b> and also between the I/O controller <b>114</b> and the memory <b>112</b>. A DMA control circuit <b>121</b> included in the I/O controller <b>114</b> performs data transfer between the memory <b>112</b> and the I/O device <b>102</b> through the memory controller <b>113</b>. Also, the CPU <b>111</b> and the I/O controller <b>114</b> receive and transmit control information through the memory controller <b>113</b>.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 1B</figref> shows a block diagram of the I/O controller <b>114</b> of <figref idref="DRAWINGS">FIG. 1A</figref>. The I/O controller <b>114</b> of <figref idref="DRAWINGS">FIG. 1B</figref> comprises the DMA control circuit <b>121</b>, a memory interface (I/F) <b>122</b> and an I/O device interface <b>123</b>.</p>
<p id="p-0012" num="0011">The DMA control circuit <b>121</b> comprises a descriptor fetch circuit <b>131</b>, a descriptor buffer <b>132</b>, a state machine circuit <b>133</b>, a data transfer control circuit <b>134</b> and a register <b>135</b>.</p>
<p id="p-0013" num="0012">The CPU <b>111</b> activates the descriptor fetch circuit <b>131</b> and the state machine circuit <b>133</b> by writing the activation instructions in the register <b>135</b> through the memory interface <b>122</b>.</p>
<p id="p-0014" num="0013">The descriptor fetch circuit <b>131</b> reads out a descriptor from the memory <b>112</b> through the memory interface <b>122</b>. The descriptor buffer <b>132</b> receives the descriptor from the descriptor fetch circuit <b>131</b> and stores it. The state machine circuit <b>133</b> analyzes the descriptor and instructs the data transfer control circuit <b>134</b> about data transfer. Upon receipt of the instruction from the state machine circuit <b>133</b>, the data transfer control circuit <b>134</b> performs data transfer through the memory interface <b>122</b> and the I/O device interface <b>123</b>.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 1C</figref> shows one example of a descriptor. The descriptor of <figref idref="DRAWINGS">FIG. 1C</figref> has a length of 8 bytes*3 words (24 bytes) and it comprises a command, a flag, a transfer byte length, a memory address and an I/O address.</p>
<p id="p-0016" num="0015">A command is a bit that instructs the direction of data transfer. For example, if a bit is logic ‘0’, it indicates read transfer, that is, data transfer from the I/O device <b>102</b> to the memory <b>112</b>. If a bit is logic ‘1’, it indicates write transfer, that is, data transfer from the memory <b>112</b> to the I/O device <b>102</b>.</p>
<p id="p-0017" num="0016">A flag is a bit that controls various operations of DMA. For example, such a bit instructs the DMA control circuit <b>121</b> to generate an interrupt after the termination of data transfer. A transfer byte length indicates a field for instructing the DMA control circuit <b>121</b> about the length (number of bytes) of data to be transferred between the memory <b>112</b> and the I/O device <b>102</b>.</p>
<p id="p-0018" num="0017">At the time of read transfer, a memory address shows an address on the memory <b>112</b> that stores data read out from the I/O device <b>102</b>. At the time of a write operation, a memory address shows the address on the memory <b>112</b> that stores data to be transferred to the I/O device <b>102</b>. An I/O address shows both a number of the I/O device <b>102</b> for reading out data and an address in this device at the time of a read operation while this address indicates both a number of the I/O device <b>102</b> for writing data and an address in this device at the time of a write operation.</p>
<p id="p-0019" num="0018">Then, the following is the explanation for each of DMA write and read operations in reference to the operation sequence of <figref idref="DRAWINGS">FIG. 1D</figref>.</p>
<p id="h-0002" num="0000">&lt;Write Operation&gt;</p>
<p id="p-0020" num="0000">
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0019">(1) The CPU <b>111</b> prepares transfer data in the address designated by a descriptor on the memory <b>112</b>.</li>
    <li id="ul0001-0002" num="0020">(2) The CPU <b>111</b> prepares the descriptor for write transfer in the address predetermined on the memory <b>112</b> using the format of <figref idref="DRAWINGS">FIG. 1C</figref>.</li>
    <li id="ul0001-0003" num="0021">(3) The CPU <b>111</b> activates the DMA control circuit <b>121</b> by writing an activation instruction in the register <b>135</b> inside of the DMA control circuit <b>121</b>.</li>
    <li id="ul0001-0004" num="0022">(4) When the DMA control circuit <b>121</b> is activated by the CPU <b>111</b>, it reads out the descriptor from the predetermined address on the memory <b>112</b>.</li>
    <li id="ul0001-0005" num="0023">(5) The DMA control circuit <b>121</b> analyzes the read-out descriptor and reads out data of the designated transfer byte length from the memory address designated in the descriptor if the command is a write instruction.</li>
    <li id="ul0001-0006" num="0024">(6) Subsequently, the DMA control circuit <b>121</b> transfers the data read out from the memory <b>112</b> to the I/O device <b>102</b> on the basis of the I/O address designated in the descriptor.</li>
    <li id="ul0001-0007" num="0025">(7) When the data transfer terminates, the DMA control circuit <b>121</b> transmits an interrupt signal to the CPU <b>111</b> in accordance with the instructions of a flag in the descriptor and notifies a data transfer termination.
<br/>
&lt;Read Operation&gt;
</li>
    <li id="ul0001-0008" num="0026">(11) The CPU <b>111</b> secures a region for transfer data in the address designated by a descriptor on the memory <b>112</b>.</li>
    <li id="ul0001-0009" num="0027">(12) The CPU <b>111</b> prepares the descriptor for read transfer using the format of <figref idref="DRAWINGS">FIG. 1C</figref> in the predetermined address on the memory <b>112</b>.</li>
    <li id="ul0001-0010" num="0028">(13) The CPU <b>111</b> activates the DMA control circuit <b>121</b> by writing an activation instruction in the register <b>135</b> inside of the DMA control circuit <b>121</b>.</li>
    <li id="ul0001-0011" num="0029">(14) When the DMA control circuit <b>121</b> is activated by the CPU <b>111</b>, it reads out the descriptor from the predetermined address.</li>
    <li id="ul0001-0012" num="0030">(15) The DMA control circuit <b>121</b> analyzes the read-out descriptor and in case of a read instruction, the circuit reads out the data of the designated transfer byte length from the I/O device <b>102</b> indicated by the I/O address designated in the descriptor.</li>
    <li id="ul0001-0013" num="0031">(16) Subsequently, the DMA control circuit <b>121</b> writes the data read out from the I/O device <b>102</b> in the memory address designated by the descriptor.</li>
    <li id="ul0001-0014" num="0032">(17) When the data transfer terminates, the DMA control circuit <b>121</b> transmits an interruption signal to the CPU <b>111</b> in accordance with the instructions of a flag in the descriptor and notifies a data transfer termination.</li>
</ul>
</p>
<p id="p-0021" num="0033">As is apparent from the above-mentioned operation sequence, when the CPU <b>111</b> prepares a descriptor and activates the DMA control circuit <b>121</b>, it can perform another processing while data transfer is being performed until a notification is given by the interruption signal. In this way, since the CPU <b>111</b> is released from a comparatively simple process such as data transfer and can devote a time to a more complicated process, the performance of the system improves.</p>
<p id="p-0022" num="0034">There is the following problem in the above-mentioned conventional DMA control method.</p>
<p id="p-0023" num="0035">The DMA control circuit is effective for reducing the load of a CPU by performing data transfer in place of a CPU and also for enhancing the processing performance of a system thereof. In a conventional DMA control method, however, data transfer is performed after the DMA control circuit reads out the descriptor on a memory prepared by the CPU. Therefore, there is a case such that sufficient performance cannot be obtained in the case where the access•latency (time required for reading out a descriptor) from a DMA control circuit to a memory is large. This problem prominently occurs especially in the case where short data is transferred.</p>
<p id="p-0024" num="0036">In the case of transferring short data, the transfer time between a DMA control circuit and an I/O device is shorter in comparison with a time required for the transfer of long data. However, a time required for the other control operation is almost identical to a time required for the transfer of long data. Therefore, the ratio of a time required for a control operation other than the data transfer to the whole operation time becomes high in comparison with a time required for the transfer of long data, thereby decreasing the efficiency of the data transfer.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION </heading>
<p id="p-0025" num="0037">The subject of the present invention is to offer an apparatus and a method of increasing the efficiency of data transfer using DMA in a data processing apparatus.</p>
<p id="p-0026" num="0038">In the first aspect of the present invention, a DMA control apparatus comprises a command storage device and a transfer control device, and controls data transfer from a memory to a transfer destination apparatus in accordance with the command assigned from a processing apparatus.</p>
<p id="p-0027" num="0039">The command storage device stores a data transfer command assigned from the processing apparatus. The transfer control device checks whether or not the data transfer command stored in the command storage device includes transfer data to be transferred to the transfer destination apparatus. When the data transfer command does not include the transfer data, the device reads out the transfer data from a memory and transfers the read-out data to the transfer destination apparatus. When the data transfer command includes the transfer data, the device reads out the transfer data from the command storage device and transfers the read-out data to the transfer destination apparatus.</p>
<p id="p-0028" num="0040">In the second aspect of the present invention, when data transfer from a memory to a transfer destination apparatus occurs, a processing apparatus assigns a command to a direct memory access control apparatus for controlling the data transfer.</p>
<p id="p-0029" num="0041">The processing apparatus checks whether or not the data length of transfer data to be transferred to the transfer destination apparatus is longer than a predetermined value. If the data length is longer than the predetermined value, the apparatus stores the transfer data in the memory and sets flag information indicating that a data transfer command does not include the transfer data and a memory address of the transfer data, in the data transfer command. If the data length is equal to or less than the predetermined value, the apparatus sets the transfer data and flag information indicating that the data transfer command includes the transfer data, in the data transfer command. Then, the apparatus activates the DMA control apparatus and directs this apparatus to perform data transfer designated by the data transfer command.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWING </heading>
<p id="p-0030" num="0042"><figref idref="DRAWINGS">FIG. 1A</figref> shows a block diagram of a conventional data processing apparatus;</p>
<p id="p-0031" num="0043"><figref idref="DRAWINGS">FIG. 1B</figref> shows a block diagram of a conventional I/O controller;</p>
<p id="p-0032" num="0044"><figref idref="DRAWINGS">FIG. 1C</figref> shows a conventional descriptor;</p>
<p id="p-0033" num="0045"><figref idref="DRAWINGS">FIG. 1D</figref> shows a conventional operation sequence;</p>
<p id="p-0034" num="0046"><figref idref="DRAWINGS">FIG. 2A</figref> shows the principle diagram of a DMA control apparatus of the present invention;</p>
<p id="p-0035" num="0047"><figref idref="DRAWINGS">FIG. 2B</figref> shows a block diagram of an I/O controller of the present invention;</p>
<p id="p-0036" num="0048"><figref idref="DRAWINGS">FIG. 3</figref> shows a descriptor of the present invention;</p>
<p id="p-0037" num="0049"><figref idref="DRAWINGS">FIG. 4</figref> shows an operation sequence of the present invention;</p>
<p id="p-0038" num="0050"><figref idref="DRAWINGS">FIG. 5</figref> is the first operation flowchart of a state machine circuit;</p>
<p id="p-0039" num="0051"><figref idref="DRAWINGS">FIG. 6</figref> is the second operation flowchart of a state machine circuit;</p>
<p id="p-0040" num="0052"><figref idref="DRAWINGS">FIG. 7</figref> is the flowchart of the processes to be carried out by a CPU; and</p>
<p id="p-0041" num="0053"><figref idref="DRAWINGS">FIG. 8</figref> shows a method of offering a program.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS </heading>
<p id="p-0042" num="0054">The following is detailed explanation of the preferred embodiment of the present invention referring to drawings.</p>
<p id="p-0043" num="0055"><figref idref="DRAWINGS">FIG. 2A</figref> is a block diagram of a DMA control apparatus of the present invention. A DMA control apparatus <b>153</b> of <figref idref="DRAWINGS">FIG. 2A</figref> comprises a command storage device <b>161</b> and a transfer control device <b>162</b>, and it controls data transfer from a memory <b>152</b> to a transfer destination apparatus <b>154</b> in accordance with the command assigned from a CPU <b>151</b>.</p>
<p id="p-0044" num="0056">The command storage device <b>161</b> stores the data transfer command assigned from the CPU <b>151</b>. The transfer control device <b>162</b> checks whether or not the data transfer command stored in the command storage device <b>161</b> includes transfer data to be transferred to the transfer destination apparatus <b>154</b>. When the data transfer command does not include the transfer data, the device <b>162</b> reads out the transfer data from the memory <b>152</b> and transfers the data to the transfer destination apparatus <b>154</b>. When the data transfer command includes the transfer data, the device <b>162</b> reads out the transfer data from the command storage device <b>161</b> and transfers the read-out data to the transfer destination apparatus <b>154</b>.</p>
<p id="p-0045" num="0057">When the data transfer command is issued to the DMA control apparatus <b>153</b> from the CPU <b>151</b> DMA, the control apparatus <b>153</b> obtains the data transfer command and stores it in the command storage device <b>161</b>. The transfer control device <b>162</b> analyzes the stored data transfer command. When the transfer data is not included in the data transfer command, the transfer control device <b>162</b> reads out the transfer data from the memory <b>152</b> and transfers the read-out data to the transfer destination apparatus <b>154</b>. When the transfer data is included in the data transfer command, the device <b>162</b> directly transfers the transfer data to the transfer destination apparatus <b>154</b>.</p>
<p id="p-0046" num="0058">According to such a DMA control apparatus, in the case where transfer data is included in a data transfer command, write transfer to the transfer destination apparatus <b>154</b> can be performed without performing a memory read operation if a data transfer command is obtained once. Therefore, the time required for the write transfer is shortened.</p>
<p id="p-0047" num="0059">The transfer destination apparatus <b>154</b> corresponds to, for example, the above-mentioned I/O device <b>102</b> of <figref idref="DRAWINGS">FIG. 1A</figref>. The DMA control apparatus <b>153</b> corresponds to, for example, a DMA control circuit <b>201</b> of <figref idref="DRAWINGS">FIG. 2B</figref> that is described later. In addition, the command storage device <b>161</b> corresponds to, for example, a descriptor buffer <b>212</b> of <figref idref="DRAWINGS">FIG. 2B</figref>. The transfer control device <b>162</b> corresponds to, for example, a state machine circuit <b>213</b> and a data transfer control circuit <b>214</b> of <figref idref="DRAWINGS">FIG. 2B</figref>. The transfer command corresponds to, for example, a descriptor of <figref idref="DRAWINGS">FIG. 3</figref> that is described later.</p>
<p id="p-0048" num="0060">Furthermore, when data transfer from the memory <b>152</b> to the transfer destination apparatus <b>154</b> occurs, the CPU <b>151</b> assigns a command to the DMA control apparatus <b>153</b> that controls the data transfer.</p>
<p id="p-0049" num="0061">The CPU <b>151</b> checks whether or not the data length of transfer data to be transferred to the transfer destination apparatus <b>154</b> is longer than a predetermined value. If the data length is longer than the predetermined value, the CPU <b>151</b> stores the transfer data in the memory <b>152</b> and sets flag information showing that a data transfer command does not include the transfer data and a memory address of the transfer data, in the data transfer command. If the data length is equal to or below the predetermined value, the CPU <b>151</b> sets the transfer data and flag information showing that the data transfer command includes the transfer data, in the data transfer command. Then, the CPU <b>151</b> activates the DMA control apparatus <b>153</b> and directs this apparatus to perform data transfer designated by the data transfer command.</p>
<p id="p-0050" num="0062">Since the CPU <b>151</b> performs such processings, the transfer data of a data length equal to or below the predetermined value is set in the data transfer command and the set data is assigned to the DMA control apparatus <b>153</b>. Therefore, the time required for the write transfer of comparatively short data is shortened. In addition, since transfer data longer than the predetermined value need not be set in the data transfer command, the increment of the data transfer command in size can be set approximately to the above-mentioned predetermined value.</p>
<p id="p-0051" num="0063">The flag information that is set by the CPU <b>151</b> corresponds to, for example, a write•immediate•bit included in a flag of the descriptor of <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0052" num="0064">According to the present invention, a time required for the data transfer from a memory to a transfer destination apparatus using DMA can be shortened in a data processing apparatus.</p>
<p id="p-0053" num="0065">The whole configuration of a data processing apparatus of the present embodiment is identical to the data processing apparatus of <figref idref="DRAWINGS">FIG. 1A</figref>. In the command to the DMA control circuit, the efficiency of write transfer is promoted by enabling the DMA control circuit to select either the designation of an address in which data is stored or the designation of data itself. Therefore, the data processing apparatus of the present preferred embodiment comprises the following characteristics.
<ul id="ul0002" list-style="none">
    <li id="ul0002-0001" num="0066">A bit (write•immediate•bit) that shows write•immediate is provided in a flag field of the descriptor.</li>
    <li id="ul0002-0002" num="0067">The DMA control circuit selects whether to read out data from the designated memory address so as to perform write transfer or to perform write transfer of the data in the descriptor, in accordance with the write•immediate•bit.</li>
</ul>
</p>
<p id="p-0054" num="0068">The DMA control circuit reads out data from a memory address designated in the descriptor and transfers the read-out data to an I/O device as is conventionally done if the write•immediate•bit of a flag field of the descriptor is logic ‘0’. If the write•immediate•bit is logic ‘1’, the circuit transfers the data that is set in a write data field inside of the descriptor to an I/O device.</p>
<p id="p-0055" num="0069">For example, in the case where the data of a short length within a predetermined value is write-transferred, a CPU sets a write•immediate•bit to ‘1’ and sets the write data in the descriptor. In this way, the DMA control circuit autonomously transfers the write data that is set in the descriptor. As the predetermined value of a data length, the values of, for example, 8 bytes, 16 bytes, 64 bytes, etc. are used.</p>
<p id="p-0056" num="0070">On the other hand, in the case where data longer than a predetermined value is write-transferred, a CPU sets a write•immediate•bit to ‘0’ and stores the write data in a memory. In this way, the DMA control circuit autonomously transfers the write data that is stored in the memory.</p>
<p id="p-0057" num="0071">In the case where short data of, for example, 8 bytes is write-transferred, a conventional DMA control circuit first reads out a descriptor from a memory and analyzes the descriptor. Then, the circuit must read out the data from a designated address so that a memory-read operation is performed continuously twice. Furthermore, the address in which the data is stored can be determined only by reading the descriptor and the two memory-read operations cannot be simultaneously performed. Consequently, it takes a rather long time to transfer data of only 8 bytes.</p>
<p id="p-0058" num="0072">In the case of short data, the data is prepared in a descriptor region beforehand in a DMA control circuit of the present preferred embodiment. Therefore, data transfer can be started by one memory-read operation. Therefore, an effect of shortening a time required for write transfer can be obtained.</p>
<p id="p-0059" num="0073"><figref idref="DRAWINGS">FIG. 2B</figref> is a block diagram of an I/O controller of the present preferred embodiment. The I/O controller of <figref idref="DRAWINGS">FIG. 2B</figref> comprises the DMA control circuit <b>201</b>, a memory interface <b>202</b> and an I/O device interface <b>203</b>. The DMA control circuit <b>201</b> comprises a descriptor fetch circuit <b>211</b>, a descriptor buffer <b>222</b>, the state machine circuit <b>213</b>, a data transfer control circuit <b>214</b> and a register <b>215</b>.</p>
<p id="p-0060" num="0074">Similarly to the case of <figref idref="DRAWINGS">FIG. 1B</figref>, the CPU activates the descriptor fetch circuit <b>211</b> and the state machine circuit <b>213</b> by writing activation instructions in the register <b>215</b> through the memory interface <b>202</b>.</p>
<p id="p-0061" num="0075">The descriptor circuit <b>211</b> reads out a descriptor from a memory through the memory interface <b>202</b> and stores it in the descriptor buffer <b>212</b>. The state machine circuit <b>213</b> analyzes the descriptor which is stored in the descriptor buffer <b>212</b> and instructs the data transfer control circuit <b>214</b> to perform data transfer. Upon receipt of the instruction from the state machine circuit <b>213</b>, the data transfer control circuit <b>214</b> performs data transfer through the memory interface <b>202</b> and the I/O device interface.</p>
<p id="p-0062" num="0076">The data transfer control circuit <b>214</b> comprises a memory transfer control circuit <b>221</b>, a data buffer <b>222</b> and an I/O device transfer control circuit <b>223</b>. The memory transfer control circuit <b>221</b> is activated by the state machine circuit <b>213</b> and performs data transfer between the memory and the data buffer <b>222</b> through the memory interface <b>202</b>. The I/O device transfer control circuit <b>223</b> is activated by the state machine circuit <b>213</b> and performs data transfer between the data buffer <b>222</b> and an I/O device through the I/O device interface <b>203</b>.</p>
<p id="p-0063" num="0077">At this time, if a write•immediate•bit is ‘1’, the I/O device transfer control circuit <b>223</b> reads out data that is set in a descriptor stored in the descriptor buffer <b>212</b> and transfers the read-out data to the I/O device.</p>
<p id="p-0064" num="0078"><figref idref="DRAWINGS">FIG. 3</figref> shows one example of a descriptor issued by a CPU. The descriptor of <figref idref="DRAWINGS">FIG. 3</figref> has a length of 8 bytes*4 word (32 bytes) and comprises a command, a flag, a transfer byte length, a memory address, an I/O address and immediate•write data. In this example, a write•immediate•bit is included in the flag and a data length of the immediate•write data is 8 bytes.</p>
<p id="p-0065" num="0079">In the case where write data is longer than 8 bytes, a CPU sets a write•immediate•bit to ‘0’ and set a memory address in which the write data is stored in the memory address field inside of a descriptor. Furthermore, in the case where write data is equal to or less than 8 bytes, the CPU sets a write•immediate•bit to ‘1’ and it sets write data in a immediate•write data field of the descriptor.</p>
<p id="p-0066" num="0080">The following is the explanation of DMA write operations in the respective cases where write•immediated•bits are ‘0’ and ‘1’ while in reference to the operation sequence of <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="h-0006" num="0000">&lt;In the Case where a Write Data Byte is Longer than 8 Bytes: in the Case where a Write•Immediate•Bit is ‘0’&gt;</p>
<p id="p-0067" num="0000">
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0081">(21) A CPU prepares transfer data in the address designated by the descriptor on a memory.</li>
    <li id="ul0003-0002" num="0082">(22) The CPU prepares the descriptor for write transfer in the address predetermined on an address using the format of <figref idref="DRAWINGS">FIG. 3</figref>. At this time, a write•immediate•bit in the descriptor is set to ‘0’.</li>
    <li id="ul0003-0003" num="0083">(23) The CPU activates the DMA control circuit <b>201</b> by writing activation instructions in the register <b>215</b> inside of the DMA control circuit <b>201</b>.</li>
    <li id="ul0003-0004" num="0084">(24) When the DMA control circuit <b>201</b> is activated by the CPU, it reads out the descriptor from an address predetermined on the memory.</li>
    <li id="ul0003-0005" num="0085">(25) The DMA control circuit <b>201</b> analyzes the read-out descriptor and reads out data of the designated transfer byte length from the memory address designated in the descriptor if the descriptor is a write instruction and a write•immediated•bit is ‘0’, thereby storing the read-out data in the data buffer <b>222</b>.</li>
    <li id="ul0003-0006" num="0086">(26) Subsequently, the DMA control circuit <b>201</b> transfers the data stored in the data buffer <b>222</b> to an I/O device on the basis of the I/O address designated in the descriptor.</li>
    <li id="ul0003-0007" num="0087">(27) When the data transfer terminates, the DMA control circuit <b>201</b> transmits an interruption signal to the CPU in accordance with the instructions of a flag in the descriptor and notifies a data transfer termination.
<br/>
&lt;In the Case where Write Data is Equal to or Less than 8 Bytes: in the Case where a Write•Immediated•Bit is Logic ‘1’.
</li>
    <li id="ul0003-0008" num="0088">(31) The CPU prepares a descriptor for write transfer using the format of <figref idref="DRAWINGS">FIG. 3</figref> in the predetermined address on a memory and prepares transfer data in the immediate•write data field.</li>
    <li id="ul0003-0009" num="0089">(32) The CPU prepares information about a field other than the descriptor. At this time, the CPU sets a write•immediate•bit in the descriptor to ‘1’.</li>
    <li id="ul0003-0010" num="0090">(33) The CPU activates the DMA control circuit <b>201</b> by writing activation instructions in the register <b>215</b> inside of the DMA control circuit <b>201</b>.</li>
    <li id="ul0003-0011" num="0091">(34) When the DMA control circuit <b>201</b> is activated by the CPU, it reads out the descriptor from the designated address on a memory and stores the read-out descriptor in the descriptor buffer <b>212</b>.</li>
    <li id="ul0003-0012" num="0092">(35) The DMA control circuit <b>201</b> analyzes the descriptor in the descriptor buffer <b>212</b>. If the command is a write instruction and a write•immediate•bit is ‘1’, the circuit reads out data of the designated transfer byte length from a immediate•write data field in the descriptor and transfers the read-out data to an I/O device on the basis of the I/O address designated in the descriptor.</li>
    <li id="ul0003-0013" num="0093">(36) When the data transfer terminates, the DMA control circuit <b>201</b> transmits an interruption signal to the CPU in accordance with the instructions of a flag in the descriptor and notifies a data transfer termination.</li>
</ul>
</p>
<p id="p-0068" num="0094"><figref idref="DRAWINGS">FIG. 5</figref> is a flowchart showing one example of the control operation performed by the state machine circuit <b>213</b> of <figref idref="DRAWINGS">FIG. 3</figref>. In this control operation, the memory transfer control circuit <b>221</b> and the I/O device transfer control circuit <b>223</b> in the data transfer control circuit <b>214</b> are sequentially activated.</p>
<p id="p-0069" num="0095">When the state machine circuit <b>213</b> is activated by a CPU from an idle condition (step <b>501</b>), it first reads out a descriptor from the descriptor buffer <b>212</b> (Step <b>502</b>). Then, it analyzes the descriptor and checks whether the command indicates read transfer or write transfer and whether the write•immediate•bit of a flag is ‘0’ or ‘1’ in the case of write transfer (step <b>503</b>).</p>
<p id="p-0070" num="0096">If the command indicates read transfer, the state machine circuit <b>213</b> activates the I/O device transfer control circuit <b>223</b> and instructs I/O data-read transfer (Step <b>504</b>). Upon receipt of this instruction, the I/O device transfer control circuit <b>223</b> reads out data of the designated transfer byte length from an I/O address designated in the descriptor and stores the read-out data in the data buffer <b>222</b>.</p>
<p id="p-0071" num="0097">Then, the state machine circuit <b>213</b> activates the memory transfer control circuit <b>221</b> and instructs memory data•write transfer (step <b>505</b>). Upon receipt of this instruction, the memory transfer control circuit <b>221</b> reads out data from the data buffer <b>222</b> and transfers the read-out data to the memory address designated in the descriptor.</p>
<p id="p-0072" num="0098">After that, the state machine circuit <b>213</b> notifies a CPU of a data transfer termination using an interruption signal and returns to an idle condition (step <b>506</b>).</p>
<p id="p-0073" num="0099">On the other hand, if the command indicates write transfer and the write•immediate•bit is ‘0’, the state machine circuit <b>213</b> activates the memory transfer control circuit <b>221</b> and instructs memory data•read transfer (step <b>507</b>). Upon receipt of this instruction, the memory transfer control circuit <b>221</b> reads out data of the designated transfer byte length from the memory address that is designated in the descriptor, thereby storing the read-out data in the buffer <b>222</b>.</p>
<p id="p-0074" num="0100">Then, the state machine circuit <b>213</b> activates the I/O device transfer control circuit <b>223</b> and instructs an I/O data•write transfer (step <b>508</b>). Upon receipt of this instruction, the I/O device transfer control circuit <b>223</b> reads out data that is stored in the data buffer <b>222</b> and transfers the read-out data to the I/O address designated in the descriptor. After that, the state machine circuit <b>213</b> performs an operation in step <b>506</b>.</p>
<p id="p-0075" num="0101">If the command indicates write transfer and a write•immediate•bit is ‘1’, the state machine circuit <b>213</b> performs operations in and after step <b>508</b>. At this time, the circuit <b>213</b> instructs the I/O device transfer control circuit <b>223</b> to read out data from the descriptor buffer <b>212</b> (step <b>508</b>). Upon receipt of this instruction, the I/O device transfer control circuit <b>223</b> reads out data not from the data buffer <b>222</b> but from the immediate•write•data field in the descriptor stored in the descriptor buffer <b>212</b> and transfers the read-out data to the designated I/O address.</p>
<p id="p-0076" num="0102"><figref idref="DRAWINGS">FIG. 6</figref> is a flowchart of other control operations performed by the state machine circuit <b>213</b>. In these control operations, the memory transfer control circuit <b>221</b> and the I/O device transfer control circuit <b>223</b> in the data transfer control circuit <b>214</b> are simultaneously activated.</p>
<p id="p-0077" num="0103">Since the memory transfer control circuit <b>221</b> and the I/O device transfer control circuit <b>223</b> operate in parallel while receiving and transmitting mutual pointer information, they pursue data transfer while using the data buffer <b>222</b> as a FIFO (First-In First-Out) circuit. As pointer information, a write pointer indicating a write position of the data buffer <b>222</b> and a read pointer of the data buffer <b>222</b> are used.</p>
<p id="p-0078" num="0104">Such a control is effective especially in the case where a transfer byte length is longer than a size of the data buffer <b>222</b> or in the case where the transfer byte length is much longer than a typical burst transfer length of the memory interface <b>202</b> and the I/O device interface <b>203</b>.</p>
<p id="p-0079" num="0105">Operations in steps <b>601</b>, <b>602</b>, <b>603</b> and <b>607</b> of <figref idref="DRAWINGS">FIG. 6</figref> are identical to those in steps <b>501</b>, <b>502</b>, <b>503</b> and <b>506</b> of <figref idref="DRAWINGS">FIG. 5</figref>.</p>
<p id="p-0080" num="0106">If the command indicates read transfer instep <b>603</b>, the state machine circuit <b>213</b> activates the I/O device transfer control circuit <b>223</b> and instructs I/O data read transfer (step <b>604</b>). At the same time, the circuit <b>213</b> activates the memory transfer control circuit <b>221</b> and instructs memory data•write transfer (step <b>605</b>). Then, the circuit <b>213</b> waits for both a memory data transfer termination notification from the memory transfer control circuit <b>221</b> and an I/O data transfer termination notification from the I/O device transfer control circuit <b>223</b> (step <b>606</b>).</p>
<p id="p-0081" num="0107">The I/O device transfer control circuit <b>223</b> sequentially reads out data of the designated transfer byte length from the designated I/O address in the descriptor and writes the read-out data in the data buffer <b>222</b>. The memory transfer control circuit <b>221</b> sequentially reads out the data written from the data buffer <b>222</b> in parallel with a write operation of the I/O device transfer control circuit <b>223</b> and then it transfers the read-out data to the memory address designated in the descriptor. In this way, the data is read out in the order of being written in the data buffer <b>222</b>, the read-out data is transferred to the memory and the next data is sequentially written in after the read-out data.</p>
<p id="p-0082" num="0108">In this way, when all the data of the designated transfer byte length is transferred to the memory, the memory transfer control circuit <b>221</b> and the I/O device transfer control circuit <b>223</b> notify the state machine circuit <b>213</b> of both a memory data transfer termination and an I/O data transfer termination, respectively. Upon receipt of these notifications, the state machine circuit <b>213</b> notifies the CPU of a data transfer termination using an interruption signal (step <b>607</b>).</p>
<p id="p-0083" num="0109">On the other hand, if the command indicates write transfer and a write•immediate•bit is ‘0’, the state machine circuit <b>213</b> activates the memory transfer control circuit <b>221</b> and instructs memory data•read transfer (step <b>608</b>). At the same time, the circuit <b>213</b> activates the I/O device transfer control circuit <b>223</b> and instructs I/O data•write transfer (step <b>609</b>). Then, the circuit <b>213</b> performs operations in and after step <b>606</b>.</p>
<p id="p-0084" num="0110">Then, the memory transfer control circuit <b>221</b> sequentially reads out data of the designated transfer byte length from a memory address designated in the descriptor and writes the read-out data in the data buffer <b>222</b>. The I/O device transfer control circuit <b>223</b> sequentially reads out data written from the data buffer <b>222</b> in parallel with a write operation of the memory transfer control circuit <b>221</b> and transfers the read-out data to the I/O address designated in the descriptor. In this way, the data is read out in the order of being written in the data buffer <b>222</b> and the read-out data is transferred to the I/O device. The next data is sequentially written in after the read-out data.</p>
<p id="p-0085" num="0111">In this way, when all the data of the designated transfer byte length is transferred to the I/O devices, the memory transfer control circuit <b>221</b> and the I/O device transfer control circuit <b>223</b> notify the state machine circuit <b>213</b> of both a memory data transfer termination and an I/O data transfer termination, respectively. Then, the state machine circuit <b>213</b> performs the operation in step <b>607</b>.</p>
<p id="p-0086" num="0112">If the command indicates write transfer and the write•immediate•bit is ‘1’, the state machine circuit <b>213</b> performs operations in and after step <b>609</b>. At this time, the circuit <b>213</b> instructs the I/O device transfer control circuit <b>223</b> to read out data from the descriptor buffer <b>212</b> (step <b>609</b>). Upon receipt of this instruction, the I/O device transfer control circuit <b>223</b> reads out data not from the data buffer <b>222</b> but from an immediate•write data field in the descriptor stored in the descriptor buffer <b>212</b> and transfers the read-out data to a designated I/O address.</p>
<p id="p-0087" num="0113">In this case, when data transfer of the designated transfer byte length terminates, the I/O device transfer control circuit <b>223</b> notifies the state machine circuit <b>213</b> of an I/O data transfer termination. The state machine circuit <b>213</b> performs the operation in step <b>607</b>.</p>
<p id="p-0088" num="0114">Meanwhile, a program to be implemented by the CPU other than the transfer data and the descriptor is stored in the memory of a data processing apparatus. The CPU performs a data processing by implementing the program using the memory.</p>
<p id="p-0089" num="0115"><figref idref="DRAWINGS">FIG. 7</figref> shows a flowchart of the processings performed by the CPU when data transfer occurs. The CPU first checks whether the occurred data transfer is read transfer or write transfer (step <b>701</b>).</p>
<p id="p-0090" num="0116">If the occurred data transfer is read transfer, a region for transfer data is secured in the memory (step <b>702</b>) and the command of a descriptor region of the predetermined address on the memory is set to ‘0’ (Step <b>703</b>). Then, the CPU sets a flag of the descriptor region (step <b>704</b>), sets the number of bytes of the transfer data to a transfer byte length (step <b>705</b>), sets an address of the region secured in the memory address (step <b>706</b>) and sets the I/O device number of a transfer source and a transfer destination address in the device, to an I/O address (step <b>707</b>).</p>
<p id="p-0091" num="0117">On the other hand, if the occurred data transfer is write transfer, the CPU checks whether or not a data length of the transfer data is longer than 8 bytes (step <b>708</b>).</p>
<p id="p-0092" num="0118">If the data length is longer than 8 bytes, the CPU stores the transfer data in the memory (step <b>709</b>) and sets a command of the descriptor region on the memory to ‘1’ (step <b>710</b>). Then, the CPU sets the write•immediate•bit of a flag of the descriptor region to ‘0’ (step <b>711</b>), sets the number of bytes of the transfer data in the transfer byte length (step <b>712</b>), sets an address of the transfer data in the memory address (step <b>713</b>) and sets both a I/O device number of the transfer destination and a transfer destination address in the I/O device in the I/O address (step <b>714</b>).</p>
<p id="p-0093" num="0119">If the data length is equal to or less than 8 bytes, the CPU stores the transfer data in an immediate•write data field of the descriptor region in the memory (step <b>715</b>) and sets a command of the descriptor region to ‘1’ (step <b>716</b>). Then, the CPU sets the write•immediate•bit of a flag of the descriptor region to ‘1’ (step <b>717</b>), sets the number of bytes of the transfer data in the transfer byte length (step <b>718</b>), and sets both the I/O device number of a transfer destination and a transfer destination address in the I/O device in the I/O address (step <b>714</b>).</p>
<p id="p-0094" num="0120">When the setting of the descriptor terminates, the CPU activates the DMA control circuit <b>201</b> (step <b>720</b>) and performs other processes until it receives an interruption signal from the DMA control circuit <b>201</b> (step <b>721</b>).</p>
<p id="p-0095" num="0121"><figref idref="DRAWINGS">FIG. 8</figref> shows a method of offering a program to be used for processes by the CPU. The program that is stored in an external apparatus <b>802</b>, a portable storage medium <b>803</b> of a data processing apparatus (computer) etc. is loaded into the memory of a data process apparatus <b>801</b>. The external apparatus <b>802</b> generates a conveyance signal for conveying the program and transmits the signal to the data processing apparatus <b>801</b> through an optional transmission medium on a communication network. The portable storage medium <b>803</b> includes an optional computer-readable storage medium such as a memory card, a flexible disk, an optical disk, a magneto-optical disc, etc. A CPU of the data processing apparatus <b>801</b> implements the program and performs a data processing.</p>
<p id="p-0096" num="0122">Another data control apparatus other than a storage apparatus such as a magnetic disk apparatus, an optical disk apparatus, a magnet-optical disk apparatus, a tape apparatus, etc. and an interface apparatus can be connected to the data transfer control apparatus in a data processing apparatus as an I/O device.</p>
<p id="p-0097" num="0123">As one example of the data processing apparatus, a storage apparatus is cited. The storage apparatus comprises a memory apparatus that is shared by a plurality of access apparatuses like a host computer and a storage control apparatus that controls data transfer between an access apparatus and a memory apparatus. In this case, the memory apparatus corresponds to an I/O device while the storage control apparatus corresponds to a data transfer control apparatus. By applying the present invention to the storage apparatus, the data transfer from the storage control apparatus to the memory apparatus is improved.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. Direct memory access control apparatus for controlling data transfer from a memory to a transfer destination apparatus in accordance with a command assigned from a processing apparatus, comprising:
<claim-text>a command storage device for storing a data transfer command assigned from the processing apparatus; and</claim-text>
<claim-text>a transfer control device for checking whether or not the data transfer command stored in the command storage device includes transfer data to be transferred to the transfer destination apparatus, when the data transfer command does not include the transfer data, for reading out the transfer data from the memory, thereby transferring the read-out data to the transfer destination apparatus and when the data transfer command includes the transfer data, for reading out the transfer data from the command storage device, thereby transferring the read-out data to the transfer destination apparatus.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the command storage device is arranged to store a data transfer command including the transfer data in a case where a data length of the transfer data is equal to or less than a predetermined value and is arranged to store a data transfer command not-including the transfer data in a case where the data length of the transfer data is longer than a predetermined value.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref> or <claim-ref idref="CLM-00002">2</claim-ref>, wherein:
<claim-text>the command storage device is arranged to store a data transfer command having flag information for showing whether or not the transfer data is included; and</claim-text>
<claim-text>the transfer control device is arranged to analyze the flag information and to check whether or not the data transfer command includes the transfer data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. A data transfer control apparatus for controlling data transfer to a transfer destination apparatus, comprising:
<claim-text>a memory;</claim-text>
<claim-text>a processing device for issuing a data transfer command for instructing the transfer destination apparatus about data transfer;</claim-text>
<claim-text>a command storage device for storing the data transfer command; and</claim-text>
<claim-text>a transfer control device for checking whether or not the data transfer command stored in the command storage device includes transfer data to be transferred to the transfer destination apparatus, when the data transfer command does not include the transfer data, for reading out the transfer data from the memory, thereby transferring the read-out data to the transfer destination apparatus and when the data transfer command includes the transfer data, for reading out the transfer data from the command storage device, thereby transferring the read-out data to the transfer destination apparatus.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. Data processing apparatus, comprising:
<claim-text>a memory;</claim-text>
<claim-text>a processing apparatus for issuing a data transfer command for instructing data transfer to the transfer destination apparatus;</claim-text>
<claim-text>a command storage device for storing the data transfer command; and</claim-text>
<claim-text>a transfer control device for checking whether or not a data transfer command stored in the command storage device includes transfer data to be transferred to the transfer destination apparatus, when the data transfer command does not include the transfer data, for reading out the transfer data from the memory, thereby transferring the read-out data to the transfer destination apparatus and when the data transfer command includes the transfer data, for reading out the transfer data from the command storage device, thereby transferring the read-out data to the transfer destination apparatus.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A computer-readable storage medium storing a program for a processing apparatus for assigning a command to a direct memory access control apparatus for controlling, when data transfer from a memory to a transfer destination apparatus occurs, the data transfer, wherein the program directs the processing apparatus to perform the following operations:
<claim-text>checking whether or not a data length of transfer data to be transferred to the transfer destination apparatus is longer than a predetermined value;</claim-text>
<claim-text>if the data length is longer than the predetermined value, storing the transfer data in the memory setting in the data transfer command flag information indicating that a data transfer command does not include the transfer data and a memory address of the transfer data, and if the data length is equal to or less than the predetermined value setting in the data transfer command flag information indicating that the data transfer command includes the transfer data; and</claim-text>
<claim-text>activating the direct memory access control apparatus and directing this apparatus to perform data transfer designated by the data transfer command.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A conveyance signal for conveying a program for a processing apparatus for assigning a command to a direct memory access control apparatus controlling, when data transfer from a memory to a transfer destination apparatus occurs, the data transfer, wherein the program directs the processing apparatus to perform the following operations:
<claim-text>checking whether or not a data length of transfer data to be transferred to the transfer destination apparatus is longer than a predetermined value;</claim-text>
<claim-text>if the data length is longer than the predetermined value storing the transfer data in the memory, and setting in the data transfer command flag information indicating that a data transfer command does not include the transfer data and a memory address of the transfer data, and if the data length is less than or equal to the predetermined value, setting in the data transfer command the transfer data and flag information indicating that the data transfer command includes the transfer data; and</claim-text>
<claim-text>activating the direct memory access control apparatus and directing this apparatus to perform data transfer designated by the data transfer command.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A direct memory access control method for controlling data transfer from a memory to a transfer destination apparatus in accordance with a command assigned from a processing apparatus, comprising:
<claim-text>storing a data transfer command assigned from the processing apparatus in a command storage device;</claim-text>
<claim-text>checking whether or not a data transfer command stored in the command storage device includes transfer data to be transferred to the transfer destination apparatus;</claim-text>
<claim-text>when the data transfer command does not include the transfer data reading out the transfer data from the memory, thereby transferring the read-out data to the transfer destination apparatus; and</claim-text>
<claim-text>when the data transfer command includes the transfer data, reading out the transfer data from the command storage device, thereby transferring the read-out data to the transfer destination apparatus.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
