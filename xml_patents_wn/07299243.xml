<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299243-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299243</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10034438</doc-number>
<date>20011227</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>869</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>7071041</main-classification>
<further-classification>707100</further-classification>
</classification-national>
<invention-title id="d0e53">System and method for controlling free space distribution by key range within a database</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4774657</doc-number>
<kind>A</kind>
<name>Anderson et al.</name>
<date>19880900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  2</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5649196</doc-number>
<kind>A</kind>
<name>Woodhill et al.</name>
<date>19970700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707204</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5732402</doc-number>
<kind>A</kind>
<name>Lehman</name>
<date>19980300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707205</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5764593</doc-number>
<kind>A</kind>
<name>Turpin et al.</name>
<date>19980600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713  2</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5799290</doc-number>
<kind>A</kind>
<name>Dolan et al.</name>
<date>19980800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>705410</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5852822</doc-number>
<kind>A</kind>
<name>Srinivasan et al.</name>
<date>19981200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  4</main-classification></classification-national>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6003022</doc-number>
<kind>A</kind>
<name>Eberhard et al.</name>
<date>19991200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  2</main-classification></classification-national>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6021408</doc-number>
<kind>A</kind>
<name>Ledain et al.</name>
<date>20000200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  8</main-classification></classification-national>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6032160</doc-number>
<kind>A</kind>
<name>Lehman</name>
<date>20000200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707205</main-classification></classification-national>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6052698</doc-number>
<kind>A</kind>
<name>Bennett et al.</name>
<date>20000400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707205</main-classification></classification-national>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6108653</doc-number>
<kind>A</kind>
<name>Pereira</name>
<date>20000800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  7</main-classification></classification-national>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6115705</doc-number>
<kind>A</kind>
<name>Larson</name>
<date>20000900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  3</main-classification></classification-national>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>6122664</doc-number>
<kind>A</kind>
<name>Boukobza et al.</name>
<date>20000900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709224</main-classification></classification-national>
</citation>
<citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>6144970</doc-number>
<kind>A</kind>
<name>Bonner et al.</name>
<date>20001100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707206</main-classification></classification-national>
</citation>
<citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>6259448</doc-number>
<kind>B1</kind>
<name>McNally et al.</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>715733</main-classification></classification-national>
</citation>
<citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>6269375</doc-number>
<kind>B1</kind>
<name>Ruddy et al.</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707101</main-classification></classification-national>
</citation>
<citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>6285996</doc-number>
<kind>B1</kind>
<name>Jou et al.</name>
<date>20010900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  4</main-classification></classification-national>
</citation>
<citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>6334134</doc-number>
<kind>B1</kind>
<name>Haderle et al.</name>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707205</main-classification></classification-national>
</citation>
<citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>6351850</doc-number>
<kind>B1</kind>
<name>van Gilluwe et al.</name>
<date>20020200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>717175</main-classification></classification-national>
</citation>
<citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>6411964</doc-number>
<kind>B1</kind>
<name>Iyer et al.</name>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707200</main-classification></classification-national>
</citation>
<citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>6442539</doc-number>
<kind>B1</kind>
<name>Amundsen et al.</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  2</main-classification></classification-national>
</citation>
<citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>6453383</doc-number>
<kind>B1</kind>
<name>Stoddard et al.</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711112</main-classification></classification-national>
</citation>
<citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>6578039</doc-number>
<kind>B1</kind>
<name>Kawamura</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707100</main-classification></classification-national>
</citation>
<citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>6584474</doc-number>
<kind>B1</kind>
<name>Pereira</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707200</main-classification></classification-national>
</citation>
<citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>6591269</doc-number>
<kind>B1</kind>
<name>Ponnekanti</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707100</main-classification></classification-national>
</citation>
<citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>6606631</doc-number>
<kind>B1</kind>
<name>Martin et al.</name>
<date>20030800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707101</main-classification></classification-national>
</citation>
<citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>6622142</doc-number>
<kind>B1</kind>
<name>Murray et al.</name>
<date>20030900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707100</main-classification></classification-national>
</citation>
<citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>6636879</doc-number>
<kind>B1</kind>
<name>Doucette et al.</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707205</main-classification></classification-national>
</citation>
<citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>6658437</doc-number>
<kind>B1</kind>
<name>Lehman</name>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707205</main-classification></classification-national>
</citation>
<citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>6668263</doc-number>
<kind>B1</kind>
<name>Cranston et al.</name>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707205</main-classification></classification-national>
</citation>
<citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>2001/0047360</doc-number>
<kind>A1</kind>
<name>Huras et al.</name>
<date>20011100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707102</main-classification></classification-national>
</citation>
<citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>2002/0083033</doc-number>
<kind>A1</kind>
<name>Abdo et al.</name>
<date>20020600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  1</main-classification></classification-national>
</citation>
</references-cited>
<number-of-claims>25</number-of-claims>
<us-exemplary-claim>18</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>369 5331</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>369 5311</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>369 531</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>3692753</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>369272</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>3692751</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709200</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709223</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709226</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707  1-1041</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707200-206</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60323412</doc-number>
<kind>00</kind>
<date>20010919</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20030056082</doc-number>
<kind>A1</kind>
<date>20030320</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Maxfield</last-name>
<first-name>John D.</first-name>
<address>
<city>Cedar Park</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Wong, Cabello, Lutsch, Rutherford &amp; Brucculeri, LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>BMC Software, Inc.</orgname>
<role>02</role>
<address>
<city>Houston</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Wong</last-name>
<first-name>Don</first-name>
<department>2163</department>
</primary-examiner>
<assistant-examiner>
<last-name>Black</last-name>
<first-name>Linh</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">An improved method and system for controlling free space distribution by key range within a database. In one embodiment, a data structure including key ranges of a plurality of database tables and indexes, and a plurality of key range free space parameters is created. The plurality of database tables and indexes may include a plurality of page sets, which may include rows of data and keys. Time values may be associated with the plurality of free space parameters. The key range free space parameters may have values assigned to them. The key range free space parameters may be user-defined or automatically generated using growth trend analysis, based on key range growth statistics. The rows of data and keys within the plurality of page sets may be redistributed by a reorganization process. The redistributing may reference the key ranges of the data structure and the key range free space parameters.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="230.72mm" wi="171.28mm" file="US07299243-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="112.27mm" wi="132.08mm" orientation="landscape" file="US07299243-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="166.79mm" wi="154.77mm" file="US07299243-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="233.17mm" wi="148.17mm" file="US07299243-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="231.22mm" wi="175.68mm" file="US07299243-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="205.49mm" wi="164.25mm" orientation="landscape" file="US07299243-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="267.21mm" wi="169.08mm" file="US07299243-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">PRIORITY CLAIM</heading>
<p id="p-0002" num="0001">This application claims benefit of priority of provisional application Ser. No. 60/323,412 titled “System And Method For Controlling Free Space Distribution Within A Database” and filed Sep. 19, 2001, whose inventor is John D. Maxfield.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">1. Field of the Invention</p>
<p id="p-0004" num="0003">The present invention relates to database utility software, and more particularly to a system and method for controlling free space distribution by key range within a database.</p>
<p id="p-0005" num="0004">2. Description of the Related Art</p>
<p id="p-0006" num="0005">Database utility software programs that build table spaces and indexes (e.g., database reorganization, database loading, database recovery, among others) typically apply free space parameters evenly across the entire table space and index. This approach of even distribution may lead to an inefficient use of Direct Access Storage Device (DASD) resources (e.g., allocating too much free space in a section of the table space or index that does not require free space to accommodate growth, or not allocating enough free space in a section of the table space or index that experiences high levels of growth). Unneeded free space allocated to a section of the table space or index may have an impact on performance since more reads may be required to retrieve a given amount of data. Furthermore, disorganization may occur when DB2 attempts to insert or update data within a section of the table space or index that has insufficient free space to accommodate growth.</p>
<p id="p-0007" num="0006">A table space may contain multiple tables. In this situation, DB2 does not provide the user with the capability to define free space attributes for each table within a given table space. Free space attributes may only be defined for the table space as a whole. Therefore, it is desirable to be able to apply free space to accommodate the free space requirements of each individual table within a multi-table table space.</p>
<p id="p-0008" num="0007">The current version of REORG PLUS for DB2, a product of BMC Software, Inc., applies free space to a table space during the process of calculating new row identifiers (RIDs) for table space rows during the unload phases. This process is described more fully in U.S. Pat. No. 5,222,235, titled “Databases system for permitting concurrent indexing and reloading of data by early simulating the reload process to determine final locations of the data”, whose inventors are Thomas E. Hintz and William R. Cunningham, and which issued on Jun. 22, 1993. U.S. Pat. No. 5,222,235 is hereby incorporated by reference in its entirety as though fully and completely set forth herein.</p>
<p id="p-0009" num="0008">The RID for each row contains the page number of the page where the row will reside after reorganization. The new RID is written with its corresponding row data to an unload file for processing during the reload phase. During the RID calculation process, free space parameters are applied to keep a portion of each data page free (PCTFREE or percent free) or to insert free pages (FREEPAGE or free page) between data pages. It is noted that the free space parameters are applied at a table space level, rather than at a finer level of granularity within the table space.</p>
<p id="p-0010" num="0009">The current version of REORG PLUS for DB2 applies free space to indexes in a similar manner. During the unload phase, after the new RID for each row in the file page set has been calculated, REORG PLUS for DB2 extracts the keys for each secondary index and writes them with the new RID to an index work file. During the reload phase, the index work file is sorted by index key. After the sort is complete, free space parameters are applied as index pages and are reloaded with key and RID pairs. The clustering index is rebuilt in a similar manner.</p>
<p id="p-0011" num="0010">It is desirable that free space settings or parameters allow more granularity (i.e., allow user-defined sub-sections, or key ranges, within a table space or index to be individually controllable through user-defined free space settings or parameters). Thus, using this finer level of granularity than currently available, the user may be able to reduce free space in key ranges of a table or index that do not require free space for insert or update activity (e.g., read-only data), and/or increase free space in key ranges of a table or index that are expected to require new growth (e.g., new database records inserted, existing database records updated). For the foregoing reasons, there is a need for a system and method for controlling free space distribution by key range within a database such that user control of free space settings or parameters within a table or index is achievable.</p>
<heading id="h-0003" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0012" num="0011">The present invention provides various embodiments of an improved method and system for controlling free space distribution by key range within a database.</p>
<p id="p-0013" num="0012">In one embodiment, a data structure may be created. The data structure may include key ranges of a plurality of database tables and indexes, and free space parameters associated with the key ranges. The plurality of database tables and indexes may include a plurality of page sets (e.g., a file page set, an index page set). The plurality of page sets may include rows of data in a file page set, and keys in an index page set. The key ranges of the plurality of database tables and indexes may include a low key value and a high key value for each of the plurality of database tables and indexes.</p>
<p id="p-0014" num="0013">The data structure may further include a plurality of key ranges of the plurality of database tables and indexes, and a plurality of free space parameters associated with the key ranges. In one embodiment, one or more time values (e.g., a starting time value, an ending time value) may be associated with the plurality of free space parameters. The plurality of free space parameters may be active during a time frame beginning with a starting time represented by the starting time value and ending with an ending time represented by the ending time value.</p>
<p id="p-0015" num="0014">The key range free space parameters may have values assigned to them. The key range free space parameters may include, for each key range defined, one or more of: a free page value, a free pages value, a percent free value, an end of key range number of free pages value, or a maximum number of rows value. In one embodiment, the key range free space parameters may be user defined or user specified. In an alternate embodiment, the key range free space parameters may be automatically generated using growth trend analysis, based on key range growth statistics.</p>
<p id="p-0016" num="0015">The rows of data within the plurality of database tables may be redistributed by a reorganization process. Also, the keys within the plurality of indexes may be redistributed by a reorganization process. The redistributing may reference the key ranges of the data structure and the free space parameters associated with the key ranges.</p>
<p id="p-0017" num="0016">Additionally, growth within a database may be monitored, using the data structure described above. Statistics regarding key range growth for the plurality of database tables and indexes may be gathered over a user-defined time period. The statistics may be analyzed. Free space parameters may be associated with the key ranges in response to the analysis of the statistics.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0018" num="0017">A better understanding of the present invention can be obtained when the following detailed description of various embodiments is considered in conjunction with the following drawings, in which:</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an exemplary computer system according one embodiment of the present invention;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 2</figref> is an exemplary block diagram of the computer system illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, according to one embodiment of the present invention;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 3</figref><i>a </i>illustrates a prior art distribution of data and free space in a sample database table;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 3</figref><i>b </i>illustrates a distribution of data and free space in a sample database table, based on user-defined free space parameters, according to one embodiment;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a free space manager repository, according to one embodiment;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 5</figref> is a bar chart illustrating a sample scenario of object growth by key range over time, according to one embodiment; and</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 6</figref> is a flow chart illustrating a system and method for controlling free space distribution by key range within a database, according to one embodiment.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0026" num="0025">While the invention is susceptible to various modifications and alternative forms, specific embodiments thereof are shown by way of example in the drawings and will herein be described in detail. It should be understood, however, that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed, but on the contrary, the intention is to cover all modifications, equivalents, and alternatives falling within the spirit and scope of the present invention as defined by the appended claims.</p>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF SEVERAL EMBODIMENTS</heading>
<p id="h-0006" num="0000">FIG. <b>1</b>—Computer System</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a computer system <b>82</b> operable to control free space distribution by key range within a database. One embodiment of a method for controlling free space distribution by key range within a database is described below. The computer system <b>82</b> may be any type of computer system, including a personal computer system, mainframe computer system, workstation, network appliance, Internet appliance, personal digital assistant (PDA), television system or other device. In general, the term “computer system” can be broadly defined to encompass any device having at least one processor that executes instructions from a memory medium.</p>
<p id="p-0028" num="0027">In one embodiment, the database may be DB2®(a product of IBM Corporation) and the operating system(s) on which the DB2 database may execute may be OS/1390® and/or z/OS®. (DB2, OS/390 and z/OS are registered trademarks of the IBM Corporation of Armonk, N.Y.) Typically, the OS/390 and z/OS operating systems run on IBM Enterprise Servers (e.g., mainframe computer systems). Alternatively, various other databases and/or operating systems may be used. Thus the management or controlling of free space distribution by key range may be accomplished in various other database management systems, in addition to DB2, in similar manner as described below.</p>
<p id="p-0029" num="0028">As shown in <figref idref="DRAWINGS">FIG. 1</figref>, the computer system <b>82</b> may include a display device operable to display operations associated with controlling free space distribution by key range within a database. The display device may also be operable to display a graphical user interface of controlling free space distribution by key range within a database. The graphical user interface may comprise any type of graphical user interface, e.g., depending on the computing platform.</p>
<p id="p-0030" num="0029">The computer system <b>82</b> may include a memory medium(s) on which one or more computer programs or software components according to one embodiment of the present invention may be stored. For example, the memory medium may store one or more software programs which are executable to perform the methods described herein. Also, the memory medium may store a programming development environment application used to create and/or execute the software programs. The memory medium may also store operating system software, as well as other software for operation of the computer system.</p>
<p id="p-0031" num="0030">The term “memory medium” is intended to include an installation medium, e.g., a CD-ROM, floppy disks, or tape device; a computer system memory or random access memory such as DRAM, SRAM, EDO RAM, Rambus RAM, etc.; or a non-volatile memory such as a magnetic media (e.g., a hard drive) or optical storage. The memory medium may comprise other types of memory as well, or combinations thereof. In addition, the memory medium may be located in a first computer in which the programs are executed, or may be located in a second different computer which connects to the first computer over a network, such as the Internet. In the latter instance, the second computer may provide program instructions to the first computer for execution.</p>
<p id="h-0007" num="0000">FIG. <b>2</b>—Computer System Block Diagram</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 2</figref> is an embodiment of an exemplary block diagram of the computer system illustrated in <figref idref="DRAWINGS">FIG. 1</figref>. It is noted that any type of computer system configuration or architecture may be used in conjunction with the system and method described herein, as desired, and <figref idref="DRAWINGS">FIG. 2</figref> illustrates a representative PC embodiment. It is also noted that the computer system may be a general purpose computer system such as illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, or other types of embodiments. The elements of a computer not necessary to understand the present invention have been omitted for simplicity.</p>
<p id="p-0033" num="0032">The computer system <b>82</b> may include at least one central processing unit or CPU <b>160</b> which is coupled to a processor or host bus <b>162</b>. The CPU <b>160</b> may be any of various types, including an x86 processor, e.g., a Pentium class, a PowerPC processor, a CPU from the SPARC family of RISC processors, as well as others (e.g., mainframe computer systems). Main memory <b>166</b> is coupled to the host bus <b>162</b> by means of memory controller <b>164</b>. The main memory <b>166</b> may store one or more computer programs or libraries according to the present invention. The main memory <b>166</b> also stores operating system software as well as the software for operation of the computer system, as well known to those skilled in the art.</p>
<p id="p-0034" num="0033">The host bus <b>162</b> is coupled to an expansion or input/output bus <b>170</b> by means of a bus controller <b>168</b> or bus bridge logic. The expansion bus <b>170</b> is preferably the PCI (Peripheral Component Interconnect) expansion bus, although other bus types may be used. The expansion bus <b>170</b> may include slots for various devices such as a video display subsystem <b>180</b> and hard drive <b>182</b> coupled to the expansion bus <b>170</b>, among others (not shown).</p>
<p id="h-0008" num="0000"><figref idref="DRAWINGS">FIG. 3</figref><i>a</i>—Prior Art Distribution of Data and Free Space</p>
<p id="p-0035" num="0034">A prior art distribution of data and free space in a sample database table is shown in <figref idref="DRAWINGS">FIG. 3</figref><i>a</i>. A user-defined object definition (e.g., a DB2 object definition <b>300</b>) may specify the layout of data and free space in an existing database table (e.g., in DB2, using a “CREATE TABLESPACE” command). As shown in <figref idref="DRAWINGS">FIG. 3</figref><i>a</i>, the existing data, as represented by keys <b>1</b> through <b>30</b>, may be evenly distributed within the existing database table. Typically, a user-defined “percent free” variable is set at the table space level that applies to all pages within the table space. In <figref idref="DRAWINGS">FIG. 3</figref><i>a</i>, although not visible, this “percent free” variable is set to 30 percent. Furthermore, <figref idref="DRAWINGS">FIG. 3</figref><i>a </i>also illustrates the application of a “free page” variable. Typically in the prior art, the value for a “free page” variable indicates the frequency at which a single page of free space is inserted amongst pages containing data. As shown in <figref idref="DRAWINGS">FIG. 3</figref><i>a</i>, one page of free space exists or is inserted after every three pages containing data. Thus, the “free page” variable is set to three, in this example.</p>
<p id="h-0009" num="0000"><figref idref="DRAWINGS">FIG. 3</figref><i>b</i>—One Embodiment of a User-defined Distribution of Data and Free Space</p>
<p id="p-0036" num="0035">One embodiment of a distribution of data and free space in a sample database table, based on user-defined key range free space parameters, is shown in <figref idref="DRAWINGS">FIG. 3</figref><i>b</i>. In one embodiment, user-defined key range free space parameters may be provided through Free Space Manager, a product of BMC Software, Inc. A user-defined key range definition (e.g., a Free Space Manager object definition <b>350</b>) may specify the layout of data and free space in an existing database table (e.g., in Free Space Manager, using a “CREATE KEYRANGESET” command). As shown in <figref idref="DRAWINGS">FIG. 3</figref><i>b</i>, the existing data, as represented by keys <b>1</b> through <b>30</b>, may be distributed within the existing database table based on user-defined key range free space parameters. For example, user-defined key range free space parameters may include, for each key range defined, one or more of: a free page value, a free pages value, a percent free value, an end of key range number of free pages value, or a maximum number of rows value.</p>
<p id="p-0037" num="0036">As used herein, a “key range” is a contiguous range of rows within a database table or some other object (e.g., an index), as indicated by a low key and a high key, wherein each key is a unique identifier associated with one or more columns of the database table. In one embodiment, these user-defined free space parameters may be associated with a key range (e.g., two key values: a low key value and a high key value). It is noted that free space values are defined when a table space or index is created. In one embodiment, the free space values defined at table space or index definition time may be used when one or more keys do not fall into a specified key range.</p>
<p id="p-0038" num="0037">In <figref idref="DRAWINGS">FIG. 3</figref><i>b</i>, although not visible, the user-defined key range free space parameters are as follows: for the key range beginning with key number <b>1</b> through key number <b>25</b>: a free page value of zero, a free pages value of zero, a percent free value of zero; for the key range beginning with key number <b>26</b> through key number <b>28</b>: a free page value of three, a free pages value of two, a percent free value of 30 percent; for the key number <b>29</b> through key number <b>30</b>: a free page value of zero, a free pages value of zero, a percent free value of zero.</p>
<p id="p-0039" num="0038">In one embodiment, a “free page” variable may indicate the frequency at which a user-defined number of pages (e.g., a “free pages” variable) of free space is inserted amongst pages containing data. As shown in <figref idref="DRAWINGS">FIG. 3</figref><i>b </i>for the key range beginning with key number <b>26</b> through key number <b>28</b>, two pages of free space exist or may be inserted after every three pages containing data. Thus, the “free page” variable is set to three, and the “free pages” variable is set to two, for the key range beginning with key number <b>26</b> through key number <b>28</b>, in this example.</p>
<p id="p-0040" num="0039">In one embodiment, an “end of key range number of free pages” variable may indicate the number of pages of free space inserted after pages containing data for the last key of a given key range. As shown in <figref idref="DRAWINGS">FIG. 3</figref><i>b</i>, for each of the three key ranges (i.e., the key range beginning with key number <b>1</b> through key number <b>25</b>, the key range beginning with key number <b>26</b> through key number <b>28</b>, and the key number <b>29</b> through key number <b>30</b>), zero pages of free space exist or may be inserted after pages containing data for a given key range. In one embodiment, the “end of key range number of free pages” variable may be applied after the “free pages” variable, thus although two pages of free space are shown after the last key of the key range (i.e., key <b>28</b>), those two pages of free space may be inserted based upon the “free pages” variable. Alternatively, the order of the application of the “end of key range number of free pages” variable and the “free pages” variable may be reversed, or the “end of key range number of free pages” variable may supersede the “free pages” variable for the last key of a given key range, as the user desires.</p>
<p id="p-0041" num="0040">Alternatively, a user-defined set of free space distribution values may be defined or set at the object level, as follows: a free page value of zero, a free pages value of zero, a percent free value of zero, among others. In embodiments where a user-defined set of free space distribution values is defined, it would only be necessary for the user to specify, or explicitly define, free space parameters for the single key range beginning with key number <b>26</b> through key number <b>28</b>, to achieve the same effect as specifying free space parameters for each of the three key ranges (i.e., the key range beginning with key <b>1</b> through key <b>25</b>, the key range beginning with key <b>26</b> through key <b>28</b>, the key range beginning with key <b>29</b> through key <b>30</b>).</p>
<p id="p-0042" num="0041">Comparing the space usage in <figref idref="DRAWINGS">FIG. 3</figref><i>a </i>with the space usage in <figref idref="DRAWINGS">FIG. 3</figref><i>b</i>, it may be seen that the amount of space required for keys <b>1</b> through <b>25</b> and keys <b>29</b> and <b>30</b> is reduced by one third in <figref idref="DRAWINGS">FIG. 3</figref><i>b</i>. This reduction is possible due to the finer level of granularity available for setting the user-defined free space parameters by key range, according to one embodiment of the present invention. In <figref idref="DRAWINGS">FIG. 3</figref><i>a</i>, a user-defined “percent free” variable is set at the object level to 30 percent across all keys; no mechanism exists to specify different “percent free” values for one or more key ranges. In <figref idref="DRAWINGS">FIG. 3</figref><i>b</i>, a corresponding percent free value may be set on any size key range (e.g., for a single key, or for multiple consecutive keys). Thus, data which is to be read-only (i.e., no growth), may have their “percent free” values set to zero, which in turn leads to read-only keys taking up a minimum amount of space.</p>
<p id="p-0043" num="0042">In one embodiment, the user may be provided with the capability to manage free space within a table or index, based on user-defined key range specifications. The user may be able to tune free space within a page set based on the needs of the application. For example, if a user determines that a given key range within the table has no insert or update activity (i.e., read-only data), free space may be removed from the key range to improve query performance. This may require fewer reads to retrieve the data for the key range since the key range occupies fewer pages with free space removed.</p>
<p id="p-0044" num="0043">Additionally, the user may pre-position free space in key ranges that are expected to have high insert and/or update activity. Thus, the user may minimize disorganization caused by insert and/or update activity by pre-positioning free space in certain key ranges. This minimization of disorganization may, in turn, reduce the need for reorganizations and improve database performance.</p>
<p id="p-0045" num="0044">The user may improve performance of a reload utility software program by removing unneeded free space within a given page set. For example, if page set storage requirements are reduced, fewer I/O operations may be required by the utility during the reload process. This may result in a shorter elapsed time for the reload to complete processing, as compared to traditional utility executions. It is noted that this improvement in performance may apply equally well to any other database maintenance programs (e.g., other utility software programs), in addition to “reload” utility software programs. Performance improvements related to improved free space management may not be exclusive to “utility software programs” or “database maintenance software programs”. More importantly, reduced I/O requirements may benefit other DB2 operations (e.g., SELECT, INSERT, and UPDATE processes) which are used by application programs.</p>
<p id="h-0010" num="0000">FIG. <b>4</b>—One Embodiment of a Free Space Manager Repository</p>
<p id="p-0046" num="0045">One embodiment of a Free Space Manager Repository is shown in <figref idref="DRAWINGS">FIG. 4</figref>. The components and data flow of the Free Space Manager Repository are shown interacting with a REORG PLUS for DB2 table space reorganization process (shown at the bottom of <figref idref="DRAWINGS">FIG. 4</figref>). It is noted that the Free Space Manager Repository may interact with various other processes, as desired. A detailed description of one embodiment of the components of the Free Space Manager Repository (i.e., tables: Key Range Sets, Key Ranges, Key Columns, Key Range Statistics, Sync) appears below. Various embodiments may use different combinations of columns than those specified below for each of the tables within the free space manager repository (i.e., certain of the specified columns below may be replaced with other columns, or deleted entirely; additional columns may also be added), and/or different tables, as desired, as long as the modifications, equivalents, and/or alternative table layouts fall within the spirit and scope of the present invention as defined by the appended claims.</p>
<p id="p-0047" num="0046">In one embodiment of the present invention, the REORG PLUS for DB2 product of BMC Software, Inc. is enhanced, to allow for a finer level of control of free space within the table. Thus, prior to calculating RIDs for each row of the file page set during the unload phase, REORG PLUS for DB2 may search a key range table to determine the key range that the row is associated with. Portions of the sort data record key field, which contains the clustering index key value, may be used as the search criteria. Other search criteria may be substituted, as desired.</p>
<p id="p-0048" num="0047">Similarly, prior to placing keys and RIDs on new index pages during the reload phase, REORG PLUS for DB2 may search a key range table to determine the key range that the index key is associated with. Portions of the unload data record key field (e.g., for clustering indexes) and index work record key field (e.g., for secondary indexes), which contain the index key values, may be used as the search criteria. Other search criteria may be substituted, as desired.</p>
<p id="p-0049" num="0048">Each element of the key range table may contain free space parameters for a key range. These parameters may take effect for all rows that fall within the key range. When a set of rows or keys do not fall within a key range specified in the key range table, the default free space parameters defined for the object (e.g., table space or index) may take effect.</p>
<p id="p-0050" num="0049">In one embodiment, the first row or key to enter a key range scope may be positioned on a new page within the page set. As rows or keys come in and out of key range scope, this may cause a “key range break” condition, which may result in the creation of a new page when a new key range is encountered. When a new key range is encountered, the user may have the option of choosing to have the new key range parameters take effect when the next page is processed.</p>
<p id="p-0051" num="0050">The user may control free space for both tables and indexes on a key range basis. For tables and clustering indexes, the user may control free space for key ranges based on any combination of columns, as chosen by the user. For example, in order to closely match the sort order of the data, the user may desire to specify key ranges using a subset of the key columns that comprise the clustering index key. By specifying the columns in index key column sequence, the sort order of the data may be closely matched.</p>
<p id="p-0052" num="0051">One benefit of specifying key ranges using a subset of the key columns that comprise the clustering index key is that “key range breaks” may occur much less frequently than if the key ranges were specified without regard to this concern. When “key range breaks” are minimized, free space is typically distributed efficiently and DASD resources are conserved. In the case of secondary indexes, typically, the index is the only data that is available for searching the key range table, thus the user-specified key range may be limited to a subset of the key columns that comprise the clustering index key.</p>
<p id="p-0053" num="0052">The user may define the key ranges they want to control and the free space parameters that apply to each of the key ranges. The key range may be defined in terms of a low key value and high key value. These key values may be stored in the repository and retrieved by a utility (e.g., the REORG PLUS for DB2 product). In one embodiment, where the database is DB2, the retrieval may use DB2 internal format, thus allowing the utility to retrieve and use the key range specifications with no additional processing. The key value stored in the repository may be compared directly to the key values stored in the utility data records. An appropriate user interface (e.g., a graphical user interface, a batch program) may be used to accept the user specifications. The user specifications may be stored in a Free Space Manager Repository table, as shown in <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0054" num="0053">The user interface may provide the following functions, among others: (i) register an object for free space management; (ii) activate or deactivate free space management for an object; (iii) fetch, insert, update, and delete Key Range Sets; (iv) fetch, insert, update, and delete Key Columns; (v) fetch, insert, update, and delete Key Range Specifications.</p>
<p id="p-0055" num="0054">The user may manage the contents of the Free Space Manager Repository, through the use of the user interface. Referential integrity within the Free Space Manager Repository may be managed by the database itself (e.g., DB2) in order to relieve the user interface of some of the information management burden.</p>
<p id="p-0056" num="0055">Multiple sets of key range specifications may be entered for a single object (e.g., a database table or an index). Similarly, multiple sets of key range specifications may be entered for multiple objects (e.g., a plurality of database tables and/or indexes). The user may specify a time frame in which the key range specifications are active for a utility process. Thus, the user may pre-position key range specifications for reorganizations to take place at some designated time in the future (e.g., after normal working hours).</p>
<p id="p-0057" num="0056">During the utility initialization phase, the utility may query the Free Space Manager Repository tables to perform the following tasks: (i) determine if the object being reorganized is registered for free space management; (ii) determine if free space management is active for the object; (iii) retrieve key columns; (iv) retrieve key ranges.</p>
<p id="p-0058" num="0057">In one embodiment, a Free Space Manager Data Space may be used to store the key ranges for an object in memory for reference during utility processing. This data space may be used to minimize the use of memory within the utility's address space. A key range specification may be retrieved from the key range specifications in the data space and stored in the utility's address space only when it is needed for reference during the utility's processing of a given key range.</p>
<p id="p-0059" num="0058">In an embodiment utilizing a relational database (e.g. a DB2 database), the Free Space Manager Repository may include a number of relational tables and indexes, as shown in <figref idref="DRAWINGS">FIG. 4</figref>. Typically one Free Space Manager (FSM) Repository may be used per subsystem (e.g., a DB2 subsystem). Example relational tables, including possible columns for the relational tables and a description of the purpose of each relational table, are described below. It is noted that these example relational tables may be modified (e.g., column names, column purposes), and in some cases eliminated entirely, in various embodiments. Similarly, additional relational tables may be used, either as additions to the relational tables noted below, or as substitutions for one or more of these example relational tables, as desired by the user.</p>
<p id="p-0060" num="0059">A Key Range Sets table with columns: name, obname, obcreator, obtype (e.g., table or index), active (e.g., yes or no), activefrom (e.g., a time or timestamp value), activeto (e.g., a time or timestamp value), keycolumns, keylength, keyranges, and setkey (e.g., a primary key for association with the Key Ranges and Key Columns tables), may be used to store a list of tables and/or indexes that have one or more sets of key range specifications. In one embodiment, the setkey column may yield a unique identifier for a row in the Key Range Sets table. Thus, the primary key for the Key Range Sets table may be the setkey column. In one embodiment, a unique key may be generated in the form of a time or timestamp value for the purposes of linking rows of the Key Range Sets table, the Key Ranges table, and the Key Columns table together.</p>
<p id="p-0061" num="0060">During utility initialization, the utility (e.g., the REORG PLUS for DB2 product) may query the Key Range Sets table to determine if free space management for the object is active for the current execution of the utility. This may be done by finding rows, based on the current date and time, that fall within a time frame defined by the activefrom and the activeto columns. If a row is found, additional information may be retrieved from the other repository tables to implement free space management.</p>
<p id="p-0062" num="0061">A Key Columns table with columns: setkey (e.g., a foreign key for association with the Key Range Sets table), name (e.g., column name), column number (e.g., numeric position of the column in the table), column type (e.g., character, decimal, integer), length, may be used to define the key to be used for free space management. It is noted that the foreign key (i.e., column setkey) may be defined with ON DELETE CASCADE so that all dependent rows of the Key Columns table may be deleted when its parent Key Range Sets row is deleted.</p>
<p id="p-0063" num="0062">In one embodiment, during utility initialization, the key columns may be retrieved from the free space manager repository, stored in memory, and linked to their corresponding table and index utility control blocks. The utility may validate key columns at utility initialization time. The data in the Key Columns table may be compared to columns defined for the object being processed to determine where there is any disparity that might affect processing.</p>
<p id="p-0064" num="0063">A Key Ranges table with columns: setkey (e.g., a foreign key for association with the Key Range Sets table), lowkey, highkey, freepage (e.g., number of pages containing data to be produced before a page of free space is produced), freepages (e.g., number of free pages to be produced when the free page interval is reached), endpages (e.g., number of free pages to be produced when the end of the key range is encountered), percent free (e.g., percentage of each page to be left as free space), maximum number of rows (e.g., a maximum number of rows per page), and rangekey (e.g., a primary key for association with the Key Range Statistics table) may be used to control the allocation of free space within the object. It is noted that the foreign key (i.e., column setkey) may be defined with ON DELETE CASCADE so that all dependent rows of the Key Ranges table may be deleted when its parent Key Range Sets row is deleted.</p>
<p id="p-0065" num="0064">In one embodiment, the rangekey column may yield a unique identifier for a row in the Key Ranges table. Thus, the primary key for the Key Ranges table may be the rangekey column. In one embodiment, a unique key may be generated in the form of a time or timestamp value for the purposes of linking rows of the Key Ranges table and the Key Range Statistics table together.</p>
<p id="p-0066" num="0065">In one embodiment, during utility initialization, the key range specifications may be retrieved from the free space manager repository, stored in memory, and linked to their corresponding table and index utility control blocks. As data for the file page sets and index page sets are processed, the key range specifications may be referenced to control free space distribution within the object. If a key range specification is not found for a given set of rows or keys, the object-defined free space parameters may be applied.</p>
<p id="p-0067" num="0066">A Key Range Statistics table with columns: rangekey (e.g., a foreign key for association with the Key Ranges table), card (e.g., number of rows in the key range), keybytes (e.g., number of bytes occupied by the keys in the key range), rowbytes (e.g., number of bytes occupied by the rows in the key range), nactive (e.g., number of pages occupied by the rows of the key range), statstime (e.g., time when these statistics were gathered), and jobname (e.g., name of the job that gathered theses statistics), may be used to collect statistics for the key ranges defined for the object. It is noted that the foreign key (i.e., column rangekey) may be defined with ON DELETE CASCADE so that all dependent rows of the Key Range Statistics table may be deleted when its parent Key Ranges row is deleted.</p>
<p id="p-0068" num="0067">In one embodiment, during utility execution, as data for the tables and/or indexes are processed, and the key range specification for each key is found, the number of bytes for the row and key, and the number of rows, may be accumulated and stored in memory for each key range. At utility termination, these key range statistics may be written to the Key Range Statistics table in the Free Space Manager Repository.</p>
<p id="p-0069" num="0068">In one embodiment, prior to utility execution, all of the key range statistics for an object may be retrieved from the free space manager repository, stored in memory, and acted upon by a growth trend analysis process. This growth trend analysis process may recommend and adjust free space specifications in the Key Ranges table for the object, based on key range growth patterns.</p>
<p id="p-0070" num="0069">A Sync table with columns: utilid, obname, obcreator, obtype (e.g., table or index), seqno (e.g., a sequence number for the row within a group of rows comprising the state of the Key Range Set information for an object), state (e.g., the state of the Key Range Set), may be used to store the state of the Key Range Set for a given utility execution.</p>
<p id="p-0071" num="0070">In one embodiment, in the event that a utility should fail, the Sync table may be referenced to retrieve the Key Range Set information that was being used by the utility prior to failure. By storing the state of the Key Range Set for a given utility execution, the Key Range Set information that the utility started with is protected from change in the event of a utility failure. Furthermore, the Key Range Set for an object may be modified by the user without affecting the Key Range Set specifications that are in use by a concurrently executing utility. Even if the utility should fail, the original Key Range Set specifications remain when the utility is restarted.</p>
<p id="h-0011" num="0000">FIG. <b>5</b>—A Sample Scenario</p>
<p id="p-0072" num="0071"><figref idref="DRAWINGS">FIG. 5</figref> is a bar chart illustrating a sample scenario of object growth by key range over time, according to one embodiment. These object growth patterns may be useful in determining how to distribute free space automatically.</p>
<p id="p-0073" num="0072">A railroad company may lease its rail cars for use in shipping. The railroad company may store data related to its leased rail cars in a rail car accounting system. A waybill table (e.g., a part of the rail car accounting system) may contain status information for the rail cars. The bar charts in <figref idref="DRAWINGS">FIG. 5</figref> may be constructed from data stored in the waybill table. The waybill table data in the page set may be clustered by day. Each of the five samples shown in <figref idref="DRAWINGS">FIG. 5</figref> may represent the page set after one week of activity. The Y-axis in the chart (i.e., Size) may represent the number of rows inserted or updated in the waybill table. New waybills may be added in new key ranges by date, thus causing horizontal (i.e., X-axis) growth of the page set. Additional rows may be added to existing key ranges, or updates may occur to previous waybills, causing vertical (i.e., Y-axis) growth behind the horizontal growth of the page set. It is noted that some key ranges may have no growth. Key range statistics may provide information to: (i) reduce free space in key ranges that are “read-only” (i.e., have no growth); (ii) increase free space in key ranges that are expected to have insert and/or update activity.</p>
<p id="h-0012" num="0000">FIG. <b>6</b>—Controlling Free Space Distribution by Key Range Within a Database</p>
<p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. 6</figref> is a flow chart illustrating a system and method for controlling free space distribution by key range within a database, according to one embodiment.</p>
<p id="p-0075" num="0074">As shown in step <b>602</b>, a data structure may be created. The data structure may include key ranges of a plurality of database tables and indexes, and free space parameters associated with the key ranges. The plurality of database tables and indexes may include a plurality of page sets (e.g., a file page set, an index page set). The plurality of page sets may include rows of data and keys. The key ranges of the plurality of database tables and indexes may include a low key value and a high key value for each of the plurality of database tables.</p>
<p id="p-0076" num="0075">The data structure may further include: a plurality of key ranges of the plurality of database tables and indexes, and a plurality of free space parameters associated with the key ranges. In one embodiment, one or more time values (e.g., a starting time value, an ending time value) may be associated with the plurality of free space parameters. The plurality of free space parameters may be active during a time frame beginning with a starting time represented by the starting time value and ending with an ending time represented by the ending time value.</p>
<p id="p-0077" num="0076">In step <b>604</b>, the key range free space parameters may have values assigned to them. The key range free space parameters may include, for each key range defined, one or more of: a free page value, a free pages value, a percent free value, an end of key range number of free pages value, or a maximum number of rows value. In one embodiment, the key range free space parameters may be user-defined or user specified. In an alternate embodiment, the key range free space parameters may be automatically generated using growth trend analysis, based on key range growth statistics.</p>
<p id="p-0078" num="0077">In step <b>606</b>, the rows of data within the plurality of page sets of the plurality of database tables and indexes may be redistributed by a reorganization process. The redistributing may reference the key ranges of the data structure and the free space parameters associated with the key ranges.</p>
<p id="p-0079" num="0078">Additionally, growth within a database may be monitored, using the data structure described above. Statistics regarding key range growth for the plurality of database tables and indexes may be gathered over a user-defined time period. The statistics may be analyzed. Free space parameters may be associated with the key ranges in response to the analysis of the statistics.</p>
<p id="p-0080" num="0079">Although the system and method of the present invention have been described in connection with several embodiments, the invention is not intended to be limited to the specific forms set forth herein, but on the contrary, it is intended to cover such alternatives, modifications, and equivalents as can be reasonably included within the spirit and scope of the invention as defined by the appended claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A database free space management method, comprising:
<claim-text>identifying a first range of key values associated with a first set of rows in a database file;</claim-text>
<claim-text>assigning first values to each of a plurality of free space management parameters associated with the first range of key values;</claim-text>
<claim-text>identifying a second range of key values associated with a second set of rows in the database file;</claim-text>
<claim-text>assigning second values to each of a plurality of free space management parameters associated with the second range of key values;</claim-text>
<claim-text>managing free space associated with the first set of rows in accordance with the first values; and</claim-text>
<claim-text>managing free space associated with the second set of rows in accordance with the second values,</claim-text>
<claim-text>wherein the second values differ from the first values by at least one free space management parameter value, thereby producing non-uniform distribution of free space in the database file.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first set of rows are associated with a first table in the database file and the second set of rows are associated with a second table in the database file.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the act of identifying a first range of key values comprises identifying a first key value and a second key value, wherein the first range of key values defines a contiguous range of rows as indicated by the first key value and the second key value.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the act of identifying a second range of key values comprises identifying a third key value and a fourth key value, wherein the second range of key values defines a contiguous range of rows as indicated by the third key value and the fourth key value.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein one or more of the free-space management parameters are selected from the group consisting of “free page value,” “free pages value,” “percent free value,” “end of key range number of free pages” and “maximum number of rows.”</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the act of assigning first values to each of a plurality of free space management parameters comprises accepting user input for at least one of the first values.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein the act of assigning second values to each of the plurality of free space management parameters comprises accepting user input for at least one of the second values.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first set of rows in the database file comprise rows in a data table or an index.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the second set of rows in the database file comprise rows in a data table or an index.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first sets of rows and the second set of rows comprise rows from a single table.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A program storage device, readable by a programmable control device, comprising instructions stored thereon for causing the programmable control device to:
<claim-text>identify a first range of key values associated with a first set of rows in a database file;</claim-text>
<claim-text>assign first values to each of a plurality of free space management parameters associated with the first range of key values;</claim-text>
<claim-text>identify a second range of key values associated with a second set of rows in the database file;</claim-text>
<claim-text>assign second values to each of a plurality of free space management parameters associated with the second range of key values;</claim-text>
<claim-text>manage free space associated with the first set of rows in accordance with the first values; and</claim-text>
<claim-text>manage free space associated with the second set of rows in accordance with the second values,</claim-text>
<claim-text>wherein the second values differ from the first values by at least one free space management parameter value, thereby producing non-uniform distribution of free space in the database file.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The program storage device of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the instructions to identify a first range of key values comprise instructions to identify a first key value and a second key value, wherein the first range of key values defines a contiguous range of rows as indicated by the first key value and the second key value.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The program storage device of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the instructions to identify a second range of key values comprise instructions to identify a third key value and a fourth key value, wherein the second range of key values defines a contiguous range of rows as indicated by the third key value and the fourth key value.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The program storage device of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the instructions to:
<claim-text>identify the first range of key values associated with the first set of rows in the database file, comprise instructions to identify rows from a first table; and</claim-text>
<claim-text>identify the second range of key values associated with the second set of rows in the database file, comprise instructions to identify rows from a second table.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The program storage device of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the first table comprises a data table or an index and the second table comprises a data table or an index.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the database file is a page set.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The program storage device of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the database file is a page set.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. A database free space management method, comprising:
<claim-text>designating a first set of rows of a file object with a first range of key values;</claim-text>
<claim-text>designating a second set of rows of the file object with a second range of key values; and</claim-text>
<claim-text>non-uniformly distributing free space within the first and second sets of rows of the file object by distributing free space differently for the first range of key values than for the second range of key values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the file object is selected from the group consisting of a page set, a table within a database file, and a plurality of tables in a database file.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The method of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the act of non-uniformly distributing free space within the first and second sets of rows of the same file abject by distributing free space differently for the first range of key values than for the second range of key values comprises:
<claim-text>assigning first values to each of a plurality of free space management parameters associated with the first range of key values for the first set of rows; and</claim-text>
<claim-text>managing free space associated with the first set of rows in accordance with the first values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The method of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the act of non-uniformly distributing free space within the first and second sets of rows of the same file object by distributing free space differently for the first range of key values than for the second range of key values comprises:
<claim-text>assigning second values to each of a plurality of free space management parameters associated with the second range of key values for the second set of rows, wherein the second values differ from the first values by at least one free space management parameter value; and</claim-text>
<claim-text>managing free space associated with the second set of rows in accordance with the second values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. A program storage device, readable by a programmable control device, comprising instructions stored thereon for causing the programmable control device to:
<claim-text>designate a first set of rows of a file object with a first range of key values;</claim-text>
<claim-text>designate a second set of rows of the same file object with a second range of key values; and</claim-text>
<claim-text>distribute free space differently for the first range of key values than for the second range of key values to non-uniformly distribute free space within the first and second sets of rows of the same file object.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The program storage device of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein the file object is selected from the group consisting of a page set, a table within a database file, and a plurality of tables in a database file.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The program storage device of <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein to distribute free space differently for the first range of key values than for the second range of key values to non-uniformly distribute free space within the first and second sets of rows of the same file object, the instructions cause the programmable control device to:
<claim-text>assign first values to each of a plurality of free space management parameters associated with the first range of key values forte first set of rows; and</claim-text>
<claim-text>manage free space associated with the first set of rows in accordance with the first values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The program storage device of <claim-ref idref="CLM-00024">claim 24</claim-ref>, wherein to distribute free space differently for the first range of key values than for the second range of key values to non-uniformly distribute free space within the first and second sets of rows of the same file object, the instructions cause the programmable control device to:
<claim-text>assign second values to each of a plurality of free space management parameters associated with the second range of key values for the second set of rows, wherein the second values differ from the first values by at least one free space management parameter value; and</claim-text>
<claim-text>manage free space associated with the second set of rows in accordance with the second values.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
