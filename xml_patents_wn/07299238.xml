<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299238-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299238</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10979532</doc-number>
<date>20041102</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>331</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>30</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>707101</main-classification>
<further-classification>707  2</further-classification>
<further-classification>707  4</further-classification>
<further-classification>707  5</further-classification>
<further-classification>707102</further-classification>
<further-classification>707103 R</further-classification>
<further-classification>7071041</further-classification>
</classification-national>
<invention-title id="d0e53">System for improving the performance of information retrieval-type tasks by identifying the relations of constituents</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4849898</doc-number>
<kind>A</kind>
<name>Adi</name>
<date>19890700</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>364419</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5265065</doc-number>
<kind>A</kind>
<name>Turtle</name>
<date>19931100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  4</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5331556</doc-number>
<kind>A</kind>
<name>Black, Jr. et al.</name>
<date>19940700</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>36441908</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5418951</doc-number>
<kind>A</kind>
<name>Damashek</name>
<date>19950500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>707  5</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5619410</doc-number>
<kind>A</kind>
<name>Emori et al.</name>
<date>19970400</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>395757</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5893102</doc-number>
<kind>A</kind>
<name>Maimone et al.</name>
<date>19990400</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>707101</main-classification></classification-national>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>5946499</doc-number>
<kind>A</kind>
<name>Saunders</name>
<date>19990800</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>395813</main-classification></classification-national>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>5966686</doc-number>
<kind>A</kind>
<name>Heidorn et al.</name>
<date>19991000</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>704  9</main-classification></classification-national>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>5995922</doc-number>
<kind>A</kind>
<name>Pentheroudakis et al.</name>
<date>19991100</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>704  9</main-classification></classification-national>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6006221</doc-number>
<kind>A</kind>
<name>Libby et al.</name>
<date>19991200</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>707  5</main-classification></classification-national>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6076051</doc-number>
<kind>A</kind>
<name>Messerly et al.</name>
<date>20000600</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>704  9</main-classification></classification-national>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6556964</doc-number>
<kind>B2</kind>
<name>Haug et al.</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>704  9</main-classification></classification-national>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>WO</country>
<doc-number>WO 92/02890</doc-number>
<date>19920200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00014">
<document-id>
<country>WO</country>
<doc-number>WO 98/25217</doc-number>
<date>19980600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00015">
<othercit>J. Maling, “Of Nominative and Accusative: The Hierarchical Assignment of Grammatical Case in Finnish”, by A. Holmberg and V. Nikanne, <i>Case and Other Topics in Finnish Syntax</i>, Studies in Generative Grammer, Foris (1992), pp. 51-76.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00016">
<othercit>“Grammatical Relations and Surface Cases”, by Masyoshi Shibatani, <i>Language</i>, vol. 53, No. 4 (1977), pp. 789-809.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00017">
<othercit>Losee, R. M. “Learning Syntactic Rules and Tags with Genetic Algorithms for Information Retrieval and Filtering: an Empirical Basis for Grammatical Rules”, Information Processing &amp; Management, vol. 32, No. 2 pp. 185-197, Mar. 1, 1996.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>20</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>707  2</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707  5</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707  4</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707101</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707102</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>707103 R</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>7071041</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>11</number-of-drawing-sheets>
<number-of-figures>15</number-of-figures>
</figures>
<us-related-documents>
<division>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>09336200</doc-number>
<kind>00</kind>
<date>19990618</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>6901402</doc-number>
<kind>A </kind>
<date>20050531</date>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>10979532</doc-number>
</document-id>
</child-doc>
</relation>
</division>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20050125404</doc-number>
<kind>A1</kind>
<date>20050609</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Corston-Oliver</last-name>
<first-name>Simon H.</first-name>
<address>
<city>Seattle</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Dolan</last-name>
<first-name>William B.</first-name>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="003" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Suzuki</last-name>
<first-name>Hisami</first-name>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Kelly</last-name>
<first-name>Joseph R.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<orgname>Westman, Champlin &amp; Kelly, P.A.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Microsoft Corporation</orgname>
<role>02</role>
<address>
<city>Redmond</city>
<state>WA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Rones</last-name>
<first-name>Charles</first-name>
<department>2164</department>
</primary-examiner>
<assistant-examiner>
<last-name>Choi</last-name>
<first-name>Michele C.</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A system is utilized for determining a relationship between first and second textual inputs. The system identifies constituents in the first textual input, having predetermined characteristics indicative of usefulness in determining the relationship. The relationship is then determined based on the constituents identified. The constituents can be eliminated from the first textual input, weighted in the first textual input, or simply annotated in one of a variety of ways.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="179.07mm" wi="153.75mm" file="US07299238-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="235.46mm" wi="170.10mm" orientation="landscape" file="US07299238-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="234.19mm" wi="189.23mm" file="US07299238-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="210.82mm" wi="182.29mm" file="US07299238-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="186.10mm" wi="158.07mm" file="US07299238-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="101.09mm" wi="156.29mm" file="US07299238-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="234.44mm" wi="185.08mm" file="US07299238-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="247.82mm" wi="181.36mm" file="US07299238-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="181.61mm" wi="185.42mm" file="US07299238-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="242.32mm" wi="184.74mm" file="US07299238-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="183.39mm" wi="175.85mm" file="US07299238-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="250.95mm" wi="183.81mm" file="US07299238-20071120-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<p id="p-0002" num="0001">The present application is a divisional of and claims priority of U.S. patent application Ser. No. 09/336,200, filed Jun. 18, 1999, U.S. Pat. No. 6,901,402 B1 issued May 31, 2005, the content of which is hereby incorporated by reference in its entirety.</p>
<heading id="h-0001" level="1">REFERENCE TO RELATED PATENT</heading>
<p id="p-0003" num="0002">Reference is hereby made to U.S. Pat. No 6,295,529 B1 issued Sep. 25, 2001 entitled “METHOD AND APPARATUS FOR IDENTIFYING CLAUSES HAVING PREDETERMINED CHARACTERISTICS INDICATIVE OF USEFULNESS IN DETERMINING RELATIONSHIPS BETWEEN DIFFERENT TEXTS” and assigned to the same assignee as the present application.</p>
<heading id="h-0002" level="1">INCORPORATION BY REFERENCE</heading>
<p id="p-0004" num="0003">The following related patents are hereby fully incorporated by reference:</p>
<p id="p-0005" num="0004">U.S. Pat. No. 5,966,686 entitled “METHOD AND SYSTEM FOR COMPUTING SEMANTIC LOGICAL FORMS FROM SYNTAX TREES”, issued Oct. 12, 1999; and</p>
<p id="p-0006" num="0005">U.S. Pat. No. 6,076,051 entitled “INFORMATION RETRIEVAL UTILIZING SEMANTIC REPRESENTATION OF TEXT”, issued Jun. 13, 2000, both of which have been assigned to the present assignee.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0007" num="0006">The present invention is directed to a system for determining a relationship (such as similarity in meaning) between two or more textual inputs. More specifically, the present invention is directed to a system which performs improved information retrieval-type tasks by identifying relations of constituents of documents being searched.</p>
<p id="p-0008" num="0007">The present invention is useful in a wide variety of applications, such as many aspects of information retrieval including indexing, pre-query and post-query processing, document similarity/clustering, document summarization, natural language understanding, etc. However, the present invention will be described primarily in the context of information retrieval, for illustrative purposes only.</p>
<p id="p-0009" num="0008">Generally, information retrieval is a process by which a user finds and retrieves information, relevant to the user, from a large store of information. In performing information retrieval, it is important to retrieve all of the information a user needs (i.e., it is important to be complete) and at the same time it is important to limit the irrelevant information that is retrieved for the user (i.e., it is important to be selective). These dimensions are often referred to in terms of recall (completeness) and precision (selectivity). In many information retrieval systems, it is important to achieve good performance across both the recall and precision dimensions.</p>
<p id="p-0010" num="0009">In some current retrieval systems, the amount of information that can be queried and searched is very large. For example, some information retrieval systems are set up to search information on a global computer network (such as the Internet), digital video discs, and other computer data bases in general. The information retrieval systems are typically embodied as, for example, Internet search engines and library catalog search engines. Further, even within the operating system of a conventional desktop computer, certain types of information retrieval mechanisms are provided. For example, some operating systems provide a tool by which a user can search all files on a given data base or on a computer system based upon certain terms input by the user.</p>
<p id="p-0011" num="0010">Many information retrieval techniques are known. A user input query in such techniques is typically presented as either an explicit user generated query, or an implicit query, such as when a user requests documents which are similar to a set of existing documents. Typical information retrieval systems search documents in a larger data store at either a single word level, or at a term level. Each of the documents is assigned a relevance (or similarity) score, and the information retrieval system presents a certain subset of the documents searched to the user, (typically that subset which has a relevance score which exceeds a given threshold).</p>
<p id="p-0012" num="0011">The rather poor precision of conventional statistical search engines stems from their assumption that words are independent variables (i.e., words in any textual passage occur independently of each other). Independence in this context means that a conditional probability of any one word appearing in a document given the presence of another word therein is always zero (i.e., a document simply contains an unstructured collection of words or simply put “a bag of words”).</p>
<p id="p-0013" num="0012">As one can readily appreciate, this assumption, with respect to any language, is grossly erroneous. Words that appear in a textual passage are simply not independent of each other. Rather, they are highly inter-dependent.</p>
<p id="p-0014" num="0013">Keyword based search engines totally ignore this fine-grained linguistic structure. For example, consider an illustrative query expressed in natural language: “How many hearts does an octopus have?” A statistical search engine, operating on content words “hearts” and “octopus”, or morphological stems thereof, might likely return or direct a user to a stored document that contains a recipe that has as its ingredients and hence its content words: “artichoke hearts, squid, onion and octopus”. This engine, given matches in the two content words, may determine, based on statistical measures, that this document is an excellent match. In reality, the document is quite irrelevant to the query.</p>
<p id="p-0015" num="0014">The art also teaches various approaches for extracting elements of syntactic phrases which are indexed as terms in a conventional statistical vector-space model. One example of such an approach is taught in J. L. Fagan, “Experiments in Automatic Phrase Indexing for Document Retrieval: A Comparison of Syntactic and Non-Syntactic Methods”, Ph.D. Thesis, Cornell University, 1988, pp. 1-261. Another such syntactic based approach is described, in the context of using natural language processing for selecting appropriate terms for inclusion within search queries, in T. Strzalkowski, “Natural Language Information Retrieval: Tipster-2 Final Report”, <i>Proceedings of Advances in Text Processing: Tipster Program Phase </i>2, Darpa, 6-8 May 1996, Tysons Corners, Va., pp. 143-148; and T. Strzalkowski, “Natural Language Information Retrieval”, <i>Information Processing and Management</i>, Vol. 31, No. 3, 1995, pp. 397-417. A further syntactic-based approach of this sort is described in B. Katz, “Annotating the World Wide Web Using Natural Language”, <i>Conference Proceedings of R.I.A.O. </i>97, <i>Computer</i>-<i>Assisted Information Search on Internet</i>, McGill University, Quebec, Canada, 25-27 Jun. 1997, Vol. 1, pp., 135-155.</p>
<p id="p-0016" num="0015">These syntactic approaches have yielded lackluster improvements, or have not been feasible to implement in natural language processing systems available at the time. Therefore, the field has moved away from attempting to directly improve the precision and recall associated with the results of a query, to improvements in the user interface.</p>
<p id="p-0017" num="0016">Another problem is also prevalent in some information retrieval systems. For example, where documents are indexed, such as in a typical statistical search engine, the index can be very large, depending upon the content set, and number of documents to be indexed. Large indices not only present storage capacity problems, but can also increase the amount of time required to execute a query against the index.</p>
<p id="p-0018" num="0017">The term “grammatical relations” is used to denote subject, object, and other constituents that can be identified on the basis of a syntactic analysis. Linguists recognize that grammatical relations are not all of equal status. For example, Keenan and Comrie have developed a summary of how different languages mark positions in a domain of relativization which are assumed by noun phrases. The summary is referred to as the Accessibility Hierarchy (or hierarchy of accessibility) and is described as follows.</p>
<p id="p-0019" num="0018">Topic (optional)&gt;subject&gt;direct object&gt;indirect object&gt;object of preposition or post position&gt;genitive (possessor)&gt;object of comparison.</p>
<p id="p-0020" num="0019">The hierarchy of accessibility illustrates a generalization that the lower a noun phrase is on the hierarchy, the less likely it is that this noun phrase will be expressed by a relative pronoun.</p>
<p id="p-0021" num="0020">The accessibility hierarchy, and how it is obtained, is described in greater detail in “Language Typology and Syntactic Description, Complex Constructions”, Chapter 3, written by Edward L. Keenan, edited by Timothy Chopin, 1985; and Keenan, E. L. and B. Comrie, “N.P. Accessibility and Universal Grammar”, Linguistic Inquiry 8: 63-100 (1977).</p>
<p id="p-0022" num="0021">It is also worth noting that some languages make extensive use of what linguists broadly refer to as “cases”. The English language still contains vestiges of an earlier case system. For example, in the pronominal system, the English language distinguishes subject versus object versus genitive with terms such as he, him and his. While linguists have devoted a great deal of time and effort in attempting to distinguish case from thematic role from other kinds of marking, the term case, as discussed herein, is used in the following two senses:</p>
<p id="p-0023" num="0022">1. To describe morphological inflection, which typically involves changing the endings of words. German, Russian and Latin are examples of languages which exhibit morphological case.</p>
<p id="p-0024" num="0023">2. To describe the use of adpositions (prepositions and postpositions) or particles to indicate the grammatical role of a noun phrase. Japanese and Indonesian are examples of languages which exhibit case information of this type. A discussion of grammatical relations and surface case is set out in Shibatani, “Grammatical Relations and Surface Cases”, Language, Volume 53, Number 4 (1977) pp. 789-809. Also, a discussion of grammatical function and morphological case is set out in Maling, “Of Nonminitive and Accusative: The Hierarchical Assignment of Grammatical Case in Finnish”, this article is published in A. Holenberg and U. Nikanne, <i>Case and Other Topics in Finnish Syntactic</i>, Studies in Generative Grammar, Foris (1992), pp. 51-76. In this patent, the term “relations” will be used to refer to both cases and grammatical relations.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0025" num="0024">One aspect of the present invention is related to the realization that relations are also generally indicative of the importance of a term or constituent in determining what a sentence or document is about. For example, the higher the term is in the accessibility hierarchy, the more important it is to the meaning of the sentence or document in which it exists. Similarly, certain case markings can indicate such importance. This can be extremely helpful in information retrieval type tasks.</p>
<p id="p-0026" num="0025">A system is utilized for determining a relationship between first and second textual inputs. The system identifies relations of (i.e., case information associated with, or grammatical relations of) constituents in the first textual input. The relationship between the first and second textual inputs is then determined based on the relations identified. The grammatical relations can be determined based on the Accessibility Hierarchy. For example, constituents below a hierarchy threshold, determined based on the grammatical relations, can be eliminated from the first textual input, weighted in the first textual input, or simply annotated. Similarly, constituents being marked by certain case information can be eliminated from the first textual input, weighted, or simply annotated.</p>
<p id="p-0027" num="0026">One embodiment of the invention includes a test methodology which is used in identifying the hierarchy and hierarchy threshold or the relevant case markings. The test methodology can be used across a wide variety of content sets, in order to customize the present invention for use with the various content sets.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 1</figref> is a high level block diagram of an illustrative system in which the present invention can be used.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of one embodiment of a computer in accordance with one aspect of the present invention.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 3A</figref> is a functional block diagram illustrating operation of one aspect of the present invention, in accordance with one illustrative embodiment thereof.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 3B</figref> is a flow diagram illustrating operation of the system shown in <figref idref="DRAWINGS">FIG. 3A</figref>.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 4</figref> is a flow diagram illustrating the operation of the system shown in <figref idref="DRAWINGS">FIG. 3A</figref> in accordance with another embodiment of the present invention.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 5A</figref> is a functional block diagram illustrating another system in which the present invention can be used.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIGS. 5B-5F</figref> are flow and block diagrams illustrating the operation of the system shown in <figref idref="DRAWINGS">FIG. 5A</figref>.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 6A</figref> is a block diagram illustrating another system in which the present invention can be used.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIGS. 6B and 6C</figref> are flow diagrams illustrating the operation of the system shown in <figref idref="DRAWINGS">FIG. 6A</figref> in accordance with one embodiment of the present invention.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 7</figref> is a flow diagram illustrating a test methodology used in accordance with one embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE ILLUSTRATIVE EMBODIMENTS</heading>
<heading id="h-0007" level="1">Overview</heading>
<p id="p-0038" num="0037">The present invention utilizes grammatical relations of terms or phrases (constituents) in a first textual input in order to determine the meaning or “aboutness” of the first textual input. In accordance with one illustrative embodiment of the present invention, a hierarchy of grammatical relations is identified wherein grammatical relations falling below a predetermined hierarchy level or threshold are not particularly helpful in determining the aboutness of the first textual input. In another illustrative embodiment, case information is identified which indicates that constituents corresponding to that case information are not particularly helpful in determining the aboutness of the first textual input. For purposes of this discussion, the term “relations” is used to refer to both grammatical relations and cases. While the present invention is contemplated for use in a wide variety of applications, it is described herein primarily in the context of information retrieval, for the purpose of illustration only. In that context, the constituents which have been identified can be removed from the first textual input prior to an indexing operation to greatly reduce the size of the index. This can be accomplished without significantly impacting either precision or recall during the information retrieval process. The present invention also includes a system for obtaining a list of the types of constituents to be identified in identifying the relevant case information or in setting the hierarchy and hierarchy threshold, certain data structures and systems for generating those data structures.</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 1</figref> depicts a very high-level block diagram of computer system <b>10</b> in accordance with one illustrative embodiment of the present invention. Computer system <b>10</b> includes data store <b>12</b> coupled to computer <b>20</b>. It should be noted that data store <b>12</b> can be any suitable type of storage which is either internal to, or external to, computer <b>20</b>. Similarly, data store <b>12</b> can be coupled to computer <b>20</b> through any suitable means, such as through direct cabling, a dial-up modem connection (such as when data store <b>12</b> corresponds to memory accessible over a global computer network such as the Internet), or any other suitable connection. Similarly, computer <b>20</b> is illustratively any suitable computer for accessing data store <b>12</b>, and is referred to hereinafter as a personal computer which is described in greater detail with respect to <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0040" num="0039">Computer <b>20</b> includes user interface devices (such as a keyboard and monitor) so that a user can provide a user input to computer <b>20</b> in order to request that computer <b>20</b> perform certain operations on data store <b>12</b>.</p>
<p id="p-0041" num="0040">The user input can be a request to perform an information retrieval operation. In that case, the user input is typically a query and computer <b>20</b> executes the query against data store <b>12</b> to locate documents which are relevant to the query input by the user. Computer <b>20</b> determines a relationship between the first textual input (which is the query) and a second textual input (which is one or more of the documents under consideration or indexed records of those documents) and identifies those documents which have a close relationship (such as those documents which are similar in meaning) to the query and provides the identification of those documents, or the documents themselves, as an output to the user.</p>
<p id="p-0042" num="0041">The user input can also be an implicit type of information retrieval request. In that case, the user typically presents a document or other textual input and requests computer <b>20</b> to execute a “FIND SAME” type of operation in which computer <b>20</b> locates documents on data store <b>12</b> which are similar to the textual input provided by the user. Computer <b>20</b> then provides either an identification of the documents located in response to the “FIND SAME” request, or the documents themselves.</p>
<p id="p-0043" num="0042">Similarly, the user input can include a request to cluster documents, in which case computer <b>20</b> examines a plurality of documents on data store <b>12</b> and clusters like documents in the same clusters. In doing so, computer <b>20</b> determines a relationship (such as similarity in meaning) between the various documents and places those documents which are closely related to one another in the same cluster.</p>
<p id="p-0044" num="0043">The user input can also be a request that computer <b>20</b> summarize one or more documents contained in data store <b>12</b>. In that instance, computer <b>20</b> examines the documents under consideration and develops an output to the user which is indicative of the meaning or “aboutness” of the document being summarized.</p>
<p id="p-0045" num="0044">In all of the above instances, it should be noted that the operations described can either be carried out across a network (either a local area network or a wide area network) or they can be carried out within a single computer (such as where the operating system provides a searching tool which can be used to search the memory of the computer on which the operating system is running).</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 2</figref> is a more detailed block diagram of computer <b>20</b> in accordance with one illustrative embodiment of the present invention. <figref idref="DRAWINGS">FIG. 2</figref> and the related discussion are intended to provide a brief, general description of a suitable computing environment in which the invention may be implemented. Although not required, the invention will be described, at least in part, in the general context of computer-executable instructions, such as program modules, being executed by a personal computer. Generally, program modules include routine programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.</p>
<p id="p-0047" num="0046">In <figref idref="DRAWINGS">FIG. 2</figref>, an exemplary system for implementing the invention includes a general purpose computing device in the form of a conventional personal computer <b>20</b>, including processing unit <b>21</b>, a system memory <b>22</b>, and a system bus <b>23</b> that couples various system components including the system memory to the processing unit <b>21</b>. The system bus <b>23</b> may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory includes read only memory (ROM) <b>24</b> a random access memory (RAM) <b>25</b>. A basic input/output <b>26</b> (BIOS), containing the basic routine that helps to transfer information between elements within the personal computer <b>20</b>, such as during start-up, is stored in ROM <b>24</b>. The personal computer <b>20</b> further includes a hard disk drive <b>27</b> for reading from and writing to a hard disk (not shown), a magnetic disk drive <b>28</b> for reading from or writing to removable magnetic disk <b>29</b>, and an optical disk drive <b>30</b> for reading from or writing to a removable optical disk <b>31</b> such as a CD ROM or other optical media. The hard disk drive <b>27</b>, magnetic disk drive <b>28</b>, and optical disk drive <b>30</b> are connected to the system bus <b>23</b> by a hard disk drive interface <b>32</b>, magnetic disk drive interface <b>33</b>, and an optical drive interface <b>34</b>, respectively. The drives and the associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the personal computer <b>20</b>.</p>
<p id="p-0048" num="0047">Although the exemplary environment described herein employs a hard disk, a removable magnetic disk <b>29</b> and a removable optical disk <b>31</b>, it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, random access memories (RAMs), read only memory (ROM), and the like, may also be used in the exemplary operating environment.</p>
<p id="p-0049" num="0048">A number of program modules may be stored on the hard disk, magnetic disk <b>29</b>, optical disk <b>31</b>, ROM <b>24</b> or RAM <b>25</b>, including an operating system <b>35</b>, one or more application programs <b>36</b>, other program modules <b>37</b>, and program data <b>38</b>. A user may enter commands and information into the personal computer <b>20</b> through input devices such as a keyboard <b>42</b> and pointing device <b>40</b>. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit <b>21</b> through a serial port interface <b>45</b> that is coupled to the system bus <b>23</b>, but may be connected by other interfaces, such as a sound card, a parallel port, a game port or a universal serial bus (USB). A monitor <b>47</b> or other type of display device is also connected to the system bus <b>23</b> via an interface, such as a video adapter <b>48</b>. In addition to the monitor <b>47</b>, personal computers may typically include other peripheral output devices such as a speaker and printers (not shown).</p>
<p id="p-0050" num="0049">The personal computer <b>20</b> may operate in a networked environment using logic connections to one or more remote computers, such as a remote computer <b>49</b>. The remote computer <b>49</b> may be another personal computer, a server, a router, a network PC, a peer device or other network node, and typically includes many or all of the elements described above relative to the personal computer <b>20</b>, although only a memory storage device <b>50</b> has been illustrated in <figref idref="DRAWINGS">FIG. 2</figref>. The logic connections depicted in <figref idref="DRAWINGS">FIG. 2</figref> include a local are network (LAN) <b>51</b> and a wide area network (WAN) <b>52</b>. Such networking environments are commonplace in offices, enterprise-wide computer network intranets and the Internet.</p>
<p id="p-0051" num="0050">When used in a LAN networking environment, the personal computer <b>20</b> is connected to the local area network <b>51</b> through a network interface or adapter <b>53</b>. When used in a WAN networking environment, the personal computer <b>20</b> typically includes a modem <b>54</b> or other means for establishing communications over the wide area network <b>52</b>, such as the Internet. The modem <b>54</b>, which may be internal or external, is connected to the system bus <b>23</b> via the serial port interface <b>46</b>. In a network environment, program modules depicted relative to the personal computer <b>20</b>, or portions thereof, may be stored in the remote memory storage devices. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.</p>
<heading id="h-0008" level="1">Identifying Relations</heading>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 3A</figref> is a functional block diagram of a text processing system <b>100</b> in accordance with one illustrative embodiment of the present invention. The components in system <b>100</b> can be implemented based on program modules or instructions stored in any suitable memory associated with, or accessible by, computer <b>20</b>. Further, the components can be implemented in processor <b>21</b>, a co-processor, or a dedicated processor.</p>
<p id="p-0053" num="0052">Text processing system <b>100</b> includes constituent marking component <b>102</b> and relationship determination component <b>104</b>. Constituent marking component <b>102</b> receives a first textual input and identifies constituent types and associated case information or grammatical relations of the constituents in the first textual input, which are described in greater detail below. When case information is identified, the associated constituents are annotated so they can be compared against predetermined case information during later processing. When grammatical relations are identified, the constituents are annotated so that they can be ranked during later processing.</p>
<p id="p-0054" num="0053">When grammatical relations are identified, the annotated constituents and grammatical relations are provided, in one illustrative embodiment, as a syntactic parse tree or other syntactic analysis, to relationship determination component <b>104</b>, although other types of analysis which identify grammatical relations of constituents can be used as well. When case information is identified, the associated constituent can simply be provided with an annotation which is indicative of the relation.</p>
<p id="p-0055" num="0054">In an embodiment in which system <b>100</b> is being used to determine the relationship between two or more textual inputs, relationship determination component <b>104</b> determines a relationship between the first textual input, as represented by the syntactic analysis or annotated constituents output by marking component <b>102</b> and a second textual input provided to component <b>104</b>. Component <b>104</b> provides an indication of the relationship at its output.</p>
<p id="p-0056" num="0055">In order to identify and annotate the constituents, marking component <b>102</b> includes case or grammatical relation analyzer <b>106</b>, and constituent identifier and annotator <b>108</b>. The first textual input is provided to analyzer <b>106</b>. In one illustrative embodiment, in which case information is to be obtained, analyzer <b>106</b> includes a word breaker (e.g., for Japanese) and an analyzer which determines where case marking occurs. In another embodiment in which morphological case information is to be identified (e.g., German), analyzer <b>106</b> includes a part-of-speech analyzer and a morphological analyzer which analyzes words for morphological inflections. The constituents with associated case information are provided as an output to constituent identifier and annotator <b>108</b>.</p>
<p id="p-0057" num="0056">In another illustrative embodiment, analyzer <b>106</b> simply includes a sentence breaker which examines the first textual input provided thereto and breaks the document along sentence boundaries. The sentences are provided to a syntactic and semantic analyzer (also included in grammatical relation analyzer <b>106</b>) which identifies parts of speech (such as noun and verb), constituents (such as noun phrases and verb phrases), and grammatical relations (such as subjects and objects), and provides an output based on a syntactic analysis which corresponds to the sentence received by the syntactic and semantic analyzer. It should be noted that any other suitable mechanism which identifies grammatical relations among constituents can be used as well.</p>
<p id="p-0058" num="0057">The syntactic analysis or other output (such as constituents with case information) is provided to constituent identifier and annotator <b>108</b>. It should also be noted that grammatical analyzer <b>106</b> can be a more complicated system which includes other morphological analysis, or other natural language processing techniques as well.</p>
<p id="p-0059" num="0058">For example, in accordance with one more specific illustrative embodiment of the present invention, the syntactic and semantic analyzer in grammatical relation analyzer <b>106</b> receives a single line of input text at any given time, whether it be a sentence in a document or a text fragment and constructs a syntactic analysis which serves as input to the remainder of the grammatical relation analyzer <b>106</b>. In one illustrative example, where documents are being analyzed, in order to facilitate natural language processing which operates on a single sentence at a time, the text for each document is broken into a text file using a conventional sentence breaker in which each sentence occupies a separate line in the file. For each input text line, the line is first parsed into its constituent words. Thereafter, using a predefined record in a stored lexicon, for each word, the corresponding records for these constituent words (through predefined grammatical rules) are themselves combined into larger structures or analyses which are then, in turn, combined (again through predefined grammatical rules) to form even larger structures, such as a syntactic parse tree. Whether a particular rule will be applicable to a particular set of constituents is governed, in part, by the presence or absence of certain corresponding attributes and their values in the word records.</p>
<p id="p-0060" num="0059">An illustrative lexicon includes approximately 165,000 head word entries. This lexicon includes various classes of words (such as, e.g., prepositions, conjunctions, verbs, nouns, operators and qualifiers) that define syntactic and semantic properties inherent in the words in an input string so that a parse tree can be constructed therefore. Clearly, a syntactic parse tree can be precomputed while a corresponding document is being indexed and stored within a record for that document for subsequent access and use, rather than being computed later once that document has been retrieved in response to a query.</p>
<p id="p-0061" num="0060">In one particular illustrative embodiment of grammatical analyzer <b>106</b>, an input string, such as the sentence “The octopus has three hearts.” is first morphologically analyzed, using the predefined record in the lexicon for each of its constituent words, to generate a so-called “stem” (or “base”) form. Stem forms are used in order to normalize differing word forms (e.g., verb tense and singular-plural noun variations) to a common morphological form for use by a parser. Once the stem forms are produced, the input string is syntactically analyzed by the parser, using the grammatical rules and attributes in the records of the constituent words, to yield the corresponding syntactic parse tree. This tree depicts the structure of the input string, specifically each word or phrase (e.g. noun phrase “The octopus”) in the input string, a category of its corresponding grammatical function (e.g., NP for noun phrase) and link(s) to each syntactically related word or phrase therein. For the illustrative sentence, its associated syntactic parse tree would be:</p>
<p id="p-0062" num="0061">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="1">
<colspec colname="1" colwidth="217pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="1" rowsep="1">TABLE 1</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry>SYNTACTIC PARSE TREE</entry>
</row>
<row>
<entry>for “The octopus has three hearts.”</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry><chemistry id="CHEM-US-00001" num="00001">
<img id="EMI-C00001" he="35.81mm" wi="46.06mm" file="US07299238-20071120-C00001.TIF" alt="embedded image" img-content="table" img-format="tif"/>
</chemistry>
</entry>
</row>
<row>
<entry namest="1" nameend="1" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0063" num="0062">A start node located in the upper-left hand corner of the tree defines the type of input string being parsed. Sentence types include “DECL” (as here) for a declarative sentence, “IMPR” for an imperative sentence and “QUES” for a question. Displayed vertically to the right and below the start node is a first level analysis. This analysis has a head node indicated by an asterisk (or other suitable marker), typically a main verb (here the word “has”), a premodifier (here the noun phrase “The octopus”), followed by a postmodifier (the noun phrase “three hearts”). Each leaf of the tree contains a lexical term or a punctuation mark. Here (as labels), “NP” designates a noun phrase, and “CHAR” denotes a punctuation mark.</p>
<p id="p-0064" num="0063">About this and subsequent levels of processing, the reader is referred to co-pending U.S. patent applications entitled “METHOD AND SYSTEM FOR COMPUTING SEMANTIC LOGICAL FORMS FROM SYNTACTIC TREES”, filed Jun. 28, 1996 and assigned Ser. No. 08/674,610, and “INFORMATION RETRIEVAL UTILIZING SEMANTIC REPRESENTATION OF TEXT”, filed Mar. 7, 1997 and assigned Ser. No. 08/886,814, both of which have been assigned to the present assignee and incorporated by reference herein.</p>
<p id="p-0065" num="0064">The output of case or grammatical relation analyzer <b>106</b> (illustratively a syntactic analysis corresponding to the sentence under analysis) is provided to constituent identifier and annotator <b>108</b>. In an illustrative embodiment in which constituents and associated case information are provided by analyzer <b>106</b>, constituent identifier and annotator <b>108</b> includes a predetermined list of case information which identifies cases which tend to be less indicative of the aboutness of the first textual input. In such an embodiment, component <b>108</b> includes a software component which receives the output from analyzer <b>106</b> and looks for constituents having associated case information which is contained in the predetermined list. Component <b>108</b> annotates those constituents which contain the predetermined case information (and thus annotates those constituents which are relatively less related to the aboutness of the document).</p>
<p id="p-0066" num="0065">In an illustrative embodiment, constituent identifier and annotator <b>108</b> includes a predetermined hierarchy of grammatical relations to be identified and a predetermined hierarchy threshold. In one illustrative embodiment, the predetermined hierarchy is the Accessibility Hierarchy set out by Keenan &amp; Comrie and discussed above in the Background section. The threshold is simply defined by a predetermined level or position in the hierarchy. Therefore, all grammatical relations residing below the threshold position in the hierarchy are contained in a predetermined list of grammatical relations. Component <b>108</b> annotates the constituents whose grammatical relation falls below the threshold. Thus, constituent identifier and annotator <b>108</b> includes a software component which traverses the syntactic analysis provided by grammatical relation analyzer <b>106</b> looking for constituents whose grammatical relations are contained in the list of predetermined grammatical relations (and thus corresponding to constituents whose grammatical relations fall below the threshold). Upon identifying a grammatical relation in a sentence passed to the identifier and annotator <b>108</b> as one in the predetermined list, component <b>108</b> annotates the associated constituent to indicate that it is one whose grammatical relation is contained in the list of predetermined grammatical relations.</p>
<p id="p-0067" num="0066">In accordance with one aspect of the present invention, the predetermined grammatical relations or case information are those which have been empirically determined to be of little or no use in determining what the overall document or sentence is about. For example, in many instances, the subject of a main clause in a sentence tends to correspond to a reader's intuitive reading of what the sentence or document is about, while an indirect object in a subordinate clause does not. Further, for Japanese, documents containing matched keywords marked with a topic marker “wa” are very often highly relevant, while documents containing keywords with a subordinate marker “no” (which can mark e.g. Partitive, Attributive, Possessive, Appositive) are very often irrelevant. Similarly, in Japanese, several different nominal coordination markers (“ya”, “nado”, and comma) are used only in an enumeration context (such as “A, B, C, etc”). Documents containing keywords marked with these enumeration markers are very often irrelevant. Such constituent types and case information can be empirically identified according to a suitable test methodology, one of which is described below in greater detail with respect to <figref idref="DRAWINGS">FIG. 7</figref>.</p>
<p id="p-0068" num="0067">Further, it should be noted that complete syntactic analysis need not be implemented for the crude identification of grammatical relations or cases. Instead, parts of speech and their location in a sentence can be identified more simply. For example, it has been observed that nouns located early in a sentence are often subjects of the sentence. Therefore, if the initial threshold in the Accessibility Hierarchy is set just below subjects, all terms in a sentence after the first noun can be annotated. Other techniques can be used as well. Algorithms which perform part of speech tagging are widely used and well known.</p>
<p id="p-0069" num="0068">In any event, once the relevant constituents have been annotated, the annotated structure (such as an annotated syntactic analysis) is passed to relationship determination component <b>104</b>. In the embodiment illustrated in <figref idref="DRAWINGS">FIG. 3A</figref>, component <b>104</b> is configured to determine a predetermined relationship between the first textual input provided to analyzer <b>106</b> and a second textual input provided to component <b>104</b>. In one illustrative embodiment, the relationship to be determined is the similarity in meaning between the first and second textual inputs.</p>
<p id="p-0070" num="0069">In performing that task, component <b>104</b> takes into account the annotated constituents (such as in the annotated syntactic analysis) provided by constituent marking component <b>102</b>. For example, component <b>104</b> can simply eliminate the annotated constituents and determine a degree of similarity between the first textual input (with the annotated constituents deleted) and the second textual input. This reduces the amount of comparison and processing required, since the overall text in the first textual input is reduced. Weighting techniques can also be used and are described in greater detail later in the application.</p>
<p id="p-0071" num="0070"><figref idref="DRAWINGS">FIG. 3B</figref> is a flow diagram illustrating in greater detail the operation of system <b>100</b> illustrated in <figref idref="DRAWINGS">FIG. 3A</figref>. First, case or grammatical analyzer <b>106</b> receives the first textual input. This is indicated by block <b>110</b>. In one illustrative embodiment, the first textual input is a document under analysis. Analyzer <b>106</b> breaks the document at sentence boundaries. In addition, in one illustrative embodiment, analyzer <b>106</b> may contain morphological, syntactic and semantic analysis components, or contain no such components, but simply a component which identifies case information or grammatical relations in each sentence. This is indicated by block <b>112</b>.</p>
<p id="p-0072" num="0071">Having generated the syntactic analysis (such as that illustrated in Table 1) or relation identifications, analyzer <b>106</b> passes that output to constituent identifier and annotator <b>108</b>. Component <b>108</b> compares relations identified against the predetermined list of relations or traverses the syntactic analysis illustrated by Table 1 until it encounters a constituent whose relation is on the predetermined list of grammatical relations (and thus below the predetermined hierarchy threshold). Assuming that, for the example illustrated in Table 1, objects are on the list of predetermined grammatical relations, component <b>108</b> traverses the syntactic analysis until it encounters the node which has been identified by grammatical analyzer <b>106</b> as an object. Since that grammatical relation appears in the predetermined list of grammatical relations, component <b>108</b> annotates that node (and optionally all terms descending from that node) as being contained in the list of predetermined grammatical relations and thus falling below the hierarchy threshold. This annotation is illustrated in Table 1 as “/object”. The identification of predetermined grammatical relations and annotation of those grammatical relations is indicated by blocks <b>114</b> and <b>116</b> in <figref idref="DRAWINGS">FIG. 3B</figref>. Again, the term “relations” as used herein refers to both grammatical relations and cases.</p>
<p id="p-0073" num="0072">The annotated syntactic analysis (or output containing relation annotations) is then passed to component <b>104</b> in <figref idref="DRAWINGS">FIG. 3A</figref>. In an embodiment, for example, where system <b>100</b> is determining the similarity between the first and second textual inputs, component <b>104</b> can perform a number of operations on the annotated output from component <b>102</b>. For example, since it has been empirically determined that the annotated terms do not closely correspond to what the first textual input is about, all annotated terms can simply be pruned from the annotated output. This is indicated by block <b>118</b> in <figref idref="DRAWINGS">FIG. 3B</figref>.</p>
<p id="p-0074" num="0073">Once the annotated terms have been pruned, and the second textual input has been received, component <b>104</b> simply determines the similarity between the terms remaining in the pruned text and the terms in the second textual input. By way of example, where the first textual input is a document and the second textual input is a query, the content words in the second textual input (the query) are compared against the words remaining in the pruned syntactic analysis corresponding to the sentences in the document in order to determine whether any matches exist. A score is assigned to the document which is based on the number of matches which occur and which is thus indicative of the similarity between the first textual input (the document) and the second textual input (the query). This score is provided at the output of component <b>104</b> for use in further processing. Returning the pruned syntactic analysis, receipt of the second textual input, and determining the relationship between the first and second textual inputs are indicated by blocks <b>120</b>, <b>122</b> and <b>124</b> in <figref idref="DRAWINGS">FIG. 3B</figref>.</p>
<p id="p-0075" num="0074">As discussed above, component <b>104</b> can perform any number of operations on the annotated output provided by marking component <b>102</b>, other than simply pruning the annotated terms. <figref idref="DRAWINGS">FIG. 4</figref> is a flow diagram illustrating an alternative operation in greater detail. A number of blocks are similar to those shown in <figref idref="DRAWINGS">FIG. 3B</figref>, and are similarly numbered. Therefore, system <b>100</b> receives the first textual input and performs analysis to identify case information or grammatical relations corresponding to constituents thereof (such as by generating a syntactic analysis), and also identifies whether the constituents have associated relations which correspond to the predetermined relations (such as by locating the relations in the predetermined list or hierarchy of relations). This is indicated by blocks <b>110</b>, <b>112</b> and <b>114</b>.</p>
<p id="p-0076" num="0075">However, rather than simply annotating the identified constituents in a binary fashion (as described with respect to <figref idref="DRAWINGS">FIG. 3B</figref>), in the illustrative embodiment shown in <figref idref="DRAWINGS">FIG. 4</figref>, component <b>108</b> assigns a weighting value to each of the constituents based upon how closely each constituent is related to the “aboutness” of the first textual input. For example, it may be empirically learned that the subject of a matrix clause is more closely related to the aboutness of the document than an object in a subordinate clause. Alternatively, it can simply be assumed that constituents having associated grammatical relations residing higher in the above-discussed Accessibility Hierarchy are more closely related to aboutness than constituents which have associated grammatical relations located lower in the hierarchy. That being the case, terms in the first textual input are preferentially matched against terms located higher in the hierarchy. One way to accomplish this is to assign varying weights to constituents, based on the location of their corresponding relations in the hierarchy. Once the relations of constituents have been identified during the analysis of the textual input, objects in subordinate clauses may be assigned a very low value (e.g., 0.1 on a scale of 0 to 1) while subjects of matrix clauses may be weighted with a very high value (such as 0.9). The particular weighting value assigned can be empirically, or intuitively, predetermined. Similar weighting can be done based on case information identified. In other words, constituents having associated relations located high on a predetermined ranked list of relations will be given a higher weight than those located lower on the list (assuming that the relation located higher on the list is more closely related to aboutness). This is indicated by block <b>117</b> in <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0077" num="0076">The annotated text (e.g., syntactic analysis) is then returned to component <b>104</b>, as indicated by block <b>126</b>. Next, as described with respect to <figref idref="DRAWINGS">FIG. 3B</figref>, the second textual input is received as indicated by block <b>122</b>, and the relationship between the first and second textual inputs is determined by referring to the annotated (weighted) text, as indicated by block <b>128</b>.</p>
<heading id="h-0009" level="1">Summarization and Clustering</heading>
<p id="p-0078" num="0077">The techniques in accordance with the present invention can be used in a wide variety of applications. For example, where the application is to create a summary of a document, the present invention can be used to identify, and eliminate from the summary, clauses or terms which are not related to the aboutness of the document. In that event, system <b>100</b> does not include relationship determination component <b>104</b> which is used in determining the relationship between first and second textual inputs. Rather, a summary generation component is substituted therefore which is configured to generate a summary based on the annotated or pruned text (e.g., syntactic analysis) returned by component <b>102</b>.</p>
<p id="p-0079" num="0078">Similarly, where the application is a document clustering application, system <b>100</b> is configured to receive all of the documents to be clustered, and to create annotated texts (e.g., syntactic analyses) based on sentences in each of the documents. Then, relationship determination component <b>104</b> simply takes, as its inputs, annotated texts from two or more documents to determine a relationship between the two documents. Relationship scores are computed for all possible pairs of documents, and those with the highest relationship scores are clustered together.</p>
<heading id="h-0010" level="1">Information Retrieval Prior to Indexing</heading>
<p id="p-0080" num="0079">While all of the above applications can be related to the task of information retrieval, the present invention can also illustratively be directly implemented in an application which performs information retrieval within a computer, across a local area network, or across a wide area network, such as a global computer network. <figref idref="DRAWINGS">FIGS. 5A-5F</figref> illustrate use of the present invention in information retrieval operations in the context of a global computer network, wherein techniques according to the present invention are performed prior to indexing.</p>
<p id="p-0081" num="0080"><figref idref="DRAWINGS">FIG. 5A</figref> is a functional block diagram setting constituent marking component <b>102</b> (described with respect to <figref idref="DRAWINGS">FIG. 3A</figref>) in the context of Internet information retrieval system <b>200</b>. System <b>200</b> includes web crawler component <b>202</b>, text filter component <b>204</b>, constituent marking component <b>102</b>, indexer <b>206</b> and index <b>208</b>. System <b>200</b> also illustratively includes search engine <b>210</b>. <figref idref="DRAWINGS">FIG. 5B</figref> is a flow diagram which illustrates the operation of system <b>200</b>.</p>
<p id="p-0082" num="0081">Web crawler component <b>202</b> is a conventional component, illustratively integrated in the operating system of a computer, which periodically accesses predetermined sites on the global computer network and ascertains whether any content has been added to the site which has been accessed. If so, web crawler component <b>202</b> provides the content to text filter <b>204</b>. Text filter <b>204</b> is also a conventional component which removes items which are undesirable from an indexing standpoint. For example, in one illustrative embodiment, text filter component <b>204</b> removes all HTML tags, and other such items, from the information provided by web crawler <b>202</b>. Receiving the web content information is indicated by block <b>212</b> in <figref idref="DRAWINGS">FIG. 5B</figref>, and filtering the text is indicated by block <b>214</b> in <figref idref="DRAWINGS">FIG. 5B</figref>. The filtered information is then provided to constituent marking component <b>102</b>. Constituent marking component <b>102</b> operates in a similar fashion to that described with respect to <figref idref="DRAWINGS">FIG. 3A</figref>. In other words, constituent marking component <b>102</b> illustratively includes a sentence breaker which breaks the text provided at its input at sentence boundaries. Component <b>102</b> also preferably includes case or grammatical analysis functionality which parses the sentences and provides an output which identifies relations (i.e., case information or grammatical relations) and compares them against the predetermined, ranked list or places them in the predetermined hierarchy. Component <b>102</b> also illustratively includes constituent identifier and annotator <b>108</b> which receives the output provided by the case or grammatical relation analyzer to annotate constituents based on their case information or position in the predetermined hierarchy.</p>
<p id="p-0083" num="0082">Constituents having associated predetermined case information or grammatical relations residing below a predetermined hierarchy threshold can be pruned or some or all of the constituents can be annotated with a weighting value as discussed above. Identifying and annotating the constituents is indicated by block <b>216</b> in <figref idref="DRAWINGS">FIG. 5B</figref>.</p>
<p id="p-0084" num="0083">The terms in the annotated or pruned text are then provided to indexer component <b>206</b>. Indexer <b>206</b> can take any number of suitable forms, such as being incorporated in search engine <b>210</b> described below and as described in greater detail with respect to <figref idref="DRAWINGS">FIGS. 5C-5F</figref> below. However, suffice it to say that indexer <b>206</b> generates an index corresponding to the documents retrieved by web crawler component <b>200</b> and provides the index <b>208</b> at its output. Index <b>208</b> can be a simple statistical, keyword-type index, or a more sophisticated type of index, depending upon indexer <b>206</b>. Generation of the index is indicated by block <b>218</b> in <figref idref="DRAWINGS">FIG. 5B</figref>.</p>
<p id="p-0085" num="0084">Search engine <b>210</b> is configured to receive a user input query and to execute that query against index <b>208</b>. In one illustrative embodiment, search engine <b>210</b> also performs the indexing operation described with respect to indexer <b>206</b>. In such an embodiment, search engine <b>210</b> is an Internet search engine, such as Alta Vista (which is a registered trademark of Digital Equipment Corporation of Maynard, Mass.), and is connected to a mass data store containing index <b>208</b>. The data set of document records is illustratively indexed by indexer <b>206</b> which can be contained in the search engine. Each such record in index <b>208</b> typically contains a web address (commonly referred to as a uniform resource locator “URL”) at which a corresponding document can be accessed by a web browser, predefined content words which appear in that document along with, in certain engines, a relative address of such word relative to other content words in that document; a short summary (often just a few lines) of the document or a first few lines of the document; and, possibly, the description of the document as provided in its hypertext markup language (HTML) description field.</p>
<p id="p-0086" num="0085">When a user enters the query through, for example, a web browser, the browser passes the query through an Internet connection to a server which contains the search engine <b>210</b>. The search engine <b>210</b> processes the query against document records stored within index <b>208</b> to yield a set of retrieved records (for documents) that the engine <b>210</b> determines to be relevant to the query.</p>
<p id="p-0087" num="0086">In one embodiment, search engine <b>210</b> compares the content words in the query against content words in document records indexed in index <b>208</b>. Based on the number of matches, the documents are assigned a score and ranked. The ranked documents are output to the user by search engine <b>210</b>. Receiving and executing the query is indicated by blocks <b>220</b> and <b>222</b> in <figref idref="DRAWINGS">FIG. 5B</figref>, and returning the documents is indicated by block <b>224</b>.</p>
<p id="p-0088" num="0087">Of course, it should be noted that search engine <b>210</b> can be a more complex type of search engine. In that case, search engine <b>210</b> may perform natural language processing on the query, or on the returned documents, or on both, prior to providing any documents to the user. Other types of search engines are contemplated as well.</p>
<p id="p-0089" num="0088"><figref idref="DRAWINGS">FIG. 5C</figref> is a more detailed block diagram of indexer <b>206</b> in accordance with one illustrative embodiment of the present invention. In <figref idref="DRAWINGS">FIG. 5C</figref>, indexer <b>206</b> includes constituent pruner component <b>226</b> and index generator component <b>228</b>. In the embodiment illustrated in <figref idref="DRAWINGS">FIG. 5C</figref>, the index <b>208</b> to be generated is simply a statistical keyword type index, and index generator <b>228</b> is a conventional index generator for generating such an index based on a textual input. In that case, constituent pruner <b>226</b> operates to prune, or strip out, all annotated constituents or terms which are provided by constituent marking component <b>102</b> (and which contain the predetermined case information or which fall below the grammatical relation hierarchy threshold), and to provide the remaining terms to index generator <b>228</b>. Therefore, all aspects of system <b>200</b> (other than constituent marking and pruning, but including index generation) can be accomplished with conventional components. The textual inputs are simply provided to marking component <b>102</b>, and pruner <b>226</b>, after they have been filtered by component <b>204</b>, and prior to indexing by index generator <b>228</b>. Components <b>102</b> and <b>226</b> act to identify and eliminate from indexing, terms and clauses which have little or no relationship to the aboutness of the document being indexed. This significantly reduces the size of index <b>208</b>, without compromising performance across the precision and recall dimensions.</p>
<p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. 5D</figref> is a flow diagram which illustrates the operation of indexer <b>206</b> shown in <figref idref="DRAWINGS">FIG. 5C</figref>. Pruning the annotated constituents is indicated by block <b>230</b> in <figref idref="DRAWINGS">FIG. 5D</figref>, and indexing the remaining terms using conventional indexing techniques is indicated by block <b>232</b> in <figref idref="DRAWINGS">FIG. 5D</figref>.</p>
<p id="p-0091" num="0090"><figref idref="DRAWINGS">FIG. 5E</figref> is a functional block diagram illustrating another illustrative embodiment of indexer <b>206</b>, and <figref idref="DRAWINGS">FIG. 5F</figref> is a flow diagram illustrating the operation of indexer <b>206</b> shown in <figref idref="DRAWINGS">FIG. 5E</figref>. Indexer <b>206</b> in <figref idref="DRAWINGS">FIG. 5E</figref> includes constituent weighting component <b>234</b> and index generator <b>236</b>. Constituent weighting component <b>234</b> receives the annotated output from component <b>102</b> and weights the terms in the annotated output, or weights certain of the terms. The weighting can be accomplished using a binary type scale or a continuous scale.</p>
<p id="p-0092" num="0091">For example, term weighting component <b>234</b> can be configured to simply add a predesignated marking to all words in an annotated syntactic analysis. In other words, all words in the syntactic analysis which have grammatical relations located above the hierarchy threshold can be prepended with a “g_” indicating that those words represent a good match. Similarly, all annotated words contained within the syntactic analysis (and thus having grammatical relations located below the hierarchy threshold) can be prepended with a “b_” indicating that they correspond to a bad match, or a match which does not necessarily indicate that the two textual inputs are similar. Similar markings can be made based on the predetermined, ranked list of case information.</p>
<p id="p-0093" num="0092">By way of example, assume the grammatical relation hierarchy threshold is set such that all terms in the hierarchy below subjects are below the threshold. Then, if “dog” is a word contained in the syntactic analysis which is a subject, term weighting component <b>234</b> receives the term “dog” and generates at its output the term “g_dog”, which is indexed. Similarly, if the term “bone” is located within the syntactic analysis and is a direct object, then weighting component <b>234</b> receives the term “bone” at its input and generates at its output the term “b_bone”. All of these terms are provided to index generator <b>236</b> which, in that embodiment, simply generates a statistical keyword type index using the words with the prepended terms.</p>
<p id="p-0094" num="0093">Then, when the user provides the query to search engine <b>210</b>, search engine <b>210</b> is configured to prepend each content word in the query with the term “g_”. Search engine <b>210</b> then identifies matches between only terms in the index and query which represent a good match. Thus, preferential matching is accomplished against only terms which are subjects or topic words in the document.</p>
<p id="p-0095" num="0094">Again, it should be noted that index generator <b>236</b> can, in that embodiment, be implemented as a conventional index generator which simply generates a keyword-type index <b>208</b> without any special modification. In the above-described embodiment, index <b>208</b> does not achieve the space reduction advantages which are achievable using the present invention, but it does achieve increased precision advantages in accordance with the present invention.</p>
<p id="p-0096" num="0095">In an alternative embodiment, term weighting component <b>234</b> weights the terms in the annotated output received from component <b>102</b> with a continuous, or semi-continuous weighting scheme. In that event, term weighting component <b>234</b> is configured to place a weight by each annotated constituent indicating the expected relevance which the constituent has to the aboutness of the document, based on empirical analysis of case, or based on its position in the predetermined grammatical relation hierarchy. For example, if empirical results show that a certain constituent having associated grammatical relation located high in the predetermined hierarchy is highly related to the aboutness of a document, a weight can be appended to that constituent which indicates, for example, a 90% confidence level that the term is relevant. This weight is added to the terms in the annotated syntactic analysis by term weighting component <b>234</b>.</p>
<p id="p-0097" num="0096">Index generator <b>236</b>, in that embodiment, is configured to create index <b>208</b> which not only includes the terms provided to index generator <b>236</b>, but which also includes the weight value added by term weighting component <b>234</b>. Thus, search engine <b>210</b> is configured to not only look for matches between content words in the query and those contained in index <b>208</b>, but to compute the score for similarity between the document and the query based on the number of matches found (and any other desirable criteria) and also based on the weight assigned to the matching terms.</p>
<p id="p-0098" num="0097">In another alternative embodiment, an existing indexing technique is used, with the addition of one item. A number of existing indexing techniques index a document based on the word, the position of the word within the document, and the capitalization of the word (i.e., whether the word is capitalized or not capitalized). This type of indexing scheme can be used in accordance with the present invention including term weighting component <b>234</b> by simply adding one additional entry into the index. That entry corresponds to the weight value assigned by term weighting component <b>234</b>. The weight can be empirically determined, or can be determined using a conventional technique such as term frequency-inverse document frequency (tf*idf). In any event, term weighting component <b>234</b> provides the weight value to index generator <b>236</b> which builds the index based on the term, the position, the capitalization and the assigned weight value, and any other conventional entries used in the indexing scheme. Weighting the terms or constituents based on the annotation is indicated by block <b>238</b> in <figref idref="DRAWINGS">FIG. 5F</figref>, and generation of the index including the weighting information is indicated by block <b>240</b>.</p>
<heading id="h-0011" level="1">Information Retrieval Operations, Performed on Documents Returned in Response to a Query</heading>
<p id="p-0099" num="0098">The present invention can also be used in post processing operations (i.e., in operations which occur upon the document set returned by a conventional search engine in response to a query). <figref idref="DRAWINGS">FIG. 6A</figref> is a functional block diagram illustrating constituent marking component <b>102</b> in the context of a post processing information retrieval system <b>300</b>. System <b>300</b> includes a conventional information retrieval engine <b>302</b> which can be implemented as a simple statistical information retrieval engine, or as one which includes more complex natural language processing techniques. Data store <b>304</b> represents the data store being searched based upon a user query input to information retrieval engine <b>302</b>. Data store <b>304</b> can, for example, be within a computer, on a local area network, or on a wide area network (such as a global computer network). Similarly, data store <b>304</b> can simply be an index of documents to be searched. System <b>300</b> also includes constituent pruner component <b>306</b> or, optionally, constituent weighting component <b>308</b>. System <b>300</b> further includes matching component <b>310</b> and re-ranking component <b>312</b>.</p>
<p id="p-0100" num="0099"><figref idref="DRAWINGS">FIG. 6B</figref> is a flow diagram which illustrates the operation of system <b>300</b> shown in <figref idref="DRAWINGS">FIG. 6A</figref>.</p>
<p id="p-0101" num="0100">In operation, information retrieval engine <b>302</b> first receives a query input by the user. This is indicated by block <b>314</b> in <figref idref="DRAWINGS">FIG. 6B</figref>. Next, information retrieval engine <b>302</b> executes the query against the data store <b>304</b> in a conventional manner. This is indicated by block <b>316</b> in <figref idref="DRAWINGS">FIG. 6B</figref>. Similarly, in a conventional manner, information retrieval engine <b>302</b> receives and returns the documents which are deemed by engine <b>302</b> to be relevant to the user's query. This is indicated by block <b>318</b>.</p>
<p id="p-0102" num="0101">In accordance with one embodiment of the present invention, the returned documents are then provided to constituent marking component <b>102</b> which is similar to that described with respect to <figref idref="DRAWINGS">FIG. 3A</figref>. The annotated constituents are then provided, in one illustrative embodiment, to constituent pruner <b>306</b>. Pruner <b>306</b> prunes the annotated constituents from the annotated output provided by marking component <b>102</b>. The pruned output is then provided to matching component <b>310</b>. Identifying and annotating the constituents based on case or the location of associated grammatical relation in the predetermined hierarchy is indicated by block <b>320</b> in <figref idref="DRAWINGS">FIG. 6B</figref>, and pruning those constituents is indicated by block <b>322</b>.</p>
<p id="p-0103" num="0102">Matching component <b>310</b> selects a first of the returned documents, with the annotated constituents removed therefrom. This is indicated by block <b>324</b>. Matching component <b>310</b> then determines whether any of the content terms in the query provided by the user are still in the selected document, after the annotated constituents have been removed. If not, that indicates that the only matches against the selected document occurred with respect to constituents which contained the predetermined case information or which had grammatical relations located below the predetermined hierarchy threshold (i.e., those which have little to do with describing what the document is about). This is indicated by block <b>326</b> in <figref idref="DRAWINGS">FIG. 6B</figref>.</p>
<p id="p-0104" num="0103">Therefore, the document is eliminated from the list of returned documents, as indicated by block <b>328</b>, and matching component <b>310</b> determines whether any documents remain in the returned document set. This is indicated by block <b>330</b>.</p>
<p id="p-0105" num="0104">If, at block <b>326</b>, some of the content terms in the query are still found in the selected document, after the annotated constituents have been removed therefrom, that indicates that matches have been made against the document with respect to terms that are believed to be relevant to the aboutness of the document. Therefore, the selected document is retained as indicated by block <b>332</b>. Again, matching component <b>310</b> determines, at block <b>330</b>, whether any of the returned documents have yet to be analyzed. If so, processing returns to block <b>324</b>.</p>
<p id="p-0106" num="0105">After all of the returned documents have been analyzed, the remaining documents (those which have not been eliminated) are passed to re-ranking component <b>312</b>. Re-ranking component <b>312</b> first determines whether the number of remaining documents is sufficient to present to the user. This is indicated by block <b>334</b>. In other words, it is possible that the content terms of the query matched relevant terms in only a very small number of the returned documents. If that is true, re-ranking component <b>312</b> may determine that the number of documents presented to the user is undesirably low, or is insufficient. This threshold can either be set by the user, or can be automatically determined based on a threshold value preprogrammed into component <b>312</b>.</p>
<p id="p-0107" num="0106">In any event, if the number of documents remaining is sufficient, as determined at block <b>334</b>, then re-ranking component <b>312</b> computes a new score for the retained documents. The new score can be computed in any suitable fashion. For example, the new score may be based on the number of matches between content words in the query and terms remaining in each of the documents, after the annotated constituents have been removed. Computation of the new score is indicated by block <b>336</b>. Based upon the new score, re-ranking component <b>312</b> re-ranks the retained documents in an order determined by the new score. This is indicated by block <b>338</b>. Finally, component <b>312</b> returns the re-ranked documents to the user in re-ranked order. This is indicated by block <b>340</b>.</p>
<p id="p-0108" num="0107">If, at block <b>334</b>, it is determined that an insufficient number of documents remains to present to the user, then processing continues at block <b>342</b>. Re-ranking component <b>312</b> retrieves all documents returned from information retrieval engine <b>302</b> in response to the query input by the user. Instead of removing the annotated constituents as indicated by block <b>322</b>, re-ranking component <b>312</b> feeds the documents back to optional constituent weighting component <b>308</b>. Weighting component <b>308</b> weights the annotated constituents which had previously been removed (and may weight all other constituents as well) based on their case or positions of their grammatical relations in the predetermined hierarchy. The weighted outputs are then fed back to matching component <b>310</b> which again matches the content words in the query against the terms in the documents, including annotated terms which have been weighted. This is indicated by block <b>344</b>. A new score is then computed for each of the returned documents based on the weights, and the documents are again re-ranked. This is indicated by block <b>346</b>. The documents are then provided to the user as indicated by block <b>340</b>.</p>
<p id="p-0109" num="0108">It should also be noted that, at block <b>344</b>, instead of weighting the annotated constituents, constituent weighting component <b>308</b> can simply remove the annotations which essentially weight all the terms the same. Then, matching component <b>310</b> simply matches against the same terms which information retrieval engine <b>302</b> matched against. Further, rather than removing the annotations from all documents, the annotations can simply be removed at block <b>344</b> from those documents which were eliminated from the search at block <b>328</b>. Therefore, the annotations are simply removed from those documents which information retrieval engine <b>302</b> had already determined were relevant enough to return to the user. Those documents are then simply ranked lower than the documents which remained even with the annotated constituents removed.</p>
<p id="p-0110" num="0109">It should be noted that the discussions herein which relate to information retrieval process using the term “content word.” This term is used for the sake of illustration only. It is contemplated that the particular linguistic unit under analysis can be any other unit, such as morphemes, words, phrases, n-grams of characters, etc., all of which are referred to herein as “search terms.”</p>
<heading id="h-0012" level="1">Test Methodology</heading>
<p id="p-0111" num="0110">One embodiment of the present invention also includes a system by which the pertinent case information (or ranked list of case information and corresponding threshold) or grammatical relation hierarchy and hierarchy threshold can be predetermined based on any given data set with which the present invention is utilized. <figref idref="DRAWINGS">FIG. 7</figref> is a flow diagram which illustrates operation of computer <b>20</b> in implementing such a system. While the technique described below can be used to identify case information and both the grammatical relation hierarchy to be used and the hierarchy threshold, the following discussion proceeds primarily with respect to setting the hierarchy threshold with respect to a predefined hierarchy. It should also be noted that a content set can be any suitable collection of documents or any other text corpus which can be searched using information retrieval-type techniques.</p>
<p id="p-0112" num="0111">First, a grammatical relation hierarchy threshold is selected. The hierarchy against which the threshold is set can be any suitable hierarchy such as the Accessibility Hierarchy described above or another empirically determined or intuitively determined hierarchy or one determined using the same technique as that described herein for setting the threshold. The initial threshold can be set essentially any position along the hierarchy.</p>
<p id="p-0113" num="0112">It is believed that the particular hierarchy and hierarchy threshold which may prove to be helpful in performing techniques in accordance with the present invention may change with different content sets. Assuming a hierarchy has been selected, in order to identify the hierarchy threshold to be used in accordance with the present invention, as the predetermined hierarchy threshold, a first hierarchy threshold to be tested is selected. This is indicated by block <b>350</b> in <figref idref="DRAWINGS">FIG. 7</figref>.</p>
<p id="p-0114" num="0113">Next, an index is built from a predetermined text corpus with all of the constituents having associated grammatical relations falling below the selected hierarchy threshold removed therefrom. This is indicated by block <b>352</b>. In accordance with one illustrative embodiment of the present invention, the text corpus is approximately 20,000-30,000 documents pertaining to the desired content set.</p>
<p id="p-0115" num="0114">Next, information retrieval is performed on the index. This is indicated by block <b>354</b>. In one illustrative embodiment, information retrieval is performed using approximately 20,000-30,000 predetermined queries.</p>
<p id="p-0116" num="0115">Next, constituents in the content set which have an associated grammatical relation falling below the selected threshold are identified and a determination is made as to how useful the remaining constituents (other than those falling below the threshold) are in determining the meaning of the content set. Of course, this can be done in any number of ways such as observing knowledge about the contact set gained by readers of the constituents which reside above the threshold.</p>
<p id="p-0117" num="0116">Another way is to use information retrieval. This discussion proceeds with respect to an illustrative embodiment which uses information retrieval. In that embodiment, computer <b>20</b> determines how much of an index space saving has been realized by removing the constituents having grammatical relations falling below the selected threshold from the document corpus. This is indicated by block <b>356</b>. Computer <b>20</b> then determines the performance of the information retrieval operations performed against the index. This is indicated by block <b>358</b>. In order to determine whether performance is adequate, any suitable measure which includes precision and recall components can be used. One suitable measure is known as “F-measure” and was defined in a paper written by C. J. Van Rijsbergen, 1979, entitled “INFORMATION RETRIEVAL.” The F-measure is defined as follows:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>F</i>=((<i>B</i><sup>2</sup>+1.0)*<i>P*R</i>)/(<i>B</i><sup>2</sup><i>*P+R</i>)<?in-line-formulae description="In-line Formulae" end="tail"?>
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0117">where P is precision, R is recall and B is the relative importance given to recall over precision. Usually, B=1.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0118" num="0118">Next, computer <b>20</b> determines whether the performance is adequate given the reduction in index size. This will differ, of course, with application. In applications in which index size is of great importance, a greater reduction in information retrieval performance may be tolerated. For purposes of the present discussion, a statistically significant change in F-measure can be defined by a change of five percent or more.</p>
<p id="p-0119" num="0119">In any event, it is decided whether the performance is adequate given reduction in index size at block <b>360</b>. If so, the selected threshold is logged and grammatical relations falling below the threshold are added to the list of predetermined grammatical relations associated with the content set under analysis. This is indicated by block <b>362</b>.</p>
<p id="p-0120" num="0120">However, if, at block <b>360</b>, it is determined that performance is not adequate given the reduction in index size, failure analysis is performed to determine why documents were not returned that should have been, or why documents were returned that should not have been. This is indicated by block <b>364</b>. Illustratively, this is determined by a group of linguists who analyze the documents returned, or documents which should have been returned, but were not, to determine what the documents have in common, and hence to determine why the documents were not returned, or were incorrectly returned. In performing this analysis, the linguists may add some further refinement to the hierarchy threshold (or hierarchy structure) such that constituents are only removed under certain circumstances, or in certain contexts, even if they have associated grammatical relations which fall below the threshold. Similarly, the linguists may simply determine that the selected threshold (or hierarchy structure) is not desirable, given the content set. In any case, computer <b>20</b> then determines whether additional thresholds (or hierarchy structures) are to be tested. If so, processing returns to block <b>350</b> and a new threshold is selected. If not, all thresholds which are to be tested have been tested, and the predetermined threshold has been selected. This is indicated by block <b>366</b>.</p>
<p id="p-0121" num="0121">The hierarchy structure can also be determined according to this general process. Constituents having a selected grammatical relation are removed from the corpus and a quantitative indication of usefulness of the remaining constituents is obtained (such as by performing information retrieval on an index formed based on the pruned corpus). The grammatical relation which has the greatest usefulness (e.g., results in the greatest reduction in information retrieval performance) is arranged highest in the hierarchy. Remaining grammatical relations are arranged in descending order, based on reduction in usefulness (e.g., a reduction in information retrieval performance).</p>
<p id="p-0122" num="0122">Further, this general process can be used to select case information to be used in the predetermined, ranked list. For example, in the illustrative information retrieval embodiment, a particular case is selected, terms having the selected case are annotated and removed, and an index is built with the remaining terms. Information retrieval is performed on the index and performance is analyzed. Based on a reduction in performance, cases are placed in a ranked list. The threshold within the ranked list can also be set based on reduction in information retrieval performance. Further analysis can be performed where performance is inadequate. The process can be repeated for any desired case information.</p>
<p id="p-0123" num="0123">Thus, it can be seen that the present invention identifies relations (case information or a grammatical relation hierarchy and a hierarchy threshold). Constituents with the associated case information or having grammatical relations located below the hierarchy threshold are identified so they can be annotated, weighted, or simply removed when determining what a document is about. This can be utilized when a document is indexed during information retrieval, when a document is being summarized, after a document has been retrieved using conventional information retrieval techniques, when documents are to be clustered, or with an implicit query in which a document is provided and a computer is requested to find similar documents. The present invention can be utilized in other contexts as well. However, it has been found to be particularly beneficial in information retrieval indexing since the present invention can greatly reduce the index size without significantly sacrificing performance.</p>
<p id="p-0124" num="0124">Although the present invention has been described with reference to preferred embodiments, workers skilled in the art will recognize that changes may be made in form and detail without departing from the spirit and scope of the invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-chemistry idref="CHEM-US-00001" cdx-file="US07299238-20071120-C00001.CDX" mol-file="US07299238-20071120-C00001.MOL"/>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer readable medium storing instructions and executed by a computer, causing the computer to perform a method of determining a relationship between a first textual input and a second textual input, the method comprising:
<claim-text>analyzing the first textual input to obtain relations of constituents thereof, the relations comprising at least one of grammatical relations and case;</claim-text>
<claim-text>determining a relative importance of the constituents in determining the relationship between the first textual input and the second textual input based on the relations obtained;</claim-text>
<claim-text>calculating the relationship between the first textual input and the second textual input based on the constituents and the relative importance of the constituents; and</claim-text>
<claim-text>outputting an indication of the relationships between the first textual input and the second textual input.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The computer readable medium of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the method further comprises:
<claim-text>obtaining a threshold importance; and</claim-text>
<claim-text>wherein determining the relationship between the first textual input and the second textual input comprises determining the relationship between the first textual input and the second textual input based only on constituents having a relative importance above the threshold importance.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The computer readable medium of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the method further comprises:
<claim-text>assigning a weighting value to each constituent based on the relative importance corresponding to each constituent; and</claim-text>
<claim-text>wherein determining the relationship between the first textual input and the second textual input comprises determining the relationship between the first textual input and the second textual input based on the weighting values associated with the constituents.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The computer readable medium of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the first textual input comprises a document and the second textual input comprises a query; and
<claim-text>wherein determining the relationship between the first textual input and the second textual input comprises determining a similarity in meaning between the document and the query.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The computer readable medium of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the first textual input comprises a first document and the second textual input comprises a second document; and
<claim-text>wherein determining the relationship between the first textual input and the second textual input comprises determining a similarity in meaning between the documents.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The computer readable medium of <claim-ref idref="CLM-00005">claim 5</claim-ref> wherein determining the relationship between the first textual input and the second textual input further comprises determining whether the first textual input and the second textual input are to be clustered in a logical cluster based on the similarity in meaning between the first document and the second document.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computer readable medium of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the analyzing step comprises obtaining case information corresponding to the constituents in the first textual input.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The computer readable medium of <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein determining a relative importance comprises determining a relative importance of the constituents based on the corresponding case information.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The computer readable medium of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the analyzing step comprises obtaining grammatical relations corresponding to the constituents in the first textual input.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The computer readable medium of <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein determining a relative importance comprises determining a relative importance of the constituents based on the corresponding grammatical relations.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A computer system having a processor and a memory for determining a relationship between a first textual input and a second textual input, the computer system comprising:
<claim-text>a constituent marking component configured to perform steps of:
<claim-text>analyzing the first textual input to obtain relations of constituents thereof, the relations comprising at least one of grammatical relations and case;</claim-text>
<claim-text>determining a relative importance of the constituents in determining the relationship between the first textual input and the second textual input based on the relations obtained; and</claim-text>
</claim-text>
<claim-text>a relationship determination component configured to:
<claim-text>calculate the relationship between the first textual input and the second textual input based on the constituents and the relative importance of the constituents; and</claim-text>
<claim-text>output an indication of the relationships between the first textual input and the second textual input.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The computer system of <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein the constituent marking component is further configured to obtain a threshold importance; and
<claim-text>wherein calculation of the relationship between the first textual input and the second textual input comprises determining the relationship between the first textual input and the second textual input based only on constituents having a relative importance above the threshold importance.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The computer system of <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein the constituent marking component is further configured to assign a weighting value to each constituent based on the relative importance corresponding to each constituent; and
<claim-text>wherein the relationship determination component is configured to calculate the relationship between the first textual input and the second textual input by determining the relationship between the first textual input and the second textual input based on the weighting values associated with the constituents.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The computer system of <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein the first textual input comprises a document and the second textual input comprises a query; and
<claim-text>wherein the relationship determination component is configured to determine the relationship between the first textual input and the second textual input by determining a similarity in meaning between the document and the query.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The computer system of <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein the first textual input comprises a first document and the second textual input comprises a second document; and
<claim-text>wherein the relationship determination component is configured to determine the relationship between the first textual input and the second textual input by determining a similarity in meaning between the first document and the second document.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The computer system of <claim-ref idref="CLM-00015">claim 15</claim-ref> wherein the relationship determination component is configured to determine the relationship between the first textual input and the second textual input by determining whether the first textual input and the second textual input are to be clustered in a logical cluster based on the similarity in meaning between the first document and the second document.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The computer system of <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein the constituent marking component is configured to perform the analyzing step by obtaining case information corresponding to the constituents in the first textual input.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The computer system of <claim-ref idref="CLM-00017">claim 17</claim-ref> wherein the constituent marking component is configured to determine a relative importance by determining a relative importance of the constituents based on the corresponding case information.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The computer system of <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein the constituent marking component is configured to perform the analyzing step by obtaining grammatical relations corresponding to the constituents in the first textual input.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The computer system of <claim-ref idref="CLM-00019">claim 19</claim-ref> wherein the constituent marking component is configured to determine relative importance by determining a relative importance of the constituents based on the corresponding grammatical relations.</claim-text>
</claim>
</claims>
</us-patent-grant>
