<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298745-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298745</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10015959</doc-number>
<date>20011101</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>466</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>28</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>56</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370394</main-classification>
<further-classification>370392</further-classification>
<further-classification>370476</further-classification>
<further-classification>709236</further-classification>
</classification-national>
<invention-title id="d0e53">Method and apparatus to manage packet fragmentation with address translation</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5815516</doc-number>
<kind>A</kind>
<name>Aaker et al.</name>
<date>19980900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714807</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6157955</doc-number>
<kind>A</kind>
<name>Narad et al.</name>
<date>20001200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709228</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6453357</doc-number>
<kind>B1</kind>
<name>Crow et al.</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709236</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6650641</doc-number>
<kind>B1</kind>
<name>Albert et al.</name>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370392</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6714985</doc-number>
<kind>B1</kind>
<name>Malagrino et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709236</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6742045</doc-number>
<kind>B1</kind>
<name>Albert et al.</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709238</main-classification></classification-national>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6888838</doc-number>
<kind>B1</kind>
<name>Ji et al.</name>
<date>20050500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370401</main-classification></classification-national>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7089320</doc-number>
<kind>B1</kind>
<name>Biederman et al.</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709234</main-classification></classification-national>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2002/0095512</doc-number>
<kind>A1</kind>
<name>Rana et al.</name>
<date>20020700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709232</main-classification></classification-national>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2002/0136217</doc-number>
<kind>A1</kind>
<name>Christensen</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370393</main-classification></classification-national>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2002/0161915</doc-number>
<kind>A1</kind>
<name>Crow et al.</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709236</main-classification></classification-national>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>WO</country>
<doc-number>WO 99/66680</doc-number>
<date>19991200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>WO</country>
<doc-number>WO 00/02114</doc-number>
<date>20000100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00014">
<othercit>W. Richard Stevens, TCP/IP Illustrated vol. 1 the protocols, 1994, addison-wesley, pp. 148-151.</othercit>
</nplcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00015">
<othercit>Srisuresh et al., “Traditional IP Network Address Translator (Traditional NAT)”, RFC 3022, Jan. 2001, 16 pages.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00016">
<othercit>“Internet Protocol DARPA Internet Program Protocol Specification”, RFC: 791, Sep. 1981, pp. 1-45, Information Sciences Institute, University of Southern California, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>21</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>370387</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370392</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370422</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370429</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370465</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370469</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370473</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370351</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370474</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370476</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370401</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370475</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370394</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370216</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370217</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370218</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370219</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370220</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370221</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370503</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709230</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709232</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709231</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709238</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709239</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709242</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709244</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709245</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709246</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709236</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709249</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709235</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709206</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709213</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709224</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714 18</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714  4</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>7</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20030081605</doc-number>
<kind>A1</kind>
<date>20030501</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Egevang</last-name>
<first-name>Kjeld B.</first-name>
<address>
<city>Smorum</city>
<country>DK</country>
</address>
</addressbook>
<nationality>
<country>DK</country>
</nationality>
<residence>
<country>DK</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Kacvinsky LLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Intel Corporation</orgname>
<role>02</role>
<address>
<city>Santa Clara</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Orgad</last-name>
<first-name>Edan</first-name>
<department>2616</department>
</primary-examiner>
<assistant-examiner>
<last-name>Ho</last-name>
<first-name>Chuong</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Embodiments of a method and apparatus to improve network performance by managing packet fragmentation with address translation are described.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="151.47mm" wi="117.26mm" file="US07298745-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="217.34mm" wi="143.34mm" orientation="landscape" file="US07298745-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="206.59mm" wi="107.70mm" orientation="landscape" file="US07298745-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="193.89mm" wi="153.42mm" file="US07298745-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="165.27mm" wi="123.36mm" file="US07298745-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="180.26mm" wi="124.21mm" file="US07298745-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="189.91mm" wi="127.34mm" file="US07298745-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="180.76mm" wi="124.80mm" file="US07298745-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">Packet fragmentation relates to a communications technology that may reduce the latency for transmitting information across a network, such as when it might be desirable to provide a higher level of service. Conventional packet fragmentation technology, however, may not employ packet fragmentation as effectively as desired. This may be particularly true when packet fragmentation is used in combination with address translation. Consequently, there may be a need to improve the implementation of packet fragmentation in a network.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0002" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0003" num="0002">The subject matter regarded as embodiments of the invention is particularly pointed out and distinctly claimed in the concluding portion of the specification. Embodiments of the invention, however, both as to organization and method of operation, together with objects, features, and advantages thereof, may best be understood by reference to the following detailed description when read with the accompanying drawings in which:</p>
<p id="p-0004" num="0003"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of a system suitable for practicing one embodiment of the invention.</p>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of a network in accordance with one embodiment of the invention.</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram of a node in accordance with one embodiment of the invention.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram of a packet fragmentation manager (PFM) in accordance with one embodiment of the invention.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 5</figref> is a first block flow diagram of the processing logic performed by a PFM in accordance with one embodiment of the invention.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 6</figref> is a second block flow diagram of the processing logic for a PFM in accordance with one embodiment of the invention.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 7</figref> is a third block flow diagram of the processing logic for a PFM in accordance with one embodiment of the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0003" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0011" num="0010">In the following detailed description, numerous specific details are set forth in order to provide a thorough understanding of the embodiments of the invention. It will be understood by those skilled in the art, however, that embodiments of the invention may be practiced without these specific details. In other instances, well-known methods, procedures, components and circuits have not been described in detail so as not to obscure the foregoing embodiments of the invention.</p>
<p id="p-0012" num="0011">Embodiments of the invention may improve performance of a communications network, such as a packet switching network. One embodiment of the invention improves performance of a packet switching network by improving management of packet fragmentation. Packet fragmentation in this context may refer to breaking a packet of information into a series of packet fragments that are typically smaller than the original packet.</p>
<p id="p-0013" num="0012">More particularly, one embodiment of the invention manages packet fragmentation in combination with address translation. Address translation in this context may refer to translating a large number of addresses into fewer or a single address, and vice-versa. Consequently, this may improve the overall capacity and performance of a network. Accordingly, users may benefit from faster response times from network applications and services.</p>
<p id="p-0014" num="0013">Packet switching continues to be an effective technology for voice and data communications. Packet switching in this context may refer to communicating information over a network in the form of relatively short packets. A packet in this context refers to a set of information of a limited length, with the length typically represented in terms of bits or bytes. An example of a packet length might be 1000bytes. A network typically comprises a number of nodes interconnected by a communications medium. The nodes may be capable of communicating information to other nodes over the communications medium using one or more protocols. A node in this context may include any device capable of communicating information, such as a computer, server, switch, router, bridge, gateway and so forth. A communications medium may be any medium capable of carrying information signals, such as twisted-pair wire, co-axial cable, fiber optics, radio frequencies and so forth. A protocol may comprise a set of instructions by which the information signals are communicated over the communications medium. For example, the protocol might be a packet switching protocol such as the Transmission Control Protocol (TCP) as defined by the Internet Engineering Task Force (IETF) standard 7, Request For Comment (RFC) 793, adopted in September, 1981 (“TCP Specification”), and the Internet Protocol (IP) as defined by the IETF standard 5, RFC 791 (“IP Specification”), adopted in September, 1981, both available from “www.ietf.org” (collectively referred to as the “TCP/IP Specification”).</p>
<p id="p-0015" num="0014">A packet switching network may comprise a source node, a destination node, and a number of intermediate nodes. The source node may comprise a node that originates a set of information for delivery to the destination node. Information may comprise any data capable of being represented as a signal, such as an electrical signal, optical signal, acoustical signal and so forth. Examples of information in this context may include data from a voice conversation, videoconference, streaming video, electronic mail (“email”) message, voice mail message, graphics, image, video, text and so forth. The destination node may comprise a node that receives information. The intermediate nodes may comprise nodes that communicate the information from the source node to the destination node.</p>
<p id="p-0016" num="0015">In operation, the source node may send information to the destination node through one or more intermediate nodes in the form of packets. The source node breaks a set of information into a series of packets. Each packet may contain a portion of the information plus some control information. The control information may assist intermediate nodes in the network to route each packet to the destination node. The source node sends the packets over the network, where an intermediate node receives the packets, stores them briefly, and passes them to the next intermediate node. This continues to occur until the destination node eventually receives the entire series of packets and uses them to reproduce the information from the source node.</p>
<p id="p-0017" num="0016">Transporting packets through intermediate nodes, however, becomes more complicated if a packet has a higher priority associated with it. Information may be assigned different levels of priority. Information with a higher priority may be given preferential treatment as it passes through the network. An example of higher priority information may include time sensitive information, such as information from a voice message. If packets carrying voice information are delayed in the network, the receiving party may perceive silent periods that exceed the natural pauses and rhythm of a normal telephone conversation, for example. Information that may be less sensitive to time delays in a network, such as an email message or voice message, on the other hand, typically has a lower priority. If packets carrying an email message are delayed, the delay frequently goes unnoticed by the intended recipient, unless excessive. Consequently, intermediate nodes are often capable of determining the priority level of a packet and processing it accordingly. Transporting packets of lower priority may be relatively straightforward since these packets do not require any preferential treatment. Transporting packets of higher priority, however, may employ additional technology to reduce delays in the network. Packet fragmentation is one technique for reducing network delays for higher priority packets.</p>
<p id="p-0018" num="0017">In one embodiment of the invention, packet fragmentation may refer to breaking a packet of information into a series of packet fragments. Each packet fragment typically has a length smaller than the original packet. A length in this context refers to the number of bits or bytes of information comprising the packet or packet fragment. For example, an original packet might have a length of 1500 bytes while a packet fragment might have a length of 100 bytes. Each packet fragment may contain a portion of the information from the original packet plus a fragment header. A fragment header in this context comprises one or more bits representing control information that may assist another node in reassembling the packet fragments into the original packet.</p>
<p id="p-0019" num="0018">Packet fragmentation is one technique for reducing network delays for higher priority packets. More particularly, the use of packet fragments permits an intermediate node to communicate packet fragments with a higher priority between packet fragments of lower priority. For example, an intermediate node may receive a first and second packet, with the first packet having a lower priority then the second packet. The first packet may comprise information from an email message, for example. The second packet may comprise information from a voice conversation, for example. The intermediate node may store the first and second packets in a transmit queue. A transmit queue in this context may refer to memory to store packets until ready for transmission by the network device. The transmit queue may be organized as a first-in first-out (FIFO) structure. A FIFO in this context refers to a memory structure that orders packets from most recently stored to least recently stored, and where each packet is retrieved from memory in the order from least recently stored packet to most recently stored packet. For example, a line in a grocery store typically operates as a FIFO, where the first person in line is the next person to be serviced at the register. Consequently, if the first packet is received at the intermediate node prior to the second packet, the intermediate node may store the second packet behind the first packet in the transmit queue. This means that the second packet will not be sent until the first packet is fully transmitted. Transmission of the first packet, however, may introduce a level of delay that may not be tolerated by the second packet. In other words, the transmission of the first packet may take so long that the second packet will not arrive at its destination node within an acceptable time frame. Using packet fragmentation, the intermediate node may be able to insert packet fragments from the second packet between packet fragments from the first packet in the transmit queue, thereby reducing the latency created by the first packet to acceptable levels.</p>
<p id="p-0020" num="0019">The transmit queue problem described above may be better illustrated by way of example. Assume that the length of the first packet is 1500 bytes. Further, assume that the network device may transmit the first packet over a connection operating at a connection speed of approximately 64 kilobits per second (kbps). Transmission of the first packet would take approximately 200 milliseconds (ms), or approximately 0.13 ms per byte. Assume the second packet comprises information from a voice conversation that can tolerate up to 4 ms of delay. If the second packet is behind the first packet in the transmit queue, the second packet will be delayed for 200 ms while the entire first packet is being transmitted, which is far more than the 4 ms delay tolerance of the second packet. As a result, the second packet will arrive late at the destination node. If the intermediate node employs patent fragmentation, however, the first packet may be broken down into packet fragments with a length smaller than 1500 bytes. For example, the first packet may be broken down into packet fragments of 30 bytes each. Transmission time of a 30 byte packet fragment from the first packet would take approximately 3.99 ms. Consequently, the intermediate node may interrupt transmission of the first packet after a packet fragment for the first packet has been fully transmitted, thereby reducing transmission delay for the second packet to below 4 ms.</p>
<p id="p-0021" num="0020">Packet fragmentation may be particularly problematic when used in combination with address translation. One type of address translation may be referred to as network address translation (NAT). NAT enables a local area network (LAN) to use one set of IP addresses for internal traffic and a second set of addresses for external traffic. A NAT device may be located where a LAN meets the Internet to make all desired IP address translations. NAT may provide a type of firewall by hiding internal IP addresses. NAT may also enable a company to use more internal IP addresses. Since they're used internally only, there is a reduced possibility of conflict with IP addresses used by other companies and organizations. NAT may also allow a company to combine multiple network connections into a single Internet connection.</p>
<p id="p-0022" num="0021">Conventional implementations of packet fragmentation as used with address translation, however, may be unsatisfactory. Address translation may need information from the header of a packet, such as the port number that may be used to identify a connection over which the packet is to be communicated. When the packet is fragmented, however, only the first fragment typically holds a valid header containing the appropriate port number(s). Since it is acceptable to send fragments disordered or even backwards, it may be difficult to retrieve the appropriate port number(s) for address translation. One potential solution to this problem is to reassemble the packet fragments, retrieve the port number from the packet header, and then disassemble the packet into packet fragments again for communication over the designated port number. This assembly/disassembly fragmentation process, however, may be processor and memory intensive operations that may impact the packet forwarding performance of a network device, such as a router. Embodiments of the invention, as described in more detail hereinafter, may reduce this and other problems by managing packet fragmentation in a manner that reduces the need to perform the fragmentation process prior to forwarding a packet through a network device.</p>
<p id="p-0023" num="0022">It is worthy to note that any reference in the specification to “one embodiment” or “an embodiment” means in this context that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment of the invention. The appearances of the phrase “in one embodiment” in various places in the specification do not necessarily all refer to the same embodiment.</p>
<p id="p-0024" num="0023">Referring now in detail to the drawings wherein like parts are designated by like reference numerals throughout, there is illustrated in <figref idref="DRAWINGS">FIG. 1</figref> a system suitable for practicing one embodiment of the invention. <figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of a system <b>100</b> comprising a source node <b>102</b> connected to a network <b>106</b> via connection <b>104</b>. A network device such as a router <b>110</b> is connected to network <b>106</b> via connection <b>108</b>. Router <b>110</b> is connected to a LAN <b>112</b>. LAN <b>112</b> includes nodes <b>1</b>, <b>2</b> and N, designated as nodes <b>114</b>, <b>116</b> and <b>118</b>, respectively. Router <b>110</b> represents any network device configured to perform address translation, such as NAT. Although <figref idref="DRAWINGS">FIG. 1</figref> shows a limited number of network nodes, it can be appreciated that any number of network nodes may be used in system <b>100</b> and still fall within the scope of the invention. Furthermore, the terms “connection” and “interconnection,” and variations thereof, in this context may refer to physical connections and/or logical connections.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of a network in accordance with one embodiment of the invention. <figref idref="DRAWINGS">FIG. 2</figref> illustrates a network <b>200</b> that may be representative of network <b>106</b>. Network <b>200</b> comprises an intermediate node <b>202</b> connected to an intermediate node <b>206</b> over a connection <b>204</b>. Intermediate node <b>202</b> may, for example, receive signals from a source node, such as source node <b>102</b>. Intermediate node <b>206</b> may send signals to a destination node, such as network nodes <b>114</b>, <b>116</b> or <b>118</b>. Although there are only two intermediate nodes shown in <figref idref="DRAWINGS">FIG. 2</figref>, it can be appreciated that any number of intermediate nodes may be used in network <b>200</b> and still fall within the scope of the invention.</p>
<p id="p-0026" num="0025">In one embodiment of the invention, the intermediate nodes may perform packet fragmentation. Intermediate nodes may perform packet fragmentation in accordance with any conventional packet fragmentation protocol. For example, packet fragmentation may be performed in accordance with the IETF Proposed Standard entitled “The Multi-Class Extension To Multi-Link PPP,” RFC 2686, published September 1999, available from “www.ietf.org.” (“MCML Specification”), the “Frame Relay Fragmentation Implementation Agreement” as defined by FRF Standard 12, adopted in December 1997, available from “www.frforum.com” (“FRF.12 Specification”), and the IP Specification. Although the embodiments of the invention may use a packet fragmentation protocol as defined in the IP Specification, MCML Specification or the FRF.12 Specification, it can be appreciated that any packet fragmentation protocol may be used and still fall within the scope of the invention.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram of a node in accordance with one embodiment of the invention. <figref idref="DRAWINGS">FIG. 3</figref> illustrates a node <b>300</b> that may be representative of a NAT device such as router <b>110</b>. A NAT device may perform NAT in accordance with, for example, the information specification titled “Traditional IP Network Address Translator,” as defined by RFC 3022, published January 2001 (“NAT Specification”), as modified by the principles set forth herein.</p>
<p id="p-0028" num="0027">Node <b>300</b> may comprise a computer platform. In this embodiment of the invention, node <b>300</b> comprises a processor <b>302</b>, an input/output (I/O) adapter <b>304</b>, an operator interface <b>306</b>, a memory <b>310</b>, a monitoring module <b>318</b> and a scheduling module <b>320</b>. Memory <b>310</b> may store computer program instructions and data. Processor <b>302</b> may execute the program instructions, and process the data, stored in memory <b>310</b>. I/O adapter <b>304</b> may communicate with other devices and transfer data in and out of intermediate node <b>300</b> over connection <b>324</b>. Operator interface <b>306</b> may provide an interface between a user and OS <b>316</b>. Operator interface <b>306</b> may communicate commands between the user and OS <b>316</b>, and provides status information to the user. All these elements are interconnected by bus <b>308</b>, which allows data to be intercommunicated between the elements. I/O adapter <b>304</b> may represent one or more I/O adapters or network interfaces that can connect to local or wide area networks such as, for example, network <b>200</b>. Therefore, connection <b>324</b> may represent a connection to a network or a direct connection to other equipment. It can be appreciated that node <b>300</b> may have any number of I/O adapters and connections, such as I/O adapter <b>304</b> and connection <b>324</b>, and still fall within the scope of the invention.</p>
<p id="p-0029" num="0028">Processor <b>302</b> can be any type of processor capable of providing the speed and functionality desired to implement embodiments of the invention. For example, processor <b>302</b> may be a processor from a family of processors made by Intel Corporation, Motorola, Compaq, AMD Corporation and Sun Microsystems.</p>
<p id="p-0030" num="0029">Memory <b>310</b> may comprise any media capable of storing instructions adapted to be executed by a processor. Some examples of such media include, but are not limited to, read-only memory (ROM), random-access memory (RAM), programmable ROM, erasable programmable ROM, electronically erasable programmable ROM, dynamic RAM, magnetic disk (e.g., floppy disk and hard drive), optical disk (e.g., CD-ROM) and any other device or signal that can store digital information. In one embodiment, the instructions may be stored on the medium in a compressed and/or encrypted format. As used herein, the phrase “adapted to be executed by a processor” is meant to encompass instructions stored in a compressed and/or encrypted format, as well as instructions that may be compiled or installed by an installer before being executed by the processor. Further, node <b>300</b> may contain various combinations of machine-readable storage devices through other I/O controllers, which are accessible by processor <b>302</b> and which are capable of storing a combination of computer program instructions and data.</p>
<p id="p-0031" num="0030">In one embodiment of the invention, memory <b>310</b> comprises an operating system <b>316</b>, a program partition <b>312</b> and a data partition <b>314</b>. Program partition <b>312</b> may store and allow execution by processor <b>302</b> of program instructions that implement the functions of each respective node described herein, such as source node <b>102</b>, intermediate nodes <b>202</b> and <b>206</b>, and router <b>110</b>. Data partition <b>314</b> may store data to be used during the execution of program instructions.</p>
<p id="p-0032" num="0031">I/O adapter <b>304</b> may be a network interface that may comprise any suitable technology for controlling communication signals between network devices using a desired set of communications protocols, services and operating procedures. In one embodiment of the invention, I/O adapter <b>304</b> operates in accordance with the TCP/IP Specification. In another embodiment of the invention, I/O adapter <b>304</b> operates in accordance with the Point-To-Point Protocol (PPP) as defined by the IETF Standard 51, RFC 1661, adopted in July 1994, and available from “www.ietf.org.” In yet another embodiment of the invention, I/O adapter <b>304</b> may operate in accordance with various frame relay standards, such as the “Voice Over Frame Relay Implementation Agreement” as defined by the Frame Relay Forum (FRF) Standard 11, adopted in May 1997, Annex J Added March 1999, available from “www.fiforum.com” (“FRF.11 Specification”). In another embodiment of the invention, I/O adapter <b>304</b> may operate in accordance with various VOIP standards, such as the “Packet Based Multimedia Communications Systems” as defined by the International Telecommunications Union Telecommunications (ITU-T) Recommendation H.323, adopted in February 1998, available from “www.itu.int” (“H.323 Specification”). In yet another embodiment of the invention, I/O adapter <b>304</b> may operate in accordance with “Real Time Protocol (RTP): A Transport Protocol For Real Time Applications” as defined by the IETF Proposed Standard, RFC 1889, published in January 1996, and available from “www.ietf.org” (“RTP Specification”). In another embodiment of the invention, I/O adapter <b>304</b> may operate in accordance with “SIP: Session Initiation Protocol” as defined by the IETF Proposed Standard, RFC 2543, published in March 1999, and available from “www.ietf.org” (“SIP Specification). These are just examples and many other protocols may be employed in alternating embodiments.</p>
<p id="p-0033" num="0032">I/O adapter <b>304</b> also includes connectors for connecting I/O adapter <b>304</b> with a suitable communications medium. Those skilled in the art will understand that I/O adapter <b>304</b> may receive information signals over any suitable communication medium such as twisted-pair wire, co-axial cable, fiber optics, radio frequencies, and so forth.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram of a program partition in accordance with one embodiment of the invention. <figref idref="DRAWINGS">FIG. 4</figref> illustrates a program partition that may be representative of program partition <b>312</b>, with the program partition having a packet fragmentation manager (PFM) <b>400</b>. In this embodiment, PFM <b>400</b> may contain program instructions to manage packet fragmentation for a NAT device, such as router <b>110</b>. More particularly, PFM <b>400</b> may utilize four sets of program instructions referred to herein as a collection module <b>402</b>, verification module <b>404</b>, translation module <b>406</b> and communication module <b>408</b>, respectively. Of course, the scope of the invention is not limited to these particular sets of instructions.</p>
<p id="p-0035" num="0034">The operations of systems <b>100</b>, <b>200</b> and <b>300</b>, and modules <b>400</b>, <b>402</b>, <b>404</b>, <b>406</b> and <b>408</b>, may be further described with reference to <figref idref="DRAWINGS">FIGS. 5-7</figref> and accompanying examples. Although <figref idref="DRAWINGS">FIGS. 5-7</figref> as presented herein may include a particular processing logic, it can be appreciated that the processing logic merely provides an example of how the general functionality described herein can be implemented. Further, each operation within a given processing logic does not necessarily have to be executed in the order presented unless otherwise indicated.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 5</figref> is a first block flow diagram of the processing logic performed by a packet fragmentation manager (PFM) in accordance with one embodiment of the invention. Processing logic <b>500</b> may illustrate a method to manage packet fragmentation for address translation. A plurality of packet fragments for a packet having a first address may be received at block <b>502</b>. The first address may be translated into a second address without reassembling the packet fragments into the packet at block <b>504</b>. The packet fragments may be sent using the second address at block <b>506</b>.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 6</figref> is a second block flow diagram of the processing logic performed by a packet fragmentation manager (PFM) in accordance with one embodiment of the invention. Processing logic <b>600</b> may illustrate a method to manage packet fragmentation for address translation, and more particularly, a method to translate the first address into a second address. A packet fragment having a packet header may be identified at block <b>602</b>. The packet header may have, for example, a packet identifier, translation information and a packet length. A determination is made as to whether all packet fragments for the packet have been received at block <b>604</b>. Translation information may be retrieved from the packet header at block <b>606</b>. The first address may be translated into the second address using the translation information at block <b>608</b>.</p>
<p id="p-0038" num="0037">The translation information may be any information that is desired to translate one address to another address. For example, many NAT devices may utilize a port number to perform address translation.</p>
<p id="p-0039" num="0038">In one embodiment of the invention, each packet fragment may include a packet fragment header. The packet fragment header may include, for example, a packet identifier, a more bit and an offset value. A determination may be made as to whether all packet fragments for the packet have been received using the “more bit” of the packet fragment header. More particularly, the packet fragment header for each packet fragment may be evaluated to determine the status of the “more bit.” The “more bit” as referred to herein may refer to a flags field that is included as part of a packet fragment header. The more bit may indicate whether more packet fragments are to follow. If the more bit for a packet fragment is set to the predetermined position (e.g., “1” or “0”) that indicates that more packet fragments are to follow, then the packet fragment may be stored with other packet fragments having the same packet identifier. Typically, the more bit is set for all packet fragments except for the last packet fragment. The term “packet identifier” as used herein may refer to an identifier for a packet from which the packet fragment was generated. A determination may be made as to whether all packet fragments for the packet have been received using the offset value for each stored packet fragment. The term “offset value” as referred to herein may include a value that indicates the position in which the data from the packet fragment fits into the original (i.e., unfragmented) packet. For example, in one embodiment of the invention the offset value may specify the original packet position in bytes divided by eight.</p>
<p id="p-0040" num="0039">In one embodiment of the invention, a determination may be made as to whether all packet fragments for the packet have been received using only the offset values of the packet fragment header. The first packet fragment from a packet typically has an offset value of zero (0) since it represents the first position in the original packet. Therefore, each packet fragment may be evaluated to determine the offset value for the packet fragment. Those packet fragments having the same packet identifier and having an offset value other than zero (0) may be stored by the NAT device. A determination may be made as to whether all packet fragments for the packet have been received using the offset values of the stored packet fragments.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 7</figref> is a third block flow diagram of the processing logic performed by a packet fragmentation manager (PFM) in accordance with one embodiment of the invention. Processing logic <b>700</b> may illustrate a method to determine whether all packet fragments for the packet have been received using the offset values of the stored packet fragments. Offset values for the stored packet fragments may be collected at block <b>702</b>. A packet length for the packet from which the packet fragments originated may be retrieved at block <b>704</b>. A determination as to whether all positions for said packet are filled by the collected offset values may be made using the packet length.</p>
<p id="p-0042" num="0041">More particularly, the offset values may be evaluated to determine whether there are any gaps or missing positions between the starting position and the ending position. The starting position may be indicated by an offset value of zero (0), while the ending position may be indicated by the packet length. For example, if the packet length was 1500 bytes, then the final packet fragment should have the appropriate value indicating the last byte (i.e., eight bits) position of the original 1500 bytes. The collected offset values may be evaluated to determine whether all the positions for the original packet are represented by the offset values of the stored packet fragments.</p>
<p id="p-0043" num="0042">Terminating conditions may be set to prevent the additional storage or collection of packet fragments due to resource limitations. For example, an upper limit may be set as to the number of packet fragments that may be collected according to memory or processing limitations. There may also be a timer to release or “free” fragments that have existed for a certain period of time without collection of all its peers. In one embodiment of the invention, the occurrence of a terminating condition may be detected prior to receiving all of the packet fragments for a packet. Certain actions may be configured to occur in accordance with certain terminating conditions, such as releasing the packet fragments if all packet fragments are not collected within a predefined time period.</p>
<p id="p-0044" num="0043">The operations of systems <b>100</b>, <b>200</b> and <b>300</b>, and modules <b>400</b>, <b>402</b>, <b>404</b>, <b>406</b> and <b>408</b>, may be further described using the following example. Assume source node <b>102</b> is sending a packet to a destination node that is part of LAN <b>112</b>, such as node <b>114</b>, via intermediate node <b>202</b>. Intermediate node <b>202</b> receives the packet and implements packet fragmentation to reduce latency times through network <b>106</b>.</p>
<p id="p-0045" num="0044">Packet fragmentation is performed in accordance with the IP Specification. The packet is broken up into packet fragments, with the first packet fragment having packet header with a port number representing the destination address for the packet. The remaining packet fragments include a packet fragment header that includes a packet identifier of 22, a more bit with 1 indicating more bits to follow, and offset values representing the position of the data carried by the packet fragment in the original packet.</p>
<p id="p-0046" num="0045">The packet fragments are sent to LAN <b>112</b> via router <b>110</b>. Router <b>110</b> performs NAT in accordance with the NAT Specification. Router <b>110</b> includes a packet fragmentation manager (PFM) such as PFM <b>400</b>. Collection module <b>402</b> of PFM <b>400</b> receives the packet fragments from intermediate node <b>202</b>. Collection module <b>402</b> may perform some administrative functions on the packet fragment, such as retrieving the packet length from the first packet fragment of a series of packet fragments, and retrieving the packet identifier, more bit and offset value for each packet fragment. Collection module <b>402</b> may also manage a plurality of queues, with each queue representing the packet fragments for a particular packet as identified by the packet identifier. The queue may be managed by, for example, partitioning memory in a predetermined manner, with each section representing packet fragments for a packet. The queue may also be manager by, for example, maintaining a linked list of packet fragments in system memory or shared memory. Any conventional technique for maintaining logical or physical queues of packet fragments for a packet may be used and still fall within the scope of the invention. A portion of this information may be passed to verification module <b>404</b>.</p>
<p id="p-0047" num="0046">Verification module <b>404</b> may use the offset values and the packet length received from collection module <b>402</b> to verify whether all the packet fragments for a particular packet have been received. Each offset value may represent a position from the starting position to the ending position of the original packet. The ending position may be represented by, for example, the packet length. Verification module <b>404</b> may, for example, maintain a verification table indexed by position segments, and fill in the table as the packet fragments are collected by collection module <b>402</b>. For example, the position segments may be represented in bytes divided by eight (8). Once all the table entries are filled, verification module <b>404</b> may send a message to translation module <b>406</b> to begin the NAT process. A timer may be used to determine whether empty table entries exist prior to timer expiration. If such a condition occurs, verification module <b>404</b> may send a message to communication module <b>408</b> to release all queued packet fragments for use by system or network. For example, the queued packet fragments may be processed using the normal assembly/disassembly packet fragmentation process as defined by the IP Specification.</p>
<p id="p-0048" num="0047">Translation module <b>406</b> may receive the verification message from verification module <b>404</b> and begin the NAT process. The NAT process may be implemented as part of translation module <b>406</b>, or may be invoked by translation module <b>406</b> from another part of router <b>110</b>. Translation module <b>406</b> may use translation information from the packet header to translate the original external destination address into a new internal destination address for use with LAN <b>112</b>, for example. The translation information may comprise, for example, a port number that is part of the packet header sent with the first packet fragment in a series of packet fragments. The new internal destination address may be the destination address for node <b>114</b> of LAN <b>112</b>. Translation module <b>406</b> may pass the new internal destination address to communication module <b>408</b>, as well as a message to collection module <b>402</b> to send the start address for the queue of packet fragments to communication module <b>408</b>.</p>
<p id="p-0049" num="0048">Communication module <b>408</b> may use the new internal destination address and the queue start address to begin sending the packet fragments to node <b>114</b>. Conventional NAT devices would first assemble the packet fragments into the original packet, perform NAT, and then disassemble the original packet with the new address into packet fragments for communication to node <b>114</b>. By way of contrast, communication module <b>408</b> may simply modify each packet fragment header with the new destination address and begin sending the queued packet fragments to node <b>114</b>.</p>
<p id="p-0050" num="0049">While certain features of the embodiments of the invention have been illustrated as described herein, many modifications, substitutions, changes and equivalents will now occur to those skilled in the art. It is, therefore, to be understood that the appended claims are intended to cover all such modifications and changes as fall within the true spirit of the embodiments of the invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method to manage packet fragmentation for address translation, comprising:
<claim-text>receiving a plurality of packet fragments for a packet having a first address, wherein each packet fragment includes a packet fragment header having a packet offset value and a more bit, said offset value representing a position from a starting position to an ending position of said packet, said more bit set to a predetermined position indicating that more packet fragments are to follow;</claim-text>
<claim-text>translating said first address into a second address without reassembling said packet fragments into said packet;</claim-text>
<claim-text>determining whether all packet fragments for said packet have been received by determining a status of said more bit for each packet fragment, collecting offset values in a verification table, indexing collected offset values by position in said verification table, and evaluating said collected offset values to identify any missing positions between said starting position and said ending position; and</claim-text>
<claim-text>sending said packet fragments using said second address.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said translating comprises:
<claim-text>identifying said packet fragment having a packet header, with said packet header having a packet identifier, translation information and a packet length;</claim-text>
<claim-text>retrieving translation information from said packet header; and</claim-text>
<claim-text>translating said first address into said second address using said translation information.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein said translation information comprises a port number.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein each of said packet fragment includes said packet fragment header having said packet identifier, and said determining comprises:
<claim-text>storing each packet fragment having said packet identifier and said more bits set to predetermined values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein each offset value represents a position for said packet fragment in said packet, and said determining whether all packet fragments for said packet have been received using said offset values comprises:
<claim-text>retrieving said packet length; and</claim-text>
<claim-text>determining whether all positions for said packet are filled by said collected offset values using said packet length.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein each packet fragment includes a packet fragment header having said packet identifier and said determining comprises:
<claim-text>storing each packet fragment having said packet identifier and said offset value is a value other than zero; and</claim-text>
<claim-text>determining whether all packet fragments for said packet have been received using said offset values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein each offset value represents a position for said packet fragment in said packet, and said determining whether all packet fragments for said packet have been received using said offset values comprises:
<claim-text>retrieving said packet length; and</claim-text>
<claim-text>determining whether all positions are filled by said collected offset values using said packet length.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein each offset value represents a position in bytes divided by eight for said packet fragment in said packet.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein each offset value represents a position in bytes divided by eight for said packet fragment in said packet.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising: detecting an occurrence of a terminating condition prior to receiving all of said packet fragments for said packet; and releasing said packet fragments in accordance with said detection.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A packet fragmentation manager to manage packet fragmentation for address translation, comprising:
<claim-text>a collection module to collect and store a plurality of packet fragments for a packet having a first address, wherein each packet fragment includes a packet fragment header having a packet offset value and a more bit, said offset value representing a position from a starting position to an ending position of said packet, said more bit set to a predetermined position indicating that more packet fragments are to follow;</claim-text>
<claim-text>a verification module to verify all packet fragments for said packet have been received; and</claim-text>
<claim-text>a translation module to retrieve translation information from one of said packet fragments and to translate said first address into a second address using said translation information, without reassembling said packet fragments into said packet,</claim-text>
<claim-text>wherein said verification module is to determine whether all packet fragments for said packet have been received by determining a status of said more bit for each packet fragment, collecting offset values in a verification table, indexing collected offset values by position in said verification table, and evaluating said collected offset values to identify any missing positions between said staffing position and said ending position.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The packet fragmentation manager of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising a communication module to send said packet fragments to said second address.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A system to manage packet fragmentation for an address translation device, comprising:
<claim-text>a source node to send packet fragments for a packet having a first address, wherein each packet fragment includes a packet fragment header having a packet offset value and a more bit, said more bit set to a predetermined position indicating that more packet fragments are to follow; and</claim-text>
<claim-text>an intermediate node to receive said packet fragments and to translate said first address to a second address without reassembling said packet fragments into said packet;</claim-text>
<claim-text>wherein said intermediate node is further adapted to index offset values from each packet fragment in a verification table to determine whether all packet fragments for said packet have been received, each of said offset values representing a position from a starting position to an ending position of said packet, said intermediate node to determine a status of said more bit for each packet fragment, collect offset values in said verification table, index collected offset values by position in said verification table, and evaluate said collected offset values to identify any missing positions between said starting position and said ending position.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The system of <claim-ref idref="CLM-00013">claim 13</claim-ref>, further comprising a destination node having said second address to receive said packet fragments and reassemble said packet fragments into said packet.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A system to manage packet fragmentation for an address translation device, comprising:
<claim-text>a computer platform adapted to manage packet fragmentation;</claim-text>
<claim-text>said platform being further adapted to receive a plurality of packet fragments for a packet having a first address, translate the first address into a second address without reassembling said packet fragments into said packet, and send said packet fragments using said second address, wherein each packet fragment includes a packet fragment header having a packet offset value and a more bit, said more bit set to a predetermined position indicating that more packet fragments are to follow;</claim-text>
<claim-text>wherein said platform is further adapted to index offset values from each packet fragment in a verification table to determine whether all packet fragments for said packet have been received, each of said offset values representing a position from a starting position to an ending position of said packet, said intermediate node to determine a status of said more bit for each packet fragment, collect offset values in said verification table, index collected offset values by position in said verification table, and evaluate said and said ending position.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein said platform is further adapted to perform said translation by identifying a packet fragment having a packet header, with said packet header having a packet identifier, translation information and a packet length, determining whether all packet fragments for said packet have been received, retrieving translation information from said packet header, and translating said first address into said second address using said translation information.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein said platform is further adapted to retrieve a packet length for said packet, and determine whether all positions for said packet are filled by said collected offset values using said packet length.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. An article comprising:
<claim-text>a computer readable medium;</claim-text>
<claim-text>said computer readable medium including stored computer program instructions that executed by a computer result in receiving a plurality of packet fragments for a packet having a first address, translating said first address into a second address without reassembling said packet fragments into said packet, and sending said packet fragments using said second address, wherein each packet fragment includes a packet fragment header having a packet offset value and a more bit, said more bit set to a predetermined position indicating that more packet fragments are to follow;</claim-text>
<claim-text>wherein the stored computer program instructions executed by a computer further result in indexing offset values from each packet fragment in a verification table to determine whether all packet fragments for said packet have been received, each of said offset values representing a position from a starting position to an ending position of said packet, said intermediate node to determine a status of said more bit for each packet fragment, collect offset values in said verification table, index collected offset values by position in said verification table, and evaluate said collected offset values to identify any missing positions between said starting position and said ending position.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The article of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the stored computer program instructions executed by a computer further result in said translating by identifying a packet fragment having a packet header, with said packet header having a packet identifier, translation information and a packet length, determining whether all packet fragments for said packet have been received, retrieving translation information from said packet header, and translating said first address into said second address using said translation information.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The article of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the stored computer program instructions executed by a computer further result in retrieving a packet length for said packet, and determining whether all positions for said packet are filled by said collected offset values using said packet length.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The article of <claim-ref idref="CLM-00018">claim 18</claim-ref>, wherein the stored computer program instructions executed by a computer further result in detecting an occurrence of a terminating condition prior to receiving all of said packet fragments for said packet, and releasing said packet fragments in accordance with said detection.</claim-text>
</claim>
</claims>
</us-patent-grant>
