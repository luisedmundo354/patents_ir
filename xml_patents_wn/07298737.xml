<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298737-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298737</doc-number>
<kind>B1</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>09686539</doc-number>
<date>20001011</date>
</document-id>
</application-reference>
<us-application-series-code>09</us-application-series-code>
<us-term-of-grant>
<us-term-extension>736</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>50</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370358</main-classification>
<further-classification>370465</further-classification>
</classification-national>
<invention-title id="d0e53">Parity exchange</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4908823</doc-number>
<kind>A</kind>
<name>Haagens et al.</name>
<date>19900300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370464</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5784369</doc-number>
<kind>A</kind>
<name>Romiti et al.</name>
<date>19980700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370358</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5878039</doc-number>
<kind>A</kind>
<name>Gorshe et al.</name>
<date>19990300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370376</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6160806</doc-number>
<kind>A</kind>
<name>Cantwell et al.</name>
<date>20001200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370360</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6359893</doc-number>
<kind>B1</kind>
<name>Mills</name>
<date>20020300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370402</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6560229</doc-number>
<kind>B1</kind>
<name>Kadambi et al.</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370392</main-classification></classification-national>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6707789</doc-number>
<kind>B1</kind>
<name>Arslan et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370218</main-classification></classification-national>
</citation>
</references-cited>
<number-of-claims>13</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>370358</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370359</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370360</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370362</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370365</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370465</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>3</number-of-drawing-sheets>
<number-of-figures>3</number-of-figures>
</figures>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Schulz</last-name>
<first-name>Jeff</first-name>
<address>
<city>Valencia</city>
<state>PA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Schwartz</last-name>
<first-name>Ansel M.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Ericsson A.B.</orgname>
<role>03</role>
<address>
<city>Stockholm</city>
<country>SE</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Nguyen</last-name>
<first-name>Chau</first-name>
<department>2616</department>
</primary-examiner>
<assistant-examiner>
<last-name>Ng</last-name>
<first-name>Christine</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A switch of a network for switching data. The switch includes a fabric for switching the data. The switch includes a parity fabric. The switch includes a connection mechanism connected to the fabric for providing data to and from the fabric and connected to the parity fabric for providing parity data to and from the parity fabric. The switch includes a first port card which receives data at a first rate from the network or sends data at the first rate to the network, performs first parity calculations on the data received at the first port card, produces first parity data from the first parity calculations or sends data at the first rate to the network. The switch includes a second port card which receives data at a second rate from the network or sends data at the second rate to the network, performs second parity calculations on the data received at the second port card, produces second parity data from the second parity calculations or sends data at the second rate to the network.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="143.59mm" wi="153.75mm" file="US07298737-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="168.91mm" wi="167.39mm" file="US07298737-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="156.13mm" wi="163.49mm" file="US07298737-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="230.89mm" wi="176.61mm" file="US07298737-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">U.S. patent application Ser. Nos. 09/609,307 titled “Backplane Synchronization in a Distributed System with Clock Drift and Transport Delay”; Ser. No. 09/609,497 titled “Queue Resynch: Synchronous Real-Time Upgrade of a Distributed Switching System”; 09/627,924 titled “Synchronous Dynamic Register Updating Across a Distributed System”; Ser. No. 09/293,563 titled “Very Wide Memory TDM Switching System”; Ser. No. 09/333,450 titled “Data Striping Based Switching System”; and contemporaneously filed U.S. patent application Ser. No. 09/686,768 titled “Dual Optimality for Different Data Rate Backplane Transfers” all of which are incorporated by reference herein.</p>
<heading id="h-0002" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">The present invention is related to the transfer of parity regarding data connections at various rates across a same backplane of a switch to a parity fabric. More specifically, the present invention is related to the transfer of parity data regarding connections at various rates across the same backplane of the switch by transferring the parity data associated with higher data rate connections into data pipes having the same rate as the data pipes formed from parity data associated with the lower rate connections.</p>
<heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0004" num="0003">The BFS chipset of Fore Systems stripes data across multiple fabrics. The striping function is identical for both OC48 and OC192 ports. The parity generation function (calculation of the data bits for the spare fabric) requires data from multiple stripers. The derivation of the parity functions has been defined to optimize the chip to chip communication required for both encoding and decoding of the parity information on the BFS port cards and to allow for traffic to be sent between OC48 and OC192 ports.</p>
<p id="p-0005" num="0004">The present invention allows a design to support both OC48 and OC192 link speed with minimal overhead in the function which calculates parity and does not require knowledge of all bits for OC192 operation. This allows the striping function to be implemented in a smaller, cheaper package. Additionally, it allows chip placement to be varied in optimizing the board level wiring between the striper function and the backplane, which is necessary to make the system implementable.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0006" num="0005">The present invention pertains to a switch of a network for switching data. The switch comprises a fabric for switching the data. The switch comprises a parity fabric. The switch comprises a connection mechanism connected to the fabric for providing data to and from the fabric and connected to the parity fabric for providing parity data to and from the parity fabric. The switch comprises a first port card which receives data at a first rate from the network or sends data at the first rate to the network, performs first parity calculations on the data received at the first port card, produces first parity data from the first parity calculations or sends data at the first rate to the network. The first port card is connected to the connection mechanism to send data to or receive the data from the fabric at a connection rate and to send the first parity data to or receive the data from the parity fabric at the connection rate. The switch comprises a second port card which receives data at a second rate from the network or sends data at the second rate to the network performs second parity calculations on the data received at the second port card, produces second parity data from the second parity calculations or sends data at the second rate to the network. The second port card is connected to the connection mechanism to send data to or receive the data from the fabric at the connection rate and to send the second parity data to or receive the data from the parity fabric at the connection rate. The second port card separating the data received at the second rate into streams of data that together equal the data received at the second port card that are sent concurrently at the connection rate to the fabric and combine the data streams received at the connection rate into data that is sent at the second rate to the network.</p>
<p id="p-0007" num="0006">The present invention pertains to a method for switching data in a network. The method comprises the steps of receiving data at a first rate from the network at a first port card of a switch. Then there is the step of receiving data at a second rate from the network at a second port card of the switch. Next there is the step of performing parity calculations on the data at the first rate by the first port card to produce first parity data and on the data at the second rate by the second port card to produce second parity data. Then there is the step of sending the first parity data from the first port card to a parity fabric of the switch through a connection mechanism of the switch at a connection rate. Next there is the step of separating the data received at the second rate at the second port card into streams of data that together equal the data received at the second port card. Then there is the step of sending the second parity data from the second port card to the parity fabric of the switch through the connection mechanism of the switch at a connection rate. Next there is the step of sending concurrently at the connection rate to the fabric from the second port card the streams of data along the connection mechanism.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0008" num="0007">In the accompanying drawings, the preferred embodiment of the invention and preferred methods of practicing the invention are illustrated in which:</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 1</figref> is a schematic representation of the switch of the present invention.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 2</figref> is a schematic representation of the striper of the present invention.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 3</figref> is a schematic representation of the unstriper of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0012" num="0011">Referring now to the drawings wherein like reference numerals refer to similar or identical parts throughout the several views, and more specifically to <figref idref="DRAWINGS">FIG. 1</figref> thereof, there is shown a switch <b>10</b> of a network <b>12</b> for switching data. The switch <b>10</b> comprises a fabric <b>14</b> for switching the data. The switch <b>10</b> comprises a parity fabric <b>15</b>. The switch <b>10</b> comprises a connection mechanism <b>16</b> connected to the fabric <b>14</b> for providing data to and from the fabric <b>14</b> and connected to the parity fabric <b>15</b> for providing parity data to and from the parity fabric <b>15</b>. The switch <b>10</b> comprises a first port card <b>18</b> which receives data at a first rate from the network <b>12</b> or sends data at the first rate to the network <b>12</b>, performs first parity calculations on the data received at the first port card <b>18</b>, produces first parity data from the first parity calculations or sends data at the first rate to the network <b>12</b>. The first port card <b>18</b> is connected to the connection mechanism <b>16</b> to send data to or receive the data from the fabric <b>14</b> at a connection rate and to send the first parity data to or receive the data from the parity fabric <b>15</b> at the connection rate. The switch <b>10</b> comprises a second port card <b>20</b> which receives data at a second rate from the network <b>12</b> or sends data at the second rate to the network <b>12</b> performs second parity calculations on the data received at the second port card <b>20</b>, produces second parity data from the second parity calculations or sends data at the second rate to the network <b>12</b>. The second port card <b>20</b> is connected to the connection mechanism <b>16</b> to send data to or receive the data from the fabric <b>14</b> at the connection rate and to send the second parity data to or receive the data from the parity fabric <b>15</b> at the connection rate. The second port card <b>20</b> separating the data received at the second rate into streams of data that together equal the data received at the second port card <b>20</b> that are sent concurrently at the connection rate to the fabric <b>14</b> and combine the data streams received at the connection rate into data that is sent at the second rate to the network <b>12</b>.</p>
<p id="p-0013" num="0012">Preferably, the connection rate equals the first rate and the second rate is equal to N times the first rate, where N is an integer greater than or equal to 2, and there are N streams. The connection mechanism <b>16</b> preferably includes a backplane bus <b>22</b> that connects the first port card <b>18</b> and the second port card <b>20</b> to the fabric <b>14</b>. Preferably, the first port card <b>18</b> has a first striper <b>24</b> which takes the first parity data it receives and sends it on the backplane bus <b>22</b> as an OC48 data pipe to the parity fabric <b>15</b>, and the second port card <b>20</b> has a second striper <b>26</b> which takes the second parity data it receives and sends it as an OC48 data pipe to the parity fabric <b>15</b>.</p>
<p id="p-0014" num="0013">The first port card <b>18</b> preferably has a first unstriper <b>28</b> which receives the first parity data from a separator <b>34</b> of the parity fabric <b>15</b> on an OC48 data pipe and the second port card <b>20</b> has a second unstriper <b>30</b> which receives the second parity data from the parity fabric <b>15</b> on an OC48 data pipe. Preferably, the first and second striper <b>26</b> stripe the first and second parity data respectively, they receive on a 48 bit basis to the parity fabric <b>15</b>. The first and second striper <b>26</b><i>s </i>preferably stripe the first and second parity data, respectively, so the first and second parity data does not exceed a 12 bit boundary. Preferably, the parity fabric <b>15</b> has an aggregator 32 which receives the first and second parity data from the first and second striper <b>26</b><i>s</i>, respectively, and a separator <b>34</b> which sends parity data from the parity fabric <b>15</b> to the first unstriper <b>28</b> and the second unstriper <b>30</b>.</p>
<p id="p-0015" num="0014">The present invention pertains to a method for switching data in a network <b>12</b>. The method comprises the steps of receiving data at a first rate from the network <b>12</b> at a first port card <b>18</b> of a switch <b>10</b>. Then there is the step of receiving data at a second rate from the network <b>12</b> at a second port card <b>20</b> of the switch <b>10</b>. Next there is the step of performing parity calculations on the data at the first rate by the first port card <b>18</b> to produce first parity data and on the data at the second rate by the second port card <b>20</b> to produce second parity data. Then there is the step of sending the first parity data from the first port card <b>18</b> to a parity fabric <b>15</b> of the switch <b>10</b> through a connection mechanism <b>16</b> of the switch <b>10</b> at a connection rate. Next there is the step of separating the data received at the second rate at the second port card <b>20</b> into streams of data that together equal the data received at the second port card <b>20</b>. Then there is the step of sending the second parity data from the second port card <b>20</b> to the parity fabric <b>15</b> of the switch <b>10</b> through the connection mechanism <b>16</b> of the switch <b>10</b> at a connection rate. Next there is the step of sending concurrently at the connection rate to the fabric <b>14</b> from the second port card <b>20</b> the streams of data along the connection mechanism <b>16</b>.</p>
<p id="p-0016" num="0015">Preferably, the connection rate equals the first rate and the second rate is equal to N times the first rate, where N is an integer greater than or equal to 2, and there are N streams. The connection mechanism <b>16</b> preferably includes a backplane bus <b>22</b> that connects the first port card <b>18</b> and the second port card <b>20</b> to the fabric <b>14</b>.</p>
<p id="p-0017" num="0016">Preferably, the first port card <b>18</b> has a first striper <b>24</b> and the second port card <b>20</b> has a second striper <b>26</b>, and wherein the sending data from the first port card <b>18</b> step includes the step of sending the first parity data on the backplane bus <b>22</b> with the first striper <b>24</b> as an OC48 data pipe to the parity fabric <b>15</b> and the sending data from the second port card <b>20</b> step includes the step of sending the second parity data on the backplane bus <b>22</b> with the second striper <b>26</b> as an OC48 data pipe to the parity fabric <b>15</b>. The first port card <b>18</b> preferably has a first unstriper <b>28</b> and the second port card <b>20</b> has a second unstriper <b>30</b>, and including after the sending the second parity data by the second striper <b>26</b> step, there are the steps of receiving the first parity data from the parity fabric <b>15</b> on an OC48 data pipe at the first port card <b>18</b>, and receiving the second parity data from the parity fabric <b>15</b> on an OC48 data pipe at the second port card <b>20</b>.</p>
<p id="p-0018" num="0017">Preferably, the first port card <b>18</b> sending step includes the step of striping the first parity data with the first striper <b>24</b> on a 48 bit basis to the parity fabric <b>15</b>, and the second port card <b>20</b> sending step includes the step of striping parity data with the second striper <b>26</b> on a 48 bit basis to the parity fabric <b>15</b> through the bus <b>22</b>. The first striper <b>24</b> preferably sending step includes the step of striping the first parity data to the parity fabric <b>15</b> through the bus <b>22</b> so the first parity data does not exceed a 12 bit boundary, and the second striper <b>26</b> sending step includes the step of striping the second parity data to the parity fabric <b>15</b> through the bus <b>22</b> so the second parity data does not exceed a 12 bit boundary.</p>
<p id="p-0019" num="0018">In the operation of the preferred embodiment, for striping in the switch <b>10</b>, striping is defined across a 48 bit window. The 48 bit window is broken into 4 12 bit pieces for OC48 operation. The calculation of parity bits must be maintained within the 12 bit windows to allow for proper operation at OC48 speeds. The parity functions must operate as much as possible within a mod 4=constant bit stream for OC192 operation when each striper gets only every fourth bit.</p>
<p id="p-0020" num="0019">Parity bits were calculated in the following fashion.
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0020">A. First parity bits within a 12 bit frame mod 4=constant were used. Depending on how the data was striped, the distribution of the bits varies across fabrics and the number of parity bits generated varies. For some striping configurations, this was able to cover the assignment of all parity bits (3 fabric and 1 fabric striping require no mod 4 to mod 4 communication).</li>
        <li id="ul0002-0002" num="0021">B. Remaining bits were then assigned with a preference of grouping 12 bit frame mod 4=0 and 1 together and grouping <b>2</b> and <b>3</b> together.</li>
        <li id="ul0002-0003" num="0022">C. Communication between chips not connected by B (mod 4=0 and mod 4=2, 0 and 3, 1 and 2, 1 and 3)</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0021" num="0023">For both B and C, if multiple bits needed to be communicated the XOR of the bits is actually communicated rather than the raw bits to reduce the number of I/O required.</p>
<p id="p-0022" num="0024">This results in a chip/chip communication which only uses 20 I/O on each striper to communicate parity information for OC192 support. The interconnection pattern is shown in the table below.</p>
<p id="h-0007" num="0000">These busses are interconnected in the following fashion.</p>
<p id="p-0023" num="0025">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="252pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry namest="offset" nameend="1" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Input Interface</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="13">
<colspec colname="1" colwidth="35pt" align="center"/>
<colspec colname="2" colwidth="21pt" align="center"/>
<colspec colname="3" colwidth="21pt" align="center"/>
<colspec colname="4" colwidth="21pt" align="center"/>
<colspec colname="5" colwidth="21pt" align="center"/>
<colspec colname="6" colwidth="21pt" align="center"/>
<colspec colname="7" colwidth="21pt" align="center"/>
<colspec colname="8" colwidth="21pt" align="center"/>
<colspec colname="9" colwidth="21pt" align="center"/>
<colspec colname="10" colwidth="21pt" align="center"/>
<colspec colname="11" colwidth="21pt" align="center"/>
<colspec colname="12" colwidth="21pt" align="center"/>
<colspec colname="13" colwidth="21pt" align="center"/>
<tbody valign="top">
<row>
<entry>Output</entry>
<entry>St 0</entry>
<entry>St 0</entry>
<entry>St 0</entry>
<entry>St 1</entry>
<entry>St 1</entry>
<entry>St 1</entry>
<entry>St 2</entry>
<entry>St 2</entry>
<entry>St 2</entry>
<entry>St 3</entry>
<entry>St 3</entry>
<entry>St 3</entry>
</row>
<row>
<entry>Interfaces</entry>
<entry>D4</entry>
<entry>E2</entry>
<entry>F2</entry>
<entry>D4</entry>
<entry>E2</entry>
<entry>F2</entry>
<entry>D4</entry>
<entry>E2</entry>
<entry>F2</entry>
<entry>D4</entry>
<entry>E2</entry>
<entry>F2</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
<row>
<entry>Striper 0</entry>
<entry/>
<entry/>
<entry/>
<entry>A4</entry>
<entry/>
<entry/>
<entry/>
<entry>B2</entry>
<entry/>
<entry/>
<entry/>
<entry>C2</entry>
</row>
<row>
<entry>output</entry>
</row>
<row>
<entry>Striper 1</entry>
<entry>A4</entry>
<entry/>
<entry/>
<entry/>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>B2</entry>
<entry/>
<entry>C2</entry>
</row>
<row>
<entry>output</entry>
</row>
<row>
<entry>Striper 2</entry>
<entry/>
<entry>C2</entry>
<entry/>
<entry/>
<entry/>
<entry>B2</entry>
<entry/>
<entry/>
<entry/>
<entry>A4</entry>
</row>
<row>
<entry>output</entry>
</row>
<row>
<entry>Striper 3</entry>
<entry/>
<entry/>
<entry>C2</entry>
<entry/>
<entry>B2</entry>
<entry/>
<entry>A4</entry>
</row>
<row>
<entry>outputs</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0024" num="0026">The structure of the striper is shown in <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0025" num="0027">The Input Pipeline is the interface to the Switch Input Bus (BIB). In OC192c mode the connection number is resolved so that each Striper has a copy of the connection number when it is not provided by the external connection number bus <b>22</b>.</p>
<p id="p-0026" num="0028">The Data FIFO is written at the BIB clock rate and read at the Striped Input Bus (SIB) clock rate. This FIFO is 1536×32-bits. The purpose of this FIFO is to hold the BIB data until it can be transmitted.</p>
<p id="p-0027" num="0029">The Connection Number FIFO is written at the BIB clock rate and read at the SIB clock rate. This FIFO is 128×26-bits. This FIFO contains the 26 bit connection number that was either provided through the BIB data bus or the External Connection Number bus.</p>
<p id="p-0028" num="0030">The EOP FIFO is a special FIFO of 128×11-bits. The purpose of this block is to store information about each received cell and packet that is then used to format the data for transmission. The EOP FIFO is also where large packets are split into fragments to allow the buffer to be emptied without having to wait for the entire packet to be received.</p>
<p id="p-0029" num="0031">The Transfer FSM is responsible for moving the data from the Data FIFO to the Output Pipeline. The Transfer FSM is the point where Internal Cell Buffer (ICB) transmission occurs. The Transfer FSM does the conversion of 4-byte data to two (2) 12-bit busses. Two busses are used to increase the bandwidth of the backplane from 125 MHz to 250 MHz. The Transfer FSM also converts packets that are shorter than the minimum transfer size into a Short Packet.</p>
<p id="p-0030" num="0032">The Checksum Generation block calculates the CRC-16 checksum for the entire cell or packet.</p>
<p id="p-0031" num="0033">The Checksum Insertion block inserts the checksum as the last two bytes of a cell or packet. If the packet was fragmented the checksum is only inserted at the end of the last fragment.</p>
<p id="p-0032" num="0034">The Parity Calculation block generates the per cycle parity. The parity calculation is based on the number of fabrics that are being used. In OC192c mode parity calculations may require the exchange of either data or parity bits in order to be successfully generated. This block will ensure the parity exchanged is relevant to the appropriate cycle of data.</p>
<p id="p-0033" num="0035">The Fabric Mapping (Striping) block maps the data onto each fabric in the switch <b>10</b>. Fabric mapping changes can only occur on cell/packet boundaries.</p>
<p id="p-0034" num="0036">The Transmitter Mapping block puts the striped data onto transmitters according to the number of fabrics configured.</p>
<p id="p-0035" num="0037">The Register Control block manages the registers and their side-effects within the Striper ASIC.</p>
<p id="p-0036" num="0038">The Address/Data Bus block implements the external interface to the AD bus <b>22</b>. This block is common to all ASICs in the Switch <b>10</b> and is provided.</p>
<p id="p-0037" num="0039">The Global Synchronization block calculates the number of clock cycles of lockdown necessary for the chip to compensate for clock drift. This block is common to all ASICs in the switch <b>10</b> and is provided.</p>
<p id="p-0038" num="0040">The following table gives the I/O definition for the chip. The DIR column indicates a port is either an input (I), output (O), bidirect (B—multi-source), or input/output (I/O—depends on striper Id in OC192c mode).</p>
<p id="p-0039" num="0041">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="1" colwidth="91pt" align="left"/>
<colspec colname="2" colwidth="14pt" align="center"/>
<colspec colname="3" colwidth="21pt" align="center"/>
<colspec colname="4" colwidth="91pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="4" align="center" rowsep="1"/>
</row>
<row>
<entry>Name</entry>
<entry>Dir</entry>
<entry>Pins</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="4" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="1" colwidth="91pt" align="left"/>
<colspec colname="2" colwidth="14pt" align="center"/>
<colspec colname="3" colwidth="21pt" align="char" char="."/>
<colspec colname="4" colwidth="91pt" align="left"/>
<tbody valign="top">
<row>
<entry>BIB_CLK</entry>
<entry>I</entry>
<entry>1</entry>
<entry>Input clock</entry>
</row>
<row>
<entry>BIB_Data</entry>
<entry>I</entry>
<entry>32</entry>
<entry>Output data to DIN bus</entry>
</row>
<row>
<entry>BIB_EOP</entry>
<entry>I</entry>
<entry>5</entry>
<entry>Tag bits for input words.</entry>
</row>
<row>
<entry>BIB_CELL_PKT</entry>
<entry>I</entry>
<entry>1</entry>
<entry>Indicates cell or packet</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>transfer.</entry>
</row>
<row>
<entry>BIB_SOC</entry>
<entry>I</entry>
<entry>2</entry>
<entry>EOP for DIN bus.</entry>
</row>
<row>
<entry>BIB_CONN</entry>
<entry>I/O</entry>
<entry>26</entry>
<entry>Either input connection num-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>ber for BIB or internal</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>connection number exchange</entry>
</row>
<row>
<entry>BIB_CONN_EN</entry>
<entry>I</entry>
<entry>1</entry>
<entry>Enable use of external</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>connection number bus</entry>
</row>
<row>
<entry>BIB_BP</entry>
<entry>O</entry>
<entry>1</entry>
<entry>BIB backpreassure signal</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>from striper</entry>
</row>
<row>
<entry>BIB_valid</entry>
<entry>I</entry>
<entry>1</entry>
<entry>Input indicating BIB data</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>is valid.</entry>
</row>
<row>
<entry>BP_XMIT0</entry>
<entry>O</entry>
<entry>10</entry>
<entry>Output data to Gigabit serial-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>izer Channel 0</entry>
</row>
<row>
<entry>BP_XMIT1</entry>
<entry>O</entry>
<entry>10</entry>
<entry>Output data to Gigabit serial-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>izer Channel 0</entry>
</row>
<row>
<entry>BP_XMIT2</entry>
<entry>O</entry>
<entry>10</entry>
<entry>Output data to Gigabit serial-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>izer Channel 0</entry>
</row>
<row>
<entry>BP_XMIT3</entry>
<entry>O</entry>
<entry>10</entry>
<entry>Output data to Gigabit serial-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>izer Channel 0</entry>
</row>
<row>
<entry>BP_XMIT4</entry>
<entry>O</entry>
<entry>10</entry>
<entry>Output data to Gigabit serial-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>izer Channel 0</entry>
</row>
<row>
<entry>BP_XMIT5</entry>
<entry>O</entry>
<entry>10</entry>
<entry>Output data to Gigabit serial-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>izer Channel 0</entry>
</row>
<row>
<entry>BP_XMIT6</entry>
<entry>O</entry>
<entry>10</entry>
<entry>Output data to Gigabit serial-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>izer Channel 0</entry>
</row>
<row>
<entry>BP_XMIT7</entry>
<entry>O</entry>
<entry>10</entry>
<entry>Output data to Gigabit serial-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>izer Channel 0</entry>
</row>
<row>
<entry>BP_XMIT8</entry>
<entry>O</entry>
<entry>10</entry>
<entry>Output data to Gigabit serial-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>izer Channel 0</entry>
</row>
<row>
<entry>BP_XMIT9</entry>
<entry>O</entry>
<entry>10</entry>
<entry>Output data to Gigabit serial-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>izer Channel 0</entry>
</row>
<row>
<entry>BP_XMIT10</entry>
<entry>O</entry>
<entry>10</entry>
<entry>Output data to Gigabit serial-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>izer Channel 0</entry>
</row>
<row>
<entry>BP_XMIT11</entry>
<entry>O</entry>
<entry>10</entry>
<entry>Output data to Gigabit serial-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>izer Channel 0</entry>
</row>
<row>
<entry>BP_XMIT12</entry>
<entry>O</entry>
<entry>10</entry>
<entry>Output data to Gigabit serial-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>izer Channel 0</entry>
</row>
<row>
<entry>BP_XMIT13</entry>
<entry>O</entry>
<entry>10</entry>
<entry>Output data to Gigabit serial-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>izer Channel 0</entry>
</row>
<row>
<entry>Board_active_I</entry>
<entry>I</entry>
<entry>1</entry>
<entry>Signal to enable/terminate</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>backplane transfers</entry>
</row>
<row>
<entry>AD_DATA</entry>
<entry>B</entry>
<entry>8</entry>
<entry>Separate AD bus data bus</entry>
</row>
<row>
<entry>AD_RDY_L</entry>
<entry>O</entry>
<entry>1</entry>
<entry>Indicates transaction complete</entry>
</row>
<row>
<entry>AD_SEL_L</entry>
<entry>I</entry>
<entry>1</entry>
<entry>AD bus chip select</entry>
</row>
<row>
<entry>AD_CLK</entry>
<entry>I</entry>
<entry>1</entry>
<entry>AD bus clock</entry>
</row>
<row>
<entry>AD_RW</entry>
<entry>I</entry>
<entry>1</entry>
<entry>AD bus read/write select.</entry>
</row>
<row>
<entry>CLOCK125</entry>
<entry>I</entry>
<entry>1</entry>
<entry>Clock used by internal opera-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>tions (125 MHz)</entry>
</row>
<row>
<entry>RESET_L</entry>
<entry>I</entry>
<entry>1</entry>
<entry>Resets the chip-asynch signal</entry>
</row>
<row>
<entry>PLL</entry>
<entry/>
<entry>5</entry>
<entry>I/O for internal PLL</entry>
</row>
<row>
<entry>Chip_mode</entry>
<entry>I</entry>
<entry>3</entry>
<entry>Mode (oc48/oc192) and</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>chipid for OC192</entry>
</row>
<row>
<entry>JTDO</entry>
<entry>O</entry>
<entry>1</entry>
<entry>JTAG test data out</entry>
</row>
<row>
<entry>JTDI</entry>
<entry>I</entry>
<entry>1</entry>
<entry>JTAD test data in</entry>
</row>
<row>
<entry>JTMS</entry>
<entry>I</entry>
<entry>1</entry>
<entry>JTAG test mode select</entry>
</row>
<row>
<entry>JTCLK</entry>
<entry>I</entry>
<entry>1</entry>
<entry>JTAG test clock</entry>
</row>
<row>
<entry>JTRST</entry>
<entry>I</entry>
<entry>1</entry>
<entry>JTAG test reset</entry>
</row>
<row>
<entry>Global_sync</entry>
<entry>I</entry>
<entry>1</entry>
</row>
<row>
<entry>MASTER_lockdown_valid</entry>
<entry>I/O</entry>
<entry>1</entry>
<entry>Indicates OC192c master</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>controlled lockdown</entry>
</row>
<row>
<entry>MASTER_synch_valid</entry>
<entry>I/O</entry>
<entry>1</entry>
<entry>Indicates OC192c master</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>controlled sync cycle</entry>
</row>
<row>
<entry>OC192 parity exchange in</entry>
<entry>I</entry>
<entry>14</entry>
<entry>Parity data received from</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>other Stripers</entry>
</row>
<row>
<entry>OC192 parity exchange out</entry>
<entry>O</entry>
<entry>14</entry>
<entry>Parity data sent to other</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>Stripers</entry>
</row>
<row>
<entry>OC192 SOP/#fab/end</entry>
<entry>I/O</entry>
<entry>5</entry>
<entry>controls sequencing of</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>OC192 ops</entry>
</row>
<row>
<entry>SYNC_CONTROL</entry>
<entry>I/O</entry>
<entry>2</entry>
<entry>Controls lockdown to the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>slave Stripers</entry>
</row>
<row>
<entry>ICB_CONTROL</entry>
<entry>I/O</entry>
<entry>2</entry>
<entry>Controls the ICB trap/transmit</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>of the slave Stripers</entry>
</row>
<row>
<entry>INT_L</entry>
<entry>O</entry>
<entry>1</entry>
<entry>Interrupt</entry>
</row>
<row>
<entry>UNS_BP</entry>
<entry>I</entry>
<entry>1</entry>
<entry>Unstriper backpressure</entry>
</row>
<row>
<entry>SCAN_EN_L</entry>
<entry>I</entry>
<entry>0</entry>
<entry>scan enable pin</entry>
</row>
<row>
<entry>Total</entry>
<entry/>
<entry>280</entry>
</row>
<row>
<entry namest="1" nameend="4" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Chip mode is a 3-bit bus. It has the following signals.
</p>
<p id="p-0040" num="0042">
<tables id="TABLE-US-00003" num="00003">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="42pt" align="center"/>
<colspec colname="2" colwidth="35pt" align="center"/>
<colspec colname="3" colwidth="140pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Chip mode</entry>
<entry/>
<entry/>
</row>
<row>
<entry>bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>2</entry>
<entry>Mode</entry>
<entry>Tie to a one for OC192, zero for an OC48.</entry>
</row>
<row>
<entry>1:0</entry>
<entry>Chip_id</entry>
<entry>For OC192, connect to the starting bit number.</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Note that chip_id = “00” is the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>master controller for OC192. For OC48,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>these pins should be tied high.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0041" num="0043">The board active signal is an active low LVTTL input signal which should be low during all board operations. If a board active signal is withdrawn, the striper should terminate the current backplane transfer legally by indicating an end of transfer, non-final segment and should stop transmitting data onto the backplane. The board active signal will be debounced before it gets to the striper.</p>
<p id="p-0042" num="0044">When the BIB_CONN_EN signal is asserted the BIB_CONN bus is used to provide the Striper with a Connection Number (the Double-Routeword Configuration). This means that the BIB_CONN is configured to be input only. If this BIB_CONN_EN signal is not asserted then the Stiper is in the Single-Routeword configuration and the BIB_CONN bus is useable for connection number exchange in OC192c mode.</p>
<p id="p-0043" num="0045">The striper runs with 3 main clock regions:</p>
<p id="p-0044" num="0046">1. 125 MHz board clock</p>
<p id="p-0045" num="0047">2. Up to 100 MHz Switch Input Bus (BIB) clock</p>
<p id="p-0046" num="0048">3. 33 MHz AD Bus clock</p>
<p id="p-0047" num="0049">The 125 MHz clock is used for most internal operations.</p>
<p id="p-0048" num="0050">The AD bus clocks and BIB clocks are both assumed to be asynchronous with respect to all other clocks.</p>
<p id="p-0049" num="0051">The following spreadsheet shows the internal RAM utilization for the part.</p>
<p id="p-0050" num="0052">
<tables id="TABLE-US-00004" num="00004">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="7">
<colspec colname="1" colwidth="49pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="35pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="21pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="7" align="center" rowsep="1"/>
</row>
<row>
<entry>Function</entry>
<entry>Words</entry>
<entry>Width</entry>
<entry># of bits</entry>
<entry>WR freq</entry>
<entry>RD freq</entry>
<entry>type</entry>
</row>
<row>
<entry namest="1" nameend="7" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="7">
<colspec colname="1" colwidth="49pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="char" char="."/>
<colspec colname="3" colwidth="28pt" align="char" char="."/>
<colspec colname="4" colwidth="28pt" align="char" char="."/>
<colspec colname="5" colwidth="35pt" align="char" char="."/>
<colspec colname="6" colwidth="28pt" align="char" char="."/>
<colspec colname="7" colwidth="21pt" align="center"/>
<tbody valign="top">
<row>
<entry>Data FIFO</entry>
<entry>1536</entry>
<entry>32</entry>
<entry>49152</entry>
<entry>100</entry>
<entry>125</entry>
<entry>2 port</entry>
</row>
<row>
<entry>EOC/P/frag</entry>
<entry>128</entry>
<entry>10</entry>
<entry>1280</entry>
<entry>100</entry>
<entry>125</entry>
<entry>2 port</entry>
</row>
<row>
<entry>FIFO</entry>
</row>
<row>
<entry>Connection</entry>
<entry>128</entry>
<entry>26</entry>
<entry>3328</entry>
<entry>100</entry>
<entry>125</entry>
<entry>2 port</entry>
</row>
<row>
<entry>number FIFO</entry>
</row>
<row>
<entry namest="1" nameend="7" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0051" num="0053">The 1536×32 Data FIFO stores the raw data received on the data portion of the BIB. No alignment is done on the writing of data into the FIFO. The 1536-word depth is sized to allow for 119 fragments. This FIFO depth also constrains the maximum number of packets less than 52 bytes that can be received before backpressure is asserted. Note the FIFO is large enough to allow for approximately 64K worth of back-to-back data before the FIFO fills when the FIFO has 4K free bytes at the start of a transfer.</p>
<p id="p-0052" num="0054">The 256×10 fragment FIFO gives the ending position of data in the FIFO and flags that the data is either the end of packet/cell or a 54 byte fragment. Note that the EOP/fragment indication is used to indicate if a valid start exists in the FIFO.</p>
<p id="p-0053" num="0055">The 128×26 Connection Number FIFO is used to store the connection for each cell/packet.</p>
<p id="p-0054" num="0056">In OC192c each Striper only receives one fourth of egress routeword bits that are required to construct the connection number. Therefore, it is necessary for the Stripers to exchange their portion of the connection number with the other Stripers. This operation is supported with the BIB_CONN bus.</p>
<p id="p-0055" num="0057">When the BIB_CONN_EN signal is asserted the Striper is in the Double Routeword Configuration and the BIB_CONN is strictly used as an input bus <b>22</b>.</p>
<p id="p-0056" num="0058">To reduce the overall storage requirements the Striper utilizes fragmentation to allow it to start emptying the buffer before an entire packet is received. Fragments are constructed such that there is always enough data to transmit the minimum length Fabric Routeword (36 bits). This means that all but the last fragment of a long packet only require the minimum length routeword.</p>
<p id="p-0057" num="0059">When a packet is received that is shorter than that which is required to transmit the minimum length routeword then it is referred to as a Short Packet. A Short Packet is the original packet padded to the minimum transfer size with the original packet length stored as the last pad byte.
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0000">
    <ul id="ul0004" list-style="none">
        <li id="ul0004-0001" num="0060">1. The incoming bit stream is separated into 4 separate bit streams based on the bit number mod 4=a constant. Each bit stream will have an independent checking function implemented. This bit stream includes all data received, including the routeword (connection number bits <b>25</b>:<b>0</b>).</li>
        <li id="ul0004-0002" num="0061">2. A 16-bit CRC is calculated over the data using the following a standard 16-bit CRC function (X<sup>16</sup>+X<sup>12</sup>+X<sup>5</sup>+1) for each of the 4 data streams independently. This calculation will assume that the polynomial has been preset at the start of the calculation.</li>
        <li id="ul0004-0003" num="0062">3. Four bits are selected from each of the 4 CRCs and concatenated together to form the final checksum. Each slice will use ((bit_number mod 4)*4+3 to (bit number mod 4)*4.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0058" num="0063">For an input stream to pass, all four of its CRC functions must pass. Data checking is defined in this way to ensure that OC192c can be supported with minimal overhead. Any CRC over all the data would require the exchange of up to 13 CRC terms per OC192c cell/packet time (2 clock cycles). Since data checking is separate for each slice, the information which needs to be collected at the end is the pass/fail data from each of the 13 CRC functions in all 4 chips and then a final pass/fail can be constructed.</p>
<p id="p-0059" num="0064">Data arrives at the Striper 4 bytes per cycle and leaves the Striper 3 bytes per cycle. The 3-byte output is actually composed of two 12-bit busses referred to as bus A and bus B. In order to use all available bandwidth, reducing pad bits, a fragment/cell can begin on either bus A or bus B.</p>
<p id="p-0060" num="0065">The assignment of data bits to fabrics is done in the context of a bit stream view of the data. For OC192c the data is viewed as being broken into blocks of 48 bits and assignment of data bits to fabrics is done within the 48-bit blocks. A start of packet always starts a new 48-bit block. Striping is defined as the mechanism that assigns bit streams of equal width to each of the fabrics. The width of the fabric <b>14</b> is inversely proportional to the number of fabrics. To ensure each fabric <b>14</b> receives the same number of bits the bits streams are padded.</p>
<p id="h-0008" num="0000">Striping is defined to meet the following criteria:</p>
<p id="p-0061" num="0000">
<ul id="ul0005" list-style="none">
    <li id="ul0005-0001" num="0000">
    <ul id="ul0006" list-style="none">
        <li id="ul0006-0001" num="0066">1. OC48 data cannot have more than 8 bits of pad required on the backplane bus <b>22</b>. A bit assignment which has all groups of 12 bits transmitted on the same clock cycle will satisfy this property.</li>
        <li id="ul0006-0002" num="0067">2. OC192 data cannot have more than 40 bits of pad required for the backplane bus <b>22</b>. Note that this is actually a subset of the first criteria since this requires that all groups of 48 are transmitted on the same clock cycle for the backplane bus <b>22</b>.</li>
        <li id="ul0006-0003" num="0068">3. The striping definition must not require chip-to-chip communication for data in OC192c operation and the backplane busses must exist largely unchanged for both OC192c and OC48. The assignment of bits to the stripers must allow for the same number of bits to go to each fabric <b>14</b> from each striper in OC192c mode.</li>
        <li id="ul0006-0004" num="0069">4. On all fabrics it must be possible to have exactly the same bits going to the memory controllers for either an OC48 or OC192c input port. On the output side, the same bits leave the memory controller and must be convertible into the backplane bus <b>22</b> required for either an OC48 or an OC192c output port.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0062" num="0070">The striping function will be defined by constructing an OC192c solution and modifying OC48 behavior to match the OC192c solution.</p>
<p id="p-0063" num="0071">For each of the striping configurations, a table has been constructed which gives the bit assignments for each striping. Each table has a row that represents the bits that are connected to the stripers in OC192c mode. Each set of 3 columns in the table represent the bits sent during one cycle of OC48 operation. The following properties will be true for each table:
<ul id="ul0007" list-style="none">
    <li id="ul0007-0001" num="0000">
    <ul id="ul0008" list-style="none">
        <li id="ul0008-0001" num="0072">1. The tables will view the data in blocks of 48 bits. Each 12-bit sub-block will have the same number of bits going to each fabric <b>14</b>, which will satisfy criteria <b>1</b> and <b>2</b>. The 12-bit sub-block is composed of blocks of data from 3-column groups of all four rows. In order to satisfy the 12 bit sub-block having the same number of bits to each fabric <b>14</b>, the destination fabric <b>14</b> for the first bit from different stripers must rotate among the fabrics present in the switch <b>10</b>.</li>
        <li id="ul0008-0002" num="0073">2. The bits used for OC48 striping and OC192c striping will be the same. This allows the aggregator 32 to convert the streams to one universal stream for the use on the fabric <b>14</b>.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0064" num="0074">The following give assignments for each of the fabric <b>14</b> configurations which satisfy these properties.</p>
<p id="p-0065" num="0075">The parity data which is transmitted is documented in the context of a 96 bit frame. This is to allow for parity exchange between the chips at 125 MHz.</p>
<p id="h-0009" num="0000">The following table gives the fabric assignments for each block of 48 bits and the output bus <b>22</b> assignments for OC192c operation.</p>
<p id="p-0066" num="0076">
<tables id="TABLE-US-00005" num="00005">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="13">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="28pt" align="center"/>
<colspec colname="8" colwidth="28pt" align="center"/>
<colspec colname="9" colwidth="28pt" align="center"/>
<colspec colname="10" colwidth="28pt" align="center"/>
<colspec colname="11" colwidth="28pt" align="center"/>
<colspec colname="12" colwidth="28pt" align="center"/>
<colspec colname="13" colwidth="28pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Bit</entry>
<entry>0</entry>
<entry>4</entry>
<entry>8</entry>
<entry>12</entry>
<entry>16</entry>
<entry>20</entry>
<entry>24</entry>
<entry>28</entry>
<entry>32</entry>
<entry>36</entry>
<entry>40</entry>
<entry>44</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0a(0)</entry>
<entry>F0a(1)</entry>
<entry>F0a(2)</entry>
<entry>F0a(3)</entry>
<entry>F0a(4)</entry>
<entry>F0a(5)</entry>
<entry>F0a(6)</entry>
<entry>F0a(7)</entry>
<entry>F0a(8)</entry>
<entry>F0a(9)</entry>
<entry>F0a(10)</entry>
<entry>F0a(11)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>1</entry>
<entry>5</entry>
<entry>9</entry>
<entry>13</entry>
<entry>17</entry>
<entry>21</entry>
<entry>25</entry>
<entry>29</entry>
<entry>33</entry>
<entry>37</entry>
<entry>41</entry>
<entry>45</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0b(0)</entry>
<entry>F0b(1)</entry>
<entry>F0b(2)</entry>
<entry>F0b(3)</entry>
<entry>F0b(4)</entry>
<entry>F0b(5)</entry>
<entry>F0b(6)</entry>
<entry>F0b(7)</entry>
<entry>F0b(8)</entry>
<entry>F0b(9)</entry>
<entry>F0b(10)</entry>
<entry>F0b(11)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>2</entry>
<entry>6</entry>
<entry>10</entry>
<entry>14</entry>
<entry>18</entry>
<entry>22</entry>
<entry>26</entry>
<entry>30</entry>
<entry>34</entry>
<entry>38</entry>
<entry>42</entry>
<entry>46</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0c(0)</entry>
<entry>F0c(1)</entry>
<entry>F0c(2)</entry>
<entry>F0c(3)</entry>
<entry>F0c(4)</entry>
<entry>F0c(5)</entry>
<entry>F0c(6)</entry>
<entry>F0c(7)</entry>
<entry>F0c(8)</entry>
<entry>F0c(9)</entry>
<entry>F0c(10)</entry>
<entry>F0c(11)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>3</entry>
<entry>7</entry>
<entry>11</entry>
<entry>15</entry>
<entry>19</entry>
<entry>23</entry>
<entry>27</entry>
<entry>31</entry>
<entry>35</entry>
<entry>39</entry>
<entry>43</entry>
<entry>47</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0d(0)</entry>
<entry>F0d(1)</entry>
<entry>F0d(2)</entry>
<entry>F0d(3)</entry>
<entry>F0d(4)</entry>
<entry>F0d(5)</entry>
<entry>F0d(6)</entry>
<entry>F0d(7)</entry>
<entry>F0d(8)</entry>
<entry>F0d(9)</entry>
<entry>F0d(10)</entry>
<entry>F0d(11)</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bit order transmitted for OC48 operation.
</p>
<p id="p-0067" num="0077">
<tables id="TABLE-US-00006" num="00006">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="35pt" align="center"/>
<colspec colname="2" colwidth="35pt" align="center"/>
<colspec colname="3" colwidth="49pt" align="center"/>
<colspec colname="4" colwidth="49pt" align="center"/>
<colspec colname="5" colwidth="49pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry>Fabric</entry>
<entry/>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>(bit)</entry>
<entry>Cycle 0</entry>
<entry>Cycle 1</entry>
<entry>Cycle 2</entry>
<entry>Cycle 3</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="35pt" align="center"/>
<colspec colname="2" colwidth="35pt" align="char" char="."/>
<colspec colname="3" colwidth="49pt" align="center"/>
<colspec colname="4" colwidth="49pt" align="center"/>
<colspec colname="5" colwidth="49pt" align="center"/>
<tbody valign="top">
<row>
<entry>F0(0)</entry>
<entry>0</entry>
<entry>cycle 0 + 1212</entry>
<entry>cycle 0 + 2424</entry>
<entry>cycle 0 + 3636</entry>
</row>
<row>
<entry>F0(1)</entry>
<entry>1</entry>
<entry>13</entry>
<entry>25</entry>
<entry>37</entry>
</row>
<row>
<entry>F0(2)</entry>
<entry>2</entry>
<entry>14</entry>
<entry>26</entry>
<entry>38</entry>
</row>
<row>
<entry>F0(3)</entry>
<entry>3</entry>
<entry>15</entry>
<entry>27</entry>
<entry>39</entry>
</row>
<row>
<entry>F0(4)</entry>
<entry>4</entry>
<entry>16</entry>
<entry>28</entry>
<entry>40</entry>
</row>
<row>
<entry>F0(5)</entry>
<entry>5</entry>
<entry>17</entry>
<entry>29</entry>
<entry>41</entry>
</row>
<row>
<entry>F0(6)</entry>
<entry>6</entry>
<entry>18</entry>
<entry>30</entry>
<entry>42</entry>
</row>
<row>
<entry>F0(7)</entry>
<entry>7</entry>
<entry>19</entry>
<entry>31</entry>
<entry>43</entry>
</row>
<row>
<entry>F0(8)</entry>
<entry>8</entry>
<entry>20</entry>
<entry>32</entry>
<entry>44</entry>
</row>
<row>
<entry>F0(9)</entry>
<entry>9</entry>
<entry>21</entry>
<entry>33</entry>
<entry>45</entry>
</row>
<row>
<entry>F0(10)</entry>
<entry>10</entry>
<entry>22</entry>
<entry>34</entry>
<entry>46</entry>
</row>
<row>
<entry>F0(11)</entry>
<entry>11</entry>
<entry>23</entry>
<entry>35</entry>
<entry>47</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0068" num="0078">The following table gives the fabric assignments for each block of 48 bits and the output bus assignments for OC192c operation.</p>
<p id="p-0069" num="0079">
<tables id="TABLE-US-00007" num="00007">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="13">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="28pt" align="center"/>
<colspec colname="8" colwidth="28pt" align="center"/>
<colspec colname="9" colwidth="28pt" align="center"/>
<colspec colname="10" colwidth="28pt" align="center"/>
<colspec colname="11" colwidth="28pt" align="center"/>
<colspec colname="12" colwidth="28pt" align="center"/>
<colspec colname="13" colwidth="28pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Bit</entry>
<entry>0</entry>
<entry>4</entry>
<entry>8</entry>
<entry>12</entry>
<entry>16</entry>
<entry>20</entry>
<entry>24</entry>
<entry>28</entry>
<entry>32</entry>
<entry>36</entry>
<entry>40</entry>
<entry>44</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0a(0)</entry>
<entry>F1a(0)</entry>
<entry>F0a(1)</entry>
<entry>F1a(1)</entry>
<entry>F0a(2)</entry>
<entry>F1a(2)</entry>
<entry>F0a(3)</entry>
<entry>F1a(3)</entry>
<entry>F0a(4)</entry>
<entry>F1a(4)</entry>
<entry>F0a(5)</entry>
<entry>F1a(5)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>1</entry>
<entry>5</entry>
<entry>9</entry>
<entry>13</entry>
<entry>17</entry>
<entry>21</entry>
<entry>25</entry>
<entry>29</entry>
<entry>33</entry>
<entry>37</entry>
<entry>41</entry>
<entry>45</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F1b(0)</entry>
<entry>F0b(0)</entry>
<entry>F1b(1)</entry>
<entry>F0b(1)</entry>
<entry>F1b(2)</entry>
<entry>F0b(2)</entry>
<entry>F1b(3)</entry>
<entry>F0b(3)</entry>
<entry>F1b(4)</entry>
<entry>F0b(4)</entry>
<entry>F1b(5)</entry>
<entry>F0b(5)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>2</entry>
<entry>6</entry>
<entry>10</entry>
<entry>14</entry>
<entry>18</entry>
<entry>22</entry>
<entry>26</entry>
<entry>30</entry>
<entry>34</entry>
<entry>38</entry>
<entry>42</entry>
<entry>46</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0c(0)</entry>
<entry>F1c(0)</entry>
<entry>F0c(1)</entry>
<entry>F1c(1)</entry>
<entry>F0c(2)</entry>
<entry>F1c(2)</entry>
<entry>F0c(3)</entry>
<entry>F1c(3)</entry>
<entry>F0c(4)</entry>
<entry>F1c(4)</entry>
<entry>F0c(5)</entry>
<entry>F1c(5)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>3</entry>
<entry>7</entry>
<entry>11</entry>
<entry>15</entry>
<entry>19</entry>
<entry>23</entry>
<entry>27</entry>
<entry>31</entry>
<entry>35</entry>
<entry>39</entry>
<entry>43</entry>
<entry>47</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F1d(0)</entry>
<entry>F0d(0)</entry>
<entry>F1d(1)</entry>
<entry>F0d(1)</entry>
<entry>F1d(2)</entry>
<entry>F0d(2)</entry>
<entry>F1d(3)</entry>
<entry>F0d(3)</entry>
<entry>F1d(4)</entry>
<entry>F0d(4)</entry>
<entry>F1d(5)</entry>
<entry>F0d(5)</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bit order transmitted for OC48 operation.
</p>
<p id="p-0070" num="0080">
<tables id="TABLE-US-00008" num="00008">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="35pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="42pt" align="center"/>
<colspec colname="4" colwidth="49pt" align="center"/>
<colspec colname="5" colwidth="63pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry>Fabric</entry>
<entry/>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>(bit)</entry>
<entry>Cycle 0</entry>
<entry>Cycle 1</entry>
<entry>Cycle 2</entry>
<entry>Cycle 3</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="35pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="char" char="."/>
<colspec colname="3" colwidth="42pt" align="center"/>
<colspec colname="4" colwidth="49pt" align="center"/>
<colspec colname="5" colwidth="63pt" align="center"/>
<tbody valign="top">
<row>
<entry>F0(0)</entry>
<entry>0</entry>
<entry>13</entry>
<entry>+24 to cycle 0</entry>
<entry>+24 to cycle 1</entry>
</row>
<row>
<entry>F0(1)</entry>
<entry>2</entry>
<entry>15</entry>
</row>
<row>
<entry>F0(2)</entry>
<entry>5</entry>
<entry>16</entry>
</row>
<row>
<entry>F0(3)</entry>
<entry>7</entry>
<entry>18</entry>
</row>
<row>
<entry>F0(4)</entry>
<entry>8</entry>
<entry>21</entry>
</row>
<row>
<entry>F0(5)</entry>
<entry>10</entry>
<entry>23</entry>
</row>
<row>
<entry>F1(0)</entry>
<entry>1</entry>
<entry>12</entry>
</row>
<row>
<entry>F1(1)</entry>
<entry>3</entry>
<entry>14</entry>
</row>
<row>
<entry>F1(2)</entry>
<entry>4</entry>
<entry>17</entry>
</row>
<row>
<entry>F1(3)</entry>
<entry>6</entry>
<entry>19</entry>
</row>
<row>
<entry>F1(4)</entry>
<entry>9</entry>
<entry>20</entry>
</row>
<row>
<entry>F1(5)</entry>
<entry>11</entry>
<entry>22</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table gives the fabric assignments for each block of 48 bits and the output bus assignments for OC192c operation.
</p>
<p id="p-0071" num="0081">
<tables id="TABLE-US-00009" num="00009">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="13">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="28pt" align="center"/>
<colspec colname="8" colwidth="28pt" align="center"/>
<colspec colname="9" colwidth="28pt" align="center"/>
<colspec colname="10" colwidth="28pt" align="center"/>
<colspec colname="11" colwidth="28pt" align="center"/>
<colspec colname="12" colwidth="28pt" align="center"/>
<colspec colname="13" colwidth="28pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Bit</entry>
<entry>0</entry>
<entry>4</entry>
<entry>8</entry>
<entry>12</entry>
<entry>16</entry>
<entry>20</entry>
<entry>24</entry>
<entry>28</entry>
<entry>32</entry>
<entry>36</entry>
<entry>40</entry>
<entry>44</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0a(30)</entry>
<entry>F1a(30)</entry>
<entry>F2a(30)</entry>
<entry>F0a(21)</entry>
<entry>F1a(21)</entry>
<entry>F2a(21)</entry>
<entry>F0a(12)</entry>
<entry>F1a(12)</entry>
<entry>F2a(12)</entry>
<entry>F0a(03)</entry>
<entry>F1a(03)</entry>
<entry>F2a(03)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>1</entry>
<entry>5</entry>
<entry>9</entry>
<entry>13</entry>
<entry>17</entry>
<entry>21</entry>
<entry>25</entry>
<entry>29</entry>
<entry>33</entry>
<entry>37</entry>
<entry>41</entry>
<entry>45</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F2b(30)</entry>
<entry>F0b(30)</entry>
<entry>F1b(03)</entry>
<entry>F2b(12)</entry>
<entry>F0b(12)</entry>
<entry>F1b(12)</entry>
<entry>F2b(21)</entry>
<entry>F0b(21)</entry>
<entry>F1b(21)</entry>
<entry>F2b(30)</entry>
<entry>F0b(30)</entry>
<entry>F1b(30)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>2</entry>
<entry>6</entry>
<entry>10</entry>
<entry>14</entry>
<entry>18</entry>
<entry>22</entry>
<entry>26</entry>
<entry>30</entry>
<entry>34</entry>
<entry>38</entry>
<entry>42</entry>
<entry>46</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F1c(30)</entry>
<entry>F2c(03)</entry>
<entry>F0c(30)</entry>
<entry>F1c(12)</entry>
<entry>F2c(12)</entry>
<entry>F0c(12)</entry>
<entry>F1c(21)</entry>
<entry>F2c(21)</entry>
<entry>F0c(21)</entry>
<entry>F1c(30)</entry>
<entry>F2c(30)</entry>
<entry>F0c(30)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>3</entry>
<entry>7</entry>
<entry>11</entry>
<entry>15</entry>
<entry>19</entry>
<entry>23</entry>
<entry>27</entry>
<entry>31</entry>
<entry>35</entry>
<entry>39</entry>
<entry>43</entry>
<entry>47</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0d(03)</entry>
<entry>F1d(30)</entry>
<entry>F2d(03)</entry>
<entry>F0d(12)</entry>
<entry>F1d(12)</entry>
<entry>F2d(12)</entry>
<entry>F0d(21)</entry>
<entry>F1d(21)</entry>
<entry>F2d(21)</entry>
<entry>F0d(30)</entry>
<entry>F1d(30)</entry>
<entry>F2d(30)</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bit order transmitted for OC48 operation.
</p>
<p id="p-0072" num="0082">
<tables id="TABLE-US-00010" num="00010">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="42pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="49pt" align="center"/>
<colspec colname="4" colwidth="42pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry>Fabric</entry>
<entry/>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>(bit)</entry>
<entry>Cycle 0</entry>
<entry>Cycle 1</entry>
<entry>Cycle 2</entry>
<entry>Cycle 3</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="42pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="char" char="."/>
<colspec colname="3" colwidth="49pt" align="center"/>
<colspec colname="4" colwidth="42pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<tbody valign="top">
<row>
<entry>F0(30)</entry>
<entry>0</entry>
<entry>cycle</entry>
<entry>+24 to cycle</entry>
<entry>+24 to cycle</entry>
</row>
<row>
<entry/>
<entry/>
<entry>0 + 1215</entry>
<entry>0 + 24</entry>
<entry>0 + 361</entry>
</row>
<row>
<entry>F0(21)</entry>
<entry>3</entry>
<entry>17</entry>
</row>
<row>
<entry>F0(12)</entry>
<entry>5</entry>
<entry>22</entry>
</row>
<row>
<entry>F0(03)</entry>
<entry>10</entry>
<entry>13</entry>
</row>
<row>
<entry>F1(30)</entry>
<entry>2</entry>
<entry>14</entry>
</row>
<row>
<entry>F1(21)</entry>
<entry>4</entry>
<entry>16</entry>
</row>
<row>
<entry>F1(12)</entry>
<entry>7</entry>
<entry>19</entry>
</row>
<row>
<entry>F1(03)</entry>
<entry>9</entry>
<entry>21</entry>
</row>
<row>
<entry>F2(30)</entry>
<entry>1</entry>
<entry>13</entry>
</row>
<row>
<entry>F2(21)</entry>
<entry>6</entry>
<entry>18</entry>
</row>
<row>
<entry>F2(12)</entry>
<entry>8</entry>
<entry>20</entry>
</row>
<row>
<entry>F2(03)</entry>
<entry>11</entry>
<entry>23</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0073" num="0083">The following table gives the fabric assignments for each block of 48 bits and the output bus assignments for OC192c operation.</p>
<p id="p-0074" num="0084">
<tables id="TABLE-US-00011" num="00011">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="13">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="28pt" align="center"/>
<colspec colname="8" colwidth="28pt" align="center"/>
<colspec colname="9" colwidth="28pt" align="center"/>
<colspec colname="10" colwidth="28pt" align="center"/>
<colspec colname="11" colwidth="28pt" align="center"/>
<colspec colname="12" colwidth="28pt" align="center"/>
<colspec colname="13" colwidth="28pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Bit</entry>
<entry>0</entry>
<entry>4</entry>
<entry>8</entry>
<entry>12</entry>
<entry>16</entry>
<entry>20</entry>
<entry>24</entry>
<entry>28</entry>
<entry>32</entry>
<entry>36</entry>
<entry>40</entry>
<entry>44</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0a(0)</entry>
<entry>F1a(0)</entry>
<entry>F2a(0)</entry>
<entry>F3a(0)</entry>
<entry>F0a(1)</entry>
<entry>F1a(1)</entry>
<entry>F2a(1)</entry>
<entry>F3a(1)</entry>
<entry>F0a(2)</entry>
<entry>F1a(2)</entry>
<entry>F2a(2)</entry>
<entry>F3a(2)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>1</entry>
<entry>5</entry>
<entry>9</entry>
<entry>13</entry>
<entry>17</entry>
<entry>21</entry>
<entry>25</entry>
<entry>29</entry>
<entry>33</entry>
<entry>37</entry>
<entry>41</entry>
<entry>45</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F3b(0)</entry>
<entry>F0b(0)</entry>
<entry>F1b(0)</entry>
<entry>F2b(0)</entry>
<entry>F3b(1)</entry>
<entry>F0b(1)</entry>
<entry>F1b(1)</entry>
<entry>F2b(2)</entry>
<entry>F3b(2)</entry>
<entry>F0b(2)</entry>
<entry>F1b(2)</entry>
<entry>F2b(2)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>2</entry>
<entry>6</entry>
<entry>10</entry>
<entry>14</entry>
<entry>18</entry>
<entry>22</entry>
<entry>26</entry>
<entry>30</entry>
<entry>34</entry>
<entry>38</entry>
<entry>42</entry>
<entry>46</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F2c(0)</entry>
<entry>F3c(0)</entry>
<entry>F0c(0)</entry>
<entry>F1c(0)</entry>
<entry>F2c(1)</entry>
<entry>F3c(1)</entry>
<entry>F0c(1)</entry>
<entry>F1c(1)</entry>
<entry>F2c(2)</entry>
<entry>F3c(2)</entry>
<entry>F0c(2)</entry>
<entry>F1c(2)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>3</entry>
<entry>7</entry>
<entry>11</entry>
<entry>15</entry>
<entry>19</entry>
<entry>23</entry>
<entry>27</entry>
<entry>31</entry>
<entry>35</entry>
<entry>39</entry>
<entry>43</entry>
<entry>47</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F1d(0)</entry>
<entry>F2d(0)</entry>
<entry>F3d(0)</entry>
<entry>F0d(0)</entry>
<entry>F1d(1)</entry>
<entry>F2d(1)</entry>
<entry>F3d(1)</entry>
<entry>F0d(1)</entry>
<entry>F1d(2)</entry>
<entry>F2d(2)</entry>
<entry>F3d(2)</entry>
<entry>F0d(2)</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bit order transmitted for OC48 operation.
</p>
<p id="p-0075" num="0085">
<tables id="TABLE-US-00012" num="00012">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="49pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="56pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry>Fabric</entry>
<entry/>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>(bit)</entry>
<entry>Cycle 0</entry>
<entry>Cycle 1</entry>
<entry>Cycle 2</entry>
<entry>Cycle 3</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="49pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="char" char="."/>
<colspec colname="3" colwidth="56pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<tbody valign="top">
<row>
<entry>F0(0)</entry>
<entry>0</entry>
<entry>15</entry>
<entry>26</entry>
<entry>37</entry>
</row>
<row>
<entry>F0(1)</entry>
<entry>5</entry>
<entry>16</entry>
<entry>31</entry>
<entry>42</entry>
</row>
<row>
<entry>F0(2)</entry>
<entry>10</entry>
<entry>21</entry>
<entry>32</entry>
<entry>47</entry>
</row>
<row>
<entry>F1(0)</entry>
<entry>3</entry>
<entry>14</entry>
<entry>25</entry>
<entry>36</entry>
</row>
<row>
<entry>F1(1)</entry>
<entry>4</entry>
<entry>19</entry>
<entry>30</entry>
<entry>41</entry>
</row>
<row>
<entry>F1(2)</entry>
<entry>9</entry>
<entry>20</entry>
<entry>35</entry>
<entry>46</entry>
</row>
<row>
<entry>F2(0)</entry>
<entry>2</entry>
<entry>13</entry>
<entry>24</entry>
<entry>39</entry>
</row>
<row>
<entry>F2(1)</entry>
<entry>7</entry>
<entry>18</entry>
<entry>29</entry>
<entry>40</entry>
</row>
<row>
<entry>F2(2)</entry>
<entry>8</entry>
<entry>23</entry>
<entry>34</entry>
<entry>45</entry>
</row>
<row>
<entry>F3(0)</entry>
<entry>1</entry>
<entry>12</entry>
<entry>27</entry>
<entry>38</entry>
</row>
<row>
<entry>F3(1)</entry>
<entry>6</entry>
<entry>17</entry>
<entry>28</entry>
<entry>43</entry>
</row>
<row>
<entry>F3(0)</entry>
<entry>11</entry>
<entry>22</entry>
<entry>33</entry>
<entry>44</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table gives the fabric assignments for each block of 48 bits and the output bus assignments for OC192c.
</p>
<p id="p-0076" num="0086">
<tables id="TABLE-US-00013" num="00013">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="13">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="28pt" align="center"/>
<colspec colname="8" colwidth="28pt" align="center"/>
<colspec colname="9" colwidth="28pt" align="center"/>
<colspec colname="10" colwidth="28pt" align="center"/>
<colspec colname="11" colwidth="28pt" align="center"/>
<colspec colname="12" colwidth="28pt" align="center"/>
<colspec colname="13" colwidth="28pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Bit</entry>
<entry>0</entry>
<entry>4</entry>
<entry> 8</entry>
<entry>12</entry>
<entry>16</entry>
<entry>20</entry>
<entry>24</entry>
<entry>28</entry>
<entry>32</entry>
<entry>36</entry>
<entry>40</entry>
<entry>44</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0a(0)</entry>
<entry>F1a(0)</entry>
<entry>F2a(0)</entry>
<entry>F3a(0)</entry>
<entry>F4a(0)</entry>
<entry>F5a(0)</entry>
<entry>F0a(1)</entry>
<entry>F1a(1)</entry>
<entry>F2a(1)</entry>
<entry>F3a(1)</entry>
<entry>F4a(1)</entry>
<entry>F5a(1)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>1</entry>
<entry>5</entry>
<entry> 9</entry>
<entry>13</entry>
<entry>17</entry>
<entry>21</entry>
<entry>25</entry>
<entry>29</entry>
<entry>33</entry>
<entry>37</entry>
<entry>41</entry>
<entry>45</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F1b(0)</entry>
<entry>F2b(0)</entry>
<entry>F3b(0)</entry>
<entry>F4b(0)</entry>
<entry>F5b(0)</entry>
<entry>F0b(0)</entry>
<entry>F1b(1)</entry>
<entry>F2b(1)</entry>
<entry>F3b(1)</entry>
<entry>F4b(1)</entry>
<entry>F5b(1)</entry>
<entry>F0b(1)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>2</entry>
<entry>6</entry>
<entry>10</entry>
<entry>14</entry>
<entry>18</entry>
<entry>22</entry>
<entry>26</entry>
<entry>30</entry>
<entry>34</entry>
<entry>38</entry>
<entry>42</entry>
<entry>46</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F3c(0)</entry>
<entry>F4c(0)</entry>
<entry>F5c(0)</entry>
<entry>F0c(0)</entry>
<entry>F1c(0)</entry>
<entry>F2c(0)</entry>
<entry>F3c(1)</entry>
<entry>F4c(1)</entry>
<entry>F5c(1)</entry>
<entry>F0c(1)</entry>
<entry>F1c(1)</entry>
<entry>F2c(1)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>3</entry>
<entry>7</entry>
<entry>11</entry>
<entry>15</entry>
<entry>19</entry>
<entry>23</entry>
<entry>27</entry>
<entry>31</entry>
<entry>35</entry>
<entry>39</entry>
<entry>43</entry>
<entry>47</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F4d(0)</entry>
<entry>F5d(0)</entry>
<entry>F0d(0)</entry>
<entry>F1d(0)</entry>
<entry>F2d(0)</entry>
<entry>F3d(0)</entry>
<entry>F4d(1)</entry>
<entry>F5d(1)</entry>
<entry>F0d(1)</entry>
<entry>F1d(1)</entry>
<entry>F2d(1)</entry>
<entry>F3d(1)</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bit order transmitted for OC48 operation.
</p>
<p id="p-0077" num="0087">
<tables id="TABLE-US-00014" num="00014">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="6">
<colspec colname="1" colwidth="28pt" align="center"/>
<colspec colname="2" colwidth="35pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="35pt" align="center"/>
<colspec colname="5" colwidth="42pt" align="center"/>
<colspec colname="6" colwidth="49pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="6" align="center" rowsep="1"/>
</row>
<row>
<entry>Output</entry>
<entry>Fabric</entry>
<entry/>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>(bit)</entry>
<entry>Cycle 0</entry>
<entry>Cycle 1</entry>
<entry>Cycle 2</entry>
<entry>Cycle 3</entry>
</row>
<row>
<entry namest="1" nameend="6" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="6">
<colspec colname="1" colwidth="28pt" align="char" char="."/>
<colspec colname="2" colwidth="35pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="char" char="."/>
<colspec colname="4" colwidth="35pt" align="center"/>
<colspec colname="5" colwidth="42pt" align="center"/>
<colspec colname="6" colwidth="49pt" align="center"/>
<tbody valign="top">
<row>
<entry>11</entry>
<entry>F0(0)</entry>
<entry>0</entry>
<entry>14</entry>
<entry>+24 cycle 0</entry>
<entry>+24 cycle 1</entry>
</row>
<row>
<entry>10</entry>
<entry>F0(1)</entry>
<entry>11</entry>
<entry>21</entry>
</row>
<row>
<entry>9</entry>
<entry>F1(0)</entry>
<entry>1</entry>
<entry>15</entry>
</row>
<row>
<entry>8</entry>
<entry>F1(1)</entry>
<entry>4</entry>
<entry>18</entry>
</row>
<row>
<entry>7</entry>
<entry>F2(0)</entry>
<entry>5</entry>
<entry>19</entry>
</row>
<row>
<entry>6</entry>
<entry>F2(1)</entry>
<entry>8</entry>
<entry>22</entry>
</row>
<row>
<entry>5</entry>
<entry>F3(0)</entry>
<entry>2</entry>
<entry>12</entry>
</row>
<row>
<entry>4</entry>
<entry>F3(1)</entry>
<entry>9</entry>
<entry>23</entry>
</row>
<row>
<entry>3</entry>
<entry>F4(0)</entry>
<entry>3</entry>
<entry>13</entry>
</row>
<row>
<entry>2</entry>
<entry>F4(1)</entry>
<entry>6</entry>
<entry>16</entry>
</row>
<row>
<entry>1</entry>
<entry>F5(0)</entry>
<entry>7</entry>
<entry>17</entry>
</row>
<row>
<entry>0</entry>
<entry>F5(1)</entry>
<entry>10</entry>
<entry>20</entry>
</row>
<row>
<entry namest="1" nameend="6" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table gives the fabric assignments for each block of 48 bits and the output bus assignments for OC192c operation.
</p>
<p id="p-0078" num="0088">
<tables id="TABLE-US-00015" num="00015">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="13">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="28pt" align="center"/>
<colspec colname="8" colwidth="28pt" align="center"/>
<colspec colname="9" colwidth="28pt" align="center"/>
<colspec colname="10" colwidth="28pt" align="center"/>
<colspec colname="11" colwidth="28pt" align="center"/>
<colspec colname="12" colwidth="28pt" align="center"/>
<colspec colname="13" colwidth="28pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Bit</entry>
<entry>0</entry>
<entry>4</entry>
<entry> 8</entry>
<entry>12</entry>
<entry>16</entry>
<entry>20</entry>
<entry>24</entry>
<entry>28</entry>
<entry>32</entry>
<entry>36</entry>
<entry>40</entry>
<entry>44</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0a(0)</entry>
<entry>F1a(0)</entry>
<entry>F2a(0)</entry>
<entry>F3a(0)</entry>
<entry>F4a(0)</entry>
<entry>F5a(0)</entry>
<entry>F0a(1)</entry>
<entry>F1a(1)</entry>
<entry>F2a(1)</entry>
<entry>F3a(1)</entry>
<entry>F4a(1)</entry>
<entry>F5a(1)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>1</entry>
<entry>5</entry>
<entry> 9</entry>
<entry>13</entry>
<entry>17</entry>
<entry>21</entry>
<entry>25</entry>
<entry>29</entry>
<entry>33</entry>
<entry>37</entry>
<entry>41</entry>
<entry>45</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F3b(0)</entry>
<entry>F4b(0)</entry>
<entry>F5b(0)</entry>
<entry>F0b(0)</entry>
<entry>F1b(0)</entry>
<entry>F2b(0)</entry>
<entry>F3b(1)</entry>
<entry>F4b(1)</entry>
<entry>F5b(1)</entry>
<entry>F0b(1)</entry>
<entry>F1b(1)</entry>
<entry>F2b(1)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>2</entry>
<entry>6</entry>
<entry>10</entry>
<entry>14</entry>
<entry>18</entry>
<entry>22</entry>
<entry>26</entry>
<entry>30</entry>
<entry>34</entry>
<entry>38</entry>
<entry>42</entry>
<entry>46</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0c(0)</entry>
<entry>F1c(0)</entry>
<entry>F2c(0)</entry>
<entry>F3c(0)</entry>
<entry>F4c(0)</entry>
<entry>F5c(0)</entry>
<entry>F0c(1)</entry>
<entry>F1c(1)</entry>
<entry>F2c(1)</entry>
<entry>F3c(1)</entry>
<entry>F4c(1)</entry>
<entry>F5c(1)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>3</entry>
<entry>7</entry>
<entry>11</entry>
<entry>15</entry>
<entry>19</entry>
<entry>23</entry>
<entry>27</entry>
<entry>31</entry>
<entry>35</entry>
<entry>39</entry>
<entry>43</entry>
<entry>47</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F3d(0)</entry>
<entry>F4d(0)</entry>
<entry>F5d(0)</entry>
<entry>F0d(0)</entry>
<entry>F1d(0)</entry>
<entry>F2d(0)</entry>
<entry>F3d(1)</entry>
<entry>F4d(1)</entry>
<entry>F5d(1)</entry>
<entry>F0d(1)</entry>
<entry>F1d(1)</entry>
<entry>F2d(1)</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bit order transmitted for OC48 operation.
</p>
<p id="p-0079" num="0089">
<tables id="TABLE-US-00016" num="00016">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="49pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="42pt" align="center"/>
<colspec colname="4" colwidth="42pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry>Fabric</entry>
<entry/>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>(bit)</entry>
<entry>Cycle 0</entry>
<entry>Cycle 1</entry>
<entry>Cycle 2</entry>
<entry>Cycle 3</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="49pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="char" char="."/>
<colspec colname="3" colwidth="42pt" align="center"/>
<colspec colname="4" colwidth="42pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<tbody valign="top">
<row>
<entry>F0(0)</entry>
<entry>0</entry>
<entry>15</entry>
<entry>cycle 0 + 24</entry>
<entry>cycle 1 + 24</entry>
</row>
<row>
<entry>F0(1)</entry>
<entry>2</entry>
<entry>13</entry>
</row>
<row>
<entry>F1(0)</entry>
<entry>4</entry>
<entry>19</entry>
</row>
<row>
<entry>F1(1)</entry>
<entry>6</entry>
<entry>17</entry>
</row>
<row>
<entry>F2(0)</entry>
<entry>8</entry>
<entry>23</entry>
</row>
<row>
<entry>F2(1)</entry>
<entry>10</entry>
<entry>21</entry>
</row>
<row>
<entry>F3(0)</entry>
<entry>1</entry>
<entry>14</entry>
</row>
<row>
<entry>F3(1)</entry>
<entry>3</entry>
<entry>12</entry>
</row>
<row>
<entry>F4(0)</entry>
<entry>5</entry>
<entry>18</entry>
</row>
<row>
<entry>F4(1)</entry>
<entry>7</entry>
<entry>16</entry>
</row>
<row>
<entry>F5(0)</entry>
<entry>9</entry>
<entry>22</entry>
</row>
<row>
<entry>F5(1)</entry>
<entry>11</entry>
<entry>20</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table gives the fabric assignments for each block of 48 bits and the output bus assignments for OC192c operation.
</p>
<p id="p-0080" num="0090">
<tables id="TABLE-US-00017" num="00017">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="13">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="28pt" align="center"/>
<colspec colname="8" colwidth="28pt" align="center"/>
<colspec colname="9" colwidth="28pt" align="center"/>
<colspec colname="10" colwidth="28pt" align="center"/>
<colspec colname="11" colwidth="28pt" align="center"/>
<colspec colname="12" colwidth="28pt" align="center"/>
<colspec colname="13" colwidth="28pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Bit</entry>
<entry>0</entry>
<entry>4</entry>
<entry> 8</entry>
<entry>12</entry>
<entry>16</entry>
<entry>20</entry>
<entry>24</entry>
<entry>28</entry>
<entry>32</entry>
<entry>36</entry>
<entry>40</entry>
<entry>44</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0a(0)</entry>
<entry>F1a(0)</entry>
<entry>F2a(0)</entry>
<entry>F3a(0)</entry>
<entry>F4a(0)</entry>
<entry>F5a(0)</entry>
<entry>F6a(0)</entry>
<entry>F7a(0)</entry>
<entry>F8a(0)</entry>
<entry>F9a(0)</entry>
<entry>F10a(0)</entry>
<entry>F11a(0)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>1</entry>
<entry>5</entry>
<entry> 9</entry>
<entry>13</entry>
<entry>17</entry>
<entry>21</entry>
<entry>25</entry>
<entry>29</entry>
<entry>33</entry>
<entry>37</entry>
<entry>41</entry>
<entry>45</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F3b(0)</entry>
<entry>F4b(0)</entry>
<entry>F5b(0)</entry>
<entry>F6b(0)</entry>
<entry>F7b(0)</entry>
<entry>F8b(0)</entry>
<entry>F9b(0)</entry>
<entry>F10b(0)</entry>
<entry>F11b(0)</entry>
<entry>F0b(0)</entry>
<entry>F1b(0)</entry>
<entry>F2b(0)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>2</entry>
<entry>6</entry>
<entry>10</entry>
<entry>14</entry>
<entry>18</entry>
<entry>22</entry>
<entry>26</entry>
<entry>30</entry>
<entry>34</entry>
<entry>38</entry>
<entry>42</entry>
<entry>46</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F6c(0)</entry>
<entry>F7c(0)</entry>
<entry>F8c(0)</entry>
<entry>F9c(0)</entry>
<entry>F10c(0)</entry>
<entry>F11c(0)</entry>
<entry>F0c(0)</entry>
<entry>F1c(0)</entry>
<entry>F2c(0)</entry>
<entry>F3C(0)</entry>
<entry>F4c(0)</entry>
<entry>F5c(0)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>3</entry>
<entry>7</entry>
<entry>11</entry>
<entry>15</entry>
<entry>19</entry>
<entry>23</entry>
<entry>27</entry>
<entry>31</entry>
<entry>35</entry>
<entry>39</entry>
<entry>43</entry>
<entry>47</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F9d(0)</entry>
<entry>F10d(0)</entry>
<entry>F11d(0)</entry>
<entry>F0d(0)</entry>
<entry>F1d(0)</entry>
<entry>F2d(0)</entry>
<entry>F3d(0)</entry>
<entry>F4d(0)</entry>
<entry>F5d(0)</entry>
<entry>F6d(0)</entry>
<entry>F7d(0)</entry>
<entry>F8d(0)</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bit order transmitted for OC48 operation.
</p>
<p id="p-0081" num="0091">
<tables id="TABLE-US-00018" num="00018">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="49pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="56pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry>Fabric</entry>
<entry/>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>(bit)</entry>
<entry>Cycle 0</entry>
<entry>Cycle 1</entry>
<entry>Cycle 2</entry>
<entry>Cycle 3</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="49pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="char" char="."/>
<colspec colname="3" colwidth="56pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<tbody valign="top">
<row>
<entry>F0(0)</entry>
<entry>0</entry>
<entry>15</entry>
<entry>26</entry>
<entry>37</entry>
</row>
<row>
<entry>F1(0)</entry>
<entry>4</entry>
<entry>19</entry>
<entry>30</entry>
<entry>41</entry>
</row>
<row>
<entry>F2(0)</entry>
<entry>8</entry>
<entry>23</entry>
<entry>34</entry>
<entry>45</entry>
</row>
<row>
<entry>F3(0)</entry>
<entry>1</entry>
<entry>12</entry>
<entry>27</entry>
<entry>38</entry>
</row>
<row>
<entry>F4(0)</entry>
<entry>5</entry>
<entry>16</entry>
<entry>31</entry>
<entry>42</entry>
</row>
<row>
<entry>F5(0)</entry>
<entry>9</entry>
<entry>20</entry>
<entry>35</entry>
<entry>46</entry>
</row>
<row>
<entry>F6(0)</entry>
<entry>2</entry>
<entry>13</entry>
<entry>24</entry>
<entry>39</entry>
</row>
<row>
<entry>F7(0)</entry>
<entry>6</entry>
<entry>17</entry>
<entry>28</entry>
<entry>43</entry>
</row>
<row>
<entry>F8(0)</entry>
<entry>10</entry>
<entry>21</entry>
<entry>32</entry>
<entry>47</entry>
</row>
<row>
<entry>F9(0)</entry>
<entry>3</entry>
<entry>14</entry>
<entry>25</entry>
<entry>36</entry>
</row>
<row>
<entry>F10(0)</entry>
<entry>7</entry>
<entry>18</entry>
<entry>29</entry>
<entry>40</entry>
</row>
<row>
<entry>F11(0)</entry>
<entry>11</entry>
<entry>22</entry>
<entry>33</entry>
<entry>44</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0082" num="0092">The data for each fabric <b>14</b> is assigned to transceivers based on the number of fabrics configured.</p>
<p id="p-0083" num="0093">The Fabric Routeword is constructed based on the length of the out-going fragment and the configuration that was present when it was striped. The constructed Fabric Routeword is transmitted on bits <b>2</b> (bus A routeword bit) and <b>3</b> (bus B routeword bit) of the first transceiver allocated to a fabric <b>14</b>.</p>
<p id="p-0084" num="0094">The parity data is identical to the transmit data.</p>
<p id="p-0085" num="0095">The parity calculation uses the following formulas and the following aggregator 32 read order</p>
<p id="p-0086" num="0096">
<tables id="TABLE-US-00019" num="00019">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="84pt" align="center"/>
<colspec colname="2" colwidth="35pt" align="center"/>
<colspec colname="3" colwidth="98pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Transmit</entry>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>stripe</entry>
<entry>XOR bits</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>P0</entry>
<entry>0</entry>
<entry> 0,4</entry>
</row>
<row>
<entry>P1</entry>
<entry>2</entry>
<entry> 2,6</entry>
</row>
<row>
<entry>P2</entry>
<entry>1</entry>
<entry> 1,5</entry>
</row>
<row>
<entry>P3</entry>
<entry>3</entry>
<entry> 3,7</entry>
</row>
<row>
<entry>P4</entry>
<entry>0</entry>
<entry> 8,9</entry>
</row>
<row>
<entry>P5</entry>
<entry>2</entry>
<entry>10,11</entry>
</row>
<row>
<entry>P6</entry>
<entry>1</entry>
<entry>13,17</entry>
</row>
<row>
<entry>P7</entry>
<entry>3</entry>
<entry>15,19</entry>
</row>
<row>
<entry>P8</entry>
<entry>0</entry>
<entry>16,12</entry>
</row>
<row>
<entry>P9</entry>
<entry>2</entry>
<entry>18,14</entry>
</row>
<row>
<entry>P10 </entry>
<entry>1</entry>
<entry>20,21</entry>
</row>
<row>
<entry>P11 </entry>
<entry>3</entry>
<entry>22,23</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Note that parity bits P<b>12</b>-P<b>24</b> repeat the pattern of P<b>0</b>-P<b>11</b> . . .
<br/>
For generation of parity, 2 bits are exchanged between S0→S1 and S2→S3 for each 24 bit word, one bit in either direction. The following table shows the bits transmitted on each output parity bus.
</p>
<p id="p-0087" num="0097">
<tables id="TABLE-US-00020" num="00020">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="28pt" align="center"/>
<colspec colname="2" colwidth="63pt" align="center"/>
<colspec colname="3" colwidth="105pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Striper</entry>
<entry>Bus</entry>
<entry>Function (96 bits)</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>A</entry>
<entry>A4</entry>
<entry>20,44,64,92 (20 + I * 24)</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry>B</entry>
<entry>A4</entry>
<entry>9,33,57,81</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry>C</entry>
<entry>A4</entry>
<entry>22,46,66,94</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry>D</entry>
<entry>A4</entry>
<entry>11,35,59,83</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The parity calculation uses the following formulas: and the following aggregator 32 read order
</p>
<p id="p-0088" num="0098">
<tables id="TABLE-US-00021" num="00021">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="14pt" align="center"/>
<colspec colname="2" colwidth="98pt" align="center"/>
<colspec colname="3" colwidth="70pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry/>
<entry>Transmit</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Bit</entry>
<entry>stripe</entry>
<entry>XOR bits</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>P0</entry>
<entry>0</entry>
<entry>0,4,8</entry>
</row>
<row>
<entry/>
<entry>P1</entry>
<entry>3</entry>
<entry>3,7,11</entry>
</row>
<row>
<entry/>
<entry>P2</entry>
<entry>1</entry>
<entry>1,5,9</entry>
</row>
<row>
<entry/>
<entry>P3</entry>
<entry>2</entry>
<entry>2,6,10</entry>
</row>
<row>
<entry/>
<entry>P4</entry>
<entry>0</entry>
<entry>12,16,20</entry>
</row>
<row>
<entry/>
<entry>P5</entry>
<entry>3</entry>
<entry>15,19,23</entry>
</row>
<row>
<entry/>
<entry>P6</entry>
<entry>1</entry>
<entry>13,17,21</entry>
</row>
<row>
<entry/>
<entry>P7</entry>
<entry>2</entry>
<entry>14,18,22</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Note that parity bits P<b>8</b>-P<b>15</b> repeat the pattern of P<b>0</b>-P<b>11</b>.
<br/>
Parity generation requires no exchange of bits for OC192c.
<br/>
The parity calculation uses the following formulas and the following aggregator 32 read order
</p>
<p id="p-0089" num="0099">
<tables id="TABLE-US-00022" num="00022">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="91pt" align="center"/>
<colspec colname="3" colwidth="77pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry/>
<entry>Transmit</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Bit</entry>
<entry>stripe</entry>
<entry>XOR bits</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>P0</entry>
<entry>St0</entry>
<entry>0,4,8,11</entry>
</row>
<row>
<entry/>
<entry>P1</entry>
<entry>St1</entry>
<entry>1,5,9,7</entry>
</row>
<row>
<entry/>
<entry>P2</entry>
<entry>St2</entry>
<entry>2,3,6,10</entry>
</row>
<row>
<entry/>
<entry>P3</entry>
<entry>St3</entry>
<entry>15,19,22,23</entry>
</row>
<row>
<entry/>
<entry>P4</entry>
<entry>St0</entry>
<entry>12,16,18,20</entry>
</row>
<row>
<entry/>
<entry>P5</entry>
<entry>St1</entry>
<entry>21,13,14,17</entry>
</row>
<row>
<entry/>
<entry>P6</entry>
<entry>St2</entry>
<entry>26,30,33,34</entry>
</row>
<row>
<entry/>
<entry>P7</entry>
<entry>St3</entry>
<entry>27,29,31,35</entry>
</row>
<row>
<entry/>
<entry>P8</entry>
<entry>St0</entry>
<entry>24,25,28,32</entry>
</row>
<row>
<entry/>
<entry>P9</entry>
<entry>St1</entry>
<entry>37,41,44,45</entry>
</row>
<row>
<entry/>
<entry>P10 </entry>
<entry>St2</entry>
<entry>38,40,42,46</entry>
</row>
<row>
<entry/>
<entry>P11 </entry>
<entry>St3</entry>
<entry>36,39,43,47</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Generation of parity for OC192c requires each striping giving every other striper 1 bit/48 bits of data. The following table shows the bits transmitted on each output parity bus.
</p>
<p id="p-0090" num="0100">
<tables id="TABLE-US-00023" num="00023">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="28pt" align="center"/>
<colspec colname="2" colwidth="77pt" align="center"/>
<colspec colname="3" colwidth="84pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Striper</entry>
<entry>Bus</entry>
<entry>Function (96 bits)</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>A</entry>
<entry>A4</entry>
<entry>“00” &amp; 44,92</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>40,88</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>36,84</entry>
</row>
<row>
<entry/>
<entry>B</entry>
<entry>A4</entry>
<entry>“00” &amp; 25,73</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>33,81</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>29,77</entry>
</row>
<row>
<entry/>
<entry>C</entry>
<entry>A4</entry>
<entry>22,70</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>14,62</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>18,66</entry>
</row>
<row>
<entry/>
<entry>D</entry>
<entry>A4</entry>
<entry>“00” &amp; 7,55</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>3,51</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>11,59</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The parity calculation uses the following:
</p>
<p id="p-0091" num="0101">
<tables id="TABLE-US-00024" num="00024">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="77pt" align="center"/>
<colspec colname="3" colwidth="91pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry/>
<entry>Transmit</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Bit</entry>
<entry>stripe</entry>
<entry>XOR bits</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="77pt" align="char" char="."/>
<colspec colname="3" colwidth="91pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry>P0</entry>
<entry>0</entry>
<entry>0, 4, 8, 1, 5, 9</entry>
</row>
<row>
<entry/>
<entry>P1</entry>
<entry>2</entry>
<entry>2, 6, 10, 3, 7, 11</entry>
</row>
<row>
<entry/>
<entry>P2</entry>
<entry>1</entry>
<entry>13, 17, 21, 12, 16, 20</entry>
</row>
<row>
<entry/>
<entry>P3</entry>
<entry>3</entry>
<entry>15, 19, 23, 14, 18, 22</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Note that parity bits P<b>4</b>-P<b>8</b> repeat the pattern of P<b>0</b>-P<b>3</b>+24. The following table shows the bits transmitted on each output parity bus.
</p>
<p id="p-0092" num="0102">
<tables id="TABLE-US-00025" num="00025">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="28pt" align="center"/>
<colspec colname="2" colwidth="56pt" align="center"/>
<colspec colname="3" colwidth="112pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Striper</entry>
<entry>Bus</entry>
<entry>Function (96 bits)</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>A</entry>
<entry>A4</entry>
<entry>(12 × 16 × 20), (36 × 40 × 44),</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>(60 × 64 × 68), (84 × 88 × 92)</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry>B</entry>
<entry>A4</entry>
<entry>(1 × 5 × 9), (25 × 29 × 33),</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>(49 × 53 × 57), (73 × 77 × 81)</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry>C</entry>
<entry>A4</entry>
<entry>(14 × 18 × 22), (38 × 42 × 46),</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>(62 × 66 × 70), (86 × 90 × 94)</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry>D</entry>
<entry>A4</entry>
<entry>(3 × 7 × 11), (27 × 31 × 35),</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>(51 × 55 × 59), (75 × 79 × 83)</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>“00”</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The parity calculation uses the following formulas and the following aggregator 32 read order:
</p>
<p id="p-0093" num="0103">
<tables id="TABLE-US-00026" num="00026">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="98pt" align="center"/>
<colspec colname="3" colwidth="63pt" align="center"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry/>
<entry>Transmit</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Bit</entry>
<entry>stripe</entry>
<entry>XOR bits</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>P0</entry>
<entry>St0</entry>
<entry> 0-11</entry>
</row>
<row>
<entry/>
<entry>P1</entry>
<entry>St1</entry>
<entry>12-23</entry>
</row>
<row>
<entry/>
<entry>P2</entry>
<entry>St2</entry>
<entry>24-35</entry>
</row>
<row>
<entry/>
<entry>P3</entry>
<entry>St3</entry>
<entry>36-47</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bits transmitted on each output parity bus.
</p>
<p id="p-0094" num="0104">
<tables id="TABLE-US-00027" num="00027">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="28pt" align="center"/>
<colspec colname="2" colwidth="42pt" align="center"/>
<colspec colname="3" colwidth="133pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Striper</entry>
<entry>Bus</entry>
<entry>Function (96 bits)</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>A</entry>
<entry>A4</entry>
<entry>“00” &amp; (12 × 16 × 20) &amp;</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>(48 × 52 × 56)</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>(24 × 28 × 32) &amp; (48 × 52 × 56)</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>(36 × 40 × 44) &amp; (84 × 88 × 92)</entry>
</row>
<row>
<entry/>
<entry>B</entry>
<entry>A4</entry>
<entry>“00” &amp; (1 × 5 × 9) &amp;</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>(49 × 53 × 57)</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>(25 × 29 × 33) &amp; (49 × 53 × 57)</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>(37 × 41 × 45) &amp; (85 × 89 × 91)</entry>
</row>
<row>
<entry/>
<entry>C</entry>
<entry>A4</entry>
<entry>“00” &amp; (38 × 42 × 46) &amp;</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>(86 × 90 × 94)</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>(14 × 18 × 22) &amp; (62 × 66 × 70)</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>(2 × 6 × 10) &amp; (50 × 54 × 58)</entry>
</row>
<row>
<entry/>
<entry>D</entry>
<entry>A4</entry>
<entry>“00” &amp; (27 × 31 × 35) &amp; (51 × 55 × 59)</entry>
</row>
<row>
<entry/>
<entry/>
<entry>B2</entry>
<entry>(15 × 19 × 23) &amp; (63 × 67 × 71)</entry>
</row>
<row>
<entry/>
<entry/>
<entry>C2</entry>
<entry>(3 × 7 × 11) &amp; (51 × 55 × 59)</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0095" num="0105">The striper generates backpressure for the BIB bus based on FIFO utiliziation. Backpressure should be asserted if the number of free fragments in the EOP FIFO falls to less than the programmed backpressure fragment count. This fragment count will be programmed to generated backpressure with a FIFO pad of 2-3 fragments.</p>
<p id="p-0096" num="0106">Data can be read from the FIFO when either an EOP is seen at the head of the FIFO (a cell/packet is only a single fragment long) or when a fragment has been read and another fragment follows. If another fragment does not follow, it is EOP and in general the EOP must be read in concert with a previous fragment since it can be less than 54 bytes.</p>
<p id="p-0097" num="0107">When the head of the FIFO is a cell that has a fabric routeword that matches the value in the unsplit routeword register then the reading of the cell is delayed if necessary until the second cell has been stored in the FIFO. The two cells will then be read and unsplit to form a single cell to be transmitted.</p>
<p id="p-0098" num="0108">Cell synchronization uses the standard switch sync mechanism. The transmitter behavior is utilized in this chip. When configured in OC192c mode the master striper will assert the MASTER_lockdown_valid signal to all slave stripers when its own lockdown_valid signal is asserted. The master striper will also assert the MASTER_sync_valid signal to all slave stripers when its sync_valid signal is asserted. This master-controlled synchronization is necessary to ensure that all stripers start transmitting valid data the same number of cycles after transmitting the SYNC character.</p>
<p id="p-0099" num="0109">One striper will decide when to transmit data to the backplane. It will communicate that information to the other three stripers across a bus <b>22</b>. Four clock cycles after the start of the operation, the stripers will start to exchange parity data on every clock cycle while the transfer is running.</p>
<p id="h-0010" num="0000">The master striper will transmit the following signals to all slaves which will sequence reads for OC192c appropriately.</p>
<p id="p-0100" num="0110">
<tables id="TABLE-US-00028" num="00028">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="56pt" align="left"/>
<colspec colname="3" colwidth="119pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Label</entry>
<entry>Direction</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Start</entry>
<entry>Master-O</entry>
<entry>Driven to a zero to indicate start of</entry>
</row>
<row>
<entry/>
<entry/>
<entry>next fragment, one for non-start of</entry>
</row>
<row>
<entry/>
<entry/>
<entry>packet.</entry>
</row>
<row>
<entry>Numb_fab</entry>
<entry>Master-O, slave-I</entry>
<entry>Driven by the master to indicate the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>number of fabrics the current packet</entry>
</row>
<row>
<entry/>
<entry/>
<entry>should be driven to.</entry>
</row>
<row>
<entry>Stop</entry>
<entry>Master-O</entry>
<entry>Driven to a zero to indicate the last</entry>
</row>
<row>
<entry/>
<entry/>
<entry>fragment to be transmitted with the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>routeward transmitted with start. FS</entry>
</row>
<row>
<entry/>
<entry/>
<entry>bits will be figured out using internal</entry>
</row>
<row>
<entry/>
<entry/>
<entry>information in each slave.</entry>
</row>
<row>
<entry>SS_CLK</entry>
<entry>Master-O</entry>
<entry>3 clocks, one for each receiver. Used</entry>
</row>
<row>
<entry/>
<entry/>
<entry>as the bus clock for the start, numb_</entry>
</row>
<row>
<entry/>
<entry/>
<entry>fab, and stop fields.</entry>
</row>
<row>
<entry>IB_EN</entry>
<entry>Master-O</entry>
<entry>Input bus enable. If this signal is a</entry>
</row>
<row>
<entry/>
<entry/>
<entry>zero, all slaves will discard all data</entry>
</row>
<row>
<entry/>
<entry/>
<entry>from the FIFOs. This signal is set to a</entry>
</row>
<row>
<entry/>
<entry/>
<entry>one to indicate the start bit is valid.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Four clock cycles after a start has been signaled, the parity exchange bus starts working on the current packet. Each striper has a 10 bit input bus and a 10 bit output bus which are used to connect the chips together for exchange of parity information for each 96 bits of backplane data. Each chip produces a 4-bit bus and two 2-bit busses (A<b>4</b>, B<b>2</b> and C<b>2</b>). Additionally, each chip accepts a 4-bit bus and two 2-bit busses (D<b>4</b>, E<b>2</b>, F<b>2</b>). The number of bits utilized for each bus varies based on the striping configuration.
<br/>
These busses are interconnected in the following fashion.
</p>
<p id="p-0101" num="0111">
<tables id="TABLE-US-00029" num="00029">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="252pt" align="center"/>
<tbody valign="top">
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry>Output</entry>
<entry>Input Interface</entry>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="13">
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="21pt" align="center"/>
<colspec colname="3" colwidth="21pt" align="center"/>
<colspec colname="4" colwidth="21pt" align="center"/>
<colspec colname="5" colwidth="21pt" align="center"/>
<colspec colname="6" colwidth="21pt" align="center"/>
<colspec colname="7" colwidth="21pt" align="center"/>
<colspec colname="8" colwidth="21pt" align="center"/>
<colspec colname="9" colwidth="21pt" align="center"/>
<colspec colname="10" colwidth="21pt" align="center"/>
<colspec colname="11" colwidth="21pt" align="center"/>
<colspec colname="12" colwidth="21pt" align="center"/>
<colspec colname="13" colwidth="21pt" align="center"/>
<tbody valign="top">
<row>
<entry>Inter-</entry>
<entry>St 0</entry>
<entry>St 0</entry>
<entry>St 0</entry>
<entry>St 1</entry>
<entry>St 1</entry>
<entry>St 1</entry>
<entry>St 2</entry>
<entry>St 2</entry>
<entry>St 2</entry>
<entry>St 3</entry>
<entry>St 3</entry>
<entry>St 3</entry>
</row>
<row>
<entry>faces</entry>
<entry>D4</entry>
<entry>E2</entry>
<entry>F2</entry>
<entry>D4</entry>
<entry>E2</entry>
<entry>F2</entry>
<entry>D4</entry>
<entry>E2</entry>
<entry>F2</entry>
<entry>D4</entry>
<entry>E2</entry>
<entry>F2</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
<row>
<entry>Striper 0</entry>
<entry/>
<entry/>
<entry/>
<entry>A4</entry>
<entry/>
<entry/>
<entry/>
<entry>B2</entry>
<entry/>
<entry/>
<entry/>
<entry>C2</entry>
</row>
<row>
<entry>output</entry>
</row>
<row>
<entry>Striper 1</entry>
<entry>A4</entry>
<entry/>
<entry/>
<entry/>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>B2</entry>
<entry/>
<entry>C2</entry>
</row>
<row>
<entry>output</entry>
</row>
<row>
<entry>Striper 2</entry>
<entry/>
<entry>C2</entry>
<entry/>
<entry/>
<entry/>
<entry>B2</entry>
<entry/>
<entry/>
<entry/>
<entry>A4</entry>
</row>
<row>
<entry>output</entry>
</row>
<row>
<entry>Striper 3</entry>
<entry/>
<entry/>
<entry>C2</entry>
<entry/>
<entry>B2</entry>
<entry/>
<entry>A4</entry>
</row>
<row>
<entry>outputs</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
<row>
<entry namest="1" nameend="13" align="left" id="FOO-00001">Note that each output bus and input bus carry a SOF bit to indicate the start of a fragment and a clock bit. The SOF bit is multi-dropped from one chip to all 3 receivers, but 3 clock signals are formed. This gives a total output bus of 8 bits of data, 1 SOF and 3 clocks (12 bits). The receive side is 8 bits of data, 3 SOF, and 3 clocks (14 bits). Each chip will drive the SOF with its parity. 8 clock cycles of delay will be inserted in the master, 4 in each of the slaves to allow for sufficient time for parity data to be exchanged.</entry>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The version number register is a read only register which identifies the chip revision.
</p>
<p id="p-0102" num="0112">
<tables id="TABLE-US-00030" num="00030">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="56pt" align="left"/>
<colspec colname="3" colwidth="140pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:16</entry>
<entry>Unused</entry>
<entry/>
</row>
<row>
<entry>15:12</entry>
<entry>Version number</entry>
<entry>Gives the version number of the ASIC. Starting</entry>
</row>
<row>
<entry/>
<entry/>
<entry>version number is 0001.</entry>
</row>
<row>
<entry>11:0</entry>
<entry>Chip ID</entry>
<entry>Gives the chip ID of the striper.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The main control register controls the configuration of the chip.
</p>
<p id="p-0103" num="0113">
<tables id="TABLE-US-00031" num="00031">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="left"/>
<colspec colname="3" colwidth="21pt" align="left"/>
<colspec colname="4" colwidth="63pt" align="left"/>
<colspec colname="5" colwidth="84pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Reset</entry>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>Value</entry>
<entry>Mode</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:19</entry>
<entry>0</entry>
<entry>N/A</entry>
<entry>unused</entry>
<entry/>
</row>
<row>
<entry>18</entry>
<entry>N/A</entry>
<entry>R</entry>
<entry>BIB_CONN</entry>
<entry>Set this bit to enable the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>enabled</entry>
<entry>use of the BIB_CONN</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>input bus to obtain the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>fabric connection number</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>rather than finding it in the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>first four bytes of data.</entry>
</row>
<row>
<entry>17:10</entry>
<entry>16#00#</entry>
<entry>R/W</entry>
<entry>Egress rw sub field</entry>
<entry>Data field used with the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>egress rw sub enable bit.</entry>
</row>
<row>
<entry> 9</entry>
<entry>0</entry>
<entry>R/W</entry>
<entry>Egress rw sub</entry>
<entry>Set this bit to a one to</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>enable</entry>
<entry>substitute egress RW sub</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>field into the upper 8 bits</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>of the connection ID for</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>the egress RW for the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>split RW.</entry>
</row>
<row>
<entry> 8</entry>
<entry>0</entry>
<entry>R/W</entry>
<entry>BIB_BP_polarity</entry>
<entry>Set this bit to a one to</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>indicate the BIB_BP</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>signal should be active</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>high, set to a zero for</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>active low.</entry>
</row>
<row>
<entry> 7</entry>
<entry>0</entry>
<entry>R/W</entry>
<entry>BIB_SOP/Eop</entry>
<entry>Set this bit to a one to</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>polarity</entry>
<entry>indicate BIB SOP/EOP are</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>active high signals, set</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>to a zero for active low</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>signals.</entry>
</row>
<row>
<entry> 6:5</entry>
<entry>N/A</entry>
<entry>R</entry>
<entry>OC192c chip id</entry>
<entry>Returns the value of chip</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>id set on the input pins.</entry>
</row>
<row>
<entry> 4</entry>
<entry>N/A</entry>
<entry>R</entry>
<entry>OC192c</entry>
<entry>Returns the value present</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>on the OC48/oc192 pin.</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>One indicates an OC192,</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>zero an OC48.</entry>
</row>
<row>
<entry> 3</entry>
<entry>0</entry>
<entry>R/W</entry>
<entry>Input bus enable</entry>
<entry>Set this bit to a one to</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>enable receiving data on</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>the input bus.</entry>
</row>
<row>
<entry> 2:0</entry>
<entry>2#000#</entry>
<entry>R/W</entry>
<entry>Number of fabrics</entry>
<entry>Specifies the number of</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>fabrics which are used in</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>the current striping con-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>figuration. These values</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>are encoded as follows:</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>000-One fabric</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>001-Two fabrics</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>010-Three fabrics</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>011-Four fabrics</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>100-Six fabrics</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>101-twelve fabrics.</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>Note this field is only used</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>by the master chip in a</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>OC192c configuration.</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>Changing the striping con-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>figuration becomes effec-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>tive on the next start of</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>packet. Any fragmented</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>packet will have every</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>packet fragment support</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>the same striping</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>configuration.</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
This register contains a status information to report errors. All bits are cleabed on read.
</p>
<p id="p-0104" num="0114">
<tables id="TABLE-US-00032" num="00032">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="14pt" align="left"/>
<colspec colname="2" colwidth="21pt" align="left"/>
<colspec colname="3" colwidth="21pt" align="left"/>
<colspec colname="4" colwidth="56pt" align="left"/>
<colspec colname="5" colwidth="105pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Reset</entry>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>Value</entry>
<entry>Mode</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>3</entry>
<entry>0</entry>
<entry>R/C</entry>
<entry>pe_sync_error</entry>
<entry>Parity exchange sync error</entry>
</row>
<row>
<entry>2</entry>
<entry>0</entry>
<entry>R/C</entry>
<entry>loss_of_sync</entry>
<entry>Loss of global sync</entry>
</row>
<row>
<entry>1</entry>
<entry>0</entry>
<entry>R/C</entry>
<entry>packet_dropped</entry>
<entry>This bit is set to a one if a packet</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>drop has occurred. Note that this</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>should only happen in hardware</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>error situations (ignoring</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>backpressure signal), so no drop</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>counter is provided.</entry>
</row>
<row>
<entry>0</entry>
<entry>0</entry>
<entry>R/C</entry>
<entry>ICB_valid</entry>
<entry>This bit is a one when the ICB has</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>a valid packet or cell.</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The interrupt mask enables the interrupt for the given bit in the main status register. A mask bit must be set to ‘1’ in order to enable the interrupt.
</p>
<p id="p-0105" num="0115">
<tables id="TABLE-US-00033" num="00033">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="14pt" align="left"/>
<colspec colname="2" colwidth="21pt" align="left"/>
<colspec colname="3" colwidth="21pt" align="left"/>
<colspec colname="4" colwidth="56pt" align="left"/>
<colspec colname="5" colwidth="105pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Reset</entry>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>Value</entry>
<entry>Mode</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>3</entry>
<entry>0</entry>
<entry>R/C</entry>
<entry>pe_sync_error</entry>
<entry>Parity exchange sync error</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>interrupt enable</entry>
</row>
<row>
<entry>2</entry>
<entry>0</entry>
<entry>R/C</entry>
<entry>loss_of_sync</entry>
<entry>Loss of global sync error</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>interrupt enable</entry>
</row>
<row>
<entry>1</entry>
<entry>0</entry>
<entry>R/C</entry>
<entry>packet_dropped</entry>
<entry>Packet dropped interrupt enable</entry>
</row>
<row>
<entry>0</entry>
<entry>0</entry>
<entry>R/C</entry>
<entry>ICB_valid</entry>
<entry>ICB valid interrupt enable</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The output enable register controls the ports enabled for the first output busses on the device. This bit must be a one and the fabric presence bit must be asserted to enable the drivers to a fabric.
</p>
<p id="p-0106" num="0116">
<tables id="TABLE-US-00034" num="00034">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="left"/>
<colspec colname="3" colwidth="21pt" align="left"/>
<colspec colname="4" colwidth="49pt" align="left"/>
<colspec colname="5" colwidth="98pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Reset</entry>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>Value</entry>
<entry>Mode</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>12:0</entry>
<entry>16#00#</entry>
<entry>R/W</entry>
<entry>Output Enable</entry>
<entry>Set each bit to a one to enable</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>the same numbered output bus.</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>Bit 12 is the output enable for</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>parity, bits 0-11 are for outputs</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>to fabrics 0-11 respectively.</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The BIB backpressure control register controls when the striper asserts the backpressure signal. Whenever the number of available blocks (54 byte chunks) in memory falls below this value, backpressure is asserted. This register should be set equal to Max_packet_size/64K*75−4.
</p>
<p id="p-0107" num="0117">
<tables id="TABLE-US-00035" num="00035">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="14pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="left"/>
<colspec colname="3" colwidth="21pt" align="left"/>
<colspec colname="4" colwidth="21pt" align="left"/>
<colspec colname="5" colwidth="133pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Reset</entry>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>Value</entry>
<entry>Mode</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>7:0</entry>
<entry>16#00#</entry>
<entry>R/W</entry>
<entry>count</entry>
<entry>Set to the number calculated above. To</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>disable backpressure, program to zero.</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The striper provides a software interface to a cell storage location. This location can either store an ATM cell or a fragment up to 64 bytes long.
<br/>
To read a cell/fragment from the FIFO, perform the following actions:
<ul id="ul0009" list-style="none">
    <li id="ul0009-0001" num="0000">
    <ul id="ul0010" list-style="none">
        <li id="ul0010-0001" num="0118">1. Initialize the Output Enable/Trap enable register to trap a cell on the desired condition.</li>
        <li id="ul0010-0002" num="0119">2. Wait for the Trap Valid bit to be set in the main status register.</li>
        <li id="ul0010-0003" num="0120">3. The data is now available in the ICB data registers.
<br/>
To write a cell/packet, perform the following actions Disable all traps into the ICB using the ICB trap/tx enable register.
<br/>
Write the data to the Data FIFO first data registers. The first four bytes of data are used to form the fabric routeword. The next four bytes are used as memory controller routeword. The remaining bytes are used as cell/packet data.
<br/>
Write to the ICB trap/tx enable register to send the data.
<br/>
This register is used to control the storage of cells to the ICB.
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0108" num="0121">
<tables id="TABLE-US-00036" num="00036">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="left"/>
<colspec colname="3" colwidth="21pt" align="left"/>
<colspec colname="4" colwidth="49pt" align="left"/>
<colspec colname="5" colwidth="98pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Reset</entry>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>Value</entry>
<entry>Mode</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>11:6</entry>
<entry>16#00#</entry>
<entry>R/W</entry>
<entry>Byte_count</entry>
<entry>Set these bits to the number of</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>bytes to transmit from the ICB.</entry>
</row>
<row>
<entry> 5:3</entry>
<entry>2#000#</entry>
<entry>R/W</entry>
<entry>Trap_mux_sel</entry>
<entry>Selects the point in the output</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>pipeline where the data will be</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>trapped.</entry>
</row>
<row>
<entry>2</entry>
<entry>0</entry>
<entry>R/W</entry>
<entry>Transmit</entry>
<entry>Set this bit to a one to force the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>transmit of the ICB cell onto the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>backplane. After transmission,</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>this bit is cleared</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>automatically by the hardware.</entry>
</row>
<row>
<entry>1</entry>
<entry>0</entry>
<entry>R/W</entry>
<entry>DIN_recent</entry>
<entry>Set this bit to a one to trap the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>most recent cell (or first 52 bytes</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>of data for a packet) into the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>ICB.</entry>
</row>
<row>
<entry>0</entry>
<entry>0</entry>
<entry>R/W</entry>
<entry>DIN_first</entry>
<entry>Set this bit to a one to trap the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>first cell (or first 52 bytes of data</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>for a packet) into the ICB.</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
This register reads and write the location used for the fabric routeword. If a cell is captured, this is the fabric routeword which was input to the chip.
</p>
<p id="p-0109" num="0122">
<tables id="TABLE-US-00037" num="00037">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="left"/>
<colspec colname="3" colwidth="21pt" align="left"/>
<colspec colname="4" colwidth="49pt" align="left"/>
<colspec colname="5" colwidth="84pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Reset</entry>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>Value</entry>
<entry>Mode</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>29</entry>
<entry>0</entry>
<entry>R/W</entry>
<entry>Pkt_cell</entry>
<entry>Selects the packet/cell</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>indication bit.</entry>
</row>
<row>
<entry>28:26</entry>
<entry>2#000#</entry>
<entry>R/W</entry>
<entry>Stripe_amount</entry>
<entry>Gives the stripe amount</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>for the cell/packet. This</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>value is encoded as</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>follows:</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>000-One fabric</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>001-Two fabrics</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>010-Three fabrics</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>011-Four fabrics</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>100-Six fabrics</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>101-twelve fabrics.</entry>
</row>
<row>
<entry>25</entry>
<entry>0</entry>
<entry>R/W</entry>
<entry>Uc_mc</entry>
<entry>Selects the UC/MC bit for</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>the fabric.</entry>
</row>
<row>
<entry>24:0</entry>
<entry>16#0_0000#</entry>
<entry>R/W</entry>
<entry>conn</entry>
<entry>Gives the connection</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>number used by the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>fabric.</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
This register reads the byte at the head of the data FIFO.
</p>
<p id="p-0110" num="0123">
<tables id="TABLE-US-00038" num="00038">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="56pt" align="left"/>
<colspec colname="3" colwidth="21pt" align="left"/>
<colspec colname="4" colwidth="42pt" align="left"/>
<colspec colname="5" colwidth="77pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Reset</entry>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>Value</entry>
<entry>Mode</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:0</entry>
<entry>16#0000_0000#</entry>
<entry>R/W</entry>
<entry>Routeword</entry>
<entry>Gives the value of the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>memory controller</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>routeword.</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
These registers correspond to one 32 bit value in the ICB.
</p>
<p id="p-0111" num="0124">
<tables id="TABLE-US-00039" num="00039">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="56pt" align="left"/>
<colspec colname="3" colwidth="21pt" align="left"/>
<colspec colname="4" colwidth="42pt" align="left"/>
<colspec colname="5" colwidth="77pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Reset</entry>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>Value</entry>
<entry>Mode</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:0</entry>
<entry>16#0000_0000#</entry>
<entry>R/W</entry>
<entry>Data</entry>
<entry>Gives the value of the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>corresponding packet/cell</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>data.</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Note that bytes are transmitted counting ICB memory controller routeword and starting with ICB data <b>0</b> until bthe bytes count is exhausted. Non-32 bit byte count values will treat bits <b>7</b>:<b>0</b> as the first byte, bits <b>15</b>:<b>8</b> as the second, bits <b>23</b>:<b>16</b> as the third and bits <b>31</b>:<b>24</b> as the fourth.
<br/>
The synch delay register controls configuration of the counters used for synchronization.
</p>
<p id="p-0112" num="0125">
<tables id="TABLE-US-00040" num="00040">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="35pt" align="center"/>
<colspec colname="3" colwidth="21pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="left"/>
<colspec colname="5" colwidth="112pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Reset</entry>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>Value</entry>
<entry>Mode</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>15:0</entry>
<entry>16#0000#</entry>
<entry>R/W</entry>
<entry>Tick</entry>
<entry>Number of clock cycles before the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>Length</entry>
<entry>master sequence counter is in-</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>cremented. The tick length controls</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>the time duration which one sequence</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>value is transmitted. Dividing the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>programmed value by either 36</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>(OC48) or 9 (OC192) gives the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>maximum number of packets which</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>can be transmitted. Due to FIFO</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>limitations, this value should be</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>programmed to a value less than or</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>equal to 1024.</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Note that the synch_debug register should be read after updating the synch delay register to flush out any stale data in the synch debug register.
<br/>
The synch debug register is used to monitor the state of the synchronization logic.
</p>
<p id="p-0113" num="0126">
<tables id="TABLE-US-00041" num="00041">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="14pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="21pt" align="center"/>
<colspec colname="4" colwidth="35pt" align="left"/>
<colspec colname="5" colwidth="119pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Reset</entry>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>Value</entry>
<entry>Mode</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>7:0</entry>
<entry>16#00#</entry>
<entry>R</entry>
<entry>Clk_diff</entry>
<entry>The clock speed difference register is</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>used as a rough heartbeat for the</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>synch logic. It counts the number of</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>clocks in the last pause due to resynch.</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>A negative value is represented by a</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>‘1’ in the MSB of the register.</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The striper supports unsplitting for the control port. Unsplitting is taking multiple back to back cells, treating it as one AAL5 frame and transporting the AAL5 data as the raw data for the backplane. In general, there is no hardware dependancy on the number of cells which can be split or unsplit, but the prime intention is to utilize two cells to encapsulate 60 bytes of data. Cells to be unsplit in the striper are identified by an incoming routeword match on the memory controller routeword.
<br/>
The bits used for the fabric routeword are formatted as shown in the following table.
</p>
<p id="p-0114" num="0127">
<tables id="TABLE-US-00042" num="00042">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="42pt" align="center"/>
<colspec colname="3" colwidth="21pt" align="center"/>
<colspec colname="4" colwidth="49pt" align="left"/>
<colspec colname="5" colwidth="84pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Reset</entry>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>Value</entry>
<entry>Mode</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>28</entry>
<entry>0</entry>
<entry>R/W</entry>
<entry>Pck/cell</entry>
<entry>Selects the packet/cell</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>indication bit.</entry>
</row>
<row>
<entry>27:25</entry>
<entry>2#000#</entry>
<entry>R/W</entry>
<entry>Stripe_amount</entry>
<entry>Gives the stripe amount for</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>the cell/packet. This value</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>is encoded as follows:</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>000-One fabric</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>001-Two fabrics</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>010-Three fabrics</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>011-Four fabrics</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>100-Six fabrics</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>101-twelve fabrics.</entry>
</row>
<row>
<entry>24</entry>
<entry>0</entry>
<entry>R/W</entry>
<entry>UC/MC</entry>
<entry>Selects the UC/MC bit for</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>indication</entry>
<entry>the fabric.</entry>
</row>
<row>
<entry>23:0 </entry>
<entry>16#0_0000#</entry>
<entry>R/W</entry>
<entry>Fab conn numb</entry>
<entry>Gives the connection</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>number used by the fabric.</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
This register is used to identify cells which need to be put through the unsplitter. Any cell which has a memory controller routeword match this register is unsplit. It is assumed that all cells to be unsplit will be received back to back.
</p>
<p id="p-0115" num="0128">
<tables id="TABLE-US-00043" num="00043">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="56pt" align="center"/>
<colspec colname="3" colwidth="21pt" align="center"/>
<colspec colname="4" colwidth="35pt" align="left"/>
<colspec colname="5" colwidth="84pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Reset</entry>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>Value</entry>
<entry>Mode</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:0</entry>
<entry>16#0000_0000#</entry>
<entry>R/W</entry>
<entry>RW value</entry>
<entry>Gives the required value of</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>the memory controller</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>routeword for unsplitting.</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table gives the timing constraints used for timing analysis. Any designs which meet these constraints should work across any respins. The columns have the following meanings:
</p>
<p id="p-0116" num="0129">
<tables id="TABLE-US-00044" num="00044">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="175pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>CLK</entry>
<entry>Gives the reference clock for the timing. All timing values</entry>
</row>
<row>
<entry/>
<entry>are given in reference to the clock signal arriving at the</entry>
</row>
<row>
<entry/>
<entry>assocatiated clock pin on striper.</entry>
</row>
<row>
<entry>Min_time</entry>
<entry>This gives the minimum amount of time before an output</entry>
</row>
<row>
<entry/>
<entry>signal transitions. This can be used to calculate hold time.</entry>
</row>
<row>
<entry>Max_time</entry>
<entry>This gives the maximum amount of time until an output</entry>
</row>
<row>
<entry/>
<entry>signal is stable.</entry>
</row>
<row>
<entry>Output Load</entry>
<entry>Load used for max_time. Other loads can be used, greater</entry>
</row>
<row>
<entry/>
<entry>loads increase time, smaller loads decrease time.</entry>
</row>
<row>
<entry>Drive</entry>
<entry>Type of drive book.</entry>
</row>
<row>
<entry>Comments</entry>
<entry>Any comments (primarely on the derrivation of output</entry>
</row>
<row>
<entry/>
<entry>load).</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="7">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="35pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="42pt" align="center"/>
<colspec colname="6" colwidth="42pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry/>
<entry>ClkM</entry>
<entry/>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry/>
<entry/>
<entry>in</entry>
<entry>Max</entry>
<entry>Output</entry>
</row>
<row>
<entry/>
<entry>Pin</entry>
<entry>Time</entry>
<entry>Time</entry>
<entry>Load</entry>
<entry>Drive</entry>
<entry>Comments</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="6" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>TDO</entry>
<entry>TCK</entry>
<entry/>
<entry/>
<entry>10 pF</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="6" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table gives the input timing. The columns have the following meanings:
</p>
<p id="p-0117" num="0130">
<tables id="TABLE-US-00045" num="00045">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="182pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>CLK</entry>
<entry>Gives the reference clock for the timing. A value of N/A</entry>
</row>
<row>
<entry/>
<entry>either means the signal is not speced for transition or that the</entry>
</row>
<row>
<entry/>
<entry>signal is not assumed to asynchronous wrt all input clocks.</entry>
</row>
<row>
<entry>Setup/hold</entry>
<entry>same thing they mean everywhere else.</entry>
</row>
<row>
<entry>Pin cap</entry>
<entry>Pin capacitince presented by the receiver or bidi.</entry>
</row>
<row>
<entry>Comments</entry>
<entry>Any comments (primarely on the derrivation of output load).</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The chip was timed assuming the following arrival times for clocks:
</p>
<p id="p-0118" num="0131">
<tables id="TABLE-US-00046" num="00046">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="21pt" align="center"/>
<colspec colname="3" colwidth="35pt" align="center"/>
<colspec colname="4" colwidth="126pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="4" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry/>
<entry>Supported</entry>
<entry/>
</row>
<row>
<entry>Clock</entry>
<entry>Clock</entry>
<entry>Skew</entry>
<entry>Notes</entry>
</row>
<row>
<entry namest="1" nameend="4" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>AD_CLK</entry>
<entry>any</entry>
<entry>Any</entry>
<entry>AD_CLK is asynchronous with rest of</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>chip. Unstriper supports speeds from 20</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>MHz to 33 MHz on AD_CLK. The speed</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>limit on the AD clock is primarely I/O</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>timing releated, chip internals run up to</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>40. Any applications which desire above</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>33 MHz should talk to the design team.</entry>
</row>
<row>
<entry namest="1" nameend="4" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0119" num="0132">The structure of the Unstriper is shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0120" num="0133">The Synchronizer de-skews SOB data based on information obtained during global synchronization. Valid received data is sent to the RW/Data Separator <b>34</b>.</p>
<p id="p-0121" num="0134">The route word data separator <b>34</b> takes the current switch <b>10</b> configuration and separates route words and data into separate paths. Route words are passed to the Routeword Voter. Data is written into the Data Delay FIFO.</p>
<p id="p-0122" num="0135">The Routeword Voter detects differences in the routeword stream and passes the error vector downstream. In OC192c mode, the Routeword Voter utilizes the Routeword Exchange bus to communicate routeword and End-of-Packet (EOP) information across the four Unstripers.</p>
<p id="p-0123" num="0136">The Data Delay FIFO stores raw incoming receiver data until a valid number-of-fabrics (NF) has been extracted from the valid routeword. The NF is used to extract the fabric data from the received data for the Fragment FSM.</p>
<p id="p-0124" num="0137">The Fragment FSM receives data from the Data Delay FIFO and constructs 48-bit cycles of data that are then passed to the Parity Check+Fabric Data Regeneration block. This step is necessary for 40, 80 and 240-slow bandwidth configuration modes as they do not provide a full 48-bits of data per cycle.</p>
<p id="p-0125" num="0138">Parity Check+Data Regeneration will form up to thirteen (twelve fabrics plus one parity) data streams that will be checked for parity errors. Each generated data stream will be output to a checksum checker. In OC192c mode the Parity Exchange bus is used to compute the parity across all of the fabric data.</p>
<p id="p-0126" num="0139">The checksum checkers perform an error check on the incoming data. There is one checksum for each of the thirteen regenerated data streams coming out of Parity Check+Data Regeneration. The checksum checkers support two logical contexts and can switch between them. One logical context is used to support unicast (UC) traffic coming from the fabrics and one to support multicast (MC) traffic coming from the fabrics.</p>
<p id="p-0127" num="0140">Output Data Select finds an output combination with valid routewords and a passing checksum (if one exists). If so, the valid output select is passed to the Output Data Formatter block, which then reads the data from the Fabric Data FIFO substituting regenerated data for up to one fabric if necessary. In OC192c mode, the Error Exchange bus is used by each slave Unstriper to send its error information to the master Unstriper. The master Unstriper uses all of the error information received plus its own error information to determine the valid combination inputs, if any, and sends the determination back to each slave Unstriper.</p>
<p id="p-0128" num="0141">These buffers defragment and store the received data and the regenerated data during the checksum checking and while it is waiting to go out the output interface. These buffers are sized sufficiently large to hold one 64K packet for UC traffic and one 64K packet for MC traffic.</p>
<p id="p-0129" num="0142">The Output Data Formatter select forwards the data from the Reassembly Buffers to the BOB FIFO for the output mapping indicated by the Output Select FIFO. The mapping given in the output selection word is assumed to be valid for the entire packet/cell.</p>
<p id="p-0130" num="0143">The BOB FIFO (one for each context) buffers data during periods of backpressure from the BOB interface or while the other context is actively using the BOB I/F. All packets stored into these FIFOs start on 64-bit boundaries.</p>
<p id="p-0131" num="0144">The output of the BOB FIFO is where the data crosses from the core clock domain to the BOB clock domain.</p>
<p id="p-0132" num="0145">The BOB I/F forwards data to the Segmenter from the UC and MC BOB Data FIFOs based on order of arrival of packets to those FIFOs. In OC192c mode the Packet Length Exchange bus is used so that each Unstriper can properly shorten minimum length packets (&gt;=52 bytes) that represent short packets (&lt;52 bytes). Byte <b>52</b> of the minimum length packet contains the actual length of the short packet. In OC192c mode each Unstriper receives two bits of this length which must then be sent to the other Unstripers to reconstruct the entire 8-bit value.</p>
<p id="p-0133" num="0146">The packet length exchange occurs at this point in the flow because it is the first place where this is only one context and the data is valid.</p>
<p id="p-0134" num="0147">The Segmenter divides packets into AAL5 encapsulated ATM cells. The Segmenter has a BOB-style interface with the Unstriper to support its development as a separate effort.</p>
<p id="p-0135" num="0148">The following table gives the I/O definition for the chip. The DIR column indicates an output is either an input (I), output (O) or bidir (B).</p>
<p id="h-0011" num="0000">Chip mode is a 3 bit bus. It has the following signals.</p>
<p id="p-0136" num="0149">
<tables id="TABLE-US-00047" num="00047">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="35pt" align="left"/>
<colspec colname="3" colwidth="161pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Chip</entry>
<entry/>
<entry/>
</row>
<row>
<entry>Mode</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>2</entry>
<entry>Mode</entry>
<entry>Tie to a one for OC192, zero for an OC48.</entry>
</row>
<row>
<entry>1:0</entry>
<entry>Chip_id</entry>
<entry>For OC192, connect to the starting bit number. Note</entry>
</row>
<row>
<entry/>
<entry/>
<entry>that chip_id = “00” is the master controller for</entry>
</row>
<row>
<entry/>
<entry/>
<entry>OC192. For OC48, these pins should be tied high.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0137" num="0150">
<tables id="TABLE-US-00048" num="00048">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="7">
<colspec colname="1" colwidth="77pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="35pt" align="center"/>
<colspec colname="5" colwidth="35pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="49pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="7" align="center" rowsep="1"/>
</row>
<row>
<entry>Function</entry>
<entry>Words</entry>
<entry>Width</entry>
<entry># of bits</entry>
<entry>WR freq</entry>
<entry>RD freq</entry>
<entry>Type</entry>
</row>
<row>
<entry namest="1" nameend="7" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="7">
<colspec colname="1" colwidth="77pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="char" char="."/>
<colspec colname="3" colwidth="28pt" align="char" char="."/>
<colspec colname="4" colwidth="35pt" align="char" char="."/>
<colspec colname="5" colwidth="35pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="49pt" align="left"/>
<tbody valign="top">
<row>
<entry>Valid Routeword FIFO</entry>
<entry>128</entry>
<entry>66</entry>
<entry>8448</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry>Data Delay FIFO</entry>
<entry>256</entry>
<entry>92</entry>
<entry>23552</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-SRAM</entry>
</row>
<row>
<entry>Incoming Data FIFO-UC</entry>
<entry>5632</entry>
<entry>96</entry>
<entry>540672</entry>
<entry>125</entry>
<entry>125</entry>
<entry>1 port-SRAM</entry>
</row>
<row>
<entry>Incoming Data FIFO-MC</entry>
<entry>5632</entry>
<entry>96</entry>
<entry>540672</entry>
<entry>125</entry>
<entry>125</entry>
<entry>1 port-SRAM</entry>
</row>
<row>
<entry>Regen'd Data FIFO-UC</entry>
<entry>5632</entry>
<entry>96</entry>
<entry>540672</entry>
<entry>125</entry>
<entry>125</entry>
<entry>1 port-SRAM</entry>
</row>
<row>
<entry>Regen'd Data FIFO-MC</entry>
<entry>5632</entry>
<entry>96</entry>
<entry>540672</entry>
<entry>125</entry>
<entry>125</entry>
<entry>1 port-SRAM</entry>
</row>
<row>
<entry>Output Select FIFO</entry>
<entry>3072</entry>
<entry>28</entry>
<entry>86016</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-SRAM</entry>
</row>
<row>
<entry>BOB Data FIFO-UC</entry>
<entry>4096</entry>
<entry>128</entry>
<entry>524288</entry>
<entry>125</entry>
<entry>125</entry>
<entry>1 port-SRAM</entry>
</row>
<row>
<entry>BOB Data FIFO-MC</entry>
<entry>4096</entry>
<entry>128</entry>
<entry>524288</entry>
<entry>125</entry>
<entry>125</entry>
<entry>1 port-SRAM</entry>
</row>
<row>
<entry>Terminated Cell FIFO</entry>
<entry>256</entry>
<entry>38</entry>
<entry>9728</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry>Sync FIFO-Rcvr 0</entry>
<entry>256</entry>
<entry>10</entry>
<entry>2560</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry>Sync FIFO-Rcvr 1</entry>
<entry>256</entry>
<entry>10</entry>
<entry>2560</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry>Sync FIFO-Rcvr 2</entry>
<entry>256</entry>
<entry>10</entry>
<entry>2560</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry>Sync FIFO-Rcvr 3</entry>
<entry>256</entry>
<entry>10</entry>
<entry>2560</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry>Sync FIFO-Rcvr 4</entry>
<entry>256</entry>
<entry>10</entry>
<entry>2560</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry>Sync FIFO-Rcvr 5</entry>
<entry>256</entry>
<entry>10</entry>
<entry>2560</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry>Sync FIFO-Rcvr 6</entry>
<entry>256</entry>
<entry>10</entry>
<entry>2560</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry>Sync FIFO-Rcvr 7</entry>
<entry>256</entry>
<entry>10</entry>
<entry>2560</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry>Sync FIFO-Rcvr 8</entry>
<entry>256</entry>
<entry>10</entry>
<entry>2560</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry>Sync FIFO-Rcvr 9</entry>
<entry>256</entry>
<entry>10</entry>
<entry>2560</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry>Sync FIFO-Rcvr 10</entry>
<entry>256</entry>
<entry>10</entry>
<entry>2560</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry>Sync FIFO-Rcvr 11</entry>
<entry>256</entry>
<entry>10</entry>
<entry>2560</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry>Sync FIFO-Rcvr 12</entry>
<entry>256</entry>
<entry>10</entry>
<entry>2560</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry>Sync FIFO-Rcvr 13</entry>
<entry>256</entry>
<entry>10</entry>
<entry>2560</entry>
<entry>125</entry>
<entry>125</entry>
<entry>2 port-RA</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>35840</entry>
</row>
<row>
<entry>Total</entry>
<entry/>
<entry/>
<entry>3374848</entry>
</row>
<row>
<entry namest="1" nameend="7" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0138" num="0151">SOB synchronization uses the standard Switch Global Synchronization mechanism. The Unstriper implements the receiver portion of the synchronization logic.</p>
<p id="p-0139" num="0152">All received routewords (as determined by the contents of the Input Enables register) are compared against the routeword immediately below it (where below is over the routewords 0 to N−1 for a switch with N fabrics). Any single mismatch will have two adjacent zeros and the rest ones. A double mismatch will result in more than one region of zeros or a region with more than two adjacent zeros. In the single error case, the first location with a mismatch is the erroneous location (a lane is considered correct if its comparison output is a one or if the next comparison output is a one). The voting results are maintained during the processing of a single routeword so that fabrics that mismatch will continue to mismatch. The lowest numbered fabric which matched every cycle is passed forward to the Data Delay FIFO along with a vector of mismatches.</p>
<p id="p-0140" num="0153">The voter becomes out-of-sync if before reaching the end of a routeword all fabrics have a mismatch. The voter requires an IDLE on the SOB to re-sync to the incoming routeword stream as it provides a known packet boundary. The Data Delay FIFO must also flush all data received since the end of the last successfully voted routeword.</p>
<p id="p-0141" num="0154">In OC192c, each Unstriper receives the same route word bits after routeword exchange, so it can perform local comparison of route word data.</p>
<p id="p-0142" num="0155">In OC192c mode each Unstriper only receivers a portion of the switch <b>10</b> routeword. In order to properly determine needed values including the locatoin of the last valid byte each Unstriper exchanges its portion of the routeword with the other Unstripers.</p>
<p id="p-0143" num="0156">All fields within the switch <b>10</b> routword are relevant except the EOP field. In particular the SOP field occurring as the first non-zero even-numbered bit signals the start of a Switch Routeword. The PT field designates whether the transfer is a packet or a cell. This is only significant when transmitting the received data on the BOB. The CONN field is only important for Path Error Cell identification (bit <b>0</b> non-zero and bit <b>25</b> zero) and for Unicast/Multicast context identification (bit <b>25</b>). The NF field indicates the number of fabrics over which the transfer was sriped which is absolutely necessary for unstriping the transfer. Finally the Stop/Final variable length encoding which is used to determine the length of the transfer and whether it is a final fragment or not.</p>
<p id="p-0144" num="0157">One of the most important characteristics of the Switch Routeword is that it encodes the length of the transfer in bytes. The parser determines the length and transmits it with the fully parsed routeword to the Data Delay FIFO.</p>
<p id="p-0145" num="0158">The Switch Routeword contains a parity bit which respresents the odd parity computed over the first 32 bits of the routeword. If the value parsed from the routeword is not the same as the value obtained by applying the parity function to the first 32 bits received then a Routeword Parity Error is signaled causing the Routeword Parity Error Count register to be incremented. Transfers are not dropped immediately if there is a routeword parity error. The transfer is allowed to proceed but the error is sent with the transfer to ensure that it is eventually dropped.</p>
<p id="p-0146" num="0159">The NF field of the routeword has to be consistent with the configuration of the Unstriper if this isn't the case then an error is signaled causing the Routeword NF Error Count register to be incremented for each such routeword received.</p>
<p id="p-0147" num="0160">The Unstriper takes the NF field from the switch routeword and the parity bits (fabric <b>0</b>) and forms NF+1 output streams with the N input streams of data based on each of the input data streams potentially having a problem. Each resulting data stream is passed to a dedicated checksum verifier that checks whether the data stream is valid.</p>
<p id="p-0148" num="0161">The data checking function will also form a routeword valid bit for each of the data streams by ORing all of the routeword valid bits for all utilized input streams.</p>
<p id="p-0149" num="0162">Data checking is performed over an entire packet with errors being reported only once for the affected packet.</p>
<p id="p-0150" num="0163">The data for any single fabric <b>14</b> may be regenerated by replacing the fabric <b>14</b> data with the parity fabric <b>14</b> data and computing a new parity fabric <b>14</b> value. The newly computed parity fabric <b>14</b> value should be identical to the original fabric <b>14</b> data that is being regenerated. If this is not the case then either the fabric <b>14</b> data is erroneous or some other fabric <b>14</b> (including the parity) is erroneous. The parity check compares the original data with the regenerated data and if there's a difference a parity error is signaled for the affected packet.</p>
<p id="p-0151" num="0164">The data checking function forms a 16-bit checksum using the following algorithm.
<ul id="ul0011" list-style="none">
    <li id="ul0011-0001" num="0000">
    <ul id="ul0012" list-style="none">
        <li id="ul0012-0001" num="0165">1. The incoming bit stream is separated into 4 bit streams based on the bit number mod 4=a constant. Each bit stream will have an independent checking function implemented. This bit stream includes all data received for a packet or cell except the 16-bit checksum at the end of the final fragment.</li>
        <li id="ul0012-0002" num="0166">2. A standard 16-bit CRC function (X<sup>16</sup>+X<sup>12</sup>+X<sup>5</sup>+1) is applied to each of the 4 data streams. The CRC is preset at the beginning of each packet or cell.</li>
        <li id="ul0012-0003" num="0167">3. Four bits are selected from each of the resulting 4 CRCs and concatenated together to form the final 16-bit checksum. Each slice will use ((bit_number mod 4)*4+3 to (bit_number mod 4)*4.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0152" num="0168">For an input stream to pass the checksum as computed above must match the checksum extracted from the end of the packet/cell. The checksum algorithnm is defined in this way to ensure that OC192c can be supported with minimal overhead. Any CRC over all the data would require the exchange of up to 13 CRC terms per OC192c cell/packet time (which is 2 clock cycles). Since data checking is separate for each slice, the information which needs to be collected at the end is the pass/fail data from each of the 13 CRC functions in all 4 chips and then a final pass/fail can be constructed.</p>
<p id="p-0153" num="0169">The output stream used will be the first output stream found which has a valid routeword and a valid checksum at the end of the packet or cell. Note that this will default to not using parity if the non-parity data is correct.</p>
<p id="p-0154" num="0170">Routeword and data errors may both be present. If a routeword error occurs it invalidates the input stream on which it occurred even if that stream passes all other tests. Any input combination that uses such a stream is also erroneous.</p>
<p id="p-0155" num="0171">If the Data Delay FIFO is being backpressured by the Reassembly Buffers then the valid routewords obtained from the Routeword Voter have to be stored until the Data Delay FIFO is released. The Valid Routeword FIFO stores up to 128 routewords corresponding to the number of minimum length fragments that may be stored in the Data Delay FIFO in OC192c mode.</p>
<p id="p-0156" num="0172">Until a complete fragment has been received it is necessary to retain all of the data associated with the routeword. The Data Delay FIFO stores the raw data from the transceivers until the stripe amount of the fragment has been determined from the routeword. If no valid routeword was received then the data in the Data Delay FIFO following the last valid routeword has to be skipped.</p>
<p id="p-0157" num="0173">The Reassembly Buffer is where fragmented packets are reassembled prior to being reformatted for transmission on the BOB. There is a separate Reassembly Buffer for unicast and for multicast traffic since fragments from each context may be received interleaved. Each Reassembly Buffer must be large enough to store a single 64 KB packet plus additional storage to compensate for the Output Select latency following the Checksum Check.</p>
<p id="p-0158" num="0174">The Output Select FIFO is sized to allow for one 64K packet followed by a stream of ATM cells or smallest possible packet size packets. The data stored in this FIFO is the combination of input data lanes to use in reconstructing the data. This FIFO is sized as 64K/52 bytes=1261 entries. Each entry has two fields: (1) a port select field and (2) a byte count. The port select field is 13 bits wide and indicates that the selected input ports to be used. The only values written with non-zero data will be for valid entries, so the output data select will first count ones and use that to figure out the width of each selected interface. The second field is a 16 bit byte count is stored in the FIFO to track packet size. (The actual needed size on this FIFO should actually be (64K-8K)/52 bytes or 1102 entries.) Actual grown size will probably be 1280 words (1K+256).</p>
<p id="p-0159" num="0175">After the input combination is selected, the data for either a unicast or multicast context is converted from 3-byte to 4-byte cycles and stored in the BOB Data FIFO for the same context. The order in which the packet was selected determines the order in which it is transmitted on the BOB. This orders the packets by the arrival of their final fragments.</p>
<p id="p-0160" num="0176">In OC192c mode, four Unstripers will get data in parallel. The four Unstripers will exchange routeword information on the cell receipt and also exchange end of packet information. After CRC checks, the pass/fail information will be passed from each slave Unstriper to the master Unstriper which will then make a decision on which lane is accepted across all chips and transmit that decision to each slave Unstriper.</p>
<p id="p-0161" num="0177">Routeword exchange is used so that all four Unstripers have the complete routeword. Bits are voted locally in each Unstriper to see if they match. The resulting bits out of routeword voting are passed to all Unstripers on a clock cycle by clock cycle basis. Each Unstriper starts transmitting and flagging routeword exchange at the receipt of a synch pulse on the backplane and data is exchanged every clock cycle thereafter until the next resynch event.</p>
<p id="p-0162" num="0178">After routeword exchange, all four Unstripers have the entire fabric routeword.</p>
<p id="p-0163" num="0179">
<tables id="TABLE-US-00049" num="00049">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="70pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="119pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Number</entry>
<entry/>
</row>
<row>
<entry/>
<entry>of</entry>
</row>
<row>
<entry>Pin Name</entry>
<entry>copies</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>RW_SYNC_in(2:0)</entry>
<entry>1</entry>
<entry>1 cycle pulse to indicate a synch pulse.</entry>
</row>
<row>
<entry/>
<entry/>
<entry>All sync pulses are lined up to form</entry>
</row>
<row>
<entry/>
<entry/>
<entry>valid routewords.</entry>
</row>
<row>
<entry>RW_SYNC_out</entry>
<entry>1</entry>
<entry>Gives indication that a sync pulse was</entry>
</row>
<row>
<entry/>
<entry/>
<entry>received and routeword data will start</entry>
</row>
<row>
<entry/>
<entry/>
<entry>to follow.</entry>
</row>
<row>
<entry>RW_out(3:0)</entry>
<entry>1</entry>
<entry>Routeword data output to each</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Unstriper</entry>
</row>
<row>
<entry>RW_in(3:0)</entry>
<entry>3</entry>
<entry>Gives the incoming routeword data</entry>
</row>
<row>
<entry/>
<entry/>
<entry>from the each of the other Unstripers.</entry>
</row>
<row>
<entry>RW_CLK_in(2:0)</entry>
<entry>1</entry>
<entry>Clock for the routeword/sync in bits</entry>
</row>
<row>
<entry/>
<entry/>
<entry>from each Unstriper.</entry>
</row>
<row>
<entry>RW_CLK_out</entry>
<entry>3</entry>
<entry>Clock for outgoing routeword/sync</entry>
</row>
<row>
<entry/>
<entry/>
<entry>indication.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0164" num="0180">The parity exchange bus is used to communicate parity information between the Unstripers. For certain stripe amounts, the parity exchange bus must communciate certain data bits (or the exclusive-or of certain data bits) between Unstripers. The Parity Exchange bus enables each Unstriper to send 8-bits of data to each of the other Unstripers each clock cycle.</p>
<p id="p-0165" num="0181">
<tables id="TABLE-US-00050" num="00050">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="70pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="119pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Number</entry>
<entry/>
</row>
<row>
<entry/>
<entry>of</entry>
</row>
<row>
<entry>Pin Name</entry>
<entry>copies</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>PE_SOP(2:0)</entry>
<entry>1</entry>
<entry>1 cycle pulse to indicate to advance to</entry>
</row>
<row>
<entry/>
<entry/>
<entry>the next cell/packet.</entry>
</row>
<row>
<entry>PE_CLK_in(2:0)</entry>
<entry>1</entry>
<entry>Each chip receives a clock for the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>associcated SOP signal. Note that the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>SOP is multidropped, the clock is not.</entry>
</row>
<row>
<entry/>
<entry/>
<entry>(Each chip drives 3 copies of its clock,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>so it has 3 outputs and 3 inputs).</entry>
</row>
<row>
<entry>PE_CLK_out</entry>
<entry>3</entry>
<entry>Clock sent out with each lane of data to</entry>
</row>
<row>
<entry/>
<entry/>
<entry>the other Unstripers.</entry>
</row>
<row>
<entry>PE_VALID_in(2:0)</entry>
<entry>1</entry>
<entry>When asserted indicates that the other</entry>
</row>
<row>
<entry/>
<entry/>
<entry>inputs contain valid data.</entry>
</row>
<row>
<entry>PE_VALID_out</entry>
<entry>1</entry>
<entry>Asserted to indicate that the other</entry>
</row>
<row>
<entry/>
<entry/>
<entry>outputs contain valid data.</entry>
</row>
<row>
<entry>PE_DATA_out(15:0)</entry>
<entry>3</entry>
<entry>Exchanges the bits necessary for parity</entry>
</row>
<row>
<entry/>
<entry/>
<entry>calculation. Exact exchange depends on</entry>
</row>
<row>
<entry/>
<entry/>
<entry>the number of fabrics. Each chip has an</entry>
</row>
<row>
<entry/>
<entry/>
<entry>output 16-bit data bus for every other</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Unstriper. The exact data exchanged on</entry>
</row>
<row>
<entry/>
<entry/>
<entry>these busses depends on the stripe</entry>
</row>
<row>
<entry/>
<entry/>
<entry>amount. Each Unstriper will start</entry>
</row>
<row>
<entry/>
<entry/>
<entry>driving data at the same time as</entry>
</row>
<row>
<entry/>
<entry/>
<entry>PE_SOP.</entry>
</row>
<row>
<entry>PE_DATA_in(15:0)</entry>
<entry>3</entry>
<entry>Received parity data from each Un-</entry>
</row>
<row>
<entry/>
<entry/>
<entry>striper. This data is synchronous with</entry>
</row>
<row>
<entry/>
<entry/>
<entry>the corresponding PE_CLK_in.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0166" num="0182">The error exchange bus allows three chips to communicate to a master the individual pass/fail results of the thirteen CRCs run by the chip and an indication of a parity error in the incoming data. The master combines the results of all of the chips together into one passing lane and signals the passing lane on the CRC selection pins. Note that there are only two valid passing configurations for any given packet. Either one CRC can pass and all others fail or all CRCs can pass.</p>
<p id="p-0167" num="0183">The individual fields of this bus are given in the table below.</p>
<p id="p-0168" num="0184">
<tables id="TABLE-US-00051" num="00051">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="56pt" align="left"/>
<colspec colname="2" colwidth="63pt" align="left"/>
<colspec colname="3" colwidth="98pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Label</entry>
<entry>Direction</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>EE_Parity</entry>
<entry>Slave-1 bit output</entry>
<entry>Driven low to indicate a parity</entry>
</row>
<row>
<entry/>
<entry>Master-3 bit input</entry>
<entry>error. Valid at the same time as</entry>
</row>
<row>
<entry/>
<entry/>
<entry>CRC results.</entry>
</row>
<row>
<entry>EE_CRC (3:0)</entry>
<entry>Slave-4 bit output</entry>
<entry>Slave-drives:</entry>
</row>
<row>
<entry/>
<entry>Master-12 bit input</entry>
<entry>“1111” = idle</entry>
</row>
<row>
<entry/>
<entry/>
<entry>“1110” = all CRCs pass</entry>
</row>
<row>
<entry/>
<entry/>
<entry>“1101” = drop</entry>
</row>
<row>
<entry/>
<entry/>
<entry>“0000”-“1100” = passing</entry>
</row>
<row>
<entry/>
<entry/>
<entry>input combination</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Note that no drop will occur</entry>
</row>
<row>
<entry/>
<entry/>
<entry>until the output select signals a</entry>
</row>
<row>
<entry/>
<entry/>
<entry>drop.</entry>
</row>
<row>
<entry>EE_Valid</entry>
<entry>Slave-1 bit output</entry>
<entry>Gives the source clock for the</entry>
</row>
<row>
<entry/>
<entry>Master-3 bit input/1</entry>
<entry>outputs running between chips.</entry>
</row>
<row>
<entry/>
<entry>bit output</entry>
<entry>Each chip will drive its</entry>
</row>
<row>
<entry/>
<entry/>
<entry>EE_CRC and EE_Parity bits</entry>
</row>
<row>
<entry/>
<entry/>
<entry>based on its local clock and then</entry>
</row>
<row>
<entry/>
<entry/>
<entry>ship all of these to the other</entry>
</row>
<row>
<entry/>
<entry/>
<entry>sources.</entry>
</row>
<row>
<entry>EE_OutSel(3:0)</entry>
<entry>Slave-4 bit input</entry>
<entry>Master-drives:</entry>
</row>
<row>
<entry/>
<entry>Master-4 bit output</entry>
<entry>“1111” = packet should be</entry>
</row>
<row>
<entry/>
<entry/>
<entry>trapped</entry>
</row>
<row>
<entry/>
<entry/>
<entry>“1110” = idle</entry>
</row>
<row>
<entry/>
<entry/>
<entry>“1101” = drop</entry>
</row>
<row>
<entry/>
<entry/>
<entry>“0000”-“1100” for a valid</entry>
</row>
<row>
<entry/>
<entry/>
<entry>output select.</entry>
</row>
<row>
<entry>EE_Clk</entry>
<entry>Slave-1 bit output</entry>
<entry>Clock signal for error data or</entry>
</row>
<row>
<entry/>
<entry>Master-3 bit output/</entry>
<entry>output select.</entry>
</row>
<row>
<entry/>
<entry>3 bit input</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0169" num="0185">The master/slave configuration is based on the relative chip id of the chip in the chipset. Chip <b>0</b> is treated as the master and chips <b>1</b>, <b>2</b>, and <b>3</b> are treated as slaves. Chip <b>0</b> is responsible for enforcing the trap condition in OC192c operation and will maintain the error counters and generate any error conditions due to interrupts exceeding thresholds.</p>
<p id="p-0170" num="0186">The SOP/C Synchronization Bus is provided to minimize the skew of the BOB SOP/C signals coming from each Unstriper. Each Unstriper sends its BOB_SOP_C signal to each of the other Unsripers and receives theirs. The packet is transmitted on the cycle following the receipt of all of the SOP/Cs. If all of the SOP/Cs are not received within the allotted time the SOP/C Sync Err bit is asserted in the Main Status Register. Note that these signals are not source synchronous.</p>
<p id="p-0171" num="0187">The Unstripers are connected in a bit interleaved fashion similar to the Stripers in OC192c mode. One pin is used to indicate from the master to the three slaves that a new packet/cell is about to be started. This signal is asserted 3 clocks before the start of the data. This signal is synchronous with the output clock domain. The signal is driven to a one to indicate the start of a packet, driven to a zero to indicate no start. Three clock cycles after it appears on the external net, the data will be driven onto the output bus to the memory controller.</p>
<p id="p-0172" num="0188">The Unstriper provides the capability to terminate injected cells/packets which are used to help isolate any error conditions present in the switch <b>10</b>. On receipt of these special cells or packets, the Unstriper will process them conventionally, except that they are not actually passed to the output. Whenever a cell or packet is received which is identified as a path error cell, its egress routeword is trapped along with an indication if the cell was received without error or exactly where the error location was seen. Termination cells are flagged as unicast cells with bit <b>0</b> of the fabric <b>14</b> connection number equal to a one. A FIFO of the routeword data of termination cells received is maintained by the Unstriper. When the number of FIFO entries exceeds a threshold, an interrupt is generated.</p>
<p id="p-0173" num="0189">In addition to trapping routewords for the path error cells, the Unstriper can also optionally trap the routewords for any erroneous cells.</p>
<p id="p-0174" num="0190">The FIFO is constructed to be 256 entries deep. Overflows are dropped on the write side of the FIFO.</p>
<p id="p-0175" num="0191">The assignment of data bits to fabrics is done in the context of a bit stream view of the data. The data is viewed as being broken into blocks of 48 bits and assignment of data bits to fabrics is done within the 48-bit blocks. A start of packet always starts a new 48-bit block. Striping is defined as the mechanism that assigns the bit streams to the backplane bus bits. Striping is defined to meet the following criteria:
<ul id="ul0013" list-style="none">
    <li id="ul0013-0001" num="0000">
    <ul id="ul0014" list-style="none">
        <li id="ul0014-0001" num="0192">1. OC48 data cannot have more than 8 bits of pad required on the backplane bus. A bit assignment which has all groups of 12 bits transmitted on the same clock cycle will satisfy this property. For example, this states that for data bits <b>0</b>:<b>35</b>, bits <b>0</b>:<b>11</b> are transmitted on cycle 1, 12:23 on cycle 2 and 24:35 on cycle 3. The other way to approach this would be to allow for shifts within a byte of data. For example bit <b>9</b> and bit <b>13</b> could shift positions because bit <b>9</b> and bit <b>15</b> are part of the same byte, so if one is used the other must also be used.</li>
        <li id="ul0014-0002" num="0193">2. OC192 data cannot have more than 40 bits of pad required for the backplane bus. Note that this is actually a subset of #1 since this requires that all groups of 48 are transmitted on the same clock cycle for the backplane bus.</li>
        <li id="ul0014-0003" num="0194">3. The striping definition must not require chip/chip communication for data for OC192 operation and the backplane busses must exist largely unchanged from OC192 and OC48. The assignment of bits to the stripers must allow for the same number of bits to go to each fabric <b>14</b> from each striper in OC192 mode.</li>
        <li id="ul0014-0004" num="0195">4. All fabrics must have exactly the same bits going to the memory controllers for either an OC48 or an OC192 input port. On the output side, the same bits leave the memory controller and must be convertible into the backplane bus required for either an OC48 or an OC192 output port.
<br/>
The striping function will be defined by constructing an OC192 solution and modifying OC48 behavior to match the OC192 solution. For each of the striping configurations, a table will be constructed which will give the bit assignments for striping. Each row of this table represents the bits that are connected to the stripers in OC192 mode. Each set of 3 columns in the table represent the bits sent during one cycle of OC48 operation. The following properties will be true for each table:
</li>
        <li id="ul0014-0005" num="0196">1. Each 12-bit sub-block will have the same number of bits going to each fabric <b>14</b>, which will satisfy constraints <b>1</b> and <b>2</b>. The 12-bit sub-block is composed of 3 columns of all four rows. In order to satisfy the 12 bit sub-block having the same number of bits to each fabric <b>14</b>, the destination fabric <b>14</b> for the first bit from different stripers must rotate among the fabrics present in the switch <b>10</b>.</li>
        <li id="ul0014-0006" num="0197">2. Each row in the table will have the same number of bits going to each fabric <b>14</b>. This will satisfy constraint number <b>3</b> and <b>4</b>.</li>
        <li id="ul0014-0007" num="0198">3. The bits used for OC48 striping and OC192 striping will be the same. This allows the aggregator 32 to convert the streams to one universal stream for the use on the fabric <b>14</b>.
<br/>
The following gives assignments for each of the fabric <b>14</b> configurations which satisfy these properties.
<br/>
The parity data which is transmitted is documented in the context of a 96 bit frame. This is to allow for parity exchange between the chips at 125 MHz.
<br/>
The following table gives the fabric assignments for each block of 48 bits and the output bus assignments for OC192c operation.
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0176" num="0199">
<tables id="TABLE-US-00052" num="00052">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="13">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="28pt" align="center"/>
<colspec colname="8" colwidth="28pt" align="center"/>
<colspec colname="9" colwidth="28pt" align="center"/>
<colspec colname="10" colwidth="28pt" align="center"/>
<colspec colname="11" colwidth="28pt" align="center"/>
<colspec colname="12" colwidth="28pt" align="center"/>
<colspec colname="13" colwidth="28pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Bit</entry>
<entry>0</entry>
<entry>4</entry>
<entry> 8</entry>
<entry>12</entry>
<entry>16</entry>
<entry>20</entry>
<entry>24</entry>
<entry>28</entry>
<entry>32</entry>
<entry>36</entry>
<entry>40</entry>
<entry>44</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0a(0)</entry>
<entry>F0a(1)</entry>
<entry>F0a(2)</entry>
<entry>F0a(3)</entry>
<entry>F0a(4)</entry>
<entry>F0a(5)</entry>
<entry>F0a(6)</entry>
<entry>F0a(7)</entry>
<entry>F0a(8)</entry>
<entry>F0a(9)</entry>
<entry>F0a(10)</entry>
<entry>F0a(11)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>1</entry>
<entry>5</entry>
<entry> 9</entry>
<entry>13</entry>
<entry>17</entry>
<entry>21</entry>
<entry>25</entry>
<entry>29</entry>
<entry>33</entry>
<entry>37</entry>
<entry>41</entry>
<entry>45</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0b(0)</entry>
<entry>F0b(1)</entry>
<entry>F0b(2)</entry>
<entry>F0b(3)</entry>
<entry>F0b(4)</entry>
<entry>F0b(5)</entry>
<entry>F0b(6)</entry>
<entry>F0b(7)</entry>
<entry>F0b(8)</entry>
<entry>F0b(9)</entry>
<entry>F0b(10)</entry>
<entry>F0b(11)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>2</entry>
<entry>6</entry>
<entry>10</entry>
<entry>14</entry>
<entry>18</entry>
<entry>22</entry>
<entry>26</entry>
<entry>30</entry>
<entry>34</entry>
<entry>38</entry>
<entry>42</entry>
<entry>46</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0c(0)</entry>
<entry>F0c(1)</entry>
<entry>F0c(2)</entry>
<entry>F0c(3)</entry>
<entry>F0c(4)</entry>
<entry>F0c(5)</entry>
<entry>F0c(6)</entry>
<entry>F0c(7)</entry>
<entry>F0c(8)</entry>
<entry>F0c(9)</entry>
<entry>F0c(10)</entry>
<entry>F0c(11)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>3</entry>
<entry>7</entry>
<entry>11</entry>
<entry>15</entry>
<entry>19</entry>
<entry>23</entry>
<entry>27</entry>
<entry>31</entry>
<entry>35</entry>
<entry>39</entry>
<entry>43</entry>
<entry>47</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0d(0)</entry>
<entry>F0d(1)</entry>
<entry>F0d(2)</entry>
<entry>F0d(3)</entry>
<entry>F0d(4)</entry>
<entry>F0d(5)</entry>
<entry>F0d(6)</entry>
<entry>F0d(7)</entry>
<entry>F0d(8)</entry>
<entry>F0d(9)</entry>
<entry>F0d(10)</entry>
<entry>F0d(11)</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bit order transmitted for OC48 operation.
</p>
<p id="p-0177" num="0200">
<tables id="TABLE-US-00053" num="00053">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="21pt" align="center"/>
<colspec colname="3" colwidth="63pt" align="center"/>
<colspec colname="4" colwidth="42pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry>Fabric</entry>
<entry>Cycle</entry>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>(bit)</entry>
<entry>0</entry>
<entry>Cycle 1</entry>
<entry>Cycle 2</entry>
<entry>Cycle 3</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="21pt" align="char" char="."/>
<colspec colname="3" colwidth="63pt" align="center"/>
<colspec colname="4" colwidth="42pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<tbody valign="top">
<row>
<entry>F0(0)</entry>
<entry>0</entry>
<entry>cycle 0 + 24</entry>
<entry>cycle 0 + 24</entry>
<entry>cycle 0 + 24</entry>
</row>
<row>
<entry>F0(1)</entry>
<entry>1</entry>
</row>
<row>
<entry>F0(2)</entry>
<entry>2</entry>
</row>
<row>
<entry>F0(3)</entry>
<entry>3</entry>
</row>
<row>
<entry>F0(4)</entry>
<entry>4</entry>
</row>
<row>
<entry>F0(5)</entry>
<entry>5</entry>
</row>
<row>
<entry>F0(6)</entry>
<entry>6</entry>
</row>
<row>
<entry>F0(7)</entry>
<entry>7</entry>
</row>
<row>
<entry>F0(8)</entry>
<entry>8</entry>
</row>
<row>
<entry>F0(9)</entry>
<entry>9</entry>
</row>
<row>
<entry>F0(10)</entry>
<entry>10</entry>
</row>
<row>
<entry>F0(11)</entry>
<entry>11</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The parity data is identical to the transmit data.
<br/>
The following table gives the fabric assignments for each block of 48 bits and the output bus assignments for OC192c operation.
</p>
<p id="p-0178" num="0201">
<tables id="TABLE-US-00054" num="00054">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="13">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="28pt" align="center"/>
<colspec colname="8" colwidth="28pt" align="center"/>
<colspec colname="9" colwidth="28pt" align="center"/>
<colspec colname="10" colwidth="28pt" align="center"/>
<colspec colname="11" colwidth="28pt" align="center"/>
<colspec colname="12" colwidth="28pt" align="center"/>
<colspec colname="13" colwidth="28pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Bit</entry>
<entry>0</entry>
<entry>4</entry>
<entry> 8</entry>
<entry>12</entry>
<entry>16</entry>
<entry>20</entry>
<entry>24</entry>
<entry>28</entry>
<entry>32</entry>
<entry>36</entry>
<entry>40</entry>
<entry>44</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0a(0)</entry>
<entry>F1a(0)</entry>
<entry>F0a(1)</entry>
<entry>F1a(1)</entry>
<entry>F0a(2)</entry>
<entry>F1a(2)</entry>
<entry>F0a(3)</entry>
<entry>F1a(3)</entry>
<entry>F0a(4)</entry>
<entry>F1a(4)</entry>
<entry>F0a(5)</entry>
<entry>F1a(5)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>1</entry>
<entry>5</entry>
<entry> 9</entry>
<entry>13</entry>
<entry>17</entry>
<entry>21</entry>
<entry>25</entry>
<entry>29</entry>
<entry>33</entry>
<entry>37</entry>
<entry>41</entry>
<entry>45</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F1b(0)</entry>
<entry>F0b(0)</entry>
<entry>F1b(1)</entry>
<entry>F0b(1)</entry>
<entry>F1b(2)</entry>
<entry>F0b(2)</entry>
<entry>F1b(3)</entry>
<entry>F0b(3)</entry>
<entry>F1b(4)</entry>
<entry>F0b(4)</entry>
<entry>F1b(5)</entry>
<entry>F0b(5)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>2</entry>
<entry>6</entry>
<entry>10</entry>
<entry>14</entry>
<entry>18</entry>
<entry>22</entry>
<entry>26</entry>
<entry>30</entry>
<entry>34</entry>
<entry>38</entry>
<entry>42</entry>
<entry>46</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0c(0)</entry>
<entry>F1c(0)</entry>
<entry>F0c(1)</entry>
<entry>F1c(1)</entry>
<entry>F0c(2)</entry>
<entry>F1c(2)</entry>
<entry>F0c(3)</entry>
<entry>F1c(3)</entry>
<entry>F0c(4)</entry>
<entry>F1c(4)</entry>
<entry>F0c(5)</entry>
<entry>F1c(5)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>3</entry>
<entry>7</entry>
<entry>11</entry>
<entry>15</entry>
<entry>19</entry>
<entry>23</entry>
<entry>27</entry>
<entry>31</entry>
<entry>35</entry>
<entry>39</entry>
<entry>43</entry>
<entry>47</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F1d(0)</entry>
<entry>F0d(0)</entry>
<entry>F1d(1)</entry>
<entry>F0d(1)</entry>
<entry>F1d(2)</entry>
<entry>F0d(2)</entry>
<entry>F1d(3)</entry>
<entry>F0d(3)</entry>
<entry>F1d(4)</entry>
<entry>F0d(4)</entry>
<entry>F1d(5)</entry>
<entry>F0d(5)</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bit order transmitted for OC48 operation.
</p>
<p id="p-0179" num="0202">
<tables id="TABLE-US-00055" num="00055">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="6">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="42pt" align="center"/>
<colspec colname="4" colwidth="42pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Fabric</entry>
<entry/>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry/>
<entry>(bit)</entry>
<entry>Cycle 0</entry>
<entry>Cycle 1</entry>
<entry>Cycle 2</entry>
<entry>Cycle 3</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="6">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="char" char="."/>
<colspec colname="3" colwidth="42pt" align="center"/>
<colspec colname="4" colwidth="42pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>F0(0)</entry>
<entry>0</entry>
<entry>13</entry>
<entry>cycle 0 + 24</entry>
<entry>cycle 1 + 24</entry>
</row>
<row>
<entry/>
<entry>F0(1)</entry>
<entry>2</entry>
<entry>15</entry>
</row>
<row>
<entry/>
<entry>F0(2)</entry>
<entry>5</entry>
<entry>16</entry>
</row>
<row>
<entry/>
<entry>F0(3)</entry>
<entry>7</entry>
<entry>18</entry>
</row>
<row>
<entry/>
<entry>F0(4)</entry>
<entry>8</entry>
<entry>21</entry>
</row>
<row>
<entry/>
<entry>F0(5)</entry>
<entry>10</entry>
<entry>23</entry>
</row>
<row>
<entry/>
<entry>F1(0)</entry>
<entry>1</entry>
<entry>12</entry>
</row>
<row>
<entry/>
<entry>F1(1)</entry>
<entry>3</entry>
<entry>14</entry>
</row>
<row>
<entry/>
<entry>F1(2)</entry>
<entry>4</entry>
<entry>17</entry>
</row>
<row>
<entry/>
<entry>F1(3)</entry>
<entry>6</entry>
<entry>19</entry>
</row>
<row>
<entry/>
<entry>F1(4)</entry>
<entry>9</entry>
<entry>20</entry>
</row>
<row>
<entry/>
<entry>F1(5)</entry>
<entry>11</entry>
<entry>22</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0180" num="0203">
<tables id="TABLE-US-00056" num="00056">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="91pt" align="center"/>
<colspec colname="3" colwidth="70pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry/>
<entry>Transmit</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Bit</entry>
<entry>stripe</entry>
<entry>XOR bits</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>P0</entry>
<entry>0</entry>
<entry>0, 4</entry>
</row>
<row>
<entry/>
<entry>P1</entry>
<entry>2</entry>
<entry>2, 6</entry>
</row>
<row>
<entry/>
<entry>P2</entry>
<entry>1</entry>
<entry>1, 5</entry>
</row>
<row>
<entry/>
<entry>P3</entry>
<entry>3</entry>
<entry>3, 7</entry>
</row>
<row>
<entry/>
<entry>P4</entry>
<entry>0</entry>
<entry>8, 9</entry>
</row>
<row>
<entry/>
<entry>P5</entry>
<entry>2</entry>
<entry>10, 11</entry>
</row>
<row>
<entry/>
<entry>P6</entry>
<entry>1</entry>
<entry>13, 17</entry>
</row>
<row>
<entry/>
<entry>P7</entry>
<entry>3</entry>
<entry>15, 19</entry>
</row>
<row>
<entry/>
<entry>P8</entry>
<entry>0</entry>
<entry>16, 12</entry>
</row>
<row>
<entry/>
<entry>P9</entry>
<entry>2</entry>
<entry>18, 14</entry>
</row>
<row>
<entry/>
<entry>P10</entry>
<entry>1</entry>
<entry>21, 20</entry>
</row>
<row>
<entry/>
<entry>P11</entry>
<entry>3</entry>
<entry>23, 22</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Note that parity bits P<b>12</b>-P<b>24</b> repeat the pattern of P<b>0</b>-P<b>11</b> For generation of parity, 8 bits are exchanged between U0→U1 and U2→U3 for each 48 bit word, one bit in each direction. The following table shows the bits transmitted on each parity bus. Bits <b>8</b> through <b>15</b> of the exchange is obtained by adding 96 to each value below.
</p>
<p id="p-0181" num="0204">
<tables id="TABLE-US-00057" num="00057">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="10">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="14pt" align="center"/>
<colspec colname="3" colwidth="35pt" align="center"/>
<colspec colname="4" colwidth="35pt" align="center"/>
<colspec colname="5" colwidth="35pt" align="center"/>
<colspec colname="6" colwidth="35pt" align="center"/>
<colspec colname="7" colwidth="35pt" align="center"/>
<colspec colname="8" colwidth="35pt" align="center"/>
<colspec colname="9" colwidth="35pt" align="center"/>
<colspec colname="10" colwidth="28pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="10" align="center" rowsep="1"/>
</row>
<row>
<entry>From</entry>
<entry>To</entry>
<entry>Bit 7</entry>
<entry>Bit 6</entry>
<entry>Bit 5</entry>
<entry>Bit 4</entry>
<entry>Bit 3</entry>
<entry>Bit 2</entry>
<entry>Bit 1</entry>
<entry>Bit 0</entry>
</row>
<row>
<entry namest="1" nameend="10" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>0</entry>
<entry>1</entry>
<entry>92</entry>
<entry>P40 + 80</entry>
<entry>68</entry>
<entry>P28 + 56</entry>
<entry>44</entry>
<entry>P16 + 32</entry>
<entry>20</entry>
<entry>P4 + 8 </entry>
</row>
<row>
<entry/>
<entry>2</entry>
</row>
<row>
<entry/>
<entry>3</entry>
</row>
<row>
<entry>1</entry>
<entry>0</entry>
<entry>P46 + 93</entry>
<entry>81</entry>
<entry>P34 + 69</entry>
<entry>57</entry>
<entry>P22 + 45</entry>
<entry>33</entry>
<entry>P10 + 21</entry>
<entry> 9</entry>
</row>
<row>
<entry/>
<entry>2</entry>
</row>
<row>
<entry/>
<entry>3</entry>
</row>
<row>
<entry>2</entry>
<entry>0</entry>
</row>
<row>
<entry/>
<entry>1</entry>
</row>
<row>
<entry/>
<entry>3</entry>
<entry>94</entry>
<entry>P41 + 82</entry>
<entry>70</entry>
<entry>P29 + 58</entry>
<entry>46</entry>
<entry>P17 + 34</entry>
<entry>22</entry>
<entry>P5 + 10</entry>
</row>
<row>
<entry>3</entry>
<entry>0</entry>
</row>
<row>
<entry/>
<entry>1</entry>
</row>
<row>
<entry/>
<entry>2</entry>
<entry>P47 + 95</entry>
<entry>83</entry>
<entry>P35 + 71</entry>
<entry>59</entry>
<entry>P23 + 47</entry>
<entry>35</entry>
<entry>P11 + 23</entry>
<entry>11</entry>
</row>
<row>
<entry namest="1" nameend="10" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table gives the fabric assignments for each block of 48 bits and the output bus assignments for OC192c operation.
</p>
<p id="p-0182" num="0205">
<tables id="TABLE-US-00058" num="00058">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="13">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="28pt" align="center"/>
<colspec colname="8" colwidth="28pt" align="center"/>
<colspec colname="9" colwidth="28pt" align="center"/>
<colspec colname="10" colwidth="28pt" align="center"/>
<colspec colname="11" colwidth="28pt" align="center"/>
<colspec colname="12" colwidth="28pt" align="center"/>
<colspec colname="13" colwidth="28pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Bit</entry>
<entry>0</entry>
<entry>4</entry>
<entry> 8</entry>
<entry>12</entry>
<entry>16</entry>
<entry>20</entry>
<entry>24</entry>
<entry>28</entry>
<entry>32</entry>
<entry>36</entry>
<entry>40</entry>
<entry>44</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0a(0)</entry>
<entry>F1a(0)</entry>
<entry>F2a(0)</entry>
<entry>F0a(1)</entry>
<entry>F1a(1)</entry>
<entry>F2a(1)</entry>
<entry>F0a(2)</entry>
<entry>F1a(2)</entry>
<entry>F2a(2)</entry>
<entry>F0a(3)</entry>
<entry>F1a(3)</entry>
<entry>F2a(3)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>1</entry>
<entry>5</entry>
<entry> 9</entry>
<entry>13</entry>
<entry>17</entry>
<entry>21</entry>
<entry>25</entry>
<entry>29</entry>
<entry>33</entry>
<entry>37</entry>
<entry>41</entry>
<entry>45</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F2b(0)</entry>
<entry>F0b(0)</entry>
<entry>F1b(0)</entry>
<entry>F2b(1)</entry>
<entry>F0b(1)</entry>
<entry>F1b(1)</entry>
<entry>F2b(2)</entry>
<entry>F0b(2)</entry>
<entry>F1b(2)</entry>
<entry>F2b(3)</entry>
<entry>F0b(3)</entry>
<entry>F1b(3)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>2</entry>
<entry>6</entry>
<entry>10</entry>
<entry>14</entry>
<entry>18</entry>
<entry>22</entry>
<entry>26</entry>
<entry>30</entry>
<entry>34</entry>
<entry>38</entry>
<entry>42</entry>
<entry>46</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F1c(0)</entry>
<entry>F2c(0)</entry>
<entry>F0c(0)</entry>
<entry>F1c(1)</entry>
<entry>F2c(1)</entry>
<entry>F0c(1)</entry>
<entry>F1c(2)</entry>
<entry>F2c(2)</entry>
<entry>F0c(2)</entry>
<entry>F1c(3)</entry>
<entry>F2c(3)</entry>
<entry>F0c(3)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>3</entry>
<entry>7</entry>
<entry>11</entry>
<entry>15</entry>
<entry>19</entry>
<entry>23</entry>
<entry>27</entry>
<entry>31</entry>
<entry>35</entry>
<entry>39</entry>
<entry>43</entry>
<entry>47</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0d(0)</entry>
<entry>F1d(0)</entry>
<entry>F2d(0)</entry>
<entry>F0d(1)</entry>
<entry>F1d(1)</entry>
<entry>F2d(1)</entry>
<entry>F0d(2)</entry>
<entry>F1d(2)</entry>
<entry>F2d(2)</entry>
<entry>F0d(3)</entry>
<entry>F1d(3)</entry>
<entry>F2d(3)</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bit order transmitted for OC48 operation.
</p>
<p id="p-0183" num="0206">
<tables id="TABLE-US-00059" num="00059">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="center"/>
<colspec colname="3" colwidth="49pt" align="center"/>
<colspec colname="4" colwidth="49pt" align="center"/>
<colspec colname="5" colwidth="49pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry>Fabric</entry>
<entry/>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry>(bit)</entry>
<entry>Cycle 0</entry>
<entry>Cycle 1</entry>
<entry>Cycle 2</entry>
<entry>Cycle 3</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="char" char="."/>
<colspec colname="3" colwidth="49pt" align="center"/>
<colspec colname="4" colwidth="49pt" align="center"/>
<colspec colname="5" colwidth="49pt" align="center"/>
<tbody valign="top">
<row>
<entry>F0(0)</entry>
<entry>0</entry>
<entry>cycle 0 + 12</entry>
<entry>cycle 0 + 24</entry>
<entry>cycle 0 + 36</entry>
</row>
<row>
<entry>F0(1)</entry>
<entry>3</entry>
</row>
<row>
<entry>F0(2)</entry>
<entry>5</entry>
</row>
<row>
<entry>F0(3)</entry>
<entry>10</entry>
</row>
<row>
<entry>F1(0)</entry>
<entry>2</entry>
</row>
<row>
<entry>F1(1)</entry>
<entry>4</entry>
</row>
<row>
<entry>F1(2)</entry>
<entry>7</entry>
</row>
<row>
<entry>F1(3)</entry>
<entry>9</entry>
</row>
<row>
<entry>F2(0)</entry>
<entry>1</entry>
</row>
<row>
<entry>F2(1)</entry>
<entry>6</entry>
</row>
<row>
<entry>F2(2)</entry>
<entry>8</entry>
</row>
<row>
<entry>F2(3)</entry>
<entry>11</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The parity calculation uses the following:
</p>
<p id="p-0184" num="0207">
<tables id="TABLE-US-00060" num="00060">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="49pt" align="center"/>
<colspec colname="2" colwidth="70pt" align="center"/>
<colspec colname="3" colwidth="70pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry/>
<entry>Transmit</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Bit</entry>
<entry>stripe</entry>
<entry>XOR bits</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>P0</entry>
<entry>0</entry>
<entry>0, 4, 8</entry>
</row>
<row>
<entry/>
<entry>P1</entry>
<entry>3</entry>
<entry>3, 7, 11</entry>
</row>
<row>
<entry/>
<entry>P2</entry>
<entry>1</entry>
<entry>1, 5, 9</entry>
</row>
<row>
<entry/>
<entry>P3</entry>
<entry>2</entry>
<entry>2, 6, 10</entry>
</row>
<row>
<entry/>
<entry>P4</entry>
<entry>0</entry>
<entry>12, 16, 20</entry>
</row>
<row>
<entry/>
<entry>P5</entry>
<entry>3</entry>
<entry>15, 19, 23</entry>
</row>
<row>
<entry/>
<entry>P6</entry>
<entry>1</entry>
<entry>13, 17, 21</entry>
</row>
<row>
<entry/>
<entry>P7</entry>
<entry>2</entry>
<entry>14, 18, 22</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Note that parity bits P<b>8</b>-P<b>15</b> repeat the pattern of P<b>0</b>-P<b>11</b>.
<br/>
Parity generation requires no exchange of bits for OC192c.
<br/>
The following table gives the fabric assignments for each block of 48 bits and the output bus assignments for OC192c operation.
</p>
<p id="p-0185" num="0208">
<tables id="TABLE-US-00061" num="00061">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="13">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="28pt" align="center"/>
<colspec colname="8" colwidth="28pt" align="center"/>
<colspec colname="9" colwidth="28pt" align="center"/>
<colspec colname="10" colwidth="28pt" align="center"/>
<colspec colname="11" colwidth="28pt" align="center"/>
<colspec colname="12" colwidth="28pt" align="center"/>
<colspec colname="13" colwidth="28pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Bit</entry>
<entry>0</entry>
<entry>4</entry>
<entry> 8</entry>
<entry>12</entry>
<entry>16</entry>
<entry>20</entry>
<entry>24</entry>
<entry>28</entry>
<entry>32</entry>
<entry>36</entry>
<entry>40</entry>
<entry>44</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0a(0)</entry>
<entry>F1a(0)</entry>
<entry>F2a(0)</entry>
<entry>F3a(0)</entry>
<entry>F0a(1)</entry>
<entry>F1a(1)</entry>
<entry>F2a(1)</entry>
<entry>F3a(1)</entry>
<entry>F0a(2)</entry>
<entry>F1a(2)</entry>
<entry>F2a(2)</entry>
<entry>F3a(2)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>1</entry>
<entry>5</entry>
<entry> 9</entry>
<entry>13</entry>
<entry>17</entry>
<entry>21</entry>
<entry>25</entry>
<entry>29</entry>
<entry>33</entry>
<entry>37</entry>
<entry>41</entry>
<entry>45</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F3b(0)</entry>
<entry>F0b(0)</entry>
<entry>F1b(0)</entry>
<entry>F2b(0)</entry>
<entry>F3b(1)</entry>
<entry>F0b(1)</entry>
<entry>F1b(1)</entry>
<entry>F2b(2)</entry>
<entry>F3b(2)</entry>
<entry>F0b(2)</entry>
<entry>F1b(2)</entry>
<entry>F2b(2)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>2</entry>
<entry>6</entry>
<entry>10</entry>
<entry>14</entry>
<entry>18</entry>
<entry>22</entry>
<entry>26</entry>
<entry>30</entry>
<entry>34</entry>
<entry>38</entry>
<entry>42</entry>
<entry>46</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F2c(0)</entry>
<entry>F3c(0)</entry>
<entry>F0c(0)</entry>
<entry>F1c(0)</entry>
<entry>F2c(1)</entry>
<entry>F3c(1)</entry>
<entry>F0c(1)</entry>
<entry>F1c(1)</entry>
<entry>F2c(2)</entry>
<entry>F3c(2)</entry>
<entry>F0c(2)</entry>
<entry>F1c(2)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>3</entry>
<entry>7</entry>
<entry>11</entry>
<entry>15</entry>
<entry>19</entry>
<entry>23</entry>
<entry>27</entry>
<entry>31</entry>
<entry>35</entry>
<entry>39</entry>
<entry>43</entry>
<entry>47</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F1d(0)</entry>
<entry>F2d(0)</entry>
<entry>F3d(0)</entry>
<entry>F0d(0)</entry>
<entry>F1d(1)</entry>
<entry>F2d(1)</entry>
<entry>F3d(1)</entry>
<entry>F0d(1)</entry>
<entry>F1d(2)</entry>
<entry>F2d(2)</entry>
<entry>F3d(2)</entry>
<entry>F0d(2)</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bit order transmitted for OC48 operation.
</p>
<p id="p-0186" num="0209">
<tables id="TABLE-US-00062" num="00062">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="63pt" align="center"/>
<colspec colname="2" colwidth="21pt" align="center"/>
<colspec colname="3" colwidth="56pt" align="center"/>
<colspec colname="4" colwidth="21pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry>Fabric</entry>
<entry>Cycle</entry>
<entry>Cycle</entry>
<entry>Cycle</entry>
<entry>Cycle</entry>
</row>
<row>
<entry>(bit)</entry>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="5">
<colspec colname="1" colwidth="63pt" align="center"/>
<colspec colname="2" colwidth="21pt" align="char" char="."/>
<colspec colname="3" colwidth="56pt" align="center"/>
<colspec colname="4" colwidth="21pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<tbody valign="top">
<row>
<entry>F0(0)</entry>
<entry>0</entry>
<entry>15</entry>
<entry>26</entry>
<entry>37</entry>
</row>
<row>
<entry>F0(1)</entry>
<entry>5</entry>
<entry>16</entry>
<entry>31</entry>
<entry>42</entry>
</row>
<row>
<entry>F0(2)</entry>
<entry>10</entry>
<entry>21</entry>
<entry>32</entry>
<entry>47</entry>
</row>
<row>
<entry>F1(0)</entry>
<entry>3</entry>
<entry>14</entry>
<entry>25</entry>
<entry>36</entry>
</row>
<row>
<entry>F1(1)</entry>
<entry>4</entry>
<entry>19</entry>
<entry>30</entry>
<entry>41</entry>
</row>
<row>
<entry>F1(2)</entry>
<entry>9</entry>
<entry>20</entry>
<entry>35</entry>
<entry>46</entry>
</row>
<row>
<entry>F2(0)</entry>
<entry>2</entry>
<entry>13</entry>
<entry>24</entry>
<entry>39</entry>
</row>
<row>
<entry>F2(1)</entry>
<entry>7</entry>
<entry>18</entry>
<entry>29</entry>
<entry>40</entry>
</row>
<row>
<entry>F2(2)</entry>
<entry>8</entry>
<entry>23</entry>
<entry>34</entry>
<entry>45</entry>
</row>
<row>
<entry>F3(0)</entry>
<entry>1</entry>
<entry>12</entry>
<entry>27</entry>
<entry>38</entry>
</row>
<row>
<entry>F3(1)</entry>
<entry>6</entry>
<entry>17</entry>
<entry>28</entry>
<entry>43</entry>
</row>
<row>
<entry>F3(2)</entry>
<entry>11</entry>
<entry>22</entry>
<entry>33</entry>
<entry>44</entry>
</row>
<row>
<entry namest="1" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The parity calculation uses the following formulas:
</p>
<p id="p-0187" num="0210">
<tables id="TABLE-US-00063" num="00063">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="91pt" align="center"/>
<colspec colname="3" colwidth="77pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry/>
<entry>Transmit</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Bit</entry>
<entry>stripe</entry>
<entry>XOR bits</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>P0 </entry>
<entry>0</entry>
<entry>0, 4, 8, 11</entry>
</row>
<row>
<entry/>
<entry>P1 </entry>
<entry>1</entry>
<entry>5, 9, 7, 1</entry>
</row>
<row>
<entry/>
<entry>P2 </entry>
<entry>2</entry>
<entry>10, 3, 2, 6</entry>
</row>
<row>
<entry/>
<entry>P3 </entry>
<entry>3</entry>
<entry>15, 19, 23, 22</entry>
</row>
<row>
<entry/>
<entry>P4 </entry>
<entry>0</entry>
<entry>16, 20, 18, 12</entry>
</row>
<row>
<entry/>
<entry>P5 </entry>
<entry>1</entry>
<entry>21, 14, 13, 17</entry>
</row>
<row>
<entry/>
<entry>P6 </entry>
<entry>2</entry>
<entry>26, 30, 34, 33</entry>
</row>
<row>
<entry/>
<entry>P7 </entry>
<entry>3</entry>
<entry>31, 35, 29, 27</entry>
</row>
<row>
<entry/>
<entry>P8 </entry>
<entry>0</entry>
<entry>32, 25, 24, 28</entry>
</row>
<row>
<entry/>
<entry>P9 </entry>
<entry>1</entry>
<entry>37, 41, 45, 44</entry>
</row>
<row>
<entry/>
<entry>P10</entry>
<entry>2</entry>
<entry>42, 46, 40, 38</entry>
</row>
<row>
<entry/>
<entry>P11</entry>
<entry>3</entry>
<entry>47, 36, 39, 43</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bits transmitted on each parity bus. Bits <b>8</b> through <b>15</b> of the parity data are obtained by adding 96 to each of the values in the table.
</p>
<p id="p-0188" num="0211">
<tables id="TABLE-US-00064" num="00064">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="10">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="21pt" align="center"/>
<colspec colname="3" colwidth="42pt" align="center"/>
<colspec colname="4" colwidth="42pt" align="center"/>
<colspec colname="5" colwidth="49pt" align="center"/>
<colspec colname="6" colwidth="42pt" align="center"/>
<colspec colname="7" colwidth="42pt" align="center"/>
<colspec colname="8" colwidth="63pt" align="center"/>
<colspec colname="9" colwidth="63pt" align="center"/>
<colspec colname="10" colwidth="56pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="10" align="center" rowsep="1"/>
</row>
<row>
<entry>From</entry>
<entry>To</entry>
<entry>Bit 7</entry>
<entry>Bit 6</entry>
<entry>Bit 5</entry>
<entry>Bit 4</entry>
<entry>Bit 3</entry>
<entry>Bit 2</entry>
<entry>Bit 1</entry>
<entry>Bit 0</entry>
</row>
<row>
<entry namest="1" nameend="10" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>0</entry>
<entry>1</entry>
<entry>92</entry>
<entry>P20 + 72 +</entry>
<entry/>
<entry/>
<entry>44</entry>
<entry>P8 + 24 + 28 + 32</entry>
<entry/>
<entry/>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>76 + 80</entry>
</row>
<row>
<entry/>
<entry>2</entry>
<entry>88</entry>
<entry/>
<entry>P16 + 60 +</entry>
<entry/>
<entry>40</entry>
<entry/>
<entry>P4 + 12 + 16 + 20</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>64 + 68</entry>
</row>
<row>
<entry/>
<entry>3</entry>
<entry>84</entry>
<entry/>
<entry/>
<entry>P12 + 56 +</entry>
<entry>36</entry>
<entry/>
<entry/>
<entry>P0 + 0 + 4 + 8 </entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>52 + 48</entry>
</row>
<row>
<entry>1</entry>
<entry>0</entry>
<entry>P21 + 85 +</entry>
<entry>73</entry>
<entry/>
<entry/>
<entry>P9 + 37 +  </entry>
<entry>25</entry>
</row>
<row>
<entry/>
<entry/>
<entry>89 + 93</entry>
<entry/>
<entry/>
<entry/>
<entry>41 + 45</entry>
</row>
<row>
<entry/>
<entry>2</entry>
<entry/>
<entry>81</entry>
<entry>P17 + 69 +</entry>
<entry/>
<entry/>
<entry>33</entry>
<entry>P5 + 21 + 13 + 17</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>61 + 65</entry>
</row>
<row>
<entry/>
<entry>3</entry>
<entry/>
<entry>77</entry>
<entry/>
<entry>P13 + 49 +</entry>
<entry/>
<entry>29</entry>
<entry/>
<entry>P1 + 1 + 5 + 9 </entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>53 + 57</entry>
</row>
<row>
<entry>2</entry>
<entry>0</entry>
<entry>P22 + 86 +</entry>
<entry/>
<entry>66</entry>
<entry/>
<entry>P10 + 38 +</entry>
<entry/>
<entry>18</entry>
</row>
<row>
<entry/>
<entry/>
<entry>90 + 94</entry>
<entry/>
<entry/>
<entry/>
<entry>42 + 46</entry>
</row>
<row>
<entry/>
<entry>1</entry>
<entry/>
<entry>P18 + 74 +</entry>
<entry>62</entry>
<entry/>
<entry/>
<entry>P6 + 26 + 30 + 34</entry>
<entry>14</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>78 + 82</entry>
</row>
<row>
<entry/>
<entry>3</entry>
<entry/>
<entry/>
<entry>70</entry>
<entry>P14 + 50 +</entry>
<entry/>
<entry/>
<entry>22</entry>
<entry>P2 + 2 + 6 + 10</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>54 + 58</entry>
</row>
<row>
<entry>3</entry>
<entry>0</entry>
<entry>P23 + 87 +</entry>
<entry/>
<entry/>
<entry>59</entry>
<entry>P11 + 39 +</entry>
<entry/>
<entry/>
<entry>11</entry>
</row>
<row>
<entry/>
<entry/>
<entry>91 + 95</entry>
<entry/>
<entry/>
<entry/>
<entry>43 + 47</entry>
</row>
<row>
<entry/>
<entry>1</entry>
<entry/>
<entry>P19 + 75 +</entry>
<entry/>
<entry>55</entry>
<entry/>
<entry>P7 + 27 + 31 + 35</entry>
<entry/>
<entry> 7</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>79 + 83</entry>
</row>
<row>
<entry/>
<entry>2</entry>
<entry/>
<entry/>
<entry>P15 + 63 +</entry>
<entry>51</entry>
<entry/>
<entry/>
<entry>P3 + 15 + 19 + 23</entry>
<entry> 3</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>67 + 71</entry>
</row>
<row>
<entry namest="1" nameend="10" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table gives the fabric assignments for each block of 48 bits and the output bus assignments for OC192c operation.
</p>
<p id="p-0189" num="0212">
<tables id="TABLE-US-00065" num="00065">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="13">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="28pt" align="center"/>
<colspec colname="8" colwidth="28pt" align="center"/>
<colspec colname="9" colwidth="28pt" align="center"/>
<colspec colname="10" colwidth="28pt" align="center"/>
<colspec colname="11" colwidth="28pt" align="center"/>
<colspec colname="12" colwidth="28pt" align="center"/>
<colspec colname="13" colwidth="28pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Bit</entry>
<entry>0</entry>
<entry>4</entry>
<entry> 8</entry>
<entry>12</entry>
<entry>16</entry>
<entry>20</entry>
<entry>24</entry>
<entry>28</entry>
<entry>32</entry>
<entry>36</entry>
<entry>40</entry>
<entry>44</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0a(0)</entry>
<entry>F1a(0)</entry>
<entry>F2a(0)</entry>
<entry>F3a(0)</entry>
<entry>F4a(0)</entry>
<entry>F5a(0)</entry>
<entry>F0a(1)</entry>
<entry>F1a(1)</entry>
<entry>F2a(1)</entry>
<entry>F3a(1)</entry>
<entry>F4a(1)</entry>
<entry>F5a(1)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>1</entry>
<entry>5</entry>
<entry> 9</entry>
<entry>13</entry>
<entry>17</entry>
<entry>21</entry>
<entry>25</entry>
<entry>29</entry>
<entry>33</entry>
<entry>37</entry>
<entry>41</entry>
<entry>45</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F3b(0)</entry>
<entry>F4b(0)</entry>
<entry>F5b(0)</entry>
<entry>F0b(0)</entry>
<entry>F1b(0)</entry>
<entry>F2b(0)</entry>
<entry>F3b(1)</entry>
<entry>F4b(1)</entry>
<entry>F5b(1)</entry>
<entry>F0b(1)</entry>
<entry>F1b(1)</entry>
<entry>F2b(1)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>2</entry>
<entry>6</entry>
<entry>10</entry>
<entry>14</entry>
<entry>18</entry>
<entry>22</entry>
<entry>26</entry>
<entry>30</entry>
<entry>34</entry>
<entry>38</entry>
<entry>42</entry>
<entry>46</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0c(0)</entry>
<entry>F1c(0)</entry>
<entry>F2c(0)</entry>
<entry>F3c(0)</entry>
<entry>F4c(0)</entry>
<entry>F5c(0)</entry>
<entry>F0c(0)</entry>
<entry>F1c(1)</entry>
<entry>F2c(1)</entry>
<entry>F3c(1)</entry>
<entry>F4c(1)</entry>
<entry>F5c(1)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>3</entry>
<entry>7</entry>
<entry>11</entry>
<entry>15</entry>
<entry>19</entry>
<entry>23</entry>
<entry>27</entry>
<entry>31</entry>
<entry>35</entry>
<entry>39</entry>
<entry>43</entry>
<entry>47</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F3d(0)</entry>
<entry>F4d(0)</entry>
<entry>F5d(0)</entry>
<entry>F0d(0)</entry>
<entry>F1d(0)</entry>
<entry>F2d(0)</entry>
<entry>F3d(1)</entry>
<entry>F4d(1)</entry>
<entry>F5d(1)</entry>
<entry>F0d(1)</entry>
<entry>F1d(1)</entry>
<entry>F2d(1)</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bit order transmitted for OC48 operation.
</p>
<p id="p-0190" num="0213">
<tables id="TABLE-US-00066" num="00066">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="105pt" align="center"/>
<colspec colname="2" colwidth="21pt" align="center"/>
<colspec colname="3" colwidth="91pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Fabric</entry>
<entry>Cycle</entry>
<entry>Cycle</entry>
</row>
<row>
<entry>(bit)</entry>
<entry>0</entry>
<entry>1</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="105pt" align="center"/>
<colspec colname="2" colwidth="21pt" align="char" char="."/>
<colspec colname="3" colwidth="91pt" align="center"/>
<tbody valign="top">
<row>
<entry>F0(0)</entry>
<entry>0</entry>
<entry>13</entry>
</row>
<row>
<entry>F0(1)</entry>
<entry>2</entry>
<entry>15</entry>
</row>
<row>
<entry>F1(0)</entry>
<entry>4</entry>
<entry>17</entry>
</row>
<row>
<entry>F1(1)</entry>
<entry>6</entry>
<entry>19</entry>
</row>
<row>
<entry>F2(0)</entry>
<entry>8</entry>
<entry>21</entry>
</row>
<row>
<entry>F2(1)</entry>
<entry>10</entry>
<entry>23</entry>
</row>
<row>
<entry>F3(0)</entry>
<entry>1</entry>
<entry>12</entry>
</row>
<row>
<entry>F3(1)</entry>
<entry>3</entry>
<entry>14</entry>
</row>
<row>
<entry>F4(0)</entry>
<entry>5</entry>
<entry>16</entry>
</row>
<row>
<entry>F4(1)</entry>
<entry>7</entry>
<entry>18</entry>
</row>
<row>
<entry>F5(0)</entry>
<entry>9</entry>
<entry>20</entry>
</row>
<row>
<entry>F5(1)</entry>
<entry>11</entry>
<entry>22</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The parity calculation uses the following formulas:
</p>
<p id="p-0191" num="0214">
<tables id="TABLE-US-00067" num="00067">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="14pt" align="center"/>
<colspec colname="2" colwidth="84pt" align="center"/>
<colspec colname="3" colwidth="91pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry/>
<entry>Transmit</entry>
<entry/>
</row>
<row>
<entry/>
<entry>Bit</entry>
<entry>stripe</entry>
<entry>XOR bits</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>P0</entry>
<entry>0</entry>
<entry>0, 4, 8, 1, 5, 9</entry>
</row>
<row>
<entry/>
<entry>P1</entry>
<entry>2</entry>
<entry>2, 6, 10, 3, 7, 11</entry>
</row>
<row>
<entry/>
<entry>P2</entry>
<entry>1</entry>
<entry>13, 17, 21, 12, 16, 20</entry>
</row>
<row>
<entry/>
<entry>P3</entry>
<entry>3</entry>
<entry>15, 19, 23, 14, 18, 22</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Note that parity bits P<b>4</b>-P<b>8</b> repeat the pattern of P<b>0</b>-P<b>3</b>+24. The following table shows the bits on each parity bus. Bits <b>8</b> through <b>15</b> of the parity bus are obtained by adding 96 to each value in the table.
</p>
<p id="p-0192" num="0215">
<tables id="TABLE-US-00068" num="00068">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="10">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="21pt" align="center"/>
<colspec colname="3" colwidth="42pt" align="center"/>
<colspec colname="4" colwidth="42pt" align="center"/>
<colspec colname="5" colwidth="49pt" align="center"/>
<colspec colname="6" colwidth="42pt" align="center"/>
<colspec colname="7" colwidth="42pt" align="center"/>
<colspec colname="8" colwidth="63pt" align="center"/>
<colspec colname="9" colwidth="63pt" align="center"/>
<colspec colname="10" colwidth="56pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="10" align="center" rowsep="1"/>
</row>
<row>
<entry>From</entry>
<entry>To</entry>
<entry>Bit 7</entry>
<entry>Bit 6</entry>
<entry>Bit 5</entry>
<entry>Bit 4</entry>
<entry>Bit 3</entry>
<entry>Bit 2</entry>
<entry>Bit 1</entry>
<entry>Bit 0</entry>
</row>
<row>
<entry namest="1" nameend="10" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>0</entry>
<entry>1</entry>
<entry>84 + 88 + 92</entry>
<entry>P12 + 72 +</entry>
<entry>60 + 64 + 68</entry>
<entry>P8 + 48 +</entry>
<entry>36 + 40 + 44</entry>
<entry>P4 + 24 + 28 + 32</entry>
<entry>12 + 16 + 20</entry>
<entry>P0 + 0 + 4 + 8 </entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>76 + 80</entry>
<entry/>
<entry>52 + 56</entry>
</row>
<row>
<entry/>
<entry>2</entry>
</row>
<row>
<entry/>
<entry>3</entry>
</row>
<row>
<entry>1</entry>
<entry>0</entry>
<entry>P15 + 85 +</entry>
<entry>73 + 77 + 81</entry>
<entry>P11 + 61 +</entry>
<entry>49 + 53 + 57</entry>
<entry>P7 + 37 +</entry>
<entry>25 + 29 + 33</entry>
<entry>P3 + 13 + 17 + 21</entry>
<entry>1 + 5 + 9 </entry>
</row>
<row>
<entry/>
<entry/>
<entry>89 + 93</entry>
<entry/>
<entry>65 + 69</entry>
<entry/>
<entry>41 + 45</entry>
</row>
<row>
<entry/>
<entry>2</entry>
</row>
<row>
<entry/>
<entry>3</entry>
</row>
<row>
<entry>2</entry>
<entry>0</entry>
</row>
<row>
<entry/>
<entry>1</entry>
</row>
<row>
<entry/>
<entry>3</entry>
<entry>86 + 90 + 94</entry>
<entry>P13 + 74 +</entry>
<entry>62 + 66 + 70</entry>
<entry>P9 + 50 +</entry>
<entry>38 + 42 + 46</entry>
<entry>P5 + 26 + 30 + 34</entry>
<entry>14 + 18 + 22</entry>
<entry>P1 + 2 + 6 + 10</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>78 + 82</entry>
<entry/>
<entry>54 + 58</entry>
</row>
<row>
<entry>3</entry>
<entry>0</entry>
</row>
<row>
<entry/>
<entry>1</entry>
</row>
<row>
<entry/>
<entry>2</entry>
<entry>P14 + 87 +</entry>
<entry>75 + 79 + 83</entry>
<entry>P10 + 63 +</entry>
<entry>51 + 55 + 59</entry>
<entry>P6 + 39 +</entry>
<entry>27 + 31 + 35</entry>
<entry>P2 + 15 + 19 + 23</entry>
<entry>3 + 7 + 11</entry>
</row>
<row>
<entry/>
<entry/>
<entry>91 + 95</entry>
<entry/>
<entry>67 + 71</entry>
<entry/>
<entry>43 + 47</entry>
</row>
<row>
<entry namest="1" nameend="10" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table gives the fabric assignments for each block of 48 bits and the output bus assignments for OC192c operation.
</p>
<p id="p-0193" num="0216">
<tables id="TABLE-US-00069" num="00069">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="13">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="28pt" align="center"/>
<colspec colname="7" colwidth="28pt" align="center"/>
<colspec colname="8" colwidth="28pt" align="center"/>
<colspec colname="9" colwidth="28pt" align="center"/>
<colspec colname="10" colwidth="28pt" align="center"/>
<colspec colname="11" colwidth="28pt" align="center"/>
<colspec colname="12" colwidth="28pt" align="center"/>
<colspec colname="13" colwidth="28pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>Bit</entry>
<entry>0</entry>
<entry>4</entry>
<entry> 8</entry>
<entry>12</entry>
<entry>16</entry>
<entry>20</entry>
<entry>24</entry>
<entry>28</entry>
<entry>32</entry>
<entry>36</entry>
<entry>40</entry>
<entry>44</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F0a(0)</entry>
<entry>F1a(0)</entry>
<entry>F2a(0)</entry>
<entry>F3a(0)</entry>
<entry>F4a(0)</entry>
<entry>F5a(0)</entry>
<entry>F6a(0)</entry>
<entry>F7a(0)</entry>
<entry>F8a(0)</entry>
<entry>F9a(0)</entry>
<entry>F10a(0)</entry>
<entry>F11a(0)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>1</entry>
<entry>5</entry>
<entry> 9</entry>
<entry>13</entry>
<entry>17</entry>
<entry>21</entry>
<entry>25</entry>
<entry>29</entry>
<entry>33</entry>
<entry>37</entry>
<entry>41</entry>
<entry>45</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F3b(0)</entry>
<entry>F4b(0)</entry>
<entry>F5b(0)</entry>
<entry>F6b(0)</entry>
<entry>F7b(0)</entry>
<entry>F8b(0)</entry>
<entry>F9b(0)</entry>
<entry>F10b(0)</entry>
<entry>F11b(0)</entry>
<entry>F0b(0)</entry>
<entry>F1b(0)</entry>
<entry>F2b(0)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>2</entry>
<entry>6</entry>
<entry>10</entry>
<entry>14</entry>
<entry>18</entry>
<entry>22</entry>
<entry>26</entry>
<entry>30</entry>
<entry>34</entry>
<entry>38</entry>
<entry>42</entry>
<entry>46</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F6c(0)</entry>
<entry>F7c(0)</entry>
<entry>F8c(0)</entry>
<entry>F9c(0)</entry>
<entry>F10c(0)</entry>
<entry>F11c(0)</entry>
<entry>F0c(0)</entry>
<entry>F1c(0)</entry>
<entry>F2c(0)</entry>
<entry>F3c(0)</entry>
<entry>F4c(0)</entry>
<entry>F5c(0)</entry>
</row>
<row>
<entry>Bit</entry>
<entry>3</entry>
<entry>7</entry>
<entry>11</entry>
<entry>15</entry>
<entry>19</entry>
<entry>23</entry>
<entry>27</entry>
<entry>31</entry>
<entry>35</entry>
<entry>39</entry>
<entry>43</entry>
<entry>47</entry>
</row>
<row>
<entry>BP bus</entry>
<entry>F9d(0)</entry>
<entry>F10d(0)</entry>
<entry>F11d(0)</entry>
<entry>F0d(0)</entry>
<entry>F1d(0)</entry>
<entry>F2d(0)</entry>
<entry>F3d(0)</entry>
<entry>F4d(0)</entry>
<entry>F5d(0)</entry>
<entry>F6d(0)</entry>
<entry>F7d(0)</entry>
<entry>F8d(0)</entry>
</row>
<row>
<entry namest="1" nameend="13" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bit order transmitted for OC48 operation.
</p>
<p id="p-0194" num="0217">
<tables id="TABLE-US-00070" num="00070">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="6">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="49pt" align="left"/>
<colspec colname="2" colwidth="21pt" align="center"/>
<colspec colname="3" colwidth="56pt" align="center"/>
<colspec colname="4" colwidth="21pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="5" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Fabric</entry>
<entry>Cycle</entry>
<entry>Cycle</entry>
<entry>Cycle</entry>
<entry>Cycle</entry>
</row>
<row>
<entry/>
<entry>(bit)</entry>
<entry>0</entry>
<entry>1</entry>
<entry>2</entry>
<entry>3</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="5" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="6">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="49pt" align="left"/>
<colspec colname="2" colwidth="21pt" align="char" char="."/>
<colspec colname="3" colwidth="56pt" align="center"/>
<colspec colname="4" colwidth="21pt" align="center"/>
<colspec colname="5" colwidth="56pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry>F0(0)</entry>
<entry>0</entry>
<entry>15</entry>
<entry>26</entry>
<entry>37</entry>
</row>
<row>
<entry/>
<entry>F1(0)</entry>
<entry>4</entry>
<entry>19</entry>
<entry>30</entry>
<entry>41</entry>
</row>
<row>
<entry/>
<entry>F2(0)</entry>
<entry>8</entry>
<entry>23</entry>
<entry>34</entry>
<entry>45</entry>
</row>
<row>
<entry/>
<entry>F3(0)</entry>
<entry>1</entry>
<entry>12</entry>
<entry>27</entry>
<entry>38</entry>
</row>
<row>
<entry/>
<entry>F4(0)</entry>
<entry>5</entry>
<entry>16</entry>
<entry>31</entry>
<entry>42</entry>
</row>
<row>
<entry/>
<entry>F5(0)</entry>
<entry>9</entry>
<entry>20</entry>
<entry>35</entry>
<entry>46</entry>
</row>
<row>
<entry/>
<entry>F6(0)</entry>
<entry>2</entry>
<entry>13</entry>
<entry>24</entry>
<entry>39</entry>
</row>
<row>
<entry/>
<entry>F7(0)</entry>
<entry>6</entry>
<entry>17</entry>
<entry>28</entry>
<entry>43</entry>
</row>
<row>
<entry/>
<entry>F8(0)</entry>
<entry>10</entry>
<entry>21</entry>
<entry>32</entry>
<entry>47</entry>
</row>
<row>
<entry/>
<entry>F9(0)</entry>
<entry>3</entry>
<entry>14</entry>
<entry>25</entry>
<entry>36</entry>
</row>
<row>
<entry/>
<entry>F10(0)</entry>
<entry>7</entry>
<entry>18</entry>
<entry>29</entry>
<entry>40</entry>
</row>
<row>
<entry/>
<entry>F11(0)</entry>
<entry>11</entry>
<entry>22</entry>
<entry>33</entry>
<entry>44</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="5" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The parity calculation uses the following formulas and the following aggregator 32 read order
</p>
<p id="p-0195" num="0218">
<tables id="TABLE-US-00071" num="00071">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="77pt" align="center"/>
<colspec colname="2" colwidth="35pt" align="center"/>
<colspec colname="3" colwidth="105pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Transmit</entry>
<entry/>
</row>
<row>
<entry>Bit</entry>
<entry>stripe</entry>
<entry>XOR bits</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>P0</entry>
<entry>0</entry>
<entry> 0-11</entry>
</row>
<row>
<entry>P1</entry>
<entry>1</entry>
<entry>12-23</entry>
</row>
<row>
<entry>P2</entry>
<entry>2</entry>
<entry>24-35</entry>
</row>
<row>
<entry>P3</entry>
<entry>3</entry>
<entry>36-47</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table shows the bits transmitted on each parity bus. Bits <b>8</b> through <b>15</b> of the parity bus are obtained by adding 96 to each value in the table.
</p>
<p id="p-0196" num="0219">
<tables id="TABLE-US-00072" num="00072">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="10">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="14pt" align="center"/>
<colspec colname="3" colwidth="42pt" align="center"/>
<colspec colname="4" colwidth="42pt" align="center"/>
<colspec colname="5" colwidth="63pt" align="center"/>
<colspec colname="6" colwidth="63pt" align="center"/>
<colspec colname="7" colwidth="42pt" align="center"/>
<colspec colname="8" colwidth="42pt" align="center"/>
<colspec colname="9" colwidth="63pt" align="center"/>
<colspec colname="10" colwidth="49pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="10" align="center" rowsep="1"/>
</row>
<row>
<entry>From</entry>
<entry>To</entry>
<entry>Bit 7</entry>
<entry>Bit 6</entry>
<entry>Bit 5</entry>
<entry>Bit 4</entry>
<entry>Bit 3</entry>
<entry>Bit 2</entry>
<entry>Bit 1</entry>
<entry>Bit 0</entry>
</row>
<row>
<entry namest="1" nameend="10" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>0</entry>
<entry>1</entry>
<entry>84 + 88 + 92</entry>
<entry>72 + 76 + 80</entry>
<entry>60 + 64 + 68</entry>
<entry>P4 + 48 + 52 + 56</entry>
<entry>36 + 40 + 44</entry>
<entry>24 + 28 + 32</entry>
<entry>12 + 16 + 20</entry>
<entry>P0 + 0 + 4 + 8</entry>
</row>
<row>
<entry/>
<entry>2</entry>
<entry>84 + 88 + 92</entry>
<entry>72 + 76 + 80</entry>
<entry>60 + 64 + 68</entry>
<entry>P4 + 48 + 52 + 56</entry>
<entry>36 + 40 + 44</entry>
<entry>24 + 28 + 32</entry>
<entry>12 + 16 + 20</entry>
<entry>P0 + 0 + 4 + 8</entry>
</row>
<row>
<entry/>
<entry>3</entry>
<entry>84 + 88 + 92</entry>
<entry>72 + 76 + 80</entry>
<entry>60 + 64 + 68</entry>
<entry>P4 + 48 + 52 + 56</entry>
<entry>36 + 40 + 44</entry>
<entry>24 + 28 + 32</entry>
<entry>12 + 16 + 20</entry>
<entry>P0 + 0 + 4 + 8</entry>
</row>
<row>
<entry>1</entry>
<entry>0</entry>
<entry>85 + 89 + 93</entry>
<entry>73 + 77 + 81</entry>
<entry>P5 + 61 + 65 + 69</entry>
<entry>49 + 53 + 57</entry>
<entry>37 + 41 + 45</entry>
<entry>25 + 29 + 33</entry>
<entry>P1 + 13 + 17 + 21</entry>
<entry>1 + 5 + 9 </entry>
</row>
<row>
<entry/>
<entry>2</entry>
<entry>85 + 89 + 93</entry>
<entry>73 + 77 + 81</entry>
<entry>P5 + 61 + 65 + 69</entry>
<entry>49 + 53 + 57</entry>
<entry>37 + 41 + 45</entry>
<entry>25 + 29 + 33</entry>
<entry>P1 + 13 + 17 + 21</entry>
<entry>1 + 5 + 9 </entry>
</row>
<row>
<entry/>
<entry>3</entry>
<entry>85 + 89 + 93</entry>
<entry>73 + 77 + 81</entry>
<entry>P5 + 61 + 65 + 69</entry>
<entry>49 + 53 + 57</entry>
<entry>37 + 41 + 45</entry>
<entry>25 + 29 + 33</entry>
<entry>P1 + 13 + 17 + 21</entry>
<entry>1 + 5 + 9 </entry>
</row>
<row>
<entry>2</entry>
<entry>0</entry>
<entry>86 + 90 + 94</entry>
<entry>P6 + 74 +</entry>
<entry>62 + 66 + 70</entry>
<entry>50 + 54 + 58</entry>
<entry>38 + 42 + 46</entry>
<entry>P2 + 26 +</entry>
<entry>14 + 18 + 22</entry>
<entry>2 + 6 + 10</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>78 + 82</entry>
<entry/>
<entry/>
<entry/>
<entry>30 + 34</entry>
</row>
<row>
<entry/>
<entry>1</entry>
<entry>86 + 90 + 94</entry>
<entry>P6 + 74 +</entry>
<entry>62 + 66 + 70</entry>
<entry>50 + 54 + 58</entry>
<entry>38 + 42 + 46</entry>
<entry>P2 + 26 +</entry>
<entry>14 + 18 + 22</entry>
<entry>2 + 6 + 10</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>78 + 82</entry>
<entry/>
<entry/>
<entry/>
<entry>30 + 34</entry>
</row>
<row>
<entry/>
<entry>3</entry>
<entry>86 + 90 + 94</entry>
<entry>P6 + 74 +</entry>
<entry>62 + 66 + 70</entry>
<entry>50 + 54 + 58</entry>
<entry>38 + 42 + 46</entry>
<entry>P2 + 26 +</entry>
<entry>14 + 18 + 22</entry>
<entry>2 + 6 + 10</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>78 + 82</entry>
<entry/>
<entry/>
<entry/>
<entry>30 + 34</entry>
</row>
<row>
<entry>3</entry>
<entry>0</entry>
<entry>P7 + 87 +</entry>
<entry>75 + 79 + 83</entry>
<entry>63 + 67 + 71</entry>
<entry>51 + 55 + 59</entry>
<entry>P3 + 39 +</entry>
<entry>27 + 31 + 35</entry>
<entry>15 + 19 + 23</entry>
<entry>3 + 7 + 11</entry>
</row>
<row>
<entry/>
<entry/>
<entry>91 + 95</entry>
<entry/>
<entry/>
<entry/>
<entry>43 + 47</entry>
</row>
<row>
<entry/>
<entry>1</entry>
<entry>P7 + 87 +</entry>
<entry>75 + 79 + 83</entry>
<entry>63 + 67 + 71</entry>
<entry>51 + 55 + 59</entry>
<entry>P3 + 39 +</entry>
<entry>27 + 31 + 35</entry>
<entry>15 + 19 + 23</entry>
<entry>3 + 7 + 11</entry>
</row>
<row>
<entry/>
<entry/>
<entry>91 + 95</entry>
<entry/>
<entry/>
<entry/>
<entry>43 + 47</entry>
</row>
<row>
<entry/>
<entry>2</entry>
<entry>P7 + 87 +</entry>
<entry>75 + 79 + 83</entry>
<entry>63 + 67 + 71</entry>
<entry>51 + 55 + 59</entry>
<entry>P3 + 39 +</entry>
<entry>27 + 31 + 35</entry>
<entry>15 + 19 + 23</entry>
<entry>3 + 7 + 11</entry>
</row>
<row>
<entry/>
<entry/>
<entry>91 + 95</entry>
<entry/>
<entry/>
<entry/>
<entry>43 + 47</entry>
</row>
<row>
<entry namest="1" nameend="10" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0197" num="0220">When the Unstriper receives a Packet Abort K-character over the SOB, the Unstriper should abandon all packets that can't be completed with fragments that have already been received (in or after the Data Delay FIFO/RW Voter). No indication is provided when a packet has been dropped as a result of receiving a Packet Abort. The Unstriper expects that at least 12 Idle K-characters are received following the Packet Abort K-character as a means of allowing the Unstriper to re-sync.</p>
<p id="p-0198" num="0221">Given a potential mismatch between the SOB bandwidth and the BOB bandwidth and the potential for the BOB to be backpressured from downstream it is possible that all of the storage within the Unstriper is consumed. When the number of used slots in the Data Delay FIFO is greater than the contents of the Backpressure Threshold Register the Unstriper asserts the US_BP output signal. It is expected that the Separators will stop sending transfers at the next fragment boundary after receiving this signal. If any fragments are received when the Data Delay FIFO is full they are dropped. If any final fragments are lost then Unstriper will increment the FIFO Full Packet Drop Count register.</p>
<p id="h-0012" num="0000">Initial values of all register (reset state) is zero unless documented otherwise.</p>
<p id="h-0013" num="0000">The version number register is a read only register which allows software to see what the version number of the chip is.</p>
<p id="p-0199" num="0222">
<tables id="TABLE-US-00073" num="00073">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="70pt" align="left"/>
<colspec colname="3" colwidth="98pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>31:16</entry>
<entry>Unused</entry>
<entry/>
</row>
<row>
<entry/>
<entry>15:12</entry>
<entry>Version number</entry>
<entry>Version number of the chip</entry>
</row>
<row>
<entry/>
<entry>11:0</entry>
<entry>ASIC ID</entry>
<entry>ASIC ID</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The main control register controls the configuration of the chip.
</p>
<p id="p-0200" num="0223">
<tables id="TABLE-US-00074" num="00074">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="63pt" align="left"/>
<colspec colname="3" colwidth="133pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:14</entry>
<entry>Unused</entry>
<entry/>
</row>
<row>
<entry>13</entry>
<entry>Disable term</entry>
<entry>Set this bit to a one to disable trapping</entry>
</row>
<row>
<entry/>
<entry/>
<entry>test cells into the terminate FIFO, set to a</entry>
</row>
<row>
<entry/>
<entry/>
<entry>zero to enable trapping test cells into the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>terminate FIFO and not forwarding the cells</entry>
</row>
<row>
<entry/>
<entry/>
<entry>to the output stage.</entry>
</row>
<row>
<entry>12</entry>
<entry>Unused</entry>
</row>
<row>
<entry>11</entry>
<entry>Trap corrupts</entry>
<entry>Set this bit to a one to trap all corrupt cell</entry>
</row>
<row>
<entry/>
<entry/>
<entry>information into the terminate FIFO, set to a</entry>
</row>
<row>
<entry/>
<entry/>
<entry>zero to only trap test cells terminated in the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>unstriper.</entry>
</row>
<row>
<entry>10</entry>
<entry>BOB_valid polarity</entry>
<entry>‘1’ = BOB_VALID is active-high.</entry>
</row>
<row>
<entry/>
<entry/>
<entry>‘0’ = BOB_VALID is active-low.</entry>
</row>
<row>
<entry>9</entry>
<entry>Bob packet wait</entry>
<entry>Determines the latency between the assertion</entry>
</row>
<row>
<entry/>
<entry/>
<entry>of the BOB_BP_L signal and the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>deassertion of the BOB_VALID signal</entry>
</row>
<row>
<entry/>
<entry/>
<entry>‘1’ = BOB is idled immediately.</entry>
</row>
<row>
<entry/>
<entry/>
<entry>‘0’ = BOB is idled at the end of the next</entry>
</row>
<row>
<entry/>
<entry/>
<entry>packet/cell.</entry>
</row>
<row>
<entry>8</entry>
<entry>SOP polarity</entry>
<entry>‘1’ = SOP is active-high.</entry>
</row>
<row>
<entry/>
<entry/>
<entry>‘0’ = SOP is active-low.</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Note for ATM blades, this bit should be a</entry>
</row>
<row>
<entry/>
<entry/>
<entry>zero.</entry>
</row>
<row>
<entry>7</entry>
<entry>Unused</entry>
</row>
<row>
<entry>5</entry>
<entry>OC192c enable</entry>
<entry>Returns the value present on the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>OC48/oc192 pin.</entry>
</row>
<row>
<entry/>
<entry/>
<entry>‘1’ = OC192c</entry>
</row>
<row>
<entry/>
<entry/>
<entry>‘0’ = OC48</entry>
</row>
<row>
<entry>4:3</entry>
<entry>OC192c chip id</entry>
<entry>Returns the value of the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>CHIP_MODE(1:0) pins.</entry>
</row>
<row>
<entry>2:0</entry>
<entry>Number of Fabrics</entry>
<entry>The number of fabrics in the system</entry>
</row>
<row>
<entry/>
<entry/>
<entry>configuration. The Unstriper can handle</entry>
</row>
<row>
<entry/>
<entry/>
<entry>data striped to two adjacent fabric amounts</entry>
</row>
<row>
<entry/>
<entry/>
<entry>simultaneously.</entry>
</row>
<row>
<entry/>
<entry/>
<entry>“000” = 1/2</entry>
</row>
<row>
<entry/>
<entry/>
<entry>“001” = 2/3</entry>
</row>
<row>
<entry/>
<entry/>
<entry>“010” = 3/4</entry>
</row>
<row>
<entry/>
<entry/>
<entry>“011” = 4/6-fast</entry>
</row>
<row>
<entry/>
<entry/>
<entry>“100” = 6-fast/6-slow</entry>
</row>
<row>
<entry/>
<entry/>
<entry>“101” = 6-slow/12</entry>
</row>
<row>
<entry/>
<entry/>
<entry>“110” = 6-slow/12</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
This register contains a status information to report errors. Reading bits automatically causes them to clear. Status bits will be reasserted after the source has cleared its signal and then is reasserted.
</p>
<p id="p-0201" num="0224">
<tables id="TABLE-US-00075" num="00075">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="70pt" align="left"/>
<colspec colname="3" colwidth="126pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:10</entry>
<entry>Unused</entry>
<entry/>
</row>
<row>
<entry>9</entry>
<entry>Routeword exchange</entry>
<entry>A synchronization error occurred (elastic</entry>
</row>
<row>
<entry/>
<entry>bus sync error</entry>
<entry>buffer overflow) on the Routeword</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Exchange Bus.</entry>
</row>
<row>
<entry>8</entry>
<entry>Parity exchange</entry>
<entry>A synchronization error occurred (elastic</entry>
</row>
<row>
<entry/>
<entry>bus sync error</entry>
<entry>buffer overflow) on the Parity Exchange</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Bus.</entry>
</row>
<row>
<entry>7</entry>
<entry>Error exchange</entry>
<entry>A synchronization error occurred (elastic</entry>
</row>
<row>
<entry/>
<entry>bus sync error</entry>
<entry>buffer overflow) on the Error Exchange</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Bus.</entry>
</row>
<row>
<entry>6</entry>
<entry>BOB SOP/C Sync</entry>
<entry>A synchronization error occurred (elastic</entry>
</row>
<row>
<entry/>
<entry>bus sync error</entry>
<entry>buffer overflow) on the BOB SOP/C Sync</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Bus.</entry>
</row>
<row>
<entry>5</entry>
<entry>Transceiver error</entry>
<entry>One or more of the Gigabit Ethernet</entry>
</row>
<row>
<entry/>
<entry>above threshold</entry>
<entry>transceivers (SOB) error counters has</entry>
</row>
<row>
<entry/>
<entry/>
<entry>exceeded the programmed threshold. The</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Transceiver Error Status register must be</entry>
</row>
<row>
<entry/>
<entry/>
<entry>read to clear this bit.</entry>
</row>
<row>
<entry>4</entry>
<entry>Terminated FIFO</entry>
<entry>The number of terminated cells (used for</entry>
</row>
<row>
<entry/>
<entry>length above</entry>
<entry>switch path fault isolation) has exceeded</entry>
</row>
<row>
<entry/>
<entry>threshold</entry>
<entry>the programmed threshold.</entry>
</row>
<row>
<entry>3</entry>
<entry>Error counter</entry>
<entry>An error counter has exceeded the</entry>
</row>
<row>
<entry/>
<entry>above threshold</entry>
<entry>programmed threshold.</entry>
</row>
<row>
<entry>2</entry>
<entry>Synch error</entry>
<entry>An error in the synchronization logic</entry>
</row>
<row>
<entry/>
<entry/>
<entry>occurred.</entry>
</row>
<row>
<entry>1</entry>
<entry>FIFO full</entry>
<entry>This bit is set to a one when a cell or</entry>
</row>
<row>
<entry/>
<entry>drop occurred</entry>
<entry>packet drop has occurred due to an</entry>
</row>
<row>
<entry/>
<entry/>
<entry>internal FIFO being full.</entry>
</row>
<row>
<entry>0</entry>
<entry>Cell Trapped</entry>
<entry>This bit is set to a one when a cell trap has</entry>
</row>
<row>
<entry/>
<entry/>
<entry>been triggered. This bit is cleared by</entry>
</row>
<row>
<entry/>
<entry/>
<entry>writing a one back to this bit.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
This register enables an interrupt to be generated when the corresponding bit in the Status Register has been set.
</p>
<p id="p-0202" num="0225">
<tables id="TABLE-US-00076" num="00076">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="70pt" align="left"/>
<colspec colname="3" colwidth="126pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:12</entry>
<entry>Unused</entry>
<entry/>
</row>
<row>
<entry>11</entry>
<entry>Routeword exchange</entry>
<entry>A synchronization error occurred (elastic</entry>
</row>
<row>
<entry/>
<entry>bus sync error</entry>
<entry>buffer overflow) on the Routeword</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Exchange Bus.</entry>
</row>
<row>
<entry>10</entry>
<entry>Parity exchange</entry>
<entry>A synchronization error occurred (elastic</entry>
</row>
<row>
<entry/>
<entry>bus sync error</entry>
<entry>buffer overflow) on the Parity Exchange</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Bus.</entry>
</row>
<row>
<entry> 9</entry>
<entry>Error exchange</entry>
<entry>A synchronization error occurred (elastic</entry>
</row>
<row>
<entry/>
<entry>bus sync error</entry>
<entry>buffer overflow) on the Error Exchange</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Bus.</entry>
</row>
<row>
<entry> 8</entry>
<entry>BOB SOP/C Sync</entry>
<entry>A synchronization error occurred (elastic</entry>
</row>
<row>
<entry/>
<entry>bus sync error</entry>
<entry>buffer overflow) on the BOB SOP/C</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Sync Bus.</entry>
</row>
<row>
<entry> 7</entry>
<entry>Transceiver error</entry>
<entry>One or more of the Gigabit Ethernet</entry>
</row>
<row>
<entry/>
<entry>above threshold</entry>
<entry>transceivers (SOB) error counters has</entry>
</row>
<row>
<entry/>
<entry/>
<entry>exceeded the programmed threshold. The</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Transceiver Error Status register must be</entry>
</row>
<row>
<entry/>
<entry/>
<entry>read to clear this bit.</entry>
</row>
<row>
<entry> 6</entry>
<entry>Terminated cells</entry>
<entry>Set this bit to a one to enable the interrupt</entry>
</row>
<row>
<entry/>
<entry>over threshold</entry>
<entry>assertion due to the number of terminated</entry>
</row>
<row>
<entry/>
<entry/>
<entry>cells exceeding a threshold being held in</entry>
</row>
<row>
<entry/>
<entry/>
<entry>the terminated cell FIFO.</entry>
</row>
<row>
<entry> 5</entry>
<entry>Parity error</entry>
<entry>Set this bit to a one to enable the interrupt</entry>
</row>
<row>
<entry/>
<entry/>
<entry>assertion due to a parity threshold</entry>
</row>
<row>
<entry/>
<entry/>
<entry>exceeded condition. Set this bit to a zero</entry>
</row>
<row>
<entry/>
<entry/>
<entry>to disable the interrupt.</entry>
</row>
<row>
<entry> 4</entry>
<entry>Checksum error</entry>
<entry>Set this bit to a one to enable the interrupt</entry>
</row>
<row>
<entry/>
<entry/>
<entry>assertion due to a checksum threshold</entry>
</row>
<row>
<entry/>
<entry/>
<entry>exceeded condition. Set this bit to a zero</entry>
</row>
<row>
<entry/>
<entry/>
<entry>to disable the interrupt.</entry>
</row>
<row>
<entry> 3</entry>
<entry>Routeword error</entry>
<entry>Set this bit to a one to enable the interrupt</entry>
</row>
<row>
<entry/>
<entry/>
<entry>assertion due to a routeword threshold</entry>
</row>
<row>
<entry/>
<entry/>
<entry>exceeded condition. Set this bit to a zero</entry>
</row>
<row>
<entry/>
<entry/>
<entry>to disable the interrupt.</entry>
</row>
<row>
<entry> 2</entry>
<entry>Synch Error</entry>
<entry>Set to bit to a one to generate an interrupt</entry>
</row>
<row>
<entry/>
<entry/>
<entry>on the assertion of an error in the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>synchronizer.</entry>
</row>
<row>
<entry> 1</entry>
<entry>FIFO full</entry>
<entry>Set this bit to a one to enable an interrupt</entry>
</row>
<row>
<entry/>
<entry/>
<entry>on the dropping of traffic due to any FIFO</entry>
</row>
<row>
<entry/>
<entry/>
<entry>overflow in the chip.</entry>
</row>
<row>
<entry> 0</entry>
<entry>Cell Trapped</entry>
<entry>Set this bit to a one to enable an interrupt</entry>
</row>
<row>
<entry/>
<entry/>
<entry>if a cell trap executed.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The Input enable register controls the ports enabled for the input busses on the device. Note that this is used to override the normal hardware based handshaking on the interfaces.
</p>
<p id="p-0203" num="0226">
<tables id="TABLE-US-00077" num="00077">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="28pt" align="center"/>
<colspec colname="2" colwidth="49pt" align="left"/>
<colspec colname="3" colwidth="140pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>12:0</entry>
<entry>Input Enable</entry>
<entry>Set each bit x to a one to enable input bus x for</entry>
</row>
<row>
<entry/>
<entry/>
<entry>operation. Note that bit 12 is the parity fabric,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>bits 0-11 are for fabrics 0-11.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Disabling an input causes the routeword from that lane to automatically be handled as if it mismatches but disables any errors from being counted in lanes which would have used the masked data.
<br/>
This register is used to control the reading of cells from the data FIFO and pushing the data out the DIN_MC bus. Based on internal error conditions, it can also be used to stop reading output based on certain error conditions to allow debugging to take place.
</p>
<p id="p-0204" num="0227">
<tables id="TABLE-US-00078" num="00078">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="77pt" align="left"/>
<colspec colname="3" colwidth="119pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:5</entry>
<entry>Unused</entry>
<entry/>
</row>
<row>
<entry>4</entry>
<entry>OC192c driven enables</entry>
<entry>Enable drivers for the OC192c</entry>
</row>
<row>
<entry/>
<entry/>
<entry>configuration.</entry>
</row>
<row>
<entry>3</entry>
<entry>Trap on parity</entry>
<entry>Set this bit to a one to trap a cell/packet</entry>
</row>
<row>
<entry/>
<entry/>
<entry>which has a parity error</entry>
</row>
<row>
<entry>2</entry>
<entry>Trap on header</entry>
<entry>Set this bit to a one to trap a cell/packet</entry>
</row>
<row>
<entry/>
<entry/>
<entry>which has a header error.</entry>
</row>
<row>
<entry>1</entry>
<entry>Trap on checksum</entry>
<entry>Set this bit to a one to trap a cell/packet</entry>
</row>
<row>
<entry/>
<entry/>
<entry>which fails checksum.</entry>
</row>
<row>
<entry>0</entry>
<entry>BOB_enable</entry>
<entry>Set this bit to a one to enable writes</entry>
</row>
<row>
<entry/>
<entry/>
<entry>to the DIN_MC bus</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The Backpressure Threshold is used to determine when the Unstriper asserts UNS_BP based on the number of entries used in the Data Delay FIFO. When the threshold is exceeded the UNS_BP signal is asserted until the number of used entries is below the threshold. The Separators are expected to stop sending data at a fragment boundary.
</p>
<p id="p-0205" num="0228">
<tables id="TABLE-US-00079" num="00079">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="35pt" align="left"/>
<colspec colname="3" colwidth="161pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>7:0</entry>
<entry>Threshold</entry>
<entry>Number of used entries in the Data Delay FIFO before</entry>
</row>
<row>
<entry/>
<entry/>
<entry>the UNS_BP signal is asserted. The default value is</entry>
</row>
<row>
<entry/>
<entry/>
<entry>220 corresponding to two minimum length packets in</entry>
</row>
<row>
<entry/>
<entry/>
<entry>240G Slow mode.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The Unstriper provides a software interface to the data FIFO as a fault isolation aid. The usage of these registers allows for reads to be done from the FIFO head, and writes to the done to the tail of the FIFO.
<br/>
To read a cell/packet from the FIFO, perform the following actions:
<ul id="ul0015" list-style="none">
    <li id="ul0015-0001" num="0000">
    <ul id="ul0016" list-style="none">
        <li id="ul0016-0001" num="0229">1. Initialize the Output Enable/Trap enable register to stop reads on the desired condition. This will freeze the DIN_MC interface at that start of cell/packet.</li>
        <li id="ul0016-0002" num="0230">2. Wait for the Trap Valid bit to be set in the main status register.</li>
        <li id="ul0016-0003" num="0231">3. Start reading. The first read should be done with the Data FIFO first read register. This will cause the data to be read from the current read pointer.</li>
        <li id="ul0016-0004" num="0232">4. Perform subsequent reads using the data FIFO increment read. This will cause the read pointer to be incremented by one byte for each read operation and the read performed.
<br/>
Note that this read is not destructive and the data will be read out of the FIFO to the DIN_MC bus when the trap is cleared.
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0206" num="0233">This register selects the FIFO which the FIFO data registers read/write.</p>
<p id="p-0207" num="0234">
<tables id="TABLE-US-00080" num="00080">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="left"/>
<colspec colname="3" colwidth="147pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:2</entry>
<entry>Unused</entry>
<entry/>
</row>
<row>
<entry>1:0</entry>
<entry>FIFO select</entry>
<entry>Selects the FIFO. The following encoding is used:</entry>
</row>
<row>
<entry/>
<entry/>
<entry>00-Data FIFO</entry>
</row>
<row>
<entry/>
<entry/>
<entry>01-Parity FIFO</entry>
</row>
<row>
<entry/>
<entry/>
<entry>10-output delay FIFO</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
This register reads the byte at the head of the data FIFO.
</p>
<p id="p-0208" num="0235">
<tables id="TABLE-US-00081" num="00081">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="35pt" align="left"/>
<colspec colname="3" colwidth="161pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:9</entry>
<entry>Unused</entry>
<entry/>
</row>
<row>
<entry>8</entry>
<entry>EOP</entry>
<entry>Bit is a one for EOP, zero for non-EOP.</entry>
</row>
<row>
<entry>7:0</entry>
<entry>Read data</entry>
<entry>Read of this register returns the first byte from the data</entry>
</row>
<row>
<entry/>
<entry/>
<entry>FIFO. A write to this register modifies the first address</entry>
</row>
<row>
<entry/>
<entry/>
<entry>in the data FIFO</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0209" num="0236">This register is used to read/write the next byte from the FIFO. The effect of this read is to advance the processor read address in the FIFO and to read the resulting data byte. Writing to this register writes the next byte of data. Register format is identical to Data FIFO first read.</p>
<p id="p-0210" num="0237">The Unstriper maintains a set of error counters. These counters count the occurrences of specific errors within a programmable time window. When counter values exceed a programmed threshold for each counter type, an interrupt is generated and error bits set in the main status register. Two main event types are counted on a per lane basis: (1) header errors and (2) invalid checksums.</p>
<p id="p-0211" num="0238">Counter resets are done via periodic software polling. It is the intent of the design to have the software read interval reasonably high (0.5 seconds or so). In the event of an interrupt, it is the responsibility of software to find and reset the counter which caused the interrupt condition.</p>
<p id="p-0212" num="0239">All internal error counters are 16 bits since they are in the device for failure isolation. Counters will not overflow but will stay at 0xFFFF until they are read. Counters automatically clear on reads. It is assumed that periodically the SCP will read the unstriper error counters to maintain longer interval error counts. Interrupts are present to keep the frequency of the required counter reads low (one the order of 100 mS-1 second). The unstriper will not reset counters at all without software intervention.</p>
<p id="p-0213" num="0240">The error count status register summarizes the current threshold comparison for all error counts. If any of these bits are set, an associated bit is set. To clear a bit in the error count status register, write a 1 back to the location(s) to be cleared. Any bits which have a zero written back will remain unchanged.</p>
<p id="p-0214" num="0241">
<tables id="TABLE-US-00082" num="00082">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="56pt" align="left"/>
<colspec colname="3" colwidth="140pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>28</entry>
<entry>Routeword NF</entry>
<entry>This bit is set when the value in the Rouetword</entry>
</row>
<row>
<entry/>
<entry>Error Count</entry>
<entry>NF Error Count register is greater than the</entry>
</row>
<row>
<entry/>
<entry>above threshold</entry>
<entry>value in the Routeword NF Error Threshold</entry>
</row>
<row>
<entry/>
<entry/>
<entry>register</entry>
</row>
<row>
<entry>27</entry>
<entry>Routeword Parity</entry>
<entry>This bit is set when the value in the Rouetword</entry>
</row>
<row>
<entry/>
<entry>Error Count</entry>
<entry>Parity Error Count register is greater than the</entry>
</row>
<row>
<entry/>
<entry>above threshld</entry>
<entry>value in the Routeword Parity Error Threshold</entry>
</row>
<row>
<entry/>
<entry/>
<entry>register</entry>
</row>
<row>
<entry>26</entry>
<entry>Parity count</entry>
<entry>This bit is set if the number of parity errors</entry>
</row>
<row>
<entry/>
<entry>above threshold</entry>
<entry>exceeds the parity error threshold.</entry>
</row>
<row>
<entry>25:13</entry>
<entry>Routeword count</entry>
<entry>Each bit of this field is set to a one if the</entry>
</row>
<row>
<entry/>
<entry>above threshold</entry>
<entry>routeword errors of one input interface has its</entry>
</row>
<row>
<entry/>
<entry/>
<entry>error count above the threshold for routeword</entry>
</row>
<row>
<entry/>
<entry/>
<entry>errors.</entry>
</row>
<row>
<entry>12:0</entry>
<entry>Checksum count</entry>
<entry>Each bit of this field is set to a one if the</entry>
</row>
<row>
<entry/>
<entry>above threshold</entry>
<entry>checksum errors of one rebuilt data stream has</entry>
</row>
<row>
<entry/>
<entry/>
<entry>its error count above the threshold for</entry>
</row>
<row>
<entry/>
<entry/>
<entry>checksum errors.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The Checksum Error Threshold controls the assertion of an error indication for checksum errors. When the number of checksum errors for any lane exceeds this register, an error condition is signaled in the main status register and an interrupt may be generated.
</p>
<p id="p-0215" num="0242">
<tables id="TABLE-US-00083" num="00083">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="35pt" align="left"/>
<colspec colname="3" colwidth="161pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>15:0</entry>
<entry>Threshold</entry>
<entry>Threshold value. This is a unsigned 16 bit quantity,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>comparison is # errors &gt; Threshold.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The Routeword Error Threshold controls the assertion of an error indication for routeword errors. When the number of routeword errors for any lane exceeds this register, an error condition is signaled in the main status register and an interrupt may be generated.
</p>
<p id="p-0216" num="0243">
<tables id="TABLE-US-00084" num="00084">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="35pt" align="left"/>
<colspec colname="3" colwidth="161pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>15:0</entry>
<entry>Threshold</entry>
<entry>Threshold value. This is a unsigned 16 bit quantity,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>comparison is # errors &gt; Threshold.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The Parity Error Threshold controls the assertion of an error indication for parity errors. When the number of parity errors exceeds this register, an error condition is signaled in the main status register and an interrupt may be generated.
</p>
<p id="p-0217" num="0244">
<tables id="TABLE-US-00085" num="00085">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="35pt" align="left"/>
<colspec colname="3" colwidth="161pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>15:0</entry>
<entry>Threshold</entry>
<entry>Threshold value. This is a unsigned 16 bit quantity,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>comparison is # errors &gt; Threshold.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The Routeword Parity Error Threshold controls the assertion of an error indication for routeword parity errors. When the number of routeword parity errors exceeds the value in this register, an error condition is signaled in the error counter status register and an interrupt may be generated.
</p>
<p id="p-0218" num="0245">
<tables id="TABLE-US-00086" num="00086">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="35pt" align="left"/>
<colspec colname="3" colwidth="161pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>15:0</entry>
<entry>Threshold</entry>
<entry>Threshold value. This is a unsigned 16 bit quantity,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>comparison is # errors &gt; Threshold.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The Routeword NF Error Threshold controls the assertion of an error indication for routeword NF errors. When the number of routeword NF errors exceeds the value in this register, an error condition is signaled in the Error Counter Status register and an interrupt may be generated.
</p>
<p id="p-0219" num="0246">
<tables id="TABLE-US-00087" num="00087">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="35pt" align="left"/>
<colspec colname="3" colwidth="161pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>15:0</entry>
<entry>Threshold</entry>
<entry>Threshold value. This is a unsigned 16 bit quantity,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>comparison is # errors &gt; Threshold.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Each checksum error counter reports a count of checksum error for a specific reconstructed data lane. If any checksum error exceeds the value programmed in the checksum error threshold, an error condition is generated and flagged in the main status register. These counters will not overflow, but will hold a value of all ones until reset. Counters are incremented if a checksum error occurs. Counters reset when it is read by software.
</p>
<p id="p-0220" num="0247">
<tables id="TABLE-US-00088" num="00088">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="49pt" align="left"/>
<colspec colname="3" colwidth="147pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>15:0</entry>
<entry>Error count</entry>
<entry>Gives number of checksum errors seen on this</entry>
</row>
<row>
<entry/>
<entry/>
<entry>reconstruction lane since the last counter read.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Each routeword error count reports a count of routeword errors for a specific input data lane. If any checksum error exceeds the value programmed in the Routeword Error Threshold, an error condition is generated and flagged in the Main Status register. These counters will not overflow, but will hold a value of all ones until reset. Counters are incremented if a routeword error occurs. Counters reset when read by software.
</p>
<p id="p-0221" num="0248">
<tables id="TABLE-US-00089" num="00089">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="42pt" align="left"/>
<colspec colname="3" colwidth="154pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>15:0</entry>
<entry>Error count</entry>
<entry>Counts the number of routeword errors on a given</entry>
</row>
<row>
<entry/>
<entry/>
<entry>input lane.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
A lane not having a routeword is treated as a routeword of zero for comparison purposes.
<br/>
The parity error counter register reports a count of parity errors for the incoming data. If the parity error counter exceeds the value programmed in the parity error threshold, an error condition is generated and flagged in the main status register. This counter will not overflow, but will hold a value of all ones until reset. This counter is incremented if a parity error occurs. Counters reset when read by software.
</p>
<p id="p-0222" num="0249">
<tables id="TABLE-US-00090" num="00090">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="21pt" align="left"/>
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="35pt" align="left"/>
<colspec colname="3" colwidth="126pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>15:0</entry>
<entry>Error</entry>
<entry>Number of parity errors seen since</entry>
</row>
<row>
<entry/>
<entry/>
<entry>count</entry>
<entry>last counter read.</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The Routeword Parity Error Count register reports a count of routeword parity errors for the voted routeword data. If the Routeword Parity Error Count exceeds the value programmed in the Routeword Parity Error Threshold, an error condition is generated and f lagged in the Error Counter Status register. This counter will not overflow, but will hold a value of all ones until reset. This counter is incremented if a routeword parity error occurs. Counters reset when read by software.
</p>
<p id="p-0223" num="0250">
<tables id="TABLE-US-00091" num="00091">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="35pt" align="left"/>
<colspec colname="3" colwidth="140pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>15:0</entry>
<entry>Error</entry>
<entry>Number of routeword parity errors seen since</entry>
</row>
<row>
<entry/>
<entry/>
<entry>count</entry>
<entry>last counter read.</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The routeword NF error count register reports a count of routeword NF errors for the voted routeword data. If the routeword NF error counter exceeds the value programmed in the routeword NF error threshold, an error condition is generated and flagged in the Error Counter Status register. This counter will not overflow, but will hold a value of all ones until reset. This counter is incremented if a routeword NF error occurs. Counters reset when read by software.
</p>
<p id="p-0224" num="0251">
<tables id="TABLE-US-00092" num="00092">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="left"/>
<colspec colname="3" colwidth="161pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>15:0</entry>
<entry>Error</entry>
<entry>Number of routeword NF consistency errors seen</entry>
</row>
<row>
<entry/>
<entry>count</entry>
<entry>since last counter read.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The Unstriper maintains a single counter for all packets dropped. The only drop conditions which can occur in the Unstriper are due to FIFO full condition or incorrect checksum results. This counter is implemented as a 32-bit counter.
<br/>
This counter counts the number of packets dropped due to FIFO full conditions.
</p>
<p id="p-0225" num="0252">
<tables id="TABLE-US-00093" num="00093">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="49pt" align="left"/>
<colspec colname="3" colwidth="147pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:0</entry>
<entry>Drop_counter</entry>
<entry>Gives the number of drops. Register resets on a</entry>
</row>
<row>
<entry/>
<entry/>
<entry>read. Writes to the register are ignored.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
This counter counts the number of packets/cells dropped due to checksum failures.
</p>
<p id="p-0226" num="0253">
<tables id="TABLE-US-00094" num="00094">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="left"/>
<colspec colname="2" colwidth="49pt" align="left"/>
<colspec colname="3" colwidth="147pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:0</entry>
<entry>Drop_counter</entry>
<entry>Gives the number of drops. Register resets on a</entry>
</row>
<row>
<entry/>
<entry/>
<entry>read. Writes to the register are ignored.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The debug registers are intended as debug aids.
<br/>
The debug select register selects which lanes of data have error information visible in the other debug registers.
</p>
<p id="p-0227" num="0254">
<tables id="TABLE-US-00095" num="00095">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="42pt" align="left"/>
<colspec colname="3" colwidth="154pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:8 </entry>
<entry>Unused</entry>
<entry/>
</row>
<row>
<entry>7:4</entry>
<entry>Queue Select</entry>
<entry>Selects the synchronization queue to collect statistics</entry>
</row>
<row>
<entry/>
<entry/>
<entry>on. Queue numbers follow the same convention</entry>
</row>
<row>
<entry/>
<entry/>
<entry>used elsewhere in the Unstriper. 0-11 select the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>numbered input interface, 12 selects the parity</entry>
</row>
<row>
<entry/>
<entry/>
<entry>interface.</entry>
</row>
<row>
<entry>3:0</entry>
<entry>CRC select</entry>
<entry>Selects which CRC to display among the 13</entry>
</row>
<row>
<entry/>
<entry/>
<entry>streams. Values 0-C are valid for this field. Values</entry>
</row>
<row>
<entry/>
<entry/>
<entry>0-11 correspond to the CRC with interface specified</entry>
</row>
<row>
<entry/>
<entry/>
<entry>by the bit number substituted by the parity</entry>
</row>
<row>
<entry/>
<entry/>
<entry>calculation. Value 12 corresponds to the value</entry>
</row>
<row>
<entry/>
<entry/>
<entry>with no parity.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
This register reads the CRC byte selects by the CRC data select register. Data is read-only. Writing to this register does not affect the CRC calculation at all.
</p>
<p id="p-0228" num="0255">
<tables id="TABLE-US-00096" num="00096">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="42pt" align="center"/>
<colspec colname="2" colwidth="49pt" align="left"/>
<colspec colname="3" colwidth="126pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>15:0</entry>
<entry>CRC data</entry>
<entry>Gives the data for the CRC function.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The synch debug register is used to monitor the state of the synchronization logic. This register returns read data. Some of the fields are controlled by the Synch FIFO select register.
</p>
<p id="p-0229" num="0256">
<tables id="TABLE-US-00097" num="00097">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="42pt" align="left"/>
<colspec colname="3" colwidth="154pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:24</entry>
<entry>Min_depth</entry>
<entry>This register holds the minimum depth found of the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>FIFO selected by the FIFO Select Register. The</entry>
</row>
<row>
<entry/>
<entry/>
<entry>minimum depth found since the last read of this</entry>
</row>
<row>
<entry/>
<entry/>
<entry>register is stored and only updated if a lower</entry>
</row>
<row>
<entry/>
<entry/>
<entry>minimum is found or the register has just been read.</entry>
</row>
<row>
<entry>23:16</entry>
<entry>Max_depth</entry>
<entry>This register holds the maximum depth found of the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>FIFO selected by the FIFO Select Register. The</entry>
</row>
<row>
<entry/>
<entry/>
<entry>maximum depth found since the last read of this</entry>
</row>
<row>
<entry/>
<entry/>
<entry>register is stored and only updated if a higher</entry>
</row>
<row>
<entry/>
<entry/>
<entry>maximum is found or the register has just been read.</entry>
</row>
<row>
<entry>15:8 </entry>
<entry>- clk_diff</entry>
<entry>The highest number of negative clocks corrected</entry>
</row>
<row>
<entry/>
<entry/>
<entry>by the synchronizer logic.</entry>
</row>
<row>
<entry>7:0</entry>
<entry>Clk_diff</entry>
<entry>The clock speed difference register is used as a</entry>
</row>
<row>
<entry/>
<entry/>
<entry>rough heartbeat for the synch logic. It counts the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>number of clocks in the last pause due to resynch.</entry>
</row>
<row>
<entry/>
<entry/>
<entry>A negative value is represented by a ‘1’ in the MSB</entry>
</row>
<row>
<entry/>
<entry/>
<entry>of the register.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The synch delay register controls configuration of the counters used for synchronization.
</p>
<p id="p-0230" num="0257">
<tables id="TABLE-US-00098" num="00098">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="left"/>
<colspec colname="3" colwidth="168pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:16</entry>
<entry>Tick</entry>
<entry>Number of clock cycles before the master sequence</entry>
</row>
<row>
<entry/>
<entry>Length</entry>
<entry>counter is incremented. The tick length controls the time</entry>
</row>
<row>
<entry/>
<entry/>
<entry>duration which one sequence value is transmitted.</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Dividing the programmed value by either 18 (OC48) or 5</entry>
</row>
<row>
<entry/>
<entry/>
<entry>(OC192) gives the maximum number of packets which</entry>
</row>
<row>
<entry/>
<entry/>
<entry>can be transmitted. Due to FIFO limitations, this value</entry>
</row>
<row>
<entry/>
<entry/>
<entry>should be programmed to a value less than or equal</entry>
</row>
<row>
<entry/>
<entry/>
<entry>to 1024.</entry>
</row>
<row>
<entry>15:0 </entry>
<entry>Pulse</entry>
<entry>Number of clock cycles that the receiver waits before</entry>
</row>
<row>
<entry/>
<entry>Delay</entry>
<entry>resetting the master sequence counter after receiving a</entry>
</row>
<row>
<entry/>
<entry/>
<entry>sync pulse. This value should be set to be greater than</entry>
</row>
<row>
<entry/>
<entry/>
<entry>the round trip times + allowable clock drift to ensure</entry>
</row>
<row>
<entry/>
<entry/>
<entry>the receiver has seen data from all the transmitters.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The synchronizer status register will contain information pertaining to the status of various counts and errors in the receive synchronizer. All bits in this register are cleared on read.
</p>
<p id="p-0231" num="0258">
<tables id="TABLE-US-00099" num="00099">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="35pt" align="left"/>
<colspec colname="3" colwidth="161pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>13:0</entry>
<entry>FIFO</entry>
<entry>A bit is set to a one to indicate a FIFO overflow con-</entry>
</row>
<row>
<entry/>
<entry>overflow</entry>
<entry>dition occurred.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The Unstriper provides a FIFO which stores the fabric routewords and the memory controller routeword for terminated cells.
<br/>
The cell termination threshold controls the number of FIFO entries which generate an interrupt. Once the status bit is asserted, it will remain asserted until the FIFO is emptied.
</p>
<p id="p-0232" num="0259">
<tables id="TABLE-US-00100" num="00100">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="left"/>
<colspec colname="3" colwidth="168pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:7</entry>
<entry>Unused</entry>
<entry/>
</row>
<row>
<entry> 6:0</entry>
<entry>Count</entry>
<entry>If the number of fifo entries &gt; count, the status indication</entry>
</row>
<row>
<entry/>
<entry>value</entry>
<entry>will be set.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The egress RW read register returns the value of the current egress routeword from the FIFO. Note that the FIFO advances on the read of the Error Syndrome register, so back-to-back reads of this register will return the same data.
</p>
<p id="p-0233" num="0260">
<tables id="TABLE-US-00101" num="00101">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="49pt" align="left"/>
<colspec colname="3" colwidth="147pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:24</entry>
<entry>Input port</entry>
<entry>Gives the input port (OC48 port number) for the</entry>
</row>
<row>
<entry/>
<entry/>
<entry>cell.</entry>
</row>
<row>
<entry>23:0 </entry>
<entry>Mem_ctrl_rw</entry>
<entry>Memory controller connection number</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The Error Syndrome register returns the value of the error state associated with the current routeword pair. Note that the FIFO advances on the read of this register, so the FIFO effectively advances all three registers to the next entry on the read of this register.
</p>
<p id="p-0234" num="0261">
<tables id="TABLE-US-00102" num="00102">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="35pt" align="left"/>
<colspec colname="3" colwidth="161pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:6 </entry>
<entry>unused</entry>
<entry/>
</row>
<row>
<entry>5:2</entry>
<entry>Fabric_id</entry>
<entry>Gives the fabric identifier of where the suspected error</entry>
</row>
<row>
<entry/>
<entry/>
<entry>occurred. 0000-1011 indicate fabrics 0-11, 1100</entry>
</row>
<row>
<entry/>
<entry/>
<entry>indicates the parity fabric, 1110 is reserved, and 1111</entry>
</row>
<row>
<entry/>
<entry/>
<entry>indicates that no conclusive result was possible.</entry>
</row>
<row>
<entry>1</entry>
<entry>Data_err</entry>
<entry>1 indicates error seen in data for the input channel</entry>
</row>
<row>
<entry/>
<entry/>
<entry>indicates</entry>
</row>
<row>
<entry>0</entry>
<entry>Hdr_err</entry>
<entry>1 indicates error seen in header for the input channel</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The Transceiver Error Status register as one bit for each Transceiver Error Counter register. When one of the error counters exceeds the threshold the corresponding bit in this register is set. A bit is cleared when the corresponding counter register is read.
</p>
<p id="p-0235" num="0262">
<tables id="TABLE-US-00103" num="00103">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="28pt" align="center"/>
<colspec colname="2" colwidth="42pt" align="left"/>
<colspec colname="3" colwidth="147pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:14</entry>
<entry>Unused</entry>
<entry/>
</row>
<row>
<entry>13:0 </entry>
<entry>Counter</entry>
<entry>Bit x is set if Transceiver</entry>
</row>
<row>
<entry/>
<entry>over</entry>
<entry>Error Counter(x) &gt; Transceiver Error Threshold.</entry>
</row>
<row>
<entry/>
<entry>threshold</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0236" num="0263">
<tables id="TABLE-US-00104" num="00104">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="35pt" align="left"/>
<colspec colname="3" colwidth="161pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:16</entry>
<entry>Unused</entry>
<entry/>
</row>
<row>
<entry>15:0 </entry>
<entry>Threshold</entry>
<entry>Value that when exceeded by a Transceiver Error</entry>
</row>
<row>
<entry/>
<entry>value</entry>
<entry>Counter will cause that counter's bit in the Transceiver</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Error Status register to be set.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The Transceiver Error Count Select register determines which of the 14 Gigabit Transceiver Error Count registers will be provide the value that is returned when the Transceiver Error Count register is read.
</p>
<p id="p-0237" num="0264">
<tables id="TABLE-US-00105" num="00105">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="left"/>
<colspec colname="3" colwidth="168pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:4 </entry>
<entry>Unused</entry>
<entry/>
</row>
<row>
<entry>3:0</entry>
<entry>Counter</entry>
<entry>Selects the Transceiver Error Count register that will be</entry>
</row>
<row>
<entry/>
<entry>select</entry>
<entry>accessed when</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Each Gigabit Ethernet Transceiver has a counter that counts the number of times the status bits from that transceiver indicates that an error has occurred. When the Transceiver Error Count register is read the error count of the transceiver selected in the Transceiver Error Count Control register will be returned.
</p>
<p id="p-0238" num="0265">
<tables id="TABLE-US-00106" num="00106">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="28pt" align="left"/>
<colspec colname="3" colwidth="168pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Bit</entry>
<entry>Label</entry>
<entry>Function</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>31:16</entry>
<entry>Unused</entry>
<entry/>
</row>
<row>
<entry>15:0 </entry>
<entry>Count</entry>
<entry>Number of times the status bits of the Gigabit Ethernet</entry>
</row>
<row>
<entry/>
<entry>value</entry>
<entry>transceiver selected by the Transceiver Error Count</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Control register indicated an error since that last time this</entry>
</row>
<row>
<entry/>
<entry/>
<entry>register was read or reset.</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
1. The unstriper uses 3.3 volt LVTTL signaling for all but the CLOCK125 pin
<br/>
2. The CLOCK125 pin uses 3.3 Volt LVDS signaling.
<br/>
The following table gives the timing constraints used for timing analysis. Designs that meet these constraints should work across any respins. The columns have the following meanings:
</p>
<p id="p-0239" num="0266">
<tables id="TABLE-US-00107" num="00107">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="175pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>CLK</entry>
<entry>Gives the reference clock for the timing. All timing values</entry>
</row>
<row>
<entry/>
<entry>are given in reference to the clock signal arriving at the</entry>
</row>
<row>
<entry/>
<entry>associated clock pin on Unstriper.</entry>
</row>
<row>
<entry>Min_time</entry>
<entry>This gives the minimum amount of time between the clock</entry>
</row>
<row>
<entry/>
<entry>signal and the output transition. This can be used to</entry>
</row>
<row>
<entry/>
<entry>calculate hold time.</entry>
</row>
<row>
<entry>Max_time</entry>
<entry>This gives the maximum amount of time until an output</entry>
</row>
<row>
<entry/>
<entry>signal is stable.</entry>
</row>
<row>
<entry>Output Load</entry>
<entry>Load used for max_time. Other loads can be used, greater</entry>
</row>
<row>
<entry/>
<entry>loads increase time, smaller loads decrease time.</entry>
</row>
<row>
<entry>Drive</entry>
<entry>Type of drive book.</entry>
</row>
<row>
<entry>Comments</entry>
<entry>Any comments (primarily on the derivation of output load).</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="7">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="28pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="35pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="42pt" align="center"/>
<colspec colname="6" colwidth="42pt" align="left"/>
<tbody valign="top">
<row>
<entry/>
<entry/>
<entry>ClkM</entry>
<entry/>
<entry/>
<entry/>
<entry/>
</row>
<row>
<entry/>
<entry/>
<entry>in</entry>
<entry>Max</entry>
<entry>Output</entry>
</row>
<row>
<entry/>
<entry>Pin</entry>
<entry>Time<sup>1</sup></entry>
<entry>Time</entry>
<entry>Load</entry>
<entry>Drive</entry>
<entry>Comments</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="6" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>TDO</entry>
<entry>TCK</entry>
<entry/>
<entry/>
<entry>10 pF</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="6" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The following table gives the input timing. The columns have the following meanings:
</p>
<p id="p-0240" num="0267">
<tables id="TABLE-US-00108" num="00108">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="182pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>CLK</entry>
<entry>Gives the reference clock for the timing. A value of N/A</entry>
</row>
<row>
<entry/>
<entry>either means the signal is not speced for transition or that the</entry>
</row>
<row>
<entry/>
<entry>signal is not assumed to asynchronous with respect to all input</entry>
</row>
<row>
<entry/>
<entry>clocks.</entry>
</row>
<row>
<entry>Setup/hold</entry>
<entry>same thing they mean everywhere else.</entry>
</row>
<row>
<entry>Pin cap</entry>
<entry>Pin capacitance presented by the receiver or bidi.</entry>
</row>
<row>
<entry>Comments</entry>
<entry>Any comments (primarily on the derivation of output load).</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="7">
<colspec colname="1" colwidth="42pt" align="left"/>
<colspec colname="2" colwidth="28pt" align="center"/>
<colspec colname="3" colwidth="21pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="35pt" align="center"/>
<colspec colname="7" colwidth="35pt" align="center"/>
<tbody valign="top">
<row>
<entry/>
<entry/>
<entry/>
<entry>Hold</entry>
<entry/>
<entry>Pin</entry>
<entry/>
</row>
<row>
<entry>Pin</entry>
<entry>Clk</entry>
<entry>Setup</entry>
<entry>(ns)</entry>
<entry>5 V tol</entry>
<entry>Cap</entry>
<entry>Comments</entry>
</row>
<row>
<entry namest="1" nameend="7" align="center" rowsep="1"/>
</row>
<row>
<entry>TRST</entry>
<entry>N/A</entry>
<entry>NA</entry>
<entry>NA</entry>
<entry>Y</entry>
<entry>6.8 pF</entry>
<entry>Async.</entry>
</row>
<row>
<entry>RESET_L</entry>
<entry>N/A</entry>
<entry>NA</entry>
<entry>NA</entry>
<entry>Y</entry>
<entry>6.8 pF</entry>
<entry>Async </entry>
</row>
<row>
<entry namest="1" nameend="7" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
The chip was timed assuming the following arrival times for clocks:
</p>
<p id="p-0241" num="0268">
<tables id="TABLE-US-00109" num="00109">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="4">
<colspec colname="1" colwidth="35pt" align="left"/>
<colspec colname="2" colwidth="21pt" align="center"/>
<colspec colname="3" colwidth="35pt" align="center"/>
<colspec colname="4" colwidth="126pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="4" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry/>
<entry>Supported</entry>
<entry/>
</row>
<row>
<entry>Clock</entry>
<entry>Clock</entry>
<entry>Skew</entry>
<entry>Notes</entry>
</row>
<row>
<entry namest="1" nameend="4" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>AD_CLK</entry>
<entry>any</entry>
<entry>Any</entry>
<entry>AD_CLK is asynchronous with rest of</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>chip. Unstriper supports speeds from</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>20 MHz to 33 MHz on AD_CLK. The</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>speed limit on the AD clock is primarily</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>I/O timing related, chip internals run up to</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>40. Any applications which desire above</entry>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry>33 MHz should talk to the design team.</entry>
</row>
<row>
<entry namest="1" nameend="4" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0242" num="0269">Although the invention has been described in detail in the foregoing embodiments for the purpose of illustration, it is to be understood that such detail is solely for that purpose and that variations can be made therein by those skilled in the art without departing from the spirit and scope of the invention except as it may be described by the following claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A switch of a network for switching data comprising:
<claim-text>a fabric for switching the data;</claim-text>
<claim-text>a parity fabric;</claim-text>
<claim-text>a connection mechanism connected to the fabric for providing data to and from the fabric and connected to the parity fabric for providing parity data to and from the parity fabric;</claim-text>
<claim-text>a first port card which receives data at a first rate from the network or sends data at the first rate to the network, performs first parity calculations on the data received at the first port card, produces first parity data from the first parity calculations or sends data at the first rate to the network, the first port card connected to the connection mechanism to send data to or receive the data from the fabric at a connection rate and to send the first parity data to or receive the data from the parity fabric at the connection rate; and</claim-text>
<claim-text>a second port card which receives data at a second rate different from the first rate from the network or sends data at the second rate to the network performs second parity calculations on the data received at the second port card, produces second parity data from the second parity calculations or sends data at the second rate to the network, the second port card connected to the connection mechanism to send data to or receive the data from the fabric at the connection rate and to send the second parity data to or receive the data from the parity fabric at the connection rate, the second port card separating the data received at the second rate into streams of data that together equal the data received at the second port card that are sent concurrently at the connection rate to the fabric and combine the data streams received at the connection rate into data that is sent at the second rate to the network, the connection rate equals the first rate and the second rate is equal to N times the first rate, where N is an integer greater than or equal to 2, and there are N streams.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. A switch as described in <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the connection mechanism includes a backplane bus that connects the first port card and the second port card to the fabric.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. A switch as described in <claim-ref idref="CLM-00002">claim 2</claim-ref> wherein the first port card has a first striper which takes the first parity data it receives and sends it on the backplane bus as an OC48 data pipe to the parity fabric, and the second port card has a second striper which takes the second parity data it receives and sends it as an OC48 data pipe to the parity fabric.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. A switch as described in <claim-ref idref="CLM-00003">claim 3</claim-ref> wherein the first port card has a first unstriper which receives the first parity data from the parity fabric on an OC48 data pipe and the second port card has a second unstriper which receives the second parity data from the parity fabric on an OC48 data pipe.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A switch as described in <claim-ref idref="CLM-00004">claim 4</claim-ref> wherein the first and second striper stripe the first and second parity data respectively, they receive on a 48 bit basis to the parity fabric.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A switch as described in <claim-ref idref="CLM-00005">claim 5</claim-ref> wherein the first and second stripers stripe the first and second parity data, respectively, so the first and second parity data does not exceed a 12 bit boundary.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A switch as described in <claim-ref idref="CLM-00006">claim 6</claim-ref> wherein the parity fabric has an aggregator which receives the first and second parity data from the first and second stripers, respectively, and a separator which sends parity data from the parity fabric to the first unstriper and the second unstriper.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A method for switching data in a network comprising the steps of:
<claim-text>receiving data at a first rate from the network at a first port card of a switch;</claim-text>
<claim-text>receiving data at a second rate different from the first rate from the network at a second port card of the switch;</claim-text>
<claim-text>performing parity calculations on the data at the first rate by the first port card to produce first parity data and on the data at the second rate by the second port card to produce second parity data;</claim-text>
<claim-text>sending the first parity data from the first port card to a parity fabric of the switch through a connection mechanism of the switch at a connection rate, which equals the first rate and the second rate is equal to N times the first rate, where N is an integer greater than or equal to 2, and there are N streams;</claim-text>
<claim-text>separating the data received at the second rate at the second port card into streams of data that together equal the data received at the second port card;</claim-text>
<claim-text>sending the second parity data from the second port card to the parity fabric of the switch through the connection mechanism of the switch at the connection rate; and</claim-text>
<claim-text>sending concurrently at the connection rate to the fabric from the second port card the streams of data along the connection mechanism.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A method as described in <claim-ref idref="CLM-00008">claim 8</claim-ref> wherein the connection mechanism includes a backplane bus that connects the first port card and the second port card to the fabric.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. A method as described in <claim-ref idref="CLM-00009">claim 9</claim-ref> wherein the first port card has a first striper and the second port card has a second striper, and wherein the sending data from the first port card step includes the step of sending the first parity data on the backplane bus with the first striper as an OC48 data pipe to the parity fabric and the sending data from the second port card step includes the step of sending the second parity data on the backplane bus with the second striper as an OC48 data pipe to the parity fabric.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A method as described in <claim-ref idref="CLM-00010">claim 10</claim-ref> wherein the first port card has a first unstriper and the second port card has a second unstriper, and including after the sending the second parity data by the second striper step, there are the steps of receiving the first parity data from the parity fabric on an OC48 data pipe at the first port card, and receiving the second parity data from the parity fabric on an OC48 data pipe at the second port card.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A method as described in <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein the first port card sending step includes the step of striping the first parity data with the first striper on a 48 bit basis to the parity fabric, and the second port card sending step includes the step of striping parity data with the second striper on a 48 bit basis to the parity fabric through the bus.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. A method as described in <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the first striper sending step includes the step of striping the first parity data to the parity fabric through the bus so the first parity data does not exceed a 12 bit boundary, and the second striper sending step includes the step of striping the second parity data to the parity fabric through the bus so the second parity data does not exceed a 12 bit boundary.</claim-text>
</claim>
</claims>
</us-patent-grant>
