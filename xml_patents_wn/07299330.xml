<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299330-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299330</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10919491</doc-number>
<date>20040817</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>CA</country>
<doc-number>2243892</doc-number>
<date>19980727</date>
</priority-claim>
</priority-claims>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>711167</main-classification>
<further-classification>711105</further-classification>
</classification-national>
<invention-title id="d0e61">High bandwidth memory interface</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4389715</doc-number>
<kind>A</kind>
<name>Eaton, Jr. et al.</name>
<date>19830600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5243703</doc-number>
<kind>A</kind>
<name>Farmwald et al.</name>
<date>19930900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>713400</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5319755</doc-number>
<kind>A</kind>
<name>Farmwald et al.</name>
<date>19940600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5355391</doc-number>
<kind>A</kind>
<name>Horowitz et al.</name>
<date>19941000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5768624</doc-number>
<kind>A</kind>
<name>Ghosh</name>
<date>19980600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710 53</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5809263</doc-number>
<kind>A</kind>
<name>Farmwald et al.</name>
<date>19980900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>5926837</doc-number>
<kind>A</kind>
<name>Watanabe et al.</name>
<date>19990700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711167</main-classification></classification-national>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6330650</doc-number>
<kind>B1</kind>
<name>Toda et al.</name>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711167</main-classification></classification-national>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6487648</doc-number>
<kind>B1</kind>
<name>Hassoun</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711167</main-classification></classification-national>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6510503</doc-number>
<kind>B2</kind>
<name>Gillingham et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711167</main-classification></classification-national>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6519688</doc-number>
<kind>B1</kind>
<name>Lu et al.</name>
<date>20030200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711167</main-classification></classification-national>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6772268</doc-number>
<kind>B1</kind>
<name>Kristiansen et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710308</main-classification></classification-national>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>6779097</doc-number>
<kind>B2</kind>
<name>Gillingham et al.</name>
<date>20040800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711167</main-classification></classification-national>
</citation>
<citation>
<nplcit num="00014">
<othercit>“Direct Rambus Technology: The New Main Memory Standard”, IEEE Micro. Nov./Dec. 1997, p. 18-28.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00015">
<othercit>“Direct Rambus Technology Disclosure”, Oct. 15, 1997.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00016">
<othercit>Kushiyama, N., et al., “A 500 Megabyte/s Datarate 4.5M DRAM”, IEEE JSSC vol. 28, No. 12, p. 490-498, Dec. 1993.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00017">
<othercit>Gillingham, P., Vogley, W., “SLDRAM: High-Performance, Open Standard Memory”, IEEE Micro, Nov./Dec. 1997, p. 29-39.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>27</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>711167-169</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713400</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713401</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713501</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713503</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>20</number-of-drawing-sheets>
<number-of-figures>25</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>10247821</doc-number>
<kind>00</kind>
<date>20020920</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>6779097</doc-number>
<kind>A </kind>
<date>20040817</date>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>10919491</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>09182494</doc-number>
<kind>00</kind>
<date>19981030</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>6510503</doc-number>
<kind>A </kind>
<date>20030121</date>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>10247821</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20050081012</doc-number>
<kind>A1</kind>
<date>20050414</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Gillingham</last-name>
<first-name>Peter</first-name>
<address>
<city>Kanata</city>
<country>CA</country>
</address>
</addressbook>
<nationality>
<country>CA</country>
</nationality>
<residence>
<country>CA</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Millar</last-name>
<first-name>Bruce</first-name>
<address>
<city>Stittsville</city>
<country>CA</country>
</address>
</addressbook>
<nationality>
<country>CA</country>
</nationality>
<residence>
<country>CA</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Hamilton, Brook, Smith &amp; Reynolds, P.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>MOSAID Technologies Incorporated</orgname>
<role>03</role>
<address>
<city>Kanata</city>
<country>CA</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Nguyen</last-name>
<first-name>T</first-name>
<department>2187</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">This invention describes an improved high bandwidth chip-to-chip interface for memory devices, which is capable of operating at higher speeds, while maintaining error free data transmission, consuming lower power, and supporting more load. Accordingly, the invention provides a memory subsystem comprising at least two semiconductor devices; a main bus containing a plurality of bus lines for carrying substantially all data and command information needed by the devices, the semiconductor devices including at least one memory device connected in parallel to the bus; the bus lines including respective row command lines and column command lines; a clock generator for coupling to a clock line, the devices including clock inputs for coupling to the clock line; and the devices including programmable delay elements coupled to the clock inputs to delay the clock edges for setting an input data sampling time of the memory device.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="227.16mm" wi="162.56mm" file="US07299330-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="237.49mm" wi="149.01mm" orientation="landscape" file="US07299330-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="155.28mm" wi="135.38mm" orientation="landscape" file="US07299330-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="220.39mm" wi="156.04mm" orientation="landscape" file="US07299330-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="97.45mm" wi="81.96mm" file="US07299330-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="185.17mm" wi="137.75mm" orientation="landscape" file="US07299330-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="185.42mm" wi="134.62mm" orientation="landscape" file="US07299330-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="192.96mm" wi="140.21mm" orientation="landscape" file="US07299330-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="238.51mm" wi="160.61mm" orientation="landscape" file="US07299330-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="151.55mm" wi="124.97mm" orientation="landscape" file="US07299330-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="236.81mm" wi="157.31mm" orientation="landscape" file="US07299330-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="240.71mm" wi="164.93mm" file="US07299330-20071120-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="161.71mm" wi="159.94mm" file="US07299330-20071120-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="236.47mm" wi="153.42mm" file="US07299330-20071120-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="220.64mm" wi="153.75mm" file="US07299330-20071120-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="245.11mm" wi="146.56mm" file="US07299330-20071120-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="135.72mm" wi="108.46mm" orientation="landscape" file="US07299330-20071120-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="219.88mm" wi="130.39mm" orientation="landscape" file="US07299330-20071120-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="228.26mm" wi="153.84mm" orientation="landscape" file="US07299330-20071120-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="188.47mm" wi="139.11mm" file="US07299330-20071120-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="208.62mm" wi="128.27mm" file="US07299330-20071120-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<p id="p-0002" num="0001">This application is a Continuation Application from U.S. application Ser. No. 10/247,821, filed Sep. 20, 2002, now U.S. Pat. No. 6,779,097, issued Aug. 17, 2004, which is a Continuation Application from U.S. application Ser. No. 09/182,494, filed Oct. 30, 1998, now U.S. Pat. No. 6,510,503, issued Jan. 21, 2003, which claims priority from Canadian Application Serial No. 2,243,892, filed Jul. 27, 1998.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<p id="p-0003" num="0002">The present invention relates to computer memory interfaces and more specifically to chip-to-chip interfaces for dynamic random access type memories capable of operating at high speed. This application incorporates herein by reference Canadian Patent Application Number 2,243,892 filed on Jul. 27, 1998.</p>
<heading id="h-0001" level="1">BACKGROUND TO THE INVENTION</heading>
<p id="p-0004" num="0003">The evolution of the dynamic random access memories used in computer systems has been driven by ever-increasing speed requirements mainly dictated by the microprocessor industry. Dynamic random access memories (DRAMs) have generally been the predominant memories used for computers due to their optimized storage capabilities. This large storage capability comes with the price of slower access time and the requirement for more complicated interaction between memories and microprocessors/microcontrollers than in the case of say static random access memories (SRAMs) or non-volatile memories.</p>
<p id="p-0005" num="0004">In an attempt to address this speed deficiency, various major improvements have been implemented in DRAM design, all of which are well documented. DRAM designs evolved from Fast Page Mode (FPM) DRAM to Extended Data Out (EDO) DRAMS to synchronous DRAMs (SDRAMs). Further speed increases have been achieved with Double Data Rate (DDR) SDRAM, which synchronizes data transfers on both clock edges. However, as the speed requirements from the microprocessor industry continue to move ahead, new types of memory interfaces have had to be contemplated to address the still existing vast discrepancy in speed between the DRAMs and microprocessors.</p>
<p id="p-0006" num="0005">Recently, a number of novel memory interface solutions aimed at addressing the speed discrepancy between memory and microprocessors have been presented.</p>
<p id="p-0007" num="0006">Several generations of high bandwidth DRAM-type memory devices have been introduced. Of note is Rambus Inc which first introduced a memory subsystem in which data and command/control information is multiplexed on a single bus and described in U.S. Pat. No. 5,319,755 which issued Jun. 7, 1994. Subsequently, Concurrent Rambus™ was introduced which altered the command/data timing but retained thy,same basic bus topology. Finally, Direct Rambus™ described in R. Crisp “Direct Rambus Technology: The New Main Memory Standard”, IEEE Micro, November/December 1997, p. 18-28, was introduced in which command and address information is separated from data information to improve bus utilization. Separate row and column command fields are provided to allow independent control of memory bank activation, deactivation, refresh, data read and data write (column) commands. All three Rambus variations however share the same bus topology as illustrated in <figref idref="DRAWINGS">FIG. 1(</figref><i>a</i>).</p>
<p id="p-0008" num="0007">In this topology a controller <b>10</b> is located at one end of a shared bus <b>12</b>, while a clock driver circuit <b>14</b> and bus terminations <b>16</b> are located at an opposite end. The shared bus includes, data and address/control busses, which run from the controller at one end to the various memory devices MEMORY I . . . MEMORY N and the termination at the far end. The clock signal generated by the clock driver <b>14</b> begins at the far end and travels towards the controller <b>10</b> and then loops back to the termination at the far end. The clock bus is twice as long as the data and address/control busses. Each memory device has two clock inputs ClkFromController and ClkToController respectively, one for the clock traveling towards the controller CTC, and another for the clock traveling away from the controller CFC towards the termination. When the controller <b>10</b> reads from a memory device, the memory device synchronizes the data it drives onto the bus with the clock traveling towards the controller. When the controller is writing to a memory device, the memory device uses the clock traveling away from the controller to latch in data. In this way the data travels in the same direction as the clock, and clock-to-data skew is reduced. The memory devices employ on-chip phase locked loops (PLL) or delay locked loops (DLL) to generate the correct clock phases to drive data output buffers and to sample the data and command/address input buffers.</p>
<p id="p-0009" num="0008">There are a number of shortcoming with this topology as will be described below.</p>
<p id="p-0010" num="0009">For the bus topology of <figref idref="DRAWINGS">FIG. 1(</figref><i>a</i>) the clock frequency is 400 MHz. <figref idref="DRAWINGS">FIG. 1(</figref><i>b</i>) shows the timing of control and data bursts on the bus <b>12</b>. Since data is transmitted or received on both edges of the clock, the effective data rate is 800 Mb/s. A row command ROW burst consists of eight (8) consecutive words, beginning on a falling edge of the clock from the controller CFC and applied on the three (3) bit row bus. A column command COL consists of eight (8) consecutive words transmitted on the five (5) bit column bus. Independent row and column commands can be issued to the same or different memory devices by specifying appropriate device identifiers within the respective commands. At the controller <b>10</b> the phases of the two clock inputs, CFC and CTC, are close together. There is a delay to the memory chip receiving the commands due to finite bus propagation time, shown in <figref idref="DRAWINGS">FIG. 1</figref> as approximately 1.5 bit intervals or 1.875 ns. The clock signal CFC propagates with the ROW and COL.,commands to maintain phase at the memory inputs. Read data resulting from a previous COL command is output as a burst of eight (8) consecutive 16 or 18 bit words on the data bus, starting on a falling edge of CTC. The data packet takes roughly the same amount of time to propagate back to the controller, about 1.5 bit intervals. The controller spaces COL command packets to avoid collisions on the databus. Memory devices are programmed to respond to commands with fixed latency. A WRITE burst is driven to the databus two bit intervals after the end of the READ burst. Because of the finite bus propagation time, the spacing between READ and WRITE bursts is enlarged at the memory inputs. Likewise, the spacing between a WRITE and READ burst would be smaller at the memory device than at the controller.</p>
<p id="p-0011" num="0010">For example, there is a summation of clock-to-data timing errors in transferring data from one device to another. <figref idref="DRAWINGS">FIG. 2(</figref><i>a</i>) is a schematic diagram of the loop-back clock, data lines and clock synchronization circuit configuration. In this configuration, the bus clock driver <b>14</b> at one end of the ClockToController line <b>22</b> of the clock bus propagates an early bus clock signal in one direction along the bus, for example from the clock <b>14</b> to the controller <b>10</b>. The same clock signal then is passed through the direct connection shown to a second line <b>24</b> of the bus and loops back, as a late ClockFromController, along the bus where it terminates with resistance R<sub>term</sub>. Thus, each memory device <b>26</b> receives the two bus clock signals at a different time. The memory device <b>26</b> includes a clock and data synchronization circuit for sampling the two bus clocks CFC and CTC and generating its own internal transmit and receive clocks TX clk and RX clk respectively, for clocking transmit and receive data to and from the databus respectively. The bus clock signals CFC and CTC are fed via respective input receiver comparators <b>11</b> and <b>20</b> into corresponding PLL/DLL circuits <b>40</b> and <b>50</b>. For the input of data from the controller to a memory device, the role of the on-chip PLL/DLL circuit <b>40</b> is to derive from the CFC clock input, internal clocks to sample control, address, and data to be written to the memory on (positive 90° and negative 270°) edges of the clock, at the optimum point in the data eye. These internal receive data clocks may also be used to drive the internal DRAM core <b>32</b>. For the output of data from the memory device <b>26</b> to the controller <b>10</b>, the role of the on-chip PLL/DLL circuit <b>50</b> is to derive from the CTC clock input internal transmit data clocks (0° and 180°) to align transmitted data (read data from the memory core) with the edges of the external clock.</p>
<p id="p-0012" num="0011">The data I/O pin has an output transistor <b>27</b> for driving the data bus. An actual memory device will have <b>16</b> or <b>18</b> such data pins. The other data pins are not shown in <figref idref="DRAWINGS">FIG. 2(</figref><i>a</i>) for simplicity. During times when the device is not driving read data onto the databus the gate of output transistor <b>27</b> is held at logic 0 by OE being logic 0, so as not to interfere with write data or read data from another device which may appear on the bus.</p>
<p id="p-0013" num="0012">Row control and column control input pins are also shown in <figref idref="DRAWINGS">FIG. 2(</figref><i>a</i>) and it is understood that address signals are also received via the data bus. They have a structure identical to the data I/O pin, except that the gate of the output transistor <b>27</b>′ is tied to logic 0, since output drive is never required. The disabled output transistor <b>27</b>′ matches the capacitive load presented to the external bus to that of a data I/O pin, so that signal propagation characteristics are identical for all inputs address row control, column control, and data. The two clock inputs have similar dummy output transistors <b>28</b> and <b>29</b>, to equalize loading.</p>
<p id="p-0014" num="0013">In the prior art system, Vterm is equal to 1.8 v, Rterm is 20 Ω, and the current lout provided by the device driving the bus is 40 mA. This is shown schematically in <figref idref="DRAWINGS">FIG. 2(</figref><i>b</i>). In this configuration, a high level signal is equal to the bus termination voltage, Vterm (1.8 v) and a low level signal is equal to Vterm=Iout*Rterm (1.0 v). Power consumed while the signal is pulled low is 72 mW, of which 40 mW is dissipated on chip, and 32 mW in the termination. Assuming an equal probability of high and low data, the average power dissipation would be 36 mW, of which 20 mW is dissipated on chip and 16 mW in the termination.</p>
<p id="p-0015" num="0014">Given the high and tow voltage range, the reference voltage for the comparator is set to 1.4 v, which is midway between high and low levels on the bus. The input timing waveforms for this circuit configuration is shown in <figref idref="DRAWINGS">FIG. 3</figref>. The cFc signal is delayed from the pin through the input comparator <b>11</b>. The rising edges of the clock cFc signal are shown as a shaded area <b>134</b> on the timing diagram because of the differences between the generation of rising and falling edges. Falling edges are more accurate since they are generated by on chip drivers and are calibrated to produce the desired low level signal on the bus. On the other hand, the rising edges are created by the bus termination pullup resistor and will have different edge characteristics depending on the distance from the termination, number of loads on the bus, etc. Because or the differences in rising and falling edges, the received clock and data signals may not have precise 50/50 duty cycles. The DLL/PLL block <b>40</b> responds only to the falling edge of the clock input, since it is the most accurate edge. The DLL/PLL generates four outputs at 0°, 90°, 180° and 270°. These outputs are phase locked to the data input. The DLL/PLL shifts the free running clock input to align the 0° and 180° outputs to input data edge transitions. The 90° and 270° outputs can then be used to sample input data in odd and even latches corresponding to data generated on rising and falling edges of the clock respectively.</p>
<p id="p-0016" num="0015">There will be some timing error Δr and Δf, on the rising edge and falling edges of DLL outputs respectively, with respect to the output of the clock comparator, as shown in <figref idref="DRAWINGS">FIG. 3</figref>. These timing errors may occur due to any one or a combination of static phase offset, timing jitter and wander resulting from inaccuracies and mismatches within the components making up the DLL/PLL loop. The 0° and 180° outputs will be aligned to the average transition points. Since the DLL/PLL outputs a 50/50 duty cycle signal, while the data inputs may have a degraded duty cycle due to the aforementioned asymmetrical drive problem, this results in a further error in positioning the clock for optimal data sampling. The timing errors between clock and data created at the transmitting device and the receiving device are cumulative and can result in data errors.</p>
<p id="p-0017" num="0016">The output timing waveforms for the circuit of <figref idref="DRAWINGS">FIG. 2(</figref><i>a</i>) are shown in <figref idref="DRAWINGS">FIG. 4</figref>. The DLL/PLL <b>50</b> shown in <figref idref="DRAWINGS">FIG. 2(</figref><i>a</i>) takes the free running ClockToController and creates delayed versions of the free running clock. The DLL/PLL monitors transmit data (read data from the core memory), output to the databus via output driver transistor <b>27</b> through comparator <b>30</b> and adjusts the delay of the 0° and 180° clocks which drive the output latches <b>51</b> to align output data transitions to transitions of the ClockToController transmit clock. Due to the asymmetrical nature of the rising and falling edges appearing on the ClockToController bus, all outputs from the DLL/PLL <b>50</b> are generated from falling edges of the free running input ClockToController clock. The output data latching function is shown conceptually to include odd and even data latches and a multiplexer which alternates between the two data streams. The output data latch is followed by an AND gate which performs an output disable function, holding the gate of output driver transistor <b>27</b> at logic zero when data is not being read from the device. Similarly to the input data case, timing errors between clock and data are cumulative and can result in data errors.</p>
<p id="p-0018" num="0017">Another shortcoming of the prior art implementation shown in <figref idref="DRAWINGS">FIG. 1(</figref><i>a</i>) is the system's method for dealing with intersymbol interference. Data transitions do not always occur in the same position relative to clock edges due to a number of factors. The clock is a repetitive waveform with which there will be a constant-delay from one rising edge to another or from one falling edge to another. Data transitions are dependent on the previous bits transmitted, particularly on a long bus whose propagation delay exceeds one bit period. This effect is known as intersymbol interference (ISI). The effect of different data histories creates data transitions at different times relative to the clock. Basing the input sampling time purely on a fixed phase of the input clock, as in the architecture of <figref idref="DRAWINGS">FIG. 1(</figref><i>a</i>), will be suboptimal in the presence of ISI. Other effects such as crosstalk coupling between other wires near the signal in question, which can be either in phase or out of phase, and data dependent power supply coupling affecting both input buffers and output drivers, can also close the effective data eye, i.e., the window during which data can be successfully sampled.</p>
<p id="p-0019" num="0018">A further shortcoming of the prior art is that open drain outputs, shown schematically in <figref idref="DRAWINGS">FIG. 2(</figref><i>b</i>) are used to drive signals from a device onto the bus in the system of <figref idref="DRAWINGS">FIG. 1(</figref><i>a</i>). Because the falling edge of the clock is created by a clock generator pulldown transistor (not shown), while the rising edge is created by the bus termination resistor, it is difficult to match pulse rise time and pulse fall time. This can lead to non-symmetric duty cycle on the clock bus. To resolve this problem, the clock falling edge can be used as a timing reference and the clock rising edge can be re-synthesized internally with the DLL/PLL. However, this approach creates an internal sampling instant that is unrelated to the data edge of the bit being sampled, compounding the effects described above and resulting in further closure of the data eye, since subsequent data bits cannot be known in advance whereas a clock sequence is repetitive and therefore, determinable in advance.</p>
<p id="p-0020" num="0019">Each device discussed above in the prior art self-calibrates its output pulse amplitude levels. Either an external reference or an internally generated reference level is required, along with precision comparator circuits and calibration control circuitry. Inaccuracies in any of these elements may lead the output amplitudes from different devices to vary, resulting in further closure of the data eye.</p>
<p id="p-0021" num="0020">The number of devices in a the prior art configuration described above is limited to 32 because of the loading and length of the bus. With 64 M devices the total memory capacity is limited to 256 MB. If a larger memory configuration is required the controller must support several busses in parallel, consuming additional pins, silicon area, and power.</p>
<p id="p-0022" num="0021">The packaging technology for the prior art implementation described above is called Chip Scale Packaging or uBGA (micro Ball Grid Array). The intent of this packaging technology is to minimize the stub length from the connection to the bus to the on-chip input and output buffers. The length of the stub on the module is virtually eliminated by routing the bus through the module. Although stub length is reduced compared to standard packaging and module technology, there is still as much as 5 mm of stub within the uBGA package itself. This stub can cause reflections on the bus to the detriment of signal integrity.</p>
<p id="p-0023" num="0022">Another shortcoming of the prior art approach is the requirement for a separate clock generator chip. Furthermore,there is twice as much load on the clock as on any other signal, and the clock line is twice as long. Ultimately, the maximum frequency at which the system can operate will be limited by the doubly loaded clock line. The pulse symbols in <figref idref="DRAWINGS">FIG. 5</figref> show how systematic skew can develop between clock and write data at the far end of the bus. The clock reaching the controller cTc has already been attenuated by traveling the full length from the clock generator to the controller, and most of the higher order harmonics have been removed. At this point, cTc and cFc clocks should be identical and the controller synchronizes transitions of write data with zero crossings of the filtered cFc clock. The write data appears on the bus at this point with sharp edges and unattenuated amplitude. Because of the different frequency composition of the clock and write data, there is different group delay between clock and data at the far end of the bus. Since the cFc clock is somewhat attenuated already, further attenuation will not significantly affect its zero crossings. On the other hand, the write data, when attenuated, will lose its higher order harmonics which create the square wave form, resulting in a wave form as shown where the zero crossings have been significantly shifted. Therefore, transitions between clock and write data at the far end are skewed by an amount shown as t<sub>skew</sub>. As a result, write data sampling will not occur at the correct time.</p>
<p id="p-0024" num="0023">Thus it may be seen that the prior art configuration described suffers from various disadvantages. The present invention seeks to mitigate at least some of these disadvantages.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0025" num="0024">Accordingly, one object of the present invention is to provide an improved high bandwidth chip-to-chip interface for memory devices, which is capable of operating at higher speeds, while maintaining error free data transmission, consuming lower power, and supporting more load.</p>
<p id="p-0026" num="0025">Another object of the invention is to eliminate the requirement for a separate clock generator chip.</p>
<p id="p-0027" num="0026">A further object of the invention is to provide a clock adjustment scheme to compensate for intersymbol interference, crosstalk, noise, and voltage and temperature drift in memory devices.</p>
<p id="p-0028" num="0027">A still further object is to provide an improved bus topology in which clocks travel the same distance as data and do not limit overall bus performance.</p>
<p id="p-0029" num="0028">A still even further object is to provide an improved packaging for these devices.</p>
<p id="p-0030" num="0029">A still yet even further object is to provide a means to expand the number of memory devices that can be supported by a single controller.</p>
<p id="p-0031" num="0030">In accordance with this invention, there is provided a memory subsystem comprising
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0031">a) at least two semiconductor devices;</li>
        <li id="ul0002-0002" num="0032">b) a main bus containing a plurality of bus lines for carrying substantially all data and command information needed by the devices, the semiconductor devices including at least one memory device connected in parallel to the bus; the bus lines including respective row command lines and column command lines;</li>
        <li id="ul0002-0003" num="0033">c) a clock generator for coupling to a clock line, the devices including clock inputs for coupling to the clock line; and the devices including programmable delay elements coupled to the clock inputs to delay the clock edges for setting an input data sampling time of the memory device.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0032" num="0034">According to a further aspect of the invention there is provided
<ul id="ul0003" list-style="none">
    <li id="ul0003-0001" num="0000">
    <ul id="ul0004" list-style="none">
        <li id="ul0004-0001" num="0035">a) a core memory;</li>
        <li id="ul0004-0002" num="0036">b) a plurality of terminal for coupling to a bus including a free running clock and a data clock terminal and data I/O terminals;</li>
        <li id="ul0004-0003" num="0037">c) a source synchronous clock generator for synchronising the output data clock with the output data in response to the free running clock.</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0033" num="0038">According to one aspect of the invention the semiconductor devices include a clock offset fine adjustment for optimizing the sampling of received data, wherein the adjustment can be set during power up and periodically during operation by the controller to compensate for temperature and voltage drift.</p>
<p id="p-0034" num="0039">A further aspect of the invention provides a memory subsystem including synchronous data clocks for source synchronous clocking, while the loopback clock is used to provide a free running clock to transmit data and to time the start of bursts to position consecutive data bursts appropriately in order to avoid overlap between consecutive bursts.</p>
<p id="p-0035" num="0040">A further aspect of the invention provides a memory subsystem including means for calibrating the clock offset fine adjustment by utilizing a power up synchronization sequence. Preferably, the synchronization sequence is a bit sequence that includes a number of bit patterns such as a psuedorandom pattern to evaluate substantially all meaningful intersymbol interference histories in order to set an optimum time for a sampling instant.</p>
<p id="p-0036" num="0041">A further aspect of the invention provides a memory subsystem loopback clock architecture including a push pull I/O. This allows both rising and falling edges to be used for sampling data, thereby reducing the sensitivity of the system to clock duty cycle variation. This approach also saves power in the device itself allowing more cost-effective packaging.</p>
<p id="p-0037" num="0042">A further aspect of the invention provides a memory subsystem wherein the semiconductor device includes a controller, which in turn includes means for calibrating the output high/output low voltage levels Voh/Vol of the memory devices by writing to registers in the memories to increment or decrement output levels and comparing the result on the bus to a reference voltage level local to the controller.</p>
<p id="p-0038" num="0043">A further aspect of the invention provides a memory subsystem wherein a repeater appears as a single load on the main bus but drives a set of signals identically to the controller to create a sub-bus on which memory devices can be connected. The repeater acts as a controller on this sub-bus and memory devices cannot distinguish between the main bus and the sub-bus and therefore, operate identically on either one. The increased latency of devices on the sub-bus compared to those connected directly to the main bus may be corrected by the controller by scheduling activity appropriately.</p>
<p id="p-0039" num="0044">A still further aspect of the invention provides a memory subsystem, wherein the semiconductor devices include series stub resistors wherein the main bus is routed through the device to mitigate the effects of the stubs. Furthermore conventional TSOP type packaging is used for lower cost.</p>
<p id="p-0040" num="0045">In accordance with a further aspect of this invention, there is provided a memory subsystem comprising at least two semiconductor devices; a main bus containing a plurality of bus lines for carrying substantially all address, data and control information needed by the devices, the semiconductor devices including at least one memory device connected in parallel to the bus; where read and write data are accompanied by echo clocks, and burst placement is performed via vernier adjustment under control of the controller.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0041" num="0046">Embodiments of the invention will now be described by way of example only with reference to the accompanying drawings in which:</p>
<p id="p-0042" num="0047"><figref idref="DRAWINGS">FIG. 1(</figref><i>a</i>) is a schematic diagram of a bus topology according to the prior art;</p>
<p id="p-0043" num="0048"><figref idref="DRAWINGS">FIG. 1(</figref><i>b</i>) is a schematic diagram showing packet timing for the architecture of <figref idref="DRAWINGS">FIG. 1(</figref><i>a</i>);</p>
<p id="p-0044" num="0049"><figref idref="DRAWINGS">FIG. 2(</figref><i>a</i>) is a schematic diagram of a memory device and its clock synchronization circuitry for the bus topology of <figref idref="DRAWINGS">FIG. 1(</figref><i>a</i>);</p>
<p id="p-0045" num="0050"><figref idref="DRAWINGS">FIG. 2(</figref><i>b</i>) is a schematic diagram of a bus termination circuit;</p>
<p id="p-0046" num="0051"><figref idref="DRAWINGS">FIG. 3</figref> is a timing diagram showing data input timing for the circuit of <figref idref="DRAWINGS">FIG. 2(</figref><i>a</i>);</p>
<p id="p-0047" num="0052"><figref idref="DRAWINGS">FIG. 4</figref> is a timing diagram showing data output timing for the circuit of <figref idref="DRAWINGS">FIG. 2(</figref><i>a</i>);</p>
<p id="p-0048" num="0053"><figref idref="DRAWINGS">FIG. 5</figref> is a schemata diagram showing a systematic skew between a clock and data signal in the topology of <figref idref="DRAWINGS">FIG. 1(</figref><i>a</i>);</p>
<p id="p-0049" num="0054"><figref idref="DRAWINGS">FIG. 6(</figref><i>a</i>) is a schematic diagram of a bus topology implementing a synchronous clock scheme according to a first embodiment of the present invention;</p>
<p id="p-0050" num="0055"><figref idref="DRAWINGS">FIG. 6(</figref><i>b</i>) is a diagram showing timing signals of the bus topology shown <b>6</b>(<i>a</i>);</p>
<p id="p-0051" num="0056"><figref idref="DRAWINGS">FIG. 7</figref> is a schematic diagram of a bus topology according to a second embodiment of the present invention;</p>
<p id="p-0052" num="0057"><figref idref="DRAWINGS">FIG. 8(</figref><i>a</i>) is a schematic diagram of an input interface according to an embodiment of the present invention;</p>
<p id="p-0053" num="0058"><figref idref="DRAWINGS">FIG. 8(</figref><i>b</i>) is a timing diagram for the bus topology shown in <figref idref="DRAWINGS">FIG. 7</figref>;</p>
<p id="p-0054" num="0059"><figref idref="DRAWINGS">FIG. 8(</figref><i>c</i>) is a schematic diagram of an input interface for a controller according to an embodiment of the present invention;</p>
<p id="p-0055" num="0060"><figref idref="DRAWINGS">FIG. 9</figref> is a timing diagram showing data recovery with non-symmetrical duty cycle;</p>
<p id="p-0056" num="0061"><figref idref="DRAWINGS">FIGS. 10(</figref><i>a</i>) and (<i>b</i>) are flow charts showing controller and memory synchronization operation;</p>
<p id="p-0057" num="0062"><figref idref="DRAWINGS">FIG. 11(</figref><i>a</i>) is a circuit diagram and timing diagram illustrating a psuedorandom sequence generator according to an embodiment of the present invention;</p>
<p id="p-0058" num="0063"><figref idref="DRAWINGS">FIG. 11(</figref><i>b</i>) is a circuit diagram of a synchronization pattern detector circuit;</p>
<p id="p-0059" num="0064"><figref idref="DRAWINGS">FIG. 12</figref> is a schematic diagram of a bus topology according to a third embodiment of the present invention;</p>
<p id="p-0060" num="0065"><figref idref="DRAWINGS">FIGS. 13(</figref><i>a</i>) and (<i>b</i>) are schematic diagrams of a memory module according to the prior art;</p>
<p id="p-0061" num="0066"><figref idref="DRAWINGS">FIG. 14(</figref><i>a</i>) is a schematic diagram of a termination module according to the embodiment of the invention;</p>
<p id="p-0062" num="0067"><figref idref="DRAWINGS">FIG. 14(</figref><i>b</i>) is a schematic diagram of a termination module according to a further embodiment of the present invention;</p>
<p id="p-0063" num="0068"><figref idref="DRAWINGS">FIGS. 15(</figref><i>a</i>) and <b>15</b>(<i>b</i>) are respective top and bottom plan views of a semiconductor packaging according to one embodiment of the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS</heading>
<p id="p-0064" num="0069">Referring to <figref idref="DRAWINGS">FIG. 1(</figref><i>a</i>) a general prior art architecture on which the present memory subsystem is based is indicated by numeral <b>2</b> and is described in greater detail in R. Crisp “Direct Rambus Technology: The New Main Memory Standard”, IEEE Micro, November/December 1997, p. 18-28, incorporated herein by reference. The memory subsystem <b>2</b> includes a main bus or channel <b>12</b> which consists of a plurality of high speed controlled impedance matched transmission lines, a controller <b>10</b> and at least one memory device <b>11</b> connected thereto in parallel. The channel <b>12</b> has a bus topology with the controller <b>10</b> at one end, terminators <b>16</b> at the other end and memory devices II in-between. The transmission lines include a ClockToController line; a ClockFromController line; a data bus; a row bus and column bus each carrying correspondingly named signals. These signals are terminated at their characteristic impedance R<sub>term </sub>at the far end of the channel.</p>
<p id="p-0065" num="0070">The terminators pull the signals up to the system supplied V<sub>term </sub>voltage, which corresponds to logic 0. The semiconductor devices (controller and memory) assert a logic 1 by sinking current from the wire, using an open-drain NMOS transistor. The logic levels are generated about a reference voltage V<sub>ref </sub>set by a resistive divider as shown in <figref idref="DRAWINGS">FIG. 1(</figref><i>a</i>). As shown V<sub>ref </sub>connects to each device.</p>
<p id="p-0066" num="0071">In the embodiment of <figref idref="DRAWINGS">FIG. 1(</figref><i>a</i>), the clock source is shown as a separate generator <b>14</b>, however it can be integrated into the memory controller. The clock loop consists of first and second lines connected at one end. As shown, the clock loop begins at the clock generator end of the channel and propagates to the controller end as ClockToController, where it loops back at the connection between the first and second lines as ClockFromController to the memory devices and terminates. Improvements in the above architecture, which constitute embodiments of the present invention are now described below.</p>
<p id="p-0067" num="0072">Referring to <figref idref="DRAWINGS">FIG. 6(</figref><i>a</i>) a memory subsystem for implementing “controller source synchronous clocking” according to an embodiment of the present invention is shown generally by numeral <b>60</b>. The memory subsystem <b>60</b> includes a main bus or channel <b>62</b> which consists of a plurality of high speed controlled impedance matched transmission lines, a controller <b>64</b> and at least one memory device <b>66</b> connected thereto in parallel. The channel <b>62</b> has a bus topology with the controller <b>10</b> at one end, terminators <b>68</b> at the other end and memory devices <b>66</b> in-between. The transmission lines include a ClockToController line cTc; a ClockFirmController line cFc; a data bus; a row bus; column bus and a Vref line each carrying correspondingly named signals. These signals are terminated at their characteristic impedance R<sub>term </sub>at the end of the channel <b>68</b>. The reference voltage V<sub>ref </sub>set by a resistive divider <b>69</b>. Each device connected to the bus has correspondingly named terminals.</p>
<p id="p-0068" num="0073">The terminators <b>68</b> pull the signals up to the system supplied V<sub>term </sub>voltage, which corresponds to logic 0. The semiconductor devices (controller and memory) assert a logic 1 by sinking current from the wire, using an open-drain NMOS transistor. The logic levels are generated about the reference voltage V<sub>ref</sub>. As shown V<sub>ref </sub>connects to each device.</p>
<p id="p-0069" num="0074">The controller includes a clock generator <b>70</b> for generating the free running clock signal which is driven on to the bus from the cFc pin. The clock line cFc loops around at the far end <b>68</b> and returns as the cTc line. The cTc line re-enters the controller to clock in read data from the memory devices <b>66</b>. The termination resistor R<sub>cterm </sub>for the looparound clock is located, near the controller <b>64</b>. Each of the output pins of the controller have push-pull drivers. The clock output driver circuit (not shown) is matched to the row command, column command, and write data output drivers. Any temperature or voltage supply variations affecting the command or data output drivers will affect the clock output equally. Because clock and data are produced by identical drive circuits in the controller <b>64</b>, and both signals propagate over similar busses, some of the skew problems associated with the loop-around clock shown in <figref idref="DRAWINGS">FIG. 1(</figref><i>a</i>) are overcome. The controller does not have to implement a PLL/DLL aligning circuit to align control and data bursts originating from the controller to the cFc clock. This technique for matching clock and data is known as “source synchronous clocking”. The clock line cFc loops around at the far end and returns as the cTc line. The cTc line re-enters the controller to clock in read data from the memory devices <b>66</b>. The termination resistor R<sub>cterm </sub>for the looparound clock is located, near the controller <b>64</b>.</p>
<p id="p-0070" num="0075">A further advantage of the present topology is that no changes are necessary in the memory devices <b>66</b> from-the prior art memory shown in <figref idref="DRAWINGS">FIG. 2(</figref><i>a</i>) and devices as these will function correctly with the modified source synchronous bus topology. Bus timing will be identical to that shown in <figref idref="DRAWINGS">FIG. 1(</figref><i>b</i>).</p>
<p id="p-0071" num="0076">An alternative approach is to change the phase relationship between clock and data to simplify receiving circuitry in both controller an memory devices.</p>
<p id="p-0072" num="0077">Referring to <figref idref="DRAWINGS">FIG. 6(</figref><i>b</i>), the timing waveforms for the bus signal at the controller <b>64</b> and the memory device <b>66</b> of <figref idref="DRAWINGS">FIG. 6(</figref><i>a</i>) are shown respectively by numerals <b>72</b> and <b>74</b>. The clock <b>76</b> and data <b>77</b> waveforms are generated with a 90° relative phase shift, to position clock transitions in the center of the data eye.</p>
<p id="p-0073" num="0078">Positioning of the clock transitions in the centre of the data eye is accomplished in the controller by selecting appropriate outputs from an on-chip PLL/DLL locked to the free running system clock cFc to separately drive data output and clock output circuits. The approach of the subject invention allows the receiving memory device to use the received clock cFc to latch data directly, without the need for a PLL/DLL, provided clock and data delays to the actual receive data latch are matched. Only one PLL/DLL is required in the memory devices to center read data transitions between edges of the cTc clock, saving both power and die area.</p>
<p id="p-0074" num="0079">Another embodiment of the present invention, illustrated in <figref idref="DRAWINGS">FIG. 7</figref>, is shown by numeral <b>80</b>, which shows a bus scheme having fully source synchronous clocking, including data clocks <b>81</b>, dclk<b>0</b>, dclk<b>1</b>, and a free running reference clock CLK. The memory devices <b>84</b> and the controller <b>82</b> drive clocks to accompany read data and write data. The controller <b>82</b> includes a clock generator <b>86</b> for generating the free running reference clock CLK. This single clock CLK is driven from the controller <b>82</b> in a source synchronous fashion with row and column command packets on the ROW and COL lines. The clock line CIK is now identical in length and loading to the ROW/COL command and data busses in the system. The clock is terminated at the far end <b>85</b>.</p>
<p id="p-0075" num="0080">Clock and data waveforms are matched at all points in the system. The proper positioning of data bursts from different devices is achieved by latency calibration under control of the memory controller. This makes the loopback clock bus as described in <figref idref="DRAWINGS">FIG. 6(</figref><i>a</i>) unnecessary. Although the clock is shown as a single ended signal, it may in fact be implemented as a differential signal driving both inputs of an input comparator within each memory device. This eliminates sensitivity of the clock path to Vref threshold variations and common mode noise throughout the system.</p>
<p id="p-0076" num="0081">The controller <b>82</b> and memory devices <b>84</b> also include an SO and SI terminal for providing a low speed serial daisy chain from controller through all the memory devices <b>84</b> and back to the controller <b>82</b> to indicate when all memories have synchronized. The operation of this will be described later.</p>
<p id="p-0077" num="0082">The source synchronous data clocks dclk<b>0</b> and dclk<b>1</b> are provided in the controller <b>82</b> for timing data in a source synchronous manner. During read operations, the memory devices <b>84</b> drive one of the data clocks dclk<b>0</b> and dclk<b>1</b> in a source synchronous manner along with read data on the databus. The controller <b>82</b> schedules which of the data clocks should be used and supplies this information to the memory either in the column command packet or through another control path. The controller <b>82</b> therefore knows which data clock to use to latch in read data In one embodiment, the memory devices use the free running clock to latch write data in the same way that ROW and COL command packets are latched. However, the preferred embodiment uses data clocks for write data input latching in the memory devices. This allows the data path to be routed or buffered independently of the control path. This has advantages in creating hierarchical memory subsystems, as will be described later.</p>
<p id="p-0078" num="0083">Referring to <figref idref="DRAWINGS">FIG. 8(</figref><i>a</i>) a memory device interface circuit for use in the source synchronous scheme of <figref idref="DRAWINGS">FIG. 7</figref> is shown generally by numeral <b>90</b>. The interface comprises input terminals for connection of the device to appropriate signals on the bus; an I/O driver section <b>94</b> employing push-pull configured transistors for driving both ‘0’ and ‘1’ data; an input stub section having series stub resistors R<sub>s </sub>interposed between each input terminal and the push-pull drivers; a reference voltage input <b>96</b> and a command and data interface section <b>98</b> converting the externally received command and data signals as well as clock signals into internal signals. The command and data interface section <b>98</b> includes programmable delay elements for driving the core DRAM with appropriately delayed internal signals (as will be described later). This section also receives signals from the core DRAM for driving onto the bus including generating the dclk<b>0</b> and dclk<b>1</b> clocks for source synchronous transmission with the data.</p>
<p id="p-0079" num="0084">An advantage of the above interface configuration is that signal logic level transitions are better controlled since both 0's and 1's originate from drivers within the transmitting device. This allows both rising and falling edge clocks to be used to latch data compared to the prior art wherein only falling edges were used.</p>
<p id="p-0080" num="0085">The command and data interface <b>98</b> shown in <figref idref="DRAWINGS">FIG. 8(</figref><i>a</i>) includes a first set of programmable delay circuits <b>102</b> and <b>104</b> for delaying both the rising and falling edges of the received clock CLK, producing the even clock CLK_E and odd clock CLK_O signals, which latch even and odd row commands row_E, row_O as well as even and odd column commands col_E, col_O in the core DRAM via D-type flip-flops <b>106</b>.</p>
<p id="p-0081" num="0086">Separate programmable fine vernier delays <b>107</b> and <b>108</b> receive as inputs the clock signal CLK and delay the rising and falling edges to generate delayed signals OUTCLKE and OUTCLKO . These signals drive the clock input of respective D-type latches <b>120</b> and <b>122</b> for latching the even Data Out E and odd Data Out O output data signals from the core DRAM. The latched data output signals are processed one at a time by multiplexer <b>124</b>, which drives the selected latched data signal onto the data line. The multiplexer <b>124</b> is controlled by one of the clock signals, OUTCLKO in this case. The same signal controls a multiplexer <b>126</b>, which selects one of the signals OUTCLKE and OUTCLKO latched in respective D-type latches <b>128</b> and <b>130</b>, which drive the dclk<b>0</b> and dclk<b>1</b> lines to achieve source synchronous clocking. The first multiplexer <b>124</b> selects between odd and even data and the second multiplexer selects between odd and even clocks. This allows synchronization of the output data with the output clocks. The input latching circuitry can therefore be optimized to work in the presence of non-symmetrical clock duty cycles, since odd and even data are latched by odd and even edges of the associated source synchronous clock. An instruction decoder <b>132</b> provides the relevant signals, such as the data clock output enable signals DCOE<b>1</b>, DCOE<b>1</b>, DCOEO, DCOEO; select data clock signal SDCLK; signal for initiating the preamble state machine GO; and data output enable signals DOE and DOE.</p>
<p id="p-0082" num="0087">The data input to the memory is also synchronized with the data clocks dclkO and dclkl. The data clocks dclkO and dclkl are received at the inputs of a multiplexer <b>116</b>, which is controlled by a SDCLK signal generated by the instruction decoder <b>132</b>. The data clocks are delayed by programmable delays <b>109</b> and <b>110</b> to produce respective even and odd delayed clocks DCLK E and DCLK O. These even and odd clocks are used to clock respective D-type latches <b>134</b> and <b>136</b>, for latching the incoming data as data in_E and data in O.</p>
<p id="p-0083" num="0088">The latching of odd and even data is shown in <figref idref="DRAWINGS">FIG. 9</figref> where a delay Δ<sub>E </sub>between the falling edge of the clock input to the rising edge of clk_E centers the sampling instant in the middle of the data generated with the falling edge of the clock input, and a Δ<sub>O </sub>between the rising edge of the clock input to the rising edge of clk_O centers the sampling instant in the middle of the data generated with the rising edge of the clock input.</p>
<p id="p-0084" num="0089">With respect to the output buffer structure illustrated in <figref idref="DRAWINGS">FIG. 8(</figref><i>a</i>), the preferred embodiment employs a push-pull output buffer which drives both ‘0’ (Vol=0.9V) and ‘1’(Voh=1.6V) data This is based on EBA/JEDEC Standard “Stub Series Terminated Logic for 3.3 Volts (SSTL<sub>—</sub>3)”, EIA/JESD8-8, August 1996, although the levels are scaled down for 2.5 v operation. The series stub resistors Rs isolates the device load from the main transmission line, reducing the bus impedance lowering effect of the device's point capacitive load Power is lower than the prior art open drain approach because current output levels are +I/2, −I/2 rather than +I,0 for the open drain case.</p>
<p id="p-0085" num="0090">The reference voltage V<sub>ref </sub>is equal to the termination voltage of 1.25 V. Assuming for comparison purposes a 20 ohm termination and a 20 ohm series resistor, the current required to create a 0.8 v swing equivalent to the prior art is +/−20 mA. Power consumption is thus data independent at 25 mW per pin, of which only 9 mW is dissipated on chip. Since output current is lower, the output driver transistors can be smaller, further reducing pin capacitance. Most importantly, on-chip I/O power dissipation is much smaller because of the smaller current and the smaller on-chip voltage drop resulting from the series stub resistor. The combined effect of series stub resistor and smaller output driver load capacitance results in higher effective transmission line characteristic impedance, perhaps 30Ω. Consequently, the termination resistor value can be increased which results in further power savings.</p>
<p id="p-0086" num="0091">As illustrated in <figref idref="DRAWINGS">FIGS. 8(</figref><i>a</i>) and <b>8</b>(<i>b</i>), two data clocks are used to improve bus utilization, dclk<b>0</b> and dclk<b>1</b>. During the transition between data bursts originating from one device to another, the clock and data lines return to the voltage set by the termination resistor. During this inactive time, the device that is to receive the next data burst must enable its input buffers to start receiving data with the next transition on the clock input. If only a single data clock were employed, the inactive time would have to be extended to allow sufficient safety margin in the receiving device to unambiguously enable its input clock path. Glitches on the data inputs are acceptable since data is sampled, but glitches on the internal clocks can cause a complete breakdown of input data pipelines. The time to merely power up differential input buffers may be longer than a single bit period. Furthermore, there may be different delays in the control path to each device, possibly as a result of address/control buffers that may or may not be present on a module. If a device enables its input path too soon, it may latch the last bit of the preceding burst. If it enables its input path too late, it may miss the first bit of the burst it is intended to receive. The inactive time could be widened to ensure that neither of these errors occur, but this approach would reduce data bus utilization and overall system bandwidth.</p>
<p id="p-0087" num="0092">A solution, according to an embodiment of the present invention, is to provide the two data clocks dclk<b>0</b> and dclk<b>1</b> to allow devices to pass control of the data bus with minimum gap as shown in <figref idref="DRAWINGS">FIG. 8(</figref><i>b</i>). Dual data clocks allow source synchronous clocking to achieve as tight a burst-to-burst timing as in the prior art. The device receiving a burst can enable its input path well in advance of the beginning of the actual data burst during the preamble period when the dclk (dclk<b>1</b> in this case is used for the right burst) is held at a low level for 3 bit periods. At this time a preceding data burst may actually be present on the data bus with associated activity on the other data clock (in this case a read burst controlled by dclk<b>0</b> is shown). Each successive burst uses the opposite data clock from the previous burst. This can be synchronized on power up by having each device count odd and even bursts, or, by having the controller provide within each read and write command to the memory devices, an indication of which clock to use.</p>
<p id="p-0088" num="0093">As a further improvement to this scheme, a preamble can be transmitted before the clock transition associated with the first bit of data. Referring back to <figref idref="DRAWINGS">FIG. 8(</figref><i>a</i>), a state machine <b>134</b> is shown for generating the preamble. The state machine receives as inputs the clocks OUTCLKE and OUTCLKO. The preamble is initiated by applying a signal to its GO input. A 1-bit preamble is shown in <figref idref="DRAWINGS">FIG. 8</figref><i>b</i>. With the 1-bit preamble, the receiving device would ignore the first edge of the clock and begin clocking data on the second edge (with appropriate delay through the vernier). The preamble removes intersymbol interference from the clock pulses. Because the clock starts from a constant low level, the first transitions may be skewed relative to subsequent transitions that occur after the response has reached a steady state. The dual clock approach allows such preambles to be added to the burst without increasing the space between bursts.</p>
<p id="p-0089" num="0094">Referring to <figref idref="DRAWINGS">FIG. 8(</figref><i>c</i>) a schematic diagram of a controller interface is shown generally by the numeral <b>150</b>. The interface circuitry <b>150</b> in the controller is simpler than that of the memory device shown in <figref idref="DRAWINGS">FIG. 8(</figref><i>b</i>). Clock CLK <b>152</b>, ROW <b>154</b> and COL <b>150</b> command are all outputs driven by identical I/O circuits <b>158</b>. The outputs are latched on edges of the same internal clock <o ostyle="single">CLK</o>. Dummy input buffers may be included to match input capacitance with the data bus interface circuits. The write data output path is driven by the same clock driving CLK, ROW and COL outputs. Therefore, the write data output fine verniers are not required. The read data input path is the same as the write data input path in the memory device. Programmable delay elements <b>155</b> which are programmed on receipt of the synchronization pattern adjust the received data clock to latch received read data in the controller. As in the memory device interface a state machine <b>157</b> is provided for generating the preamble on the dclk's.</p>
<p id="p-0090" num="0095">Referring to <figref idref="DRAWINGS">FIGS. 10(</figref><i>a</i>) and (<i>b</i>) the sequence of events required on system initialization to synchronize the memory devices to the controller is shown. This relies on the low speed serial daisy chain connection from the controller through all the memory devices and back to the controller to indicate when all memories have synchronized. The controller first sets its programmable delay to minimum and then begins to transmit a synchronization pattern on the outputs accompanied by clock(s). Preferably, the synchronization pattern will be transmitted on all outputs, including row, column, and data busses, although the memories could synchronize based on a single input. The synchronization pattern (hereinafter referred to as the sync pattern) should be a pattern that cannot be confused with a valid command, even when the receiving device is not in sync. The preferred sync pattern will be discussed later in greater depth.</p>
<p id="p-0091" num="0096">Referring specifically to <figref idref="DRAWINGS">FIG. 10(</figref><i>a</i>), illustrating the controller synchronization flow, the controller sets its SO output to logic ‘1’ and begins transmitting the sync pattern. When the controller receives a logic ‘1’ at its SI input, indicating that all memory devices in the chain have synchronized, it can begin transmitting normal command packets to the devices.</p>
<p id="p-0092" num="0097">Referring now to <figref idref="DRAWINGS">FIG. 10(</figref><i>b</i>) the synchronization flow chart for memory devices is shown. When a memory device detects the sync pattern on its input(s), it drives its SO terminal to a logic ‘0’ level and sets the programmable delay blocks <b>104</b> and <b>102</b> shown in <figref idref="DRAWINGS">FIG. 8(</figref><i>a</i>) generating CLK_E and CLK_O to the minimum delay settings. The latched received even and odd data from row and column inputs, ROW_E, ROW_O, COL_E, and COL_O is compared to the expected sync pattern. If the received data is identical to the sync pattern on all inputs the device is said to be in sync. The delay settings are incremented to identify a window where the sync pattern is received without error. This represents the composite eye opening for all inputs and the synchronization sequence essentially amounts to stepping through the composite data eye to define its boundaries sync min and sync max. The final delay values written into the programmable delay circuits are set to the center of the window for maximum timing margin.</p>
<p id="p-0093" num="0098">An identical process occurs for write data inputs to determine the proper settings for DCLK_E and DCLK_O delay circuits <b>109</b> and <b>110</b>. Once all 4 delay values have been determined, the memory device sets SO=SI. A logic ‘1’ will ripple through the serial daisy chain bus as each device completes its synchronization sequence, producing finally, a logic ‘1’ level at the SI input of the controller.</p>
<p id="p-0094" num="0099">The I/O levels and duty cycle are calibrated and matched in a similar fashion. After synchronization, the controller sends commands to each memory device in turn to drive the data bus with high and low logic levels. The controller then measures the Voh and Vol levels of individual memory devices and sends commands to registers within each device to increase or decrease the levels appropriately. The output drivers are composed of binary weighted segments that can be enabled or disabled depending on the programmed Voh or Vol levels. Because all I/O's are calibrated to a single reference level in the controller, there is less variation between devices and the data eye opening will be improved. In contrast, in the prior art each device calibrates its own output level resulting in variation due to differences in the local reference and termination resistor.</p>
<p id="p-0095" num="0100">Following the synchronization sequence and I/O level calibration, the controller can then adjust the timing of read data bursts by requesting a read data burst from each memory device in sequence, observing the phase of the received data burst, and then making appropriate adjustments to the output clock delay registers in the memory devices.</p>
<p id="p-0096" num="0101">The controller may also perform input sampling clock calibration by instructing a memory device to transmit a synchronization pattern on the data bus, and then following the procedure outlined in <figref idref="DRAWINGS">FIG. 10(</figref><i>b</i>) to adjust its own input sampling clock delay circuits. By performing input sample clock timing adjustment in this manner rather than generating a fixed phase based on the input clock as in the prior art, the preferred embodiment can compensate for skews and mismatches in the wiring, crosstalk between different signals, ground bounce and ISI. Likewise, the read data burst timing adjustment also compensates for system-wide skew, rather than just on-chip skew.</p>
<p id="p-0097" num="0102">The synchronization pattern must be selected to create a worst case ISI scenario. The sync pattern generator according to an embodiment of the present invention, as shown in <figref idref="DRAWINGS">FIG. 11(</figref><i>a</i>), creates all possible 3 bit sequences with the exception of ‘111’. The circuit generates a 7-bit repeating psuedorandom pattern. A useful property of the pattern is that if every 2<sup>nd </sup>bit is sampled, the same 7-bit repeating pseudorandom pattern will result. Therefore, the adjustment of odd and even clock delays in the receiving device can be done independently. The sync pattern can be most easily detected by a sequence of 3 successive ‘0’s. Even if the input clock delays are not properly adjusted it is guaranteed that at least 2 successive ‘0’s would be latched. As long as one bit of a valid instruction stream can never have 2 successive ‘0’s, there will be no ambiguity in identifying when a sync pattern is received. For example, each of the ROW and COL busses should include framing bits that have this property. Psuedorandom sequences of any desired length 2<sup>N</sup>−1 can be generated in this manner with the appropriate feedback polynomial. Generally, the length of the polynomial should span the settling time of the bus.</p>
<p id="p-0098" num="0103"><figref idref="DRAWINGS">FIG. 11(</figref><i>b</i>) shows the sync detector. In the preferred embodiment, all lines in the bus will be driven with the sync pattern. A best 2 of 3 vote is taken on 3 of the inputs, and the result is compared to each individual input. If any input is different from the best 2 of 3 vote result, then there is an error and the device cannot be considered “in-sync” for that particular input clock delay setting. The best 2 of 3 vote is provided as input to a feed forward version of the psuedorandom generator, which is used to predict the next bit of the sequence. This is compared to the actual received bit to determine whether the device is “in-sync”. If the error flag remains inactive and the sync flag remains active for the duration of one fall cycle of the 7-bit psuedorandom sequence, then the programmable clock delay setting represents a valid sampling point within the composite eye.</p>
<p id="p-0099" num="0104">Another advantage of the present invention is that the number of memory devices connected to a source synchronous bus can be increased through the use of simple bus repeaters, while keeping the loads on a single set of lines to a minimum.</p>
<p id="p-0100" num="0105"><figref idref="DRAWINGS">FIG. 12</figref> shows a buffered module <b>160</b> that contains two memory devices <b>162</b>, each driving its respective separate data bus data A and data B back to the controller and having a bus topology similar to that of <figref idref="DRAWINGS">FIG. 7</figref>. This configuration is useful when the application requires more bandwidth than a single memory device could provide. A single row and column command stream <b>163</b> is received by a buffer <b>164</b> and is directed to more than one memory device <b>162</b> on the module along a local row and column command buss <b>166</b>. The module therefore presents only one load to the bus. Each memory device can operate in parallel to deliver a higher data bandwidth back to the controller <b>165</b>. The local row and column command bus <b>166</b> may be terminated <b>167</b>. Although the buffer <b>164</b> introduces delay into the command path, the relationship between clocks and the associated data remains unchanged. In the buffer, the row and column command busses <b>163</b> are latched exactly as they are within the memory devices <b>162</b>, and then they are regenerated along with the clock clk<b>0</b> to drive the internal bus <b>166</b>. Read data and write data on busses dataA and dataB are clocked by their respective data clocks dclkA and dclkB in both directions. The additional delay within the buffer <b>164</b> can be compensated through timing adjustments made by the controller <b>165</b> through writing appropriate delay registers in the memory devices. Because all timing adjustments are made by the controller, it is possible to mix buffered and unbuffered modules in the same system and achieve consistent timing between all memories. This increased bandwidth with no additional drawbacks to the system contrasts the prior art approach which was limited to 32 devices.</p>
<p id="p-0101" num="0106">For memory systems requiring deeper address space it is also possible to buffer the data busses and connect more than one memory device on each module to the main databus. The databus buffers must capture and regenerate signals bidirectionally.</p>
<p id="p-0102" num="0107">Referring to <figref idref="DRAWINGS">FIGS. 13(</figref><i>a</i>) and <b>13</b>(<i>b</i>), a prior art memory module in which the main busses are run through the module itself to minimize stub lengths, is indicated generally by numeral <b>170</b>. The modules include a circuit board <b>172</b>, having a plurality of memory devices <b>174</b> and a pair of connectors <b>175</b> arranged along one edge of the board <b>172</b> and spaced at opposite ends thereof A clock generator <b>176</b> and termination resistors <b>178</b> are positioned on the main motherboard <b>180</b> at the far end of the bus. The bus enters the module at one end <b>182</b>, travels through the module making connection to each memory device, and then exists the module at the opposite end <b>184</b>. To maintain bus connectivity in systems that are not fully populated with memory, it is necessary to insert dummy modules.</p>
<p id="p-0103" num="0108">Referring to <figref idref="DRAWINGS">FIG. 14(</figref><i>a</i>), a schematic termination diagram of a module with memory <b>190</b> according to an embodiment of the present invention is shown. The module <b>190</b> includes a clock generator <b>192</b> and the termination resistor <b>194</b> with a plurality of memory devices <b>196</b>. Computing of signals to the module from the bus is made via a set of contacts <b>198</b> at one edge of the module. Only one such termination module would be required in a system, rather than many dummy modules in a highly expandable but sparsely populated memory system. The termination module can be made reversible so that it can plug into even or odd module sockets. When the memory system is to be upgraded with an additional module, the termination module may be shifted one slot further out to create a space for the additional memory. The termination module includes memory devices, so that motherboard sockets can be maximally utilized. A system that is not fully populated may operate at a higher frequency because the bus is shorter and attenuation and timing skew at a given frequency will be lower. In <figref idref="DRAWINGS">FIG. 14(</figref><i>b</i>), a schematic diagram of a termination module without memory is shown generally by numeral <b>200</b>. This module differs from that of <figref idref="DRAWINGS">FIG. 14(</figref><i>a</i>) only in that it does not include memory devices. It may be seen that in the modules <b>190</b> and <b>200</b>, the bus does not travel through the module.</p>
<p id="p-0104" num="0109">The chip packaging employed in the prior art devices is a uBGA (micro Ball Grid Array) chip scale package which is roughly the same size as the die. These packages have shorter stub lengths than conventional packaging. The stub includes the length of the bond wire, the lead frame, and the via to the main bus. This length may be approximately 5 mm. At lower frequencies, a stub of this length will not degrade the transmission line properties of the main bus significantly, although the point capacitive load of the chip I/O structure is of concern. At operating speeds greater than 1 Gb/s, even a 5 mm stub can degrade performance.</p>
<p id="p-0105" num="0110">Referring to <figref idref="DRAWINGS">FIGS. 15(</figref><i>a</i>) and <b>15</b>(<i>b</i>), a respective top and bottom views of a uBGA package according to an embodiment of the present invention, is shown by numeral <b>220</b>. The packaging consists of a BGA substrate <b>222</b>, to which is mounted on a top surface thereof chip <b>224</b>. Bonding wires <b>236</b> are connected from the bonding pads <b>228</b> via through-holes <b>230</b> to a bottom surface of the substrate <b>222</b>. The top side is encased in a plastic encapsulation <b>232</b>.</p>
<p id="p-0106" num="0111">Referring to <figref idref="DRAWINGS">FIG. 15(</figref><i>b</i>), the bonding wires are connected to deposited resistors <b>234</b> to BGA balls <b>236</b> on the bottom of the substrate.</p>
<p id="p-0107" num="0112">The series resistor film <b>234</b> near the BGA solder ball <b>236</b> acts to minimize the effect of the stub and point load of the chip I/O. The resistor, typically <b>20</b> ohms, is located as close to the ball as possible to isolate as much of the stub as possible from the main bus so that reflections are quickly dammed. The resistor is created by depositing a resistive material on selected areas of one layer of the uBGA substrate, or by depositing resistive material over the entire layer and then etching the unwanted material away, using photolithographic processes. With this approach, the series resistor is located very close to the main transmission line, and no additional board area is required for discrete resistors.</p>
<p id="p-0108" num="0113">While the invention has been described concerning a specific embodiment thereof and in a specific use, various modifications thereof will occur to those skilled in the art without departing from the spirit of the invention.</p>
<p id="p-0109" num="0114">The terms and expressions which have been employed in the specification are used as terms of description and not of limitations, there is no intention in the use of such terms and expressions to exclude any equivalents of the features shown and described or portions thereof, but it is recognized that various modifications are possible within the scope of the invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>We claim:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A semiconductor device comprising:
<claim-text>a) memory;</claim-text>
<claim-text>b) a plurality of terminals for coupling to a bus including a free running clock input terminal, a data clock output terminal and data output terminals, the data output terminals providing output data from the memory;</claim-text>
<claim-text>c) a clock generator for driving a data clock output signal on the data clock output terminal in synchronization with said output data in response to a free running clock signal at the free running clock input terminal;</claim-text>
<claim-text>d) output drivers for driving said output data to said bus; and</claim-text>
<claim-text>e) a termination resistor coupled to one of said data output terminals.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The semiconductor device as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said memory is a Dynamic Random Access Memory (DRAM).</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The semiconductor device as claimed in <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein said termination resistor is part of a package substrate, and said DRAM is a semiconductor memory chip mounted on said package substrate.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The semiconductor device as claimed in <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein said termination resistor is a series stub termination resistor.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The semiconductor device as claimed in <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein said termination resistor is a film resistor deposited on said package substrate.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The semiconductor device as claimed in <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein said DRAM and said termination resistor are integrated on a semiconductor memory chip.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The semiconductor device as claimed in <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein said termination resistor is a series stub termination resistor.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The semiconductor device as claimed in <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein said output drivers are open-drain drivers.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The semiconductor device as claimed in <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein said output drivers are push-pull drivers.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The semiconductor device as claimed in <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein said termination resistor is a series stub termination resistor.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The semiconductor device as claimed in <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein said data clock output terminal is a data clock input/output terminal, and said data output terminals are data input/output terminals.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The semiconductor device as claimed in <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein said clock generator is a source synchronous clock generator.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The semiconductor device as claimed in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said memory and said termination resistor are integrated on a semiconductor memory chip.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The semiconductor device as claimed in <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein said termination resistor is a series stub termination resistor.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A semiconductor device comprising:
<claim-text>a) memory;</claim-text>
<claim-text>b) a plurality of terminals for coupling to a bus including a free running clock input terminal, a data clock input/output terminal and data input/output terminals, the data input/output terminals providing output data from the memory;</claim-text>
<claim-text>c) a clock generator for driving a data clock output signal on the data clock input/output terminal in synchronization with said output data in response to a free running clock signal at the free running clock input terminal;</claim-text>
<claim-text>d) output drivers for driving said output data to said bus; and</claim-text>
<claim-text>e) a termination resistor coupled to one of said data input/output terminals.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The semiconductor device as claimed in <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein said memory is a Dynamic Random Access Memory (DRAM).</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The semiconductor device as claimed in <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein said DRAM and said termination resistor are integrated on a semiconductor memory chip.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The semiconductor device as claimed in <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein said termination resistor is a series stub termination resistor.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The semiconductor device as claimed in <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein said clock generator is a source synchronous clock generator.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The semiconductor device as claimed in <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein said output drivers are open-drain drivers.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The semiconductor device as claimed in <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein said output drivers are push-pull drivers.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The semiconductor device as claimed in <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein said termination resistor is a series stub termination resistor.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The semiconductor device as claimed in <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein said termination resistor is part of a package substrate, and said DRAM is a semiconductor memory chip mounted on said package substrate.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The semiconductor device as claimed in <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein said termination resistor is a series stub termination resistor.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The semiconductor device as claimed in <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein said termination resistor is a film resistor deposited on said package substrate.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The semiconductor device as claimed in <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein said memory and said termination resistor are integrated on a semiconductor memory chip.</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The semiconductor device as claimed in <claim-ref idref="CLM-00026">claim 26</claim-ref>, wherein said termination resistor is a series stub termination resistor.</claim-text>
</claim>
</claims>
</us-patent-grant>
