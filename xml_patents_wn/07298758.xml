<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298758-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298758</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10615613</doc-number>
<date>20030708</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>909</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>42</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>12</main-group>
<subgroup>403</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370449</main-classification>
<further-classification>370461</further-classification>
<further-classification>370462</further-classification>
</classification-national>
<invention-title id="d0e53">Method and system for optimizing UTOPIA CLAV polling arbitration</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5418786</doc-number>
<kind>A</kind>
<name>Loyer et al.</name>
<date>19950500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5659787</doc-number>
<kind>A</kind>
<name>Schieltz</name>
<date>19970800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709226</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6006017</doc-number>
<kind>A</kind>
<name>Joshi et al.</name>
<date>19991200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6098109</doc-number>
<kind>A</kind>
<name>Kotzur et al.</name>
<date>20000800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6188690</doc-number>
<kind>B1</kind>
<name>Holden et al.</name>
<date>20010200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6198750</doc-number>
<kind>B1</kind>
<name>Buchholz et al.</name>
<date>20010300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6266324</doc-number>
<kind>B1</kind>
<name>Kirino et al.</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6307858</doc-number>
<kind>B1</kind>
<name>Mizukoshi et al.</name>
<date>20011000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6345050</doc-number>
<kind>B1</kind>
<name>Alleyne et al.</name>
<date>20020200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6356557</doc-number>
<kind>B1</kind>
<name>Nichols et al.</name>
<date>20020300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6389480</doc-number>
<kind>B1</kind>
<name>Kotzur et al.</name>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6449655</doc-number>
<kind>B1</kind>
<name>Hann et al.</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709233</main-classification></classification-national>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>6535520</doc-number>
<kind>B1</kind>
<name>Hann et al.</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370461</main-classification></classification-national>
</citation>
<citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2002/0009089</doc-number>
<kind>A1</kind>
<name>McWilliams</name>
<date>20020100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2003/0091053</doc-number>
<kind>A1</kind>
<name>Tzannes et al.</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>3703951</main-classification></classification-national>
</citation>
<citation>
<nplcit num="00016">
<othercit>The ATM Forum Technical Committee, Utopia Level 2, Version 1.0, Jun. 1995, pp. 1-66.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00017">
<othercit>International Search Report dated May 21, 2004 for Application No. PCT/US03/21359.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>21</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>None</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>19</number-of-drawing-sheets>
<number-of-figures>19</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60393739</doc-number>
<kind>00</kind>
<date>20020708</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20040151200</doc-number>
<kind>A1</kind>
<date>20040805</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Robertson</last-name>
<first-name>Clement</first-name>
<address>
<city>Cambridgeshire</city>
<country>GB</country>
</address>
</addressbook>
<nationality>
<country>GB</country>
</nationality>
<residence>
<country>GB</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Thomas, Kayden, Horstemeyer &amp; Risley LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Brooktree Broadband Holding, Inc.</orgname>
<role>02</role>
<address>
<city>Newport Beach</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Nguyen</last-name>
<first-name>Chau</first-name>
<department>2616</department>
</primary-examiner>
<assistant-examiner>
<last-name>Kang</last-name>
<first-name>Suk Jin</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">The present invention is directed to methods and systems for optimizing UTOPIA CLAV polling arbitration. According to an aspect of the present invention, UTOPIA L2 CLAV status polling of each PHY address may be optimized by polling PHY addresses that have not yet indicated an active CLAV status or have just finished a cell transfer so that a CLAV response is required again. According to another aspect of the present invention, UTOPIA L2 CLAV status polling may be arbitrated so faster connection PHY addresses are polled proportionally more often than slower connection PHY addresses. According to yet another aspect of the present invention, if a connection speed no longer has any PHY addresses which require polling, the arbitration may be altered so only the connection speed with PHY addresses which require polling are actually polled. This ensures that the polling bandwidth is used as efficiently as possible.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="143.34mm" wi="154.86mm" file="US07298758-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="101.01mm" wi="168.32mm" file="US07298758-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="86.70mm" wi="166.20mm" file="US07298758-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="96.18mm" wi="159.43mm" file="US07298758-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="86.28mm" wi="153.16mm" file="US07298758-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="216.58mm" wi="77.81mm" file="US07298758-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="189.82mm" wi="107.95mm" file="US07298758-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="178.73mm" wi="169.16mm" file="US07298758-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="211.07mm" wi="83.40mm" file="US07298758-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="187.54mm" wi="155.36mm" file="US07298758-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="84.67mm" wi="168.91mm" file="US07298758-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="88.14mm" wi="157.82mm" file="US07298758-20071120-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="234.61mm" wi="72.73mm" file="US07298758-20071120-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="186.77mm" wi="109.05mm" file="US07298758-20071120-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="139.53mm" wi="149.10mm" file="US07298758-20071120-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="79.59mm" wi="97.20mm" file="US07298758-20071120-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="106.09mm" wi="151.72mm" file="US07298758-20071120-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="119.72mm" wi="83.90mm" file="US07298758-20071120-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="104.14mm" wi="142.58mm" file="US07298758-20071120-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="155.96mm" wi="117.43mm" file="US07298758-20071120-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This patent application claims priority to U.S. Provisional Patent Application No. 60/393,739 filed Jul. 8, 2002, which is hereby incorporated by reference herein in its entirety.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">The present invention relates generally to optimizing Universal Test and Operations Physical Interface for Asynchronous Transfer Mode (UTOPIA) Cell Available (CLAV) polling arbitration and, more particularly, to optimizing UTOPIA repeat CLAV polling; basing UTOPIA polling arbitration on Asynchronous Transfer Mode (ATM) connection speed; and combining UTOPIA CLAV optimization and polling arbitration for further enhancements in performance and efficiency.</p>
<heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0004" num="0003">The ATM Forum UTOPIA L2 Technical Specification af-phy-0039.000 states that a maximum of 26 Physical Interface (PHY) addresses can be polled within one cell transfer of 53 bytes. This is assuming that the PHY can give a CLAV response within 1 clock cycle. If additional clock cycles are required for the PHY to respond to a PHY address, then less than 26 PHY addresses can be polled within one cell transfer.</p>
<p id="p-0005" num="0004">The convention is to use single CLAV status polling to poll up to 31 PHY addresses, which is more than the maximum polling bandwidth of a single CLAV status signal. A common way of increasing the polling bandwidth is to add additional CLAV status signals to cover the number of PHY addresses being polled. However, this requires the PHY to support more than one CLAV signal. This is known as Multiple Status Polling (MSP). MSP does not address the issue that more PHY addresses may require polling than the maximum achievable polling bandwidth of one CLAV signal.</p>
<p id="p-0006" num="0005">A master device generally has the task of polling the PHY addresses. A PHY address may return an active CLAV status indicating that it is ready for another transfer, unless this PHY is physically removed from the system. The CLAV status response for that specific PHY address will not change for successive polls until a cell has been transferred on that PHY address.</p>
<p id="p-0007" num="0006">For each CLAV status signal, more PHY addresses may require polling than can be polled within one cell transfer period (e.g., 53 clock cycles). For example, a majority of PHY addresses may be deemed slow connection PHY addresses. Periodically, the latency of polling fast connection PHY addresses may exceed more than a cell period. For example, fast connection PHY addresses can indicate up to 100 CLAV statuses within a period of 2 successive slow connection CLAV statuses. By not checking the fast connection CLAV status often enough, the fast connection may become congested further back in a network. In addition, if all PHY addresses at one connection speed have indicated an active CLAV and have yet to be serviced, polling bandwidth will be wasted each time the connection speed, with no PHY addresses requiring polling, is selected by a polling arbiter.</p>
<p id="p-0008" num="0007">When using Multiple CLAV status polling (MSP), where up to four independent PHY CLAV responses are received for each PHY address, CLAV polling optimization can only occur once all CLAV status for that PHY address are flagging an active CLAV status. Once any one of those CLAV statuses for that PHY address has been serviced where the CLAV status for that PHY address is unknown, then all CLAV statuses for that PHY address must be checked again.</p>
<p id="p-0009" num="0008">MSP increases polling bandwidth by using more CLAV status signals. However, this requires the PHY to accept more than one CLAV status signal or multiple PHYs are required. If multiple CLAV status polling is performed, more than one PHY is polled per PHY address so each PHY address may have more than one CLAV status signal. When one PHY indicates an active CLAV status, the other PHYs using that PHY address may not yet have indicated an active CLAV status. This means the PHY addresses are polled again until all CLAV statuses for that PHY address indicate an active CLAV status and have yet to be serviced.</p>
<p id="p-0010" num="0009">The UTOPIA device within a Helium 210 Chip may poll 31 PHY address in a method specified by the ATM forum UTOPIA L2 specification af-phy-0039.000. Using a single CLAV status polling method, each PHY address is polled in turn, starting at address 0x00 through to address 0x1E. The Null PHY address 0x1F is polled between each polled PHY address to allow the PHY to respond. The means that only 26 PHY addresses can be polled for every cell transferred (53 UTOPIA interface clock cycles). This polling limitation generally is difficult to overcome but the efficiency of the polling can be improved to ensure that only PHY addresses, which require polling, are polled.</p>
<p id="p-0011" num="0010">Current technology implements three polling specs defined within the ATM forum UTOPIA L2 spec af-phy-0039.000. These polling specs are Single CLAV status polling; Multiplexed CLAV status polling (MSP) using 4 CLAV signals; and Direct CLAV status indication using four CLAV status signals.</p>
<p id="p-0012" num="0011">Therefore, there is a need for a more efficient method and system for optimizing UTOPIA CLAV polling arbitration.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0013" num="0012">Aspects of the present invention overcome the problems noted above, and realize additional advantages. In one exemplary embodiment, UTOPIA L2 CLAV status polling of each PHY address may be optimized by polling PHY addresses that have not yet indicated an active CLAV status or have just finished a cell transfer so that a CLAV response is required again. According to another exemplary embodiment of the present invention, UTOPIA L2 CLAV status polling may be arbitrated so faster connection PHY addresses are polled proportionally more often than slower connection PHY addresses. According to yet another exemplary embodiment of the present invention, if a connection speed no longer has any PHY addresses which require polling, the arbitration may be altered so only the connection speed with PHY addresses which require polling are actually polled. This ensures that the polling bandwidth is used efficiently.</p>
<p id="p-0014" num="0013">According to one particular exemplary embodiment, a method for optimizing cell available (CLAV) status polling comprises the steps of determining a first connection speed having a first associated set of PHY addresses and a second connection speed having a second associated set of PHY addresses; arbitrating status polling based at least in part on a polling ratio involving the first connection speed and the second connection speed; polling the first and second associated set of PHY addresses to determine a CLAV status for each PHY address, according to the polling ratio; determining whether each PHY address of the first and second connection speed requires polling; and re-polling at a connection speed wherein at least one PHY address of the connection speed requires polling.</p>
<p id="p-0015" num="0014">In accordance with other aspects of this particular exemplary embodiment of the present invention, the polling ratio is based on a number of PHY addresses of the first connection speed and a number of PHY addresses of the second connection speed; the method further comprises the step of updating the polling ratio based on a number of PHY addresses of the first connection speed that require polling and a number of PHY addresses of the second connection speed that require polling; the step of determining whether each PHY address requires polling further comprises the step of determining whether the CLAV status is an active CLAV status; the method further comprises the step of determining whether the PHY address with an active CLAV status has been serviced; PHY addresses with an active CLAV status that have not been serviced are not re-polled wherein bandwidth is conserved; the polling ratio comprises a plurality of polling ratios; the poll ratios include 0/100, 25/75, 50/50, 75/25, 100/0 wherein each poll ratio represents the first connection speed to the second connection speed; one or both of the first connection speed and the second connection speed are software configurable; and the first connection speed is a fast connection speed and the second connection speed is a slow connection speed.</p>
<p id="p-0016" num="0015">According to another particular exemplary embodiment, a system for optimizing cell available (CLAV) status polling comprises a determining connection speed module for determining a first connection speed having a first associated set of PHY addresses and a second connection speed having a second associated set of PHY addresses; an arbitrating status polling module for arbitrating status polling based at least in part on a polling ratio involving the first connection speed and the second connection speed; a polling module for polling the first and second associated set of PHY addresses to determine a CLAV status for each PHY address, according to the polling ratio; a determining PHY address status module for determining whether each PHY address of the first and second connection speed requires polling; and a re-polling module for re-polling at a connection speed wherein at least one PHY address of the connection speed requires polling.</p>
<p id="p-0017" num="0016">The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate various embodiments of the invention and, together with the description, serve to explain the principles of the invention.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0018" num="0017">The present invention can be understood more completely by reading the following Detailed Description of the Invention, in conjunction with the accompanying drawings, in which:</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an example of CLAV polling in accordance with an embodiment of the present invention.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an example of CLAV polling in accordance with an embodiment of the present invention.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an example of CLAV polling where Receive (Rx) PHY addresses are polled in accordance with an embodiment of the present invention.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an example of CLAV polling where Transmit (Tx) PHY addresses are polled in accordance with an embodiment of the present invention.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 5</figref> is an exemplary flowchart illustrating a method for optimizing CLAV status polling, in accordance with an embodiment of the present invention.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 6</figref> is an exemplary diagram illustrating a system for optimizing CLAV status polling, in accordance with an embodiment of the present invention.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 7</figref> is a diagram illustrating fast connection PHY address generation and slow connection PHY address generation in accordance with an embodiment of the present invention.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 8</figref> is an exemplary flowchart illustrating a method for prioritizing status polling, in accordance with an embodiment of the present invention.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 9</figref> is an exemplary diagram illustrating a system for prioritizing status polling, in accordance with an embodiment of the present invention.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 10</figref> illustrates a basic polling arbitration (50/50 ratio) in accordance with an embodiment of the present invention.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 11</figref> illustrates an enhanced polling arbitration (50/50 ratio) in accordance with an embodiment of the present invention.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 12</figref> is an exemplary flowchart illustrating a method for optimizing CLAV status polling, in accordance with an embodiment of the present invention.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 13</figref> is an exemplary diagram illustrating a system for optimizing CLAV status polling, in accordance with an embodiment of the present invention.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 14</figref> is a schematic diagram of a hardware architecture in which the inventive aspects of the present invention may be incorporated.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 15</figref> is a schematic diagram of a hardware architecture in which the inventive aspects of the present invention may be incorporated.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 16</figref> is a schematic diagram of a hardware architecture in which the inventive aspects of the present invention may be incorporated.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 17</figref> is a schematic diagram of a hardware architecture in which the inventive aspects of the present invention may be incorporated.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 18</figref> is a schematic diagram of a hardware architecture in which the inventive aspects of the present invention may be incorporated.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 19</figref> is a schematic diagram of a hardware architecture in which the inventive aspects of the present invention may be incorporated.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0038" num="0037">The following description is intended to convey a thorough understanding of the invention by providing a number of specific embodiments and details related to optimizing UTOPIA CLAV polling arbitration. It is understood, however, that the invention is not limited to these specific embodiments and details, which are exemplary only. It is further understood that one possessing ordinary skill in the art, in light of known systems and methods, would appreciate the use of the invention for its intended purposes and benefits in any number of alternative embodiments, depending upon specific design and other needs.</p>
<p id="p-0039" num="0038">Polling may involve a master device (e.g., a level 2 master device, etc.) that constantly polls a bus to determine the status of a plurality of slave devices. In particular, a transmit master device may poll the bus to determine which slave devices are able to receive a cell. Further, a receive master may poll the bus to determine which slave devices are ready to transmit a cell. Ports that are enabled will be polled where ports are enabled by setting bits in the TX_and RX_POLL_ENABLE registers.</p>
<p id="p-0040" num="0039">Status polling may be performed by using a simple two-clock sequence that uses one clock status and one clock select to collect the information. This process may continue even while data transmission/reception is taking place. For UTOPIA Level 2 Master (L2M) polling by a Transmit (Tx) master, the master may poll the UTOPIA bus by driving the Tx address lines and may continue even while it is transmitting a cell. Slave receivers may respond by asserting the TX_CLAV line if the receivers are able to receive a cell. Once the master has determined that a slave receive is able to receive a cell, the master no longer polls that device. For L2M polling by a Receive (Rx) master, the master may poll the UTOPIA bus by driving the Rx address lines. The master may continue polling even while it is receiving a cell. Slave receivers may respond by asserting the TX_CLAV line if the receivers have a cell available for transmission. Once the master has determined that a slave transmitter has a cell ready for transmission, the master no longer polls that device.</p>
<p id="p-0041" num="0040">According to an embodiment of the present invention, UTOPIA L2 CLAV status polling of each PHY address may be optimized by polling PHY addresses that have not yet indicated an active CLAV status or have just finished a cell transfer so that a CLAV response is required again. The PHY CLAV polling bandwidth may be utilized more efficiently to work around the limitations of a maximum of 26 PHY addresses that can be polled in one cell period (e.g., one ATM cell period).</p>
<p id="p-0042" num="0041">The repeated CLAV status polling of a PHY address with an active CLAV status may be considered as wasted polling bandwidth. According to an embodiment of the present invention, a basic polling method may be enhanced, in one respect, where PHY addresses, which have not indicated an active CLAV status or have just finished a cell transfer, are polled. As a result, the CLAV status polling bandwidth is ensured to limit polling to PHY addresses where the CLAV status could change.</p>
<p id="p-0043" num="0042">Two examples of the enhanced CLAV polling are illustrated in <figref idref="DRAWINGS">FIG. 1</figref> and <figref idref="DRAWINGS">FIG. 2</figref>. <figref idref="DRAWINGS">FIG. 1</figref> illustrates an enhanced CLAV polling in accordance with an embodiment of the present invention. Utxclk/Urxclk <b>102</b> represents UTOPIA transmitter clock/UTOPIA receiver clock. UtxAddr/UrxAddr <b>104</b> represents UTOPIA transmitter address/UTOPIA receiver address. UrxClav/UtxClav <b>106</b> represents UTOPIA receive cell available/UTOPIA transmitter cell available. Urtxen/Unrxen <b>108</b> represents UTOPIA transmitter enable/UTOPIA receiver enable. As illustrated in <figref idref="DRAWINGS">FIG. 1</figref>, some addresses show an active CLAV status <b>110</b>, as shown by UrxClav/UtxClav <b>106</b>. For example, address 00, 01, 02 and 04 have responded with an active CLAV status. Thus, these addresses do not need to be polled again until the address is serviced. Addresses 03, 05 and 06 indicate an inactive CLAV status <b>120</b>. Therefore, the inactive addresses are polled again as shown by <b>130</b> until these addresses show an active CLAV status, in accordance with an embodiment of the present invention. After all enabled addresses have been polled, the addresses with inactive CLAV status are polled again, namely addresses 03, 05 and 06.</p>
<p id="p-0044" num="0043">For example, more than 26 PHY addresses may be enabled for polling where none have asserted an active CLAV response. In the example of <figref idref="DRAWINGS">FIG. 1</figref>, a worst case polling loop, where none of the 31 PHY addresses show an active CLAV response, will exceed the polling bandwidth of 26 PHY address in one service cycle. But, on average, polling loops will be within the maximum bandwidth of 26 PHY addresses per service cycle due to the time it takes to service existing active CLAV requests.</p>
<p id="p-0045" num="0044">Enabled PHY addresses may flag an active CLAV where a cell transfer has not taken place or finished. When there are no PHY addresses requiring polling, the NULL PHY address will be polled until a PHY address requires polling. <figref idref="DRAWINGS">FIG. 2</figref> illustrates a situation when no PHY address requires polling. In this situation, a null PHY address may be polled (e.g., do nothing). In this example, two addresses remain to be polled as shown by <b>210</b>, namely addresses 03 and 06. After address 06 indicates an active CLAV status, only one address 03 remains to be polled. The remaining address 03 is polled until an active CLAV status is received, as shown by <b>220</b>. When no addresses remain to be polled, there is no need to do anything, as shown by a series of IF addresses <b>230</b>.</p>
<p id="p-0046" num="0045">For a receive, the CLAV status for a specific PHY address may be polled again within the last 4 bytes of a previous transfer. This gives an interface the opportunity of performing back to back cell transfers on the same PHY address with a minimal setup delay between transfers. For a transmit, the CLAV status for a specific PHY address may be polled immediately after the previous transfer finishes.</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an example of CLAV polling where Receive (Rx) PHY addresses are polled in accordance with an embodiment of the present invention. In particular, <figref idref="DRAWINGS">FIG. 3</figref> illustrates a situation where a Rx PHY address is polled again once a previous Rx PHY address has been serviced (e.g., within 4 bytes of end of transfer) in accordance with an embodiment of the present invention. For example, when an address is serviced, the CLAV status of the address may be checked within the last word of transfer (e.g., 4 bytes) on the receive side, as shown by <b>310</b>. Addresses just serviced may be polled again to obtain a CLAV status, as shown by <b>320</b>. When the address is serviced, the CLAV status of the address may be checked within the last word of transfer, as shown by <b>330</b>.</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 4</figref> illustrates an example of CLAV polling where Transmit (Tx) PHY addresses are polled in accordance with an embodiment of the present invention. In particular, <figref idref="DRAWINGS">FIG. 4</figref> illustrates a situation where a Tx PHY address is polled again once a previous Tx PHY address has been serviced in accordance with an embodiment of the present invention. In this example, when an address is serviced, CLAV status cannot be checked until the end of a transfer, as shown by <b>410</b>. As shown in <figref idref="DRAWINGS">FIG. 4</figref>, the address just serviced may be polled again to obtain CLAV status, as shown by <b>420</b>. When the address is serviced, CLAV status of the address may be checked within the last word of transfer, as shown by <b>430</b>.</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 5</figref> is an exemplary flowchart illustrating a method for optimizing CLAV status polling, in accordance with an embodiment of the present invention. At step <b>510</b>, a plurality of PHY addresses may be polled to determine CLAV status. At step <b>512</b>, the CLAV status for each one of the plurality of PHY addresses may be received. At step <b>514</b>, whether the CLAV status could change for each PHY address may be determined. At step <b>516</b>, each PHY address with a CLAV status that could change may be re-polled. For example, the CLAV status that could change may include an inactive CLAV status and a completed cell transfer. Thus, the step of re-polling may further include the step of re-polling addresses with an inactive CLAV status and/or the step of re-polling addresses having completed a cell transfer. Further, re-polling of PHY addresses having an active CLAV status may be avoided thereby conserving resources.</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. 6</figref> is an exemplary diagram illustrating a system for optimizing CLAV status polling, in accordance with an embodiment of the present invention. System <b>600</b> may include a Polling Arbiter <b>610</b> for optimizing cell available (CLAV) status polling of a plurality of physical interface addresses. Polling Arbiter <b>610</b> may include a Polling Module <b>612</b>, a CLAV Status Module <b>614</b>, a Determining Module <b>616</b>, a Re-Polling Module <b>618</b> and Other Module <b>620</b>. Polling Module <b>612</b> may poll a plurality of PHY addresses to determine CLAV status. CLAV Status Module <b>614</b> may receive the CLAV status for each one of the plurality of PHY addresses. Determining Module <b>616</b> may determine whether the CLAV status could change for each PHY address. Re-Polling Module <b>618</b> may re-polling each PHY address with a CLAV status that could change. As discussed above, the CLAV status that could change may include an inactive CLAV status and a completed cell transfer. Thus, the Re-Polling Module <b>618</b> may further include re-polling addresses with an inactive CLAV status and/or re-polling addresses having completed a cell transfer. Further, re-polling of PHY addresses having an active CLAV status may be avoided thereby conserving resources. Other Module <b>620</b> may provide other functionality associated with optimizing CLAV status polling.</p>
<p id="p-0051" num="0050">In practice, different ports may be running different speed links. For this reason, a mechanism for allowing priority to be given to higher-speed ports is provided in accordance with an embodiment of the present invention. For simplicity, the above descriptions of polling have not taken any account of this option, which is available to both transmit and receive masters. There are at least two stages to the prioritization process, according to an exemplary embodiment. First, any port may be designated as a high-speed port. This may be done by setting the appropriate “per-port” bit in a TX_PORT_SPEED register or a RX_PORT_SPEED register. Second, a poll ratio between the high and low speed ports may be determined. This may be set by a POLLRATIO field in a TX_CONTROL register and a RX_CONTROL register. Generally, there are more low-speed ports than high speed ports. A poll ratio of an embodiment of the present invention may provide prioritization for optimal performance and efficiency. For example, in an exemplary conventional system where there are four low-speed ports and one high-speed port, the high-speed port may be polled four times before all of the low speed ports have been polled.</p>
<p id="p-0052" num="0051">According to another embodiment of the present invention, UTOPIA L2 CLAV status polling may be arbitrated so faster connection PHY addresses are polled proportionally more often than slower connection PHY addresses, according to one example. The speed of slave devices may be different, as communication speeds often differ. The CLAV status indication to service latency of fast PHY connections may be reduced and/or avoided, due to the CLAV status for faster connection PHY addresses being known before the last PHY address service, whether fast or slow, has finished being serviced.</p>
<p id="p-0053" num="0052">As a result, less slow connection PHY addresses may be polled per cell period without increasing the polling to service latency of the slow connection PHY address. At one extreme example, the differences in connection speeds may mean a faster connection speed PHY address running at 155 MB/s which may indicate a CLAV status up to 100 times more often than a single slow connection PHY address.</p>
<p id="p-0054" num="0053">Faster connection PHY addresses may be polled proportionally more often to ensure that a fast connection PHY address status may be available within one cell period. The differentiation between what is regarded as a fast connection PHY address and what is a slow connection PHY address is software configurable. According to one example, an assumption is that a 155 Mb/S link is a fast connection compared to a T1/E1 1 Mb/s −2.5 Mb/s link, which is a slow connection PHY address. Other determinations of slow and fast connections may be applied in accordance with the present invention.</p>
<p id="p-0055" num="0054">The 155 Mb/s link may indicate an active CLAV status up to 100 times within the period of successive T1/E1 CLAV status. With this assumption, a UTOPIA PHY address connected to a T1/E1 link which is flagging CLAV may be left for a reasonable amount of time before congestion further back in the network will occur due to the PHYs running out of buffer space.</p>
<p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. 7</figref> is a diagram illustrating fast connection PHY address generation and slow connection PHY address generation in accordance with an embodiment of an embodiment of the present invention. An output from a PHY address poll enabler register <b>710</b> and an output from a PHY address speed register <b>712</b> may be received and combined with an output from a CLAV status register <b>714</b>. PHY address poll enable register <b>710</b> and PHY address speed register <b>712</b> may mask the CLAV status register(s) <b>714</b> to ensure that polling is restricted to PHY addresses which are connected thereby ensuring efficient round robin checking. The combined output may be received at a port polling address round robin logic <b>716</b> for fast connections as well as a port polling address round robin logic <b>718</b> for slow connections. As shown, <b>702</b> is directed to fast connection PHY address generation and <b>704</b> is directed to slow connection PHY address generation. A polling address arbiter <b>720</b> may receive a request poll for fast connections and slow connections and respond with poll granted signals to each respective port polling address round robin logics <b>716</b>, <b>718</b>. A next poll address may be generated by the polling address arbiter <b>520</b>, which may then be combined with a next service address for generating a UTOPIA PHY address.</p>
<p id="p-0057" num="0056">A polling address arbiter of an embodiment of the present invention provides a priority polling which is dependant on a plurality of ratios, as detailed below. For example, for every four polling periods (or other predetermined number of polling periods), the ratio may arbitrate which priority input will receive a majority of the polling. The ratios may be determined by how many connections, type of connections, how the bandwidth is to be distributed and/or other additional factors and considerations. The number of ratios to be implemented as well as the value of the ratios themselves may vary in accordance with an embodiment of the present invention. The ratios described below are exemplary only.</p>
<p id="p-0058" num="0057">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="21pt" align="center"/>
<colspec colname="2" colwidth="42pt" align="left"/>
<colspec colname="3" colwidth="154pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry>Arbitration</entry>
<entry/>
</row>
<row>
<entry/>
<entry>% Ratio</entry>
<entry/>
</row>
<row>
<entry/>
<entry>(Fast/</entry>
<entry/>
</row>
<row>
<entry>Value</entry>
<entry>Slow)</entry>
<entry>RATIO</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>0</entry>
<entry> 0/100</entry>
<entry>Only slow connection PHY addresses accepted</entry>
</row>
<row>
<entry>1</entry>
<entry> 25/75</entry>
<entry>1 fast connection PHY addresses serviced to every 3</entry>
</row>
<row>
<entry/>
<entry/>
<entry>slow PHY addresses</entry>
</row>
<row>
<entry>2</entry>
<entry> 50/50</entry>
<entry>2 fast connection PHY addresses serviced to every 2</entry>
</row>
<row>
<entry/>
<entry/>
<entry>slow PHY addresses</entry>
</row>
<row>
<entry>3</entry>
<entry> 75/25</entry>
<entry>3 fast connection PHY addresses serviced to every 1</entry>
</row>
<row>
<entry/>
<entry/>
<entry>slow PHY addresses</entry>
</row>
<row>
<entry>4</entry>
<entry>100/0</entry>
<entry>Only fast connection PHY addresses accepted</entry>
</row>
<row>
<entry>5</entry>
<entry>Reserved</entry>
<entry>Reserved</entry>
</row>
<row>
<entry>6</entry>
<entry>Reserved</entry>
<entry>Reserved</entry>
</row>
<row>
<entry>7</entry>
<entry>Reserved</entry>
<entry>Reserved</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry namest="1" nameend="3" align="left" id="FOO-00001">Polling arbiter priority ratios.</entry>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0059" num="0058">The ratio of polling generally has a dramatic effect on the system performance. A critical time may include the number of PHY addresses that may be polled in the time it takes to transfer a cell; in particular, how many times a fast connection PHY address is polled.</p>
<p id="p-0060" num="0059">For each cell transferred, the following arbiter results may be achieved for a 2 cycle polling.</p>
<p id="p-0061" num="0060">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="77pt" align="center"/>
<colspec colname="3" colwidth="77pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
<row>
<entry>Arbitration Ratio</entry>
<entry>Fast Connection PHY</entry>
<entry>Slow Connection PHY</entry>
</row>
<row>
<entry>(fast/slow)</entry>
<entry>addresses polled</entry>
<entry>addresses polled</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry> 0/100</entry>
<entry> 0</entry>
<entry>26</entry>
</row>
<row>
<entry> 25/75</entry>
<entry>6-7</entry>
<entry>19-20</entry>
</row>
<row>
<entry> 50/50</entry>
<entry>13</entry>
<entry>13</entry>
</row>
<row>
<entry> 75/25</entry>
<entry>19-20</entry>
<entry>6-7</entry>
</row>
<row>
<entry>100/0</entry>
<entry>26</entry>
<entry> 0</entry>
</row>
<row>
<entry namest="1" nameend="3" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0062" num="0061">In the following exemplary scenarios, the following polling results may be achieved for each cell period of 53 clock cycles.</p>
<p id="p-0063" num="0062">In this exemplary scenario detailed below, all 31 PHY addresses are connected and enabled with 2 clock cycle polling where the PHY address connections include 2 fast connection PHY addresses and 29 slow connection PHY addresses.</p>
<p id="p-0064" num="0063">
<tables id="TABLE-US-00003" num="00003">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="56pt" align="left"/>
<colspec colname="2" colwidth="203pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry>Arbitration</entry>
<entry/>
</row>
<row>
<entry>Ratio (fast/slow)</entry>
<entry>Result</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry> 0/100</entry>
<entry>26 slow connection PHY addresses serviced ONCE</entry>
</row>
<row>
<entry> 25/75</entry>
<entry>2 fast connection PHY addresses serviced AT LEAST 3 times, 19-20</entry>
</row>
<row>
<entry/>
<entry>slow connection PHY addresses serviced ONCE</entry>
</row>
<row>
<entry> 50/50</entry>
<entry>2 fast connection PHY addresses serviced AT LEAST 6 times, 12</entry>
</row>
<row>
<entry/>
<entry>slow connection PHY addresses serviced ONCE</entry>
</row>
<row>
<entry> 75/25</entry>
<entry>2 fast connection PHY addresses serviced AT LEAST 9 times, 7</entry>
</row>
<row>
<entry/>
<entry>slow connection PHY addresses serviced ONCE</entry>
</row>
<row>
<entry>100/0</entry>
<entry>2 fast connection PHY addresses serviced 13 times</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0065" num="0064">In another exemplary scenario detailed below, 14 PHY addresses are enabled and connected, with 2 clock cycle polling where the PHY address connections include 2 fast connection PHY addresses and 12 slow connection PHY addresses.</p>
<p id="p-0066" num="0065">
<tables id="TABLE-US-00004" num="00004">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="196pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry>Arbitration</entry>
<entry/>
</row>
<row>
<entry>Ratio (fast/slow)</entry>
<entry>Result</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry> 0/100</entry>
<entry>12 slow connection PHY addresses serviced AT LEAST TWICE</entry>
</row>
<row>
<entry> 25/75</entry>
<entry>2 fast connection PHY addresses serviced AT LEAST 3 times, 12</entry>
</row>
<row>
<entry/>
<entry>slow connection PHY addresses serviced AT LEAST ONCE</entry>
</row>
<row>
<entry> 50/50</entry>
<entry>2 fast connection PHY addresses serviced AT LEAST 6 times, 12</entry>
</row>
<row>
<entry/>
<entry>slow connection PHY addresses serviced AT LEAST ONCE</entry>
</row>
<row>
<entry> 75/25</entry>
<entry>2 fast connection PHY addresses serviced AT LEAST 9 times, 6-7</entry>
</row>
<row>
<entry/>
<entry>slow connection PHY addresses serviced ONCE</entry>
</row>
<row>
<entry>100/0</entry>
<entry>2 fast connection PHY addresses serviced 13 times</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0067" num="0066">In yet another exemplary scenario detailed below, 8 PHY addresses are enabled and connected, with 2 clock cycle polling where the PHY address connections include 8 fast connection PHY addresses and no slow connection PHY addresses.</p>
<p id="p-0068" num="0067">
<tables id="TABLE-US-00005" num="00005">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="63pt" align="left"/>
<colspec colname="2" colwidth="196pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry>Arbitration</entry>
<entry/>
</row>
<row>
<entry>Ratio (high/low)</entry>
<entry>Result</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry> 0/100</entry>
<entry>NO PHY ADDRESSES POLLED as no PHY addresses present</entry>
</row>
<row>
<entry> 25/75</entry>
<entry>6-7 fast connection PHY addresses serviced ONCE, NO slow</entry>
</row>
<row>
<entry/>
<entry>connection PHY addresses serviced ONCE</entry>
</row>
<row>
<entry> 50/50</entry>
<entry>8 fast connection PHY addresses serviced AT LEAST ONCE, NO</entry>
</row>
<row>
<entry/>
<entry>slow connection PHY addresses serviced ONCE</entry>
</row>
<row>
<entry> 75/25</entry>
<entry>8 fast connection PHY addresses serviced AT LEAST TWICE, NO</entry>
</row>
<row>
<entry/>
<entry>slow connection PHY addresses serviced ONCE</entry>
</row>
<row>
<entry>100/0</entry>
<entry>8 fast connection PHY addresses serviced AT LEAST 3 times</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. 8</figref> is an exemplary flowchart illustrating a method for prioritizing status polling, in accordance with an embodiment of the present invention. At step <b>810</b>, a number of fast connection PHY addresses may be determined. At step <b>812</b>, a number of slow connection PHY addresses may be determined. At step <b>814</b>, a poll ratio based on the number of fast connection PHY addresses and the number of slow connection PHY addresses may be calculated. At step <b>816</b>, status polling may be arbitrated based at least in part on the poll ratio for at least one polling period. The fast connection PHY addresses and/or the slow connection PHY addresses may be software configurable. The poll ration may include a plurality of poll ratios. Further, status polling may be arbitrated at a different poll ratio for each polling period. Exemplary poll ratios may include 0/100, 25/75, 50/50, 75/25, 100/0 where each poll ratio represents fast connections to slow connections.</p>
<p id="p-0070" num="0069"><figref idref="DRAWINGS">FIG. 9</figref> is an exemplary diagram illustrating a system for prioritizing status polling, in accordance with an embodiment of the present invention. A system <b>900</b> for prioritizing status polling based on connection speed may include a Polling Address Arbiter <b>910</b>. Polling Address Arbiter <b>910</b> may include a Receive Request Module <b>912</b>, a Poll Ratio Module <b>914</b>, an Arbitrate Status Polling Module <b>916</b>, a Grant Module <b>918</b>, and Other Module <b>920</b>. Receive Request Module <b>912</b> may receive one or more request poll signals. Poll Ratio Module <b>914</b> may calculate a poll ratio based on the number of fast connection PHY addresses and the number of slow connection PHY addresses. Arbitrate Status Polling Module <b>916</b> may arbitrate status polling based at least in part on the poll ratio for at least one polling period. Grant Module <b>918</b> may generate one or more poll grant signals. Further, a next poll address may be forwarded. Other Module <b>929</b> may provide other functionality associated with prioritizing status polling.</p>
<p id="p-0071" num="0070">When combining the inventive concepts discussed above, the CLAV polling bandwidth may be optimised further. In particular, if a connection speed no longer has any PHY addresses which require polling, the arbitration may be altered so only the connection speed with PHY addresses which require polling are actually polled. This ensures that the polling bandwidth is used as efficiently as possible. In addition, for multiple CLAV status polling, polling a PHY address may be stopped or avoided if all CLAV statuses for that PHY address have indicated an active CLAV status and have yet to be serviced. Further, the polling bandwidth may be maximized when used along with polling arbitration.</p>
<p id="p-0072" num="0071">The UTOPIA device within the GlobespanVirata® Corporation's Helium™ 500 chip, as described in detail below, may poll 31 PHY addresses using a method specified by the ATM forum UTOPIA L2 specification af-phy-0039.000 with the enhancements of various embodiments of the present invention. According to an embodiment of the present invention, a single CLAV status polling method may consider connection speed, whether an active CLAV status has been indicated, and whether a PHY address has or has not been serviced. For each connection speed, each PHY address which has not indicated an active CLAV status may be polled in turn, starting at address 0x00 through to address 0x1E, for example. A Null PHY address 0x1F may be polled between each polled PHY address to allow the PHY to respond. A polling arbiter may then decide which connection speed the PHY address is to be polled next.</p>
<p id="p-0073" num="0072">If fast and slow speed connections are being used, the polling arbiter may be set at a polling ratio of 25/75, 50/50 or 75/25, for example. Other ratios may be implemented in accordance with embodiments of the present invention. The number of poll ratios may vary as well. According to an embodiment of the present invention, PHY addresses are not polled again once a PHY address has indicated an active CLAV status until the PHY address has been serviced. If all PHY addresses on one connection speed have indicated an active CLAV status and have not been serviced yet, then the polling cycles for that connection speed are wasted, as illustrated in <figref idref="DRAWINGS">FIG. 10</figref>. <figref idref="DRAWINGS">FIG. 10</figref> illustrates a basic polling arbitration (50/50 ratio). As shown, a first set of high speed ports <b>1010</b> are polled, then a first set of low speed ports <b>1012</b>. At the second set of high speed ports <b>1014</b>, only null ports (e.g., 1F) are being polled since there are no high speed ports requiring polling. A second set of low speed ports <b>1016</b> are polled, in accordance with the polling ratio.</p>
<p id="p-0074" num="0073">Polling bandwidth may be used more efficiently by switching the arbitration to one connection speed until the other connection speed indicates PHY addresses have been serviced (e.g., a PHY address requires polled again), as illustrated in <figref idref="DRAWINGS">FIG. 11</figref>. <figref idref="DRAWINGS">FIG. 11</figref> illustrates an enhanced polling arbitration (50/50 ratio) in accordance with an embodiment of the present invention. As shown, a first set of high speed ports <b>1110</b> are polled, then a first set of low speed ports <b>1112</b> are polled. Since there are no high speed connection ports that require polling, a second set of low speed ports <b>1114</b> may be polled. Further, additional low speed ports <b>1116</b> may be continued to be polled. Thus, ports (e.g., low speed ports) that have not yet given a CLAV status are polled.</p>
<p id="p-0075" num="0074">If all PHY addresses on both connection speeds have indicated a CLAV status and no PHY address has yet been serviced, then the polling may revert to polling the default PHY address of 0×1F (or other default address).</p>
<p id="p-0076" num="0075">According to an embodiment of the present invention, multiple CLAV status polling may check multiple PHY's CLAV statuses for each of the 31 PHY addresses. A PHY address may be skipped from the polling procedure if all of its CLAV statuses are flagging an active CLAV. Once one of those CLAV statuses for that PHY address is serviced then all the CLAV statuses for that PHY address may be polled again since at least one status is unknown.</p>
<p id="p-0077" num="0076"><figref idref="DRAWINGS">FIG. 12</figref> is an exemplary flowchart illustrating a method for optimizing CLAV status polling, in accordance with an embodiment of the present invention. At step <b>1210</b>, a first connection speed having a first associated set of PHY addresses may be determined. At step <b>1212</b>, a second connection speed having a second associated set of PHY addresses may be determined. At step <b>1214</b>, status polling may be arbitrated based at least in part on a polling ratio involving the first connection speed and the second connection speed. At step <b>1216</b>, the first and second associated set of PHY addresses may be polled to determine a CLAV status for each PHY address, according to the polling ratio. At step <b>1218</b>, whether each PHY address of the first and second connection speed requires polling may be determined. Step <b>1220</b> may involve re-polling at a connection speed wherein at least one PHY address of the connection speed requires polling. The polling ratio may be based on a number of PHY addresses of the first connection speed and a number of PHY addresses of the second connection speed. Further, the polling ratio may be updated based on a number of PHY addresses requiring polling.</p>
<p id="p-0078" num="0077"><figref idref="DRAWINGS">FIG. 13</figref> is an exemplary diagram illustrating a system for optimizing CLAV status polling, in accordance with an embodiment of the present invention. A system <b>1300</b> may include a polling arbiter <b>1310</b> for optimizing cell available (CLAV) status polling. The Polling arbiter <b>1310</b> may include a Determine Connection Speed Module <b>1312</b>, a Poll Ratio Module <b>1314</b>, an Arbitrate Status Polling Module <b>1316</b>, a Polling Module <b>1318</b>, a Determine PHY Address Status Module <b>1320</b>, a Re-Polling Module <b>1322</b>, and Other Module <b>1324</b>. Determine Connection Speed Module <b>1312</b> may determine a first connection speed having a first associated set of PHY addresses and a second connection speed having a second associated set of PHY addresses. Poll Ratio Module <b>1314</b> may calculate a poll ratio involving the first connection speed and the second connection speed. Arbitrate Status Polling Module <b>1316</b> may arbitrate status polling based at least in part on a polling ratio. Polling Module <b>1318</b> may poll the first and second associated set of PHY addresses to determine a CLAV status for each PHY address, according to the polling ratio. Determine PHY Address Status Module <b>1320</b> may determine whether each PHY address of the first and second connection speed requires polling. Re-Polling Module <b>1322</b> may re-poll at a connection speed wherein at least one PHY address of the connection speed requires polling. Other Module <b>1324</b> may provide other functionality associated with optimizing CLAV status polling.</p>
<p id="p-0079" num="0078">GlobespanVirata® Corporation's Helium™ 500 communications processor (Helium 500 CP) is a high performance ATM and Internet Protocol (IP) processor. Helium 500 CP offers an extended range of I/O options and features, providing great flexibility as well as an extended choice of operating systems for an application developer. Helium 500 CP uses a dual processor architecture to provide an efficient and flexible solution for a range of applications. The main CPU, the Protocol Processor (PP), runs the operating system and application software. Time critical tasks, such as servicing of I/O ports, ATM switching and ATM traffic shaping are handled by a second processor, the Network Processor (NP). This dual processor design frees the main CPU from constant interrupts, enabling very efficient use of the processor and memory bandwidth for application processing tasks. The Network Processor itself is made more efficient by the inclusion of independent Direct Memory Access (DMA) controller blocks in each of the high-performance VO blocks. Use of these reduces the NP processing to the start and end of a packet only.</p>
<p id="p-0080" num="0079"><figref idref="DRAWINGS">FIG. 14</figref> is a schematic diagram of a hardware architecture in which the inventive aspects of the present invention may be incorporated. In particular, <figref idref="DRAWINGS">FIG. 14</figref> illustrates a block diagram of Helium 500 CP incorporating the inventive aspects discussed above, in accordance with the present invention. The Helium 500 CP has at least three functional subsystems, which include a Processor subsystem, a Network subsystem and a Peripherals and Services subsystem. The Processor subsystem comprises a dual Advanced Reduced Instruction Set Computing (RISC) Machine (ARM®) processor, shared memory and a common Static Random Access Memory (SRAM) interface block. The Network subsystem provides high performance I/O connections and associated services. The Peripherals and Services subsystem provides a programmable General Purpose I/O (GPIO) connection, management and debug connections and additional services for the processors, including hardware encryption/decryption block for optimal network performance. This block also includes the system clocks and timers. These functional sub-systems are linked by high-performance buses, all of which operate at the same clock speed as the processors.</p>
<p id="p-0081" num="0080">For its main CPU, the Helium 500 CP uses the powerful ARM920T® processor running at 166 or 133 MHz, depending on product variant. Large data and instruction caches and a highly efficient Synchronous Dynamic Random Access Memory (SDRAM) controller further enhance performance. In addition, the inclusion of a memory management unit (MMU) allows the use of a wider choice of operating systems for application development. Applications for the Helium 500 CP can be developed using any of the ATMOS™ operating system, from GlobespanVirata® Corporation; VxWorks™, from Wind River™, Linux™ and others. For its second processor, the Helium 500 CP uses the high-performance ARM966E-S® processor, also running at 166 or 133 MHz, depending on product variant. For maximum data transfer efficiency, the NP shares SRAM and the SDRAM controller with the PP.</p>
<p id="p-0082" num="0081">The Helium 500 CP incorporates a wide range of I/O blocks, making it an ideal platform for applications requiring cell, frame and Time Division Multiplexing (TDM) connectivity. In addition to its on-board I/O capabilities, the Helium 500 CP provides expansion ports dedicated to state-of-the-art peripheral devices. Its External Peripheral Bus (EPB) supports Motorola™ or Intel™-type peripheral devices, as well as Personal Computer Memory Card International Association (PCMCIA) peripheral devices. For very high performance peripherals, the Helium 500 CP includes a Peripheral Component Interconnect (PCI) expansion bus and system controller. The PCI bus has a direct path to system memory, allowing peripherals to DMA data directly.</p>
<p id="p-0083" num="0082">Each of the Network I/O blocks, except for the TDM block, includes a dedicated DMA engine. These share a dedicated DMA bus, through which they connect directly to the SDRAM controller. The DMA system allows data transfers between the I/O blocks and external SDRAM to be performed with minimal intervention from the processors.</p>
<p id="p-0084" num="0083">The Helium 500 communications processor has the following key features: choice of operating system support from ATMOS® from GlobespanVirata® Corporation, VxWorkS™ from Wind River™; and Linux™; Protocol Processor (PP) as the main CPU: High-performance ARM® 9 with MMU, 16 KB data cache, 16 KB instruction cache; separate ARM® 9 Network Processor (NP) off-loads time-critical tasks from PP, 32 KB private “tightly coupled” SRAM onchip: 16 KB data, 16 KB instruction space; product variants with 166 MHz and 133 MHz processor speeds, memory systems designed to optimize throughput of data: additional 32 KB SRAM shared between the two processors, high performance SDRAM controller, shared by the two processors, operates synchronously with processors; supports up to 128 MB external DRAM; high-performance DMA systems, optimized for efficient handling of communications data: each high-bandwidth I/O block has its own dedicated DMA engine, a common full-speed 32 bit bus links the DMA engines directly to the SDRAM controller; in normal operation, the NP will initiate a DMA transfer where no further NP processing is required until the transfer has completed, functions such as checksum calculation and byte alignment can be performed while the data is being transferred, Nextport logic block determines which I/O port service request has the highest priority, removing need for any polling of I/O ports by the processor, similarly, a Next Interrupt Request (IRQ) block prioritizes outstanding IRQs without processor intervention; dual 10/100 Mb/s Ethernet Media Access Controllers (MACs); Encryption/Decryption hardware accelerator (with Internet Protocol Security (IPSec) support), supported by hardware random number generator: encrypts and decrypts data as defined in FIBS BUS 81, single or triple Data Encryption Standard (DES) modes; supports Electronic Code Book (ECB), Cipher Block Chaining (CBC), Output Feedback (cryptography) (OFB)-64, incorporates Secure Hashing Algorithm according to FIPS PUB 180-1 (SHA-1) hardware assist function; two high-speed multi-function serial units (MFSUs), each of which is configured to operate in one of three modes: High-Level Data Link Control (HDLC) mode conforms to q.921 and ISO/IEC 2209:1993, supports bus mode, V.35 and X.21 fixed links operating at up to 50 Mb/s, hardware support for 16 and 32 bit Frame Checking Sequence (FCS); I.432 Mode is in accordance with International Telecommunication Union-Telecommunications (ITU-T) I.432 interface standard at 50 Mb/s data rate; High-speed Serial Universal Asynchronous Receiver and Transmitter (UART) mode, supporting both 3-wire and 5-wire interfaces (software or hardware flow control) at 1.5 Mb/s data rate, suitable for connection to Bluetooth devices; TDM block provides two independent TDM interfaces with flexible HDLC controllers, each offering data rate up to 8 Mb/s; up to 256 programmable time-slots, up to 32 simultaneous HDLC streams, with single or multiple time-slots and programmable number of bits per slot; ability to support “quad” framer devices (carrying up to four Ti/El channels); UTOPIA master/slave port offers UTOPIA level 1 or 2 ports, master or slave operation, provides up to 31 ports, first 8 ports can be configured for high-speed operation; Network Timing Reference (NTR) recovery function, can also provide local network clock generation; PCI expansion bus for high-speed, flexible peripheral connection: 32 bit, 33 MHz bus, PCI master or slave operation, in -built arbiter with support for up to two peripheral devices for operation in master mode, PCI Rev 2.2 complaint; External peripheral bus (EPB) for co-processor or peripheral expansion: supports 8, 16 and 32 bit bus widths, offers support for i960, Motorola, Intel and PCMCIA bus formats, programmable strobes allows support for other formats; Universal Serial Bus (USB) 1.1 slave port operates at 12 Mhz; Programmable GPIO block with up to 64 I/O pins available, each configurable as input or output, allows interfacing to local device (e.g., for driving indicators or sensing switches); support for IEEE 1149.1 boundary scan and ARM® In-Circuit Emulator (ICE) debugger; Compatible with GlobespanVirata Corporation Helium family of products and IP Service Operating System (ISOS) software; designed throughout for low-power operation, many operational blocks can be put into standby mode to save power.</p>
<p id="p-0085" num="0084"><figref idref="DRAWINGS">FIG. 15</figref> is a schematic diagram of a hardware architecture in which the inventive aspects of the present invention may be incorporated. In particular, <figref idref="DRAWINGS">FIG. 15</figref> is a UTOPIA block functional overview incorporating the inventive features discussed in detail above. The Helium 500 CP provides a single UTOPIA interface which can operate in the following four modes: UTOPIA level 2 Master (L2M) up to 31 ports; UTOPIA Level 2 Slave (L2S) single port (port number between 0 and 30); UTOPIA Level 1 Master (L1M) single port (port 0); and UTOPIA level 1 slave (L1S) single port (port 0).</p>
<p id="p-0086" num="0085">As shown in <figref idref="DRAWINGS">FIG. 15</figref>, the main data path through the block passes (in the reverse direction) from the external connections, through the UTOPIA Rx processor, to the First In First Out (FIFO) block. The DMA engine, which forms part of the block, transfers data from the FIFO onto the DMA bus and then directly into SDRAM. The transmit data path is simply the reverse of this, passing from the FIFOs through the UTOPIA Tx processor block. In addition, the UTOPIA block control logic is connected to the Network I/O bus, and can also access the FIFOs. A cell counter unit is also provided; this tracks the number of cells transmitted and received on each port. The block provides highly-flexible support for the prioritization of some ports for high-speed operation. Separate FIFOs are provided for Transmit and Receive data. The organization of the FIFOs depends on the operating mode of the block; however each active port is always provided with at least a single cell (e.g., 13-word) buffer. The FIFO hardware provides synchronization between the different clock domains of the UTOPIA block, where this is required.</p>
<p id="p-0087" num="0086"><figref idref="DRAWINGS">FIG. 16</figref> is a schematic diagram of a hardware architecture in which the inventive aspects of the present invention may be incorporated. In particular, <figref idref="DRAWINGS">FIG. 16</figref> illustrates the relation of the UTOPIA block to the Helium 500 CP architecture. This diagram indicates how the UTOPIA block's DMA engine transfers data directly to external SDRAM, via the DMA bus and the SDRAM controller, without any intervention from the processors. It also indicates the direct connections between the UTOPIA block and the Next Port and Cell Header Decoder blocks of the Network subsystem.</p>
<p id="p-0088" num="0087"><figref idref="DRAWINGS">FIG. 17</figref> is a schematic diagram of a hardware architecture in which the inventive aspects of the present invention may be incorporated. In particular, <figref idref="DRAWINGS">FIG. 17</figref> illustrates a SDRAM block diagram. The SDRAM controller provides a high-performance interface to external SDRAMs for code and data storage. It operates at the processor core clock frequency of 166 or 133 MHz, and is compatible with the Joint Electronic Device Engineering Counsel (JEDEC) standard JED2421 for interfacing to synchronous DRAMs. The controller has three internal ports allowing the DMA controller, the NP and the PP to access SDRAM via separate internal buses. The controller features independent write data and address buffering on each port (e.g., 16 word data buffer on each port (DMA, NP and PP ports); 1 address buffer per port); intelligent arbitration between the three ports where the arbitration scheme dynamically adjusts to the load conditions and also guarantees maximum latency requirements at each port; and advanced SDRAM interleaving where the SDRAM controller re-orders memory cycles to optimize data transfer. It does this by automatically interleaving banks of memory with in the SDRAM devices. The overhead of preparing one bank is hidden during data movement to the other. This process is entirely transparent to the user. Other features include data coherency guarantee where the controller guarantees data coherency between ports (e.g., data in a write buffer on one port can be accessed by a read from another port) and support for memory devices sizes of 64 Mb, 128 Mb and 256 Mb, each of which can be 8, 16 or 32 bits wide, the maximum memory that can be connected is 4×256 Mb (128 MB). Generally, access to the external SDRAM is 32-bits wide. Another feature includes a power down mode where a low power mode drastically reduces the power consumed by external SDRAM devices.</p>
<p id="p-0089" num="0088"><figref idref="DRAWINGS">FIG. 18</figref> is a schematic diagram of a hardware architecture in which the inventive aspects of the present invention may be incorporated. In particular, <figref idref="DRAWINGS">FIG. 18</figref> illustrates a core system including processors and DMAs. A principle use of the DMA system is for the NP to transfer data packets and cells between SDRAM buffers and network ports. The DMA system may include a DMA engine within each of the high performance I/O blocks and a dedicated DMA bus linking these engines to the SDRAM controller. This enables the NP to interleave operations efficiently on different devices without being stalled by SDRAM accesses. The DMA channels carry out functions such as checksum calculation and byte alignment as the data is transferred. The PP may also make use of DMA channels, for example to access devices attached to the EFB.</p>
<p id="p-0090" num="0089"><figref idref="DRAWINGS">FIG. 19</figref> is a schematic diagram of a hardware architecture in which the inventive aspects of the present invention may be incorporated. In particular, <figref idref="DRAWINGS">FIG. 19</figref> is a DMA block diagram. The DMA system reduces the reliance on NP when transferring data between high-speed I/O modules and the SDRAM memory. The system includes a DMA controller within each of the high-speed I/O modules, connecting directly to the Transmit and Receive FIFOs within the module; a dedicated DMA port on the SDRAM controller; and a dedicated high-speed 32-bit DMA bus, linking the DMA controllers to the SDRAM controller. DMA transfers between the network module FIFOs and the SDRAM take place in parallel with other NP operations; NP processing is required only at the start and end of the packet or cell. Each DMA controller is able to discard packets that do not need to be received. A single DMA transfer across the bus (e.g., a burst) is between one and 16 words. The 16 word limit prevents any device from “hogging” the DMA bus. Where larger DMA data transfers are required they are split into multiple 16-word bursts, automatically. Write performance is enhanced by buffering in the SDRAM controller. The addressable memory range of the DMA controllers is 256 MB, although the SDRAM controller limits the usable address range of 128 MB.</p>
<p id="p-0091" num="0090">The DMA system illustrated in <figref idref="DRAWINGS">FIG. 19</figref> includes two exemplary I/O blocks. Additional I/O blocks may be implemented. The control block without each of the I/O blocks is connected to the Network I/O. For clarify, these connections have been omitted from the diagram. The SDRAM controller shown in <figref idref="DRAWINGS">FIG. 19</figref> provides write buffering on its input from the DMA bus, optimizing the performance of write operations.</p>
<p id="p-0092" num="0091">Data transfers within the Helium 500 CP will normally take place under the control of the Network Processor (NP), responding to service requests provided through the Next Port mechanism. The Helium 500 CP allows other modes of operation; for example, DMA transfers could be driven by interrupts from the I/O ports. DMA transfers involve the inter-operation of the I/O block and the DMA block. Each I/O block which uses the DMA engine has two groups of registers, the I/O block-specific registers and the DMA registers. The I/O block-specific registers control data transfers (e.g., transmission and reception) between the I/O block and the external network and may be highly block specific. The DMA registers control DMA data transfer between the I/O block and the SDRAM and are essentially the same for each block, although not all of the DMA registers are provided in all I/O blocks. To set up a network data transfer (e.g., transmit or receive), I/O block-specific registers will be used to set up the transmit or receive operations and the DMA registers will be used to set up the data transfer between the I/O block and the SDRAM. Data is transferred directly between SDRAM and the FIFOs of the I/O block, under the control of the DMA engine and without any intervention from the NP. Burst transfers across the DMA bus are limited to a maximum of 16 words; if the requested transfer is longer than this it will be split into multiple 16-word bus transfers, and DMA bus arbitration will take place after each burst. With transmit operations, signaling within the DMA system ensures that data is only transferred across the DMA bus if the FIFO has space to receive it. The I/O block is responsible for detecting the recovering from data over- or under- run conditions, and may abort the DMA transfer (e.g., if it is unable to transmit data from the FIFO to free up space for the requested data transfer). When the entire data transfer has been completed the DMA block raises a service request to indicate the fact. The I/O block may then need to perform additional processing to complete the operation.</p>
<p id="p-0093" num="0092">While the foregoing description includes many details and specificities, it is to be understood that these have been included for purposes of explanation only, and are not to be interpreted as limitations of the present invention. Many modifications to the embodiments described above can be made without departing from the spirit and scope of the invention.</p>
<p id="p-0094" num="0093">The present invention is not to be limited in scope by the specific embodiments described herein. Indeed, various modifications of the present invention, in addition to those described herein, will be apparent to those of ordinary skill in the art from the foregoing description and accompanying drawings. Thus, such modifications are intended to fall within the scope of the following appended claims. Further, although the present invention has been described herein in the context of a particular implementation in a particular environment for a particular purpose, those of ordinary skill in the art will recognize that its usefulness is not limited thereto and that the present invention can be beneficially implemented in any number of environments for any number of purposes. Accordingly, the claims set forth below should be construed in view of the full breath and spirit of the present invention as disclosed herein.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for optimizing cell available (CLAV) status polling, the method comprising the steps of:
<claim-text>determining a first connection speed having a first associated set of PHY addresses and a second connection speed having a second associated set of PHY addresses;</claim-text>
<claim-text>arbitrating status polling based at least in part on a polling ratio involving the first connection speed and the second connection speed;</claim-text>
<claim-text>polling the first and second associated set of PHY addresses to determine a CLAV status for each PHY address, according to the polling ratio;</claim-text>
<claim-text>determining whether each PHY address of the first and second connection speed requires polling; and</claim-text>
<claim-text>re-polling at a connection speed wherein at least one PHY address of the connection speed requires polling.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the polling ratio is based on a number of PHY addresses of the first connection speed and a number of PHY addresses of the second connection speed.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising the step of: updating the polling ratio based on a number of PHY addresses of the first connection speed that require polling and a number of PHY addresses of the second connection speed that require polling.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the step of determining whether each PHY address requires polling further comprises the step of: determining whether the CLAV status is an active CLAV status.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, further comprising the step of determining whether the PHY address with an active CLAV status has been serviced.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein PHY addresses with an active CLAV status that have not been serviced are not re-polled wherein bandwidth is conserved.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the polling ratio comprises a plurality of polling ratios.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the poll ratios include 0/100, 25/75, 50/50, 75/25, 100/0 wherein each poll ratio represents the first connection speed to the second connection speed.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein one or both of the first connection speed and the second connection speed are software configurable.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the first connection speed is a fast connection speed and the second connection speed is a slow connection speed.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A system for optimizing cell available (CLAV) status polling, the system comprising:
<claim-text>a determining connection speed module for determining a first connection speed having a first associated set of PHY addresses and a second connection speed having a second associated set of PHY addresses;</claim-text>
<claim-text>an arbitrating status polling module for arbitrating status polling based at least in part on a polling ratio involving the first connection speed and the second connection speed;</claim-text>
<claim-text>a polling module for polling the first and second associated set of PHY addresses to determine a CLAV status for each PHY address, according to the polling ratio;</claim-text>
<claim-text>a determining PHY address status module for determining whether each PHY address of the first and second connection speed requires polling; and</claim-text>
<claim-text>a re-polling module for re-polling at a connection speed wherein at least one PHY address of the connection speed requires polling.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the polling ratio is based on a number of PHY addresses of the first connection speed and a number of PHY addresses of the second connection speed.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising: a poll ratio module for updating the polling ratio based on a number of PHY addresses of the first connection speed that require polling and a number of PHY addresses of the second connection speed that require polling.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the determining PHY address status module further determines whether the CLAV status is an active CLAV status.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The system of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the determining PHY address status module further determines whether the PHY address with an active CLAV status has been serviced.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein PHY addresses with an active CLAV status that have not been serviced are not re-polled wherein bandwidth is conserved.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the polling ratio comprises a plurality of polling ratios.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The system of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the poll ratios include 0/100, 25/75, 50/50, 75/25, 100/0 wherein each poll ratio represents the first connection speed to the second connection speed.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein one or both of the first connection speed and the second connection speed are software configurable.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the first connection speed is a fast connection speed and the second connection speed is a slow connection speed.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. A computer readable medium, the computer readable medium comprising a set of instructions for optimizing cell available (CLAV) status polling and being adapted to manipulate a processor to:
<claim-text>determine a first connection speed having a first associated set of PHY addresses and a second connection speed having a second associated set of PHY addresses;</claim-text>
<claim-text>arbitrate status polling based at least in part on a polling ratio involving the first connection speed and the second connection speed;</claim-text>
<claim-text>poll the first and second associated set of PHY addresses to determine a CLAV status for each PHY address, according to the polling ratio;</claim-text>
<claim-text>determine whether each PHY address of the first and second connection speed requires polling; and</claim-text>
<claim-text>re-poll at a connection speed wherein at least one PHY address of the connection speed requires polling.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
