<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299246-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299246</doc-number>
<kind>B1</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10759711</doc-number>
<date>20040116</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>470</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>7071041</main-classification>
<further-classification>707100</further-classification>
<further-classification>709232</further-classification>
</classification-national>
<invention-title id="d0e53">Client initiated multicast domain discovery</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>6085238</doc-number>
<kind>A</kind>
<name>Yuasa et al.</name>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709223</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6331983</doc-number>
<kind>B1</kind>
<name>Haggerty et al.</name>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370400</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6611510</doc-number>
<kind>B2</kind>
<name>Famolari et al.</name>
<date>20030800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370335</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6674756</doc-number>
<kind>B1</kind>
<name>Rao et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>37039521</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6690659</doc-number>
<kind>B1</kind>
<name>Ahmed et al.</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370328</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>2002/0009073</doc-number>
<kind>A1</kind>
<name>Furukawa et al.</name>
<date>20020100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370352</main-classification></classification-national>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>2002/0150094</doc-number>
<kind>A1</kind>
<name>Cheng et al.</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370389</main-classification></classification-national>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>2002/0178235</doc-number>
<kind>A1</kind>
<name>Ueno et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709217</main-classification></classification-national>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2003/0039215</doc-number>
<kind>A1</kind>
<name>Eatough et al.</name>
<date>20030200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2004/0022244</doc-number>
<kind>A1</kind>
<name>Boers et al.</name>
<date>20040200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370390</main-classification></classification-national>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>2006/0034278</doc-number>
<kind>A1</kind>
<name>Hundscheidt et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370390</main-classification></classification-national>
</citation>
<citation>
<nplcit num="00012">
<othercit>“Greedy Algorithms,” http://www.cs.man.as.uk/˜graham/cs2022/greedy/index.html, pp. 1-2, Jul. 8, 2003.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00013">
<othercit>“Minimum Spanning Tree Demonstration Program,” http://www.cs.oregonstate.edu/˜minoura/cs261/javaProgs/minST/MinST.html, pp. 1-2, Jul. 8, 2003.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00014">
<othercit>“10 Graphs,” http://ciips.ee.uwa.edu.au/˜morris/Year2/PLDS210/mst.html, pp. 1-5, Jul. 8, 2003.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00015">
<othercit>ICS 161: Design and Analysis of Algorithms Lecture Notes for Feb. 6, 1996, http://www.ics.uci.edu/˜eppstein/161/960206.html, pp. 1-5, Jul. 8, 2003.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00016">
<othercit>“Unix Manual Page—Traceroute,” http://www.cebitec.uni-bielefeld.de/cgi-bin/man.cgi?section=1M&amp;topic=traceroute, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>14</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>707  1-1041</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>709232</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>10</number-of-drawing-sheets>
<number-of-figures>11</number-of-figures>
</figures>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Eatough</last-name>
<first-name>David A.</first-name>
<address>
<city>Herriman</city>
<state>UT</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Madson &amp; Austin</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>LANDesk Software Limited</orgname>
<role>03</role>
<address>
<city>Dublin</city>
<country>IE</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Wong</last-name>
<first-name>Don</first-name>
<department>2163</department>
</primary-examiner>
<assistant-examiner>
<last-name>Black</last-name>
<first-name>Linh</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A system for determining a multicast domain for a node on a computer network is disclosed. The system includes a computing device and a computer-readable medium. The computer-readable medium is part of the computing device or is in electronic communication with the computing device. The computer-readable medium comprises executable instructions for implementing a method for determining the multicast domain for the computing device. A destination is obtained that comprises a computer on the computer network. A unique identification is determined for a first router encountered when sending data from the computing device to the destination. A multicast domain identification is prepared based on the unique identification determined. The multicast domain identification is sent to an administrative system on the computer network.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="127.51mm" wi="118.70mm" file="US07299246-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="205.57mm" wi="150.54mm" orientation="landscape" file="US07299246-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="141.73mm" wi="138.26mm" orientation="landscape" file="US07299246-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="260.01mm" wi="148.59mm" orientation="landscape" file="US07299246-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="135.72mm" wi="98.89mm" orientation="landscape" file="US07299246-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="228.35mm" wi="162.48mm" orientation="landscape" file="US07299246-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="258.23mm" wi="155.62mm" orientation="landscape" file="US07299246-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="133.69mm" wi="136.57mm" orientation="landscape" file="US07299246-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="242.32mm" wi="158.83mm" orientation="landscape" file="US07299246-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="269.66mm" wi="186.18mm" orientation="landscape" file="US07299246-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="153.67mm" wi="116.25mm" orientation="landscape" file="US07299246-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">TECHNICAL FIELD</heading>
<p id="p-0002" num="0001">The present invention relates generally to computer system administration. More specifically, the present invention relates to client initiated multicast domain discovery.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">Computer and communication technologies continue to advance at a rapid pace. Indeed, computer and communication technologies are involved in many aspects of a person's day. For example, many devices being used today have a small computer inside of the device. These small computers come in varying sizes and degrees of sophistication. Computers commonly used include everything from hand-held computing devices to large multi-processor computer systems.</p>
<p id="p-0004" num="0003">Computers are used in almost all aspects of business, industry and academic endeavors. More and more homes are using computers as well. The pervasiveness of computers has been accelerated by the increased use of computer networks, including the Internet. Most companies have one or more computer networks and also make extensive use of the Internet. The productivity of employees often requires human and computer interaction. Improvements in computers and software have been a force for bringing about great increases in business and industrial productivity.</p>
<p id="p-0005" num="0004">Maintaining and supporting computer systems is important to anyone who relies on computers. Whether a computer or computing device is in a home or at a business, at least some maintenance and/or support is often needed. For example, sometimes there are problems with computer hardware. In addition, computer hardware is often upgraded and replaced with new components. Similarly computer software is also frequently upgraded or replaced. New computer hardware and software is continually being integrated into systems across the world.</p>
<p id="p-0006" num="0005">Installing new computer hardware and/or software, or problems with existing systems, may cause down-time during which the business or individual operate at diminished levels or are otherwise unable to use the computers as they typically do. Most individuals and businesses try to minimize computer problems so as to avoid down-time.</p>
<p id="p-0007" num="0006">When a business or individual is trying to decide whether to make a change to a computer system, the concern about down-time may outweigh the cost of the installation or change in influencing the decision. The professional computer service industry which carries out and supports installations and upgrades has been rapidly expanding. However, even with such computer professional support, the threat of such down-time coupled with the costs of such professional services is a concern.</p>
<p id="p-0008" num="0007">As corporate performance and end-user productivity have become increasingly dependent on computers, computer support personnel are continuously under pressure to accomplish more with existing or reduced staff head counts. They are also under pressure to perform tasks as efficiently as possible which may include minimizing effects to existing computer systems and networks.</p>
<p id="p-0009" num="0008">As shown from the above discussion, there is a need for systems and methods that will improve the ability to manage and support computer systems. Improved systems and methods may enable a person performing computer support to work more efficiently and accomplish more in less time. Benefits may be realized by providing increased functionality to assist in computer maintenance and support.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0010" num="0009">The present embodiments will become more fully apparent from the following description and appended claims, taken in conjunction with the accompanying drawings. Understanding that these drawings depict only typical embodiments and are, therefore, not to be considered limiting of the invention's scope, the embodiments will be described with additional specificity and detail through use of the accompanying drawings in which:</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of an embodiment of a system for client initiated multicast domain discovery;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 2</figref> is a flow diagram illustrating client initiated multicast domain discovery;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram illustrating data that may be stored and reported to the administrative system;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram of an embodiment of a multicast domain identification;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 5</figref> is a block diagram of a system being used with multiple subnets;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 6</figref> is a block diagram illustrating a node connected to multiple networks;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 7</figref> is a block diagram of a system being used with a Network Address Translation device;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 8</figref> is a flow diagram of a method for client initiated multicast domain discovery;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 9</figref> is a flow diagram of an embodiment of a node's method for determining its multicast domain;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 10</figref> is an exemplary diagram illustrating the alias domains established according to one embodiment of the method for discovering the alias domains; and</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 11</figref> is a block diagram illustrating the major hardware components typically utilized in a computing device.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0022" num="0021">A method for determining a multicast domain for a node on a computer network is disclosed. A destination is obtained comprising a computer on a computer network. A unique identification is determined for a first router encountered when sending data from a node to the destination. A multicast domain identification is prepared based on the unique identification determined. The multicast domain identification is provided to a central location.</p>
<p id="p-0023" num="0022">In an embodiment, a specific port of the first router encountered is determined and a specific port identification is included in the multicast domain identification. The multicast domain identification may comprise a router or similar network device identification and a port identification.</p>
<p id="p-0024" num="0023">In a further embodiment the central location may include an administrative system that includes a database of multicast domains.</p>
<p id="p-0025" num="0024">In certain embodiments a multicast domain cache may be used. Files may be reported that are in a multicast domain cache.</p>
<p id="p-0026" num="0025">A computer-readable medium for storing program data is also disclosed. The program data includes executable instructions for implementing a method in a computing device for determining a multicast domain for a node on a computer network. In the method a destination is obtained comprising a computer on a computer network. A unique identification is determined for a first router encountered when sending data from a node to the destination. A multicast domain identification is prepared based on the unique identification determined. The multicast domain identification is provided to a central location.</p>
<p id="p-0027" num="0026">A system for determining a multicast domain for a node on a computer network is also disclosed. The system includes a computing device and a computer-readable medium. The computer-readable medium is part of the computing device or is in electronic communication with the computing device. The computer-readable medium comprises executable instructions for implementing a method for determining the multicast domain for the computing device. A destination is obtained that comprises a computer on the computer network. A unique identification is determined for a first router encountered when sending data from the computing device to the destination. A multicast domain identification is prepared based on the unique identification determined. The multicast domain identification is sent to an administrative system on the computer network.</p>
<p id="p-0028" num="0027">It will be readily understood that the components of the embodiments as generally described and illustrated in the Figures herein could be arranged and designed in a wide variety of different configurations. Thus, the following more detailed description of the embodiments of the systems and methods of the present invention, as represented in the Figures, is not intended to limit the scope of the invention, as claimed, but is merely representative of the embodiments of the invention.</p>
<p id="p-0029" num="0028">The word “exemplary” is used exclusively herein to mean “serving as an example, instance, or illustration.” Any embodiment described herein as “exemplary” is not necessarily to be construed as preferred or advantageous over other embodiments. While the various aspects of the embodiments are presented in drawings, the drawings are not necessarily drawn to scale unless specifically indicated.</p>
<p id="p-0030" num="0029">Several aspects of the embodiments described herein will be illustrated as software modules or components stored in a computing device. As used herein, a software module or component may include any type of computer instruction or computer executable code located within a memory device and/or transmitted as electronic signals over a system bus or network. A software module may, for instance, comprise one or more physical or logical blocks of computer instructions, which may be organized as a routine, program, object, component, data structure, etc., that performs one or more tasks or implements particular abstract data types.</p>
<p id="p-0031" num="0030">In certain embodiments, a particular software module may comprise disparate instructions stored in different locations of a memory device, which together implement the described functionality of the module. Indeed, a module may comprise a single instruction, or many instructions, and may be distributed over several different code segments, among different programs, and across several memory devices. Some embodiments may be practiced in a distributed computing environment where tasks are performed by a remote processing device linked through a communications network. In a distributed computing environment, software modules may be located in local and/or remote memory storage devices.</p>
<p id="p-0032" num="0031">Note that the exemplary embodiment is provided as an exemplar throughout this discussion, however, alternate embodiments may incorporate various aspects without departing from the scope of the present invention.</p>
<p id="p-0033" num="0032">The order of the steps or actions of the methods described in connection with the embodiments disclosed herein may be changed by those skilled in the art without departing from the scope of the present invention. Thus, any order in the Figures or detailed description is for illustrative purposes only and is not meant to imply a required order unless explicitly stated herein.</p>
<p id="p-0034" num="0033">Although the embodiments herein are described with reference to multicast jobs, they may be applied to broadcast jobs, point to multipoint, and multipoint to multipoint jobs as well.</p>
<p id="p-0035" num="0034">A multicast alias domain consists of all computers that can see each other's multicast traffic without crossing a router. Another possible definition is that a multicast domain consists of all computers where the IP hop count between any two computers is zero. Because the hop count between all machines in a multicast domain is zero the arrangement of the machines within the multicast domain does not typically matter. One approach for determining alias domains is described in U.S. patent application Ser. No. 09/927,708, filed Aug. 10, 2001 and entitled “Method and Apparatus for Dynamically Discovering Alias Domains,” hereby incorporated by reference in its entirety. This multicast domain discovery process is controlled from a central server and involves iterating through all subnets to determine the multicast domains.</p>
<p id="p-0036" num="0035">The embodiments herein use multicast alias domains. However, these embodiments may also use other multipoint communication domains rather than multicast alias domains. For example, the techniques herein may be used with broadcast domains or any other multipoint communication domains.</p>
<p id="p-0037" num="0036">This system provides a method for multicast domain discovery that allows the individual client computers or nodes to determine their own multicast domain and report the information to a central location, referred to herein as the administrative system <b>102</b>. <figref idref="DRAWINGS">FIG. 1</figref> is a block diagram of an embodiment of a system <b>100</b> for client initiated multicast domain discovery. In an embodiment of the method, the system <b>100</b> uniquely identifies the multicast alias domain by the IP address and name of the first router <b>104</b> encountered when sending a packet to a known destination, which is the administrative system <b>102</b> in <figref idref="DRAWINGS">FIG. 1</figref>, from the individual node <b>106</b>.</p>
<p id="p-0038" num="0037">A known destination node or computer is used when sending a packet to identify a multicast domain. All of the nodes in the same multicast domain will encounter the same router when sending a packet to the same destination node; thus, they will report the same router name and IP address for the first router encountered and will be labeled as being in the same multicast alias domain.</p>
<p id="p-0039" num="0038">The multicast alias domain can then be reported to the administrative system <b>102</b> through one or more messages, an inventory scan, or similar means. In addition to reporting the alias domain the node <b>106</b> can also report files that are currently in the multicast cache, shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 2</figref> is a flow diagram <b>200</b> illustrating client initiated multicast domain discovery. Some time after the node computer <b>106</b> is started <b>202</b>, it may determine <b>204</b> its own multicast alias domain. Once the node <b>106</b> has its own multicast alias domain, it may report <b>206</b> that information to the administrative system <b>102</b>. The administrative system <b>102</b> may serve as a central location for storing the information. The information that may be stored and conveyed to the administrative system <b>102</b> is shown in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram illustrating data that may be stored and reported to the administrative system <b>302</b>. The multicast domain identification <b>308</b> identifies what multicast domain the node <b>306</b> belongs to. The node <b>306</b> initially obtains this information and transmits it to an administrative system <b>302</b>. The administrative system <b>302</b> stores the information it receives from the node <b>306</b>. In most systems there will be many nodes <b>306</b> on a computer network reporting their multicast domain identifications <b>308</b> to the administrative system <b>302</b>. As a result, the administrative system <b>302</b> typically stores all the multicast domain information in a multicast domain database <b>310</b>. The multicast domain database <b>310</b> may include a plurality of multicast domain records <b>311</b> corresponding to the various multicast domains. The multicast domain database <b>310</b> may also contain other information not related to multicast domains, such as inventory information. The multicast domain database <b>310</b> includes the multicast domain identifications <b>312</b> it receives along with node identifications <b>314</b>, <b>316</b>, <b>318</b> to identify what nodes belong to each multicast domain. Each multicast domain identification <b>312</b> may be associated with one or more node identifications <b>314</b>, <b>316</b>, <b>318</b> for the nodes that belong to that multicast domain.</p>
<p id="p-0042" num="0041">One or more nodes <b>306</b> may use some storage for a multicast domain cache <b>320</b>. The multicast domain cache <b>320</b> comprises storage for electronic files or data that may be needed by the administrative system <b>302</b> or other nodes <b>306</b>. When the node <b>306</b> reports its multicast domain identification <b>308</b> to the administrative system <b>302</b>, it may also report the contents of its multicast domain cache <b>320</b>, if it has one.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram of an embodiment of a multicast domain identification <b>408</b>. The multicast domain identification <b>408</b> may be any piece of data that identifies a multicast domain. For example, the multicast domain identification <b>408</b> may include a router identification <b>410</b> that identifies the first router <b>104</b> encountered by a packet sent to the administrative system <b>102</b> (or another predetermined destination). The router identification <b>410</b> may be a name, number, MAC address, etc. A port identification <b>412</b> may identify the port of the router that the packet came in through.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an embodiment used with multiple subnets <b>508</b>, <b>510</b>, <b>512</b>. In some of the diagrams herein the networks are represented using two octets. The algorithm outlined will work for IP addresses as well. A first subnet <b>508</b> and a second subnet <b>510</b> are in communication with the router <b>504</b> via a first switch <b>530</b>. A third subnet <b>512</b> is in communication with the router <b>504</b> via a second switch <b>532</b>.</p>
<p id="p-0045" num="0044">The router <b>504</b> may have one or more ports <b>505</b>. The router <b>504</b> illustrated has three ports: port 10.0.1.1 <b>505</b><i>a</i>, port 10.0.2.1 <b>505</b><i>b </i>and port 10.0.3.1 <b>505</b><i>c</i>. Even though these ports are identified using an IP address notation, any method of uniquely identifying the ports may be used. Various computers, computing devices and/or network devices may be connected to the router <b>504</b>.</p>
<p id="p-0046" num="0045">The nodes <b>506</b> in all three subnets <b>508</b>, <b>510</b>, <b>512</b> will determine the first hop on the route to the administrative system <b>502</b>. For nodes in the first and second subnets <b>508</b>, <b>510</b> it will be the 10.0.1.1 port <b>505</b><i>a </i>of the router <b>504</b> and so, in one embodiment, they may report their multicast alias domain using a multicast domain identification as R1-10.0.1.1 (router identification <b>410</b> and port identification <b>412</b>). Nodes <b>506</b> in the third subnet <b>512</b> will encounter the 10.0.2.1 port <b>505</b><i>b </i>of the router <b>504</b> when tracing the route to the administrative system <b>502</b> and may report their multicast alias domain as R1-10.0.2.1.</p>
<p id="p-0047" num="0046">The switches <b>530</b>, <b>532</b> do not change the IP hop count, and hence do not impact the multicast domain configuration. Since the nodes <b>506</b> are looking for the first network device that decrements the IP address count they will not identify the switch <b>530</b>, <b>532</b>. Those familiar with the art will realize that there are known techniques for finding the first network device that decrements the IP address. The Traceroute program demonstrates one such technique for finding the first device that decrements the IP hop count. Details of this technique can be found in TCP/IP Illustrated, Volume 1 by W. Richard Stevens, hereby incorporated by reference in its entirety.</p>
<p id="p-0048" num="0047">In implementing the algorithm for determining which multicast domain a node belongs to, the systems herein instruct all the nodes to use the same computer (which may be the administrative system) as a destination for determining a route. The first router that is encountered in the route to the destination is identified and may be used in identifying the multicast domain.</p>
<p id="p-0049" num="0048">Network environments that contain multiple routers or computers with multiple network cards require all managed nodes to use the same destination when determining their multicast domain. Using the same destination means that they will send their packet to the same well known computer. Without the same destination, issues may arise resulting in unwanted results. Without the same destination, there is no guarantee that the same router will always be encountered. Consider the network shown in <figref idref="DRAWINGS">FIG. 6</figref> which shows a computer <b>606</b> with multiple network cards.</p>
<p id="p-0050" num="0049">In <figref idref="DRAWINGS">FIG. 6</figref>, the managed node <b>606</b> is connected to three networks 10.0.01.1 <b>608</b>, 10.0.3.1 <b>610</b> and 10.0.5.1 <b>612</b>. Each of these networks is connected to a router <b>614</b>, <b>616</b>, <b>618</b>. There are three servers. A first server <b>620</b> is connected to the first router <b>614</b> via network 10.0.2.1 <b>622</b>. A second server <b>624</b> is connected to the second router <b>616</b> via network 10.0.4.1 <b>626</b>. A third server <b>628</b> is connected to the third router <b>618</b> via network 10.0.6.1 <b>630</b>. Depending upon the server to which a packet is sent, any one of these three networks may be used. Without a specific well known destination to which a packet is to sent the multicast domain name for the node <b>606</b> could be R1-10.0.1.1, R2-10.0.3.1, or R3-10.0.5.1. Once a well known destination, for example the second server <b>624</b>, is selected only one multicast domain name is possible.</p>
<p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. 7</figref> is a block diagram of a system being used with a Network Address Translation device <b>702</b>. The name of the router may be included in the multicast domain identification <b>308</b> to handle the situation where Network Address Translation (NAT) devices <b>702</b> are used in the network as shown in the diagram of <figref idref="DRAWINGS">FIG. 7</figref>. The NAT device <b>702</b> is in electronic communication with a first node <b>704</b> and a second node <b>706</b> through a first router <b>708</b> and a second router <b>710</b>, as shown. The NAT device <b>702</b> makes it possible for two portions of the network to reuse the same network address. Thus as far as the two managed nodes <b>704</b>, <b>706</b> are concerned they are both on network 10.0.1.1 and the address of the router they first encounter is 10.0.1.1. If only the address of the router was used these nodes <b>704</b>, <b>706</b> would incorrectly identify their multicast alias domains. In order to resolve this problem the name of the router is added the multicast alias domain, thus the first node <b>704</b> is in the R1-10.0.1.1 multicast alias domain and the second node <b>706</b> is in the R2-10.0.1.1 multicast alias domain, which allows for unique multicast domain names even within a NAT environment.</p>
<p id="p-0052" num="0051">The name of the router is used for illustration purposes only; any unique attribute of the router could be included in the domain name. Unique attributes of a router may include the name, serial number, MAC address, and so on.</p>
<p id="p-0053" num="0052">The systems and methods herein of client initiated multicast domain discovery offer the advantage of not needing a centralized server to control the discovery. Additionally because this solution can store the multicast domain information directly in a database there is no need for the administrative system to perform any additional discovery tasks, which greatly reduces the time it takes to perform multicast.</p>
<p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. 8</figref> is a method <b>800</b> for the system where managed nodes determine their multicast domains. A destination for the nodes to use in determining the multicast domains is provided <b>802</b>. The individual nodes then determine <b>804</b> their own multicast domains and report <b>806</b> that information to an administrative system <b>102</b>.</p>
<p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. 9</figref> is a flow diagram of an embodiment of a node's method <b>900</b> for determining its multicast domain. The destination for the node to use in determining its multicast domain is obtained <b>902</b>. The destination may be determined by a system administrator and sent out to all nodes on the network. Alternatively, the nodes <b>106</b> may be configured to automatically use the administrative system <b>102</b> as the destination. In addition, a volunteer process may be used wherein the first node <b>106</b> that is started volunteers to be the destination. Those skilled in the art will appreciate that there are a number of ways in which a destination may be determined.</p>
<p id="p-0056" num="0055">Then a unique identification for the first router encountered when sending a packet to the destination is determined <b>904</b>. Those skilled in the art will appreciate that there are a number of ways in which a unique identification for the first router encountered may be determined. For example, the name of the router can be determined by making a gethostbyaddr call which makes it possible to determine a hostname given an IP address. Alternately the Address Resolution Protocol (ARP) can be used to determine the MAC address given an IP address.</p>
<p id="p-0057" num="0056">The port of the router used is also determined <b>906</b> in this embodiment. By port the embodiments are attempting to identify which of the routers ports are being used for communication. This is commonly identified by knowing the IP address of the router encountered. As outlined above, the Traceroute program provides a method to determine the IP address of the first network device that decrements the IP hop count. Then the unique identification and port for the router are provided <b>908</b> to a database or an administrative system <b>102</b>.</p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 10</figref> is an exemplary block diagram illustrating a computer network on which the present systems and methods may be implemented. In <figref idref="DRAWINGS">FIG. 10</figref>, an administrative system <b>1001</b> connects to a router <b>1003</b> that has three ports: port A <b>1002</b>, port B <b>1004</b> and port C <b>1006</b>. The administrative system <b>1001</b> may be any computer or computing device that has been configured to, or is being used for, storing the aggregated multicast domain information.</p>
<p id="p-0059" num="0058">The router <b>1003</b> may be connected to three switches: a first switch <b>1005</b>, a second switch <b>1007</b> and a third switch <b>1009</b>. Each switch <b>1005</b>, <b>1007</b>, <b>1009</b> connects to three subnets. The first switch <b>1005</b> connects to three subnets <b>1010</b>, <b>1012</b>, and <b>1014</b>. The second switch <b>1007</b> connects to three subnets <b>1016</b>, <b>1018</b>, and <b>1020</b>. The third switch <b>1009</b> connects to three subnets <b>1022</b>, <b>1024</b>, and <b>1026</b>. The network nodes or elements <b>1011</b>, <b>1013</b>, <b>1015</b>, <b>1017</b>, <b>1019</b>, <b>1021</b>, <b>1023</b>, <b>1025</b> and <b>1027</b> represent computer systems or devices on the computer network. One or more of the nodes may use embodiments of the systems and methods herein for client initiated multicast domain discovery.</p>
<p id="p-0060" num="0059"><figref idref="DRAWINGS">FIG. 10</figref> is an exemplary diagram illustrating the alias domains established according to one embodiment of the method for discovering the alias domains. Once the nodes have all determined their multicast domains, the administrative system <b>1001</b> may store the multicast domain information. A multicast alias domain RPortC <b>1031</b> includes subnet A <b>1010</b>, subnet B <b>1012</b>, and subnet C <b>1014</b>. A multicast domain RPortA <b>1033</b> includes the subnet D <b>1016</b>, the subnet E <b>1018</b>, and the subnet F <b>1020</b>. A multicast domain RPortB <b>1035</b> includes the subnet G <b>1022</b>, the subnet H <b>1024</b>, and the subnet I <b>1026</b>.</p>
<p id="p-0061" num="0060">Having this information about the network will provide the administrator with detailed information about the network and provide for more intelligent replication of files. For example, using these embodiments it will be possible to determine the most efficient way to cascade a file through the system.</p>
<p id="p-0062" num="0061"><figref idref="DRAWINGS">FIG. 11</figref> is a block diagram illustrating the major hardware components typically utilized in a computer or computing device used with embodiments herein. Computers and/or computing devices <b>1102</b> are known in the art and are commercially available. The major hardware components typically utilized in a computing device <b>1102</b> are illustrated in <figref idref="DRAWINGS">FIG. 11</figref>. A computing device <b>1102</b> typically includes a processor <b>1103</b> in electronic communication with input components or devices <b>1104</b> and/or output components or devices <b>1106</b>. The processor <b>1103</b> is operably connected to input <b>1104</b> and/or output devices <b>1106</b> capable of electronic communication with the processor <b>1103</b>, or, in other words, to devices capable of input and/or output in the form of an electrical signal. Embodiments of devices <b>1102</b> may include the inputs <b>1104</b>, outputs <b>1106</b> and the processor <b>1103</b> within the same physical structure or in separate housings or structures.</p>
<p id="p-0063" num="0062">The electronic device <b>1102</b> may also include memory <b>1108</b>. The memory <b>1108</b> may be a separate component from the processor <b>1103</b>, or it may be on-board memory <b>1108</b> included in the same part as the processor <b>1103</b>. For example, microcontrollers often include a certain amount of on-board memory. The memory <b>1108</b> may be embodied in RAM, a hard drive, a CD-ROM drive, a DVD-ROM drive, network storage, etc. The memory <b>1108</b> is broadly defined as any electronic component capable of storing electronic information.</p>
<p id="p-0064" num="0063">The processor <b>1103</b> is also in electronic communication with a communication interface <b>1110</b>. The communication interface <b>1110</b> may be used for communications with other devices <b>1102</b>. Thus, the communication interfaces <b>1110</b> of the various devices <b>1102</b> may be designed to communicate with each other to send signals or messages between the computing devices <b>1102</b>. A network card or wireless card may be used to implement a communication interface <b>1110</b>.</p>
<p id="p-0065" num="0064">The computing device <b>1102</b> may also include other communication ports <b>1112</b>. In addition, other components <b>1114</b> may also be included in the electronic device <b>1102</b>.</p>
<p id="p-0066" num="0065">Of course, those skilled in the art will appreciate the many kinds of different devices that may be used with embodiments herein. The computing device <b>1102</b> may be a one-chip computer, such as a microcontroller, a one-board type of computer, such as a controller, a typical desktop computer, such as an IBM-PC compatible, a Personal Digital Assistant (PDA), a Unix-based workstation, a router, etc. Accordingly, the block diagram of <figref idref="DRAWINGS">FIG. 11</figref> is only meant to illustrate typical components of a computer or computing device <b>1102</b> and is not meant to limit the scope of embodiments disclosed herein.</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 11</figref> illustrates a computer system <b>1102</b> that includes or is in electronic communication with a machine-readable medium (memory) on which is stored a set of instructions according to embodiments herein. Although described in the context of a computer system <b>1102</b>, the embodiments herein may be implemented in any suitable computer system comprising any suitable one or more integrated circuits.</p>
<p id="p-0068" num="0067">Accordingly, computer system <b>1102</b> includes or is in communication with a computer-readable medium on which is stored a set of instructions (i.e., software) embodying any one, or all, of the methodologies described above. For example, software can reside, completely or at least partially, within main memory and/or within processors <b>1103</b>. For the purposes of this specification, the term “computer-readable medium” shall be taken to include any mechanism that provides (i.e., stores and/or transmits) information in a form readable by a machine (e.g., a computer). For example, a computer-readable medium includes read only memory (ROM); random access memory (RAM); magnetic disk storage media; optical storage media; flash memory devices; electrical, optical, acoustical or other form of propagated signals (e.g., carrier waves, infrared signals, digital signals, etc.); etc.</p>
<p id="p-0069" num="0068">Those of skill in the art would understand that information and signals may be represented using any of a variety of different technologies and techniques. For example, data, instructions, commands, information, signals, bits, symbols, and chips that may be referenced throughout the above description may be represented by voltages, currents, electromagnetic waves, magnetic fields or particles, optical fields or particles, or any combination thereof.</p>
<p id="p-0070" num="0069">Those of skill would further appreciate that the various illustrative logical blocks, modules, circuits, and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware, computer software, or combinations of both. To clearly illustrate this interchangeability of hardware and software, various illustrative components, blocks, modules, circuits, and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application, but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.</p>
<p id="p-0071" num="0070">The various illustrative logical blocks, modules, and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor, a digital signal processor (DSP), an application specific integrated circuit (ASIC), a field programmable gate array signal (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor, but in the alternative, the processor may be any conventional processor, controller, microcontroller, or state machine. A processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration.</p>
<p id="p-0072" num="0071">The steps of a method or algorithm described in connection with the embodiments disclosed herein may be embodied directly in hardware, in a software module executed by a processor, or in a combination of the two. A software module may reside in RAM memory, flash memory, ROM memory, EPROM memory, EEPROM memory, registers, hard disk, a removable disk, a CD-ROM, or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such the processor can read information from, and write information to, the storage medium. In the alternative, the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a user terminal. In the alternative, the processor and the storage medium may reside as discrete components in a user terminal.</p>
<p id="p-0073" num="0072">The methods disclosed herein comprise one or more steps or actions for achieving the described method. The method steps and/or actions may be interchanged with one another without departing from the scope of the present invention. In other words, unless a specific order of steps or actions is required for proper operation of the embodiment, the order and/or use of specific steps and/or actions may be modified without departing from the scope of the present invention.</p>
<p id="p-0074" num="0073">While specific embodiments and applications of the present invention have been illustrated and described, it is to be understood that the invention is not limited to the precise configuration and components disclosed herein. Various modifications, changes, and variations which will be apparent to those skilled in the art may be made in the arrangement, operation, and details of the methods and systems of the present invention disclosed herein without departing from the spirit and scope of the invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for determining a multicast domain for a node on a computer network, the method comprising:
<claim-text>obtaining a destination comprising a computer on a computer network, wherein the same destination is obtained for each of a plurality of nodes on the computer network that send data to the destination;</claim-text>
<claim-text>determining a unique identification for a first router encountered when sending data from a node to the destination, wherein the node itself determines the unique identification for the first router;</claim-text>
<claim-text>preparing a multicast domain identification based on the unique identification determined; and</claim-text>
<claim-text>providing the multicast domain identification to a central location.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising determining a specific port of the first router encountered and including a specific port identification in the multicast domain identification.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the central location comprises an administrative system that includes a database of multicast domains.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the multicast domain identification comprises a router or similar network device identification and a port identification.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising reporting files that are in a multicast domain cache.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A computer-readable medium for storing program data, wherein the program data comprises executable instructions for implementing a method in a computing device for determining a multicast domain for a node on a computer network, the method comprising:
<claim-text>obtaining a destination comprising a computer on a computer network, wherein the same destination is obtained for each of a plurality of nodes on the computer network that send data to the destination;</claim-text>
<claim-text>determining a unique identification for a first router encountered when sending data from a node to the destination, wherein the node itself determines the unique identification for the first router;</claim-text>
<claim-text>preparing a multicast domain identification based on the unique identification determined; and</claim-text>
<claim-text>providing the multicast domain identification to a central location.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The computer-readable medium of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising determining a specific port of the first router encountered and including a specific port identification in the multicast domain identification.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The computer-readable medium of <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein the central location comprises an administrative system that includes a database of multicast domains.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The computer-readable medium of <claim-ref idref="CLM-00008">claim 8</claim-ref>, wherein the multicast domain identification comprises a router or similar network device identification and a port identification.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The computer-readable medium of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising reporting files that are in a multicast domain cache.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A system for determining a multicast domain for a node on a computer network, the system comprising:
<claim-text>a computing device;</claim-text>
<claim-text>a computer-readable medium that is part of the computing device or in electronic communication with the computing device, the computer-readable medium comprising executable instructions for implementing a method for determining the multicast domain for the computing device, the method comprising:
<claim-text>obtaining a destination comprising a computer on the computer network, wherein the same destination is obtained for each of a plurality of nodes on the computer network that send data to the destination;</claim-text>
<claim-text>determining a unique identification for a first router encountered when sending data from the computing device to the destination, wherein the node itself determines the unique identification for the first router;</claim-text>
<claim-text>preparing a multicast domain identification based on the unique identification determined; and</claim-text>
<claim-text>sending the multicast domain identification to an administrative system on the computer network.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising determining a specific port of the first router encountered and including a specific port identification in the multicast domain identification.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the multicast domain identification comprises a router or similar network device identification and a port identification.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein the method further comprises reporting files that are in a multicast domain cache on the computing device.</claim-text>
</claim>
</claims>
</us-patent-grant>
