<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298310-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298310</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11244795</doc-number>
<date>20051006</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<us-term-of-grant>
<disclaimer>
<text>This patent is subject to a terminal disclaimer.</text>
</disclaimer>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>03</class>
<subclass>M</subclass>
<main-group>1</main-group>
<subgroup>36</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>341159</main-classification>
<further-classification>341155</further-classification>
<further-classification>341158</further-classification>
</classification-national>
<invention-title id="d0e51">Continuous-time digital signal generation, transmission, storage and processing</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4884075</doc-number>
<kind>A</kind>
<name>Mangelsdorf</name>
<date>19891100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>341159</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>4994808</doc-number>
<kind>A</kind>
<name>Wichelman</name>
<date>19910200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>341161</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6198421</doc-number>
<kind>B1</kind>
<name>Doyle et al.</name>
<date>20010300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>341159</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6597302</doc-number>
<kind>B2</kind>
<name>Nagaraj et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>341155</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6677569</doc-number>
<kind>B2</kind>
<name>Beusch</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>2502081</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>7132972</doc-number>
<kind>B2</kind>
<name>Tsividis</name>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>341158</main-classification></classification-national>
</citation>
</references-cited>
<number-of-claims>5</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>341158-159</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>4</number-of-drawing-sheets>
<number-of-figures>4</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>10878155</doc-number>
<kind>00</kind>
<date>20040628</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>7132972</doc-number>
<kind>A </kind>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>11244795</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60483344</doc-number>
<kind>00</kind>
<date>20030627</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20060028365</doc-number>
<kind>A1</kind>
<date>20060209</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Tsividis</last-name>
<first-name>Yannis</first-name>
<address>
<city>New York</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Wilmer Cutler Pickering Hale and Dorr LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>The Trustees of Columbia University in the City of New York</orgname>
<role>02</role>
<address>
<city>New York</city>
<state>NY</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Nguyen</last-name>
<first-name>Khai M.</first-name>
<department>2819</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method of digitally processing an analog signal in continuous time includes producing a continuous-time digital signal from an analog signal via a technique that does not include periodic sampling, then producing one or more delayed versions of the continuous-time digital signal. Each delayed version is delayed by nT, where n is an integer greater than zero, and T is a delay interval. The method further includes multiplying the continuous-time digital signal and each of the delayed versions by one or more associated coefficients, so as to produce a set of products, then adding the set of products, so as to produce a sum value corresponding to the analog signal processed by a transfer function defined by the associated coefficients. The individual bit paths of the continuous-time digital signal are multiplied by the coefficients, and the resulting products are combined by a binary-weighted adder.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="72.31mm" wi="212.60mm" file="US07298310-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="128.86mm" wi="117.26mm" orientation="landscape" file="US07298310-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="213.19mm" wi="99.57mm" orientation="landscape" file="US07298310-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="208.70mm" wi="168.83mm" orientation="landscape" file="US07298310-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="188.47mm" wi="123.11mm" orientation="landscape" file="US07298310-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This application is a continuation of U.S. patent application Ser. No. 10/878,155, filed Jun. 28, 2004 now U.S. Pat. No. 7,132,972, which is hereby incorporated by reference in its entirety. This application also claims the benefit of U.S. Provisional Patent Application No. 60/483,344, filed Jun. 27, 2003.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">TECHNICAL FIELD</heading>
<p id="p-0003" num="0002">This invention relates generally to continuous-time digital representation, generation transmission, storage and processing of continuous-time signals.</p>
<heading id="h-0003" level="1">BACKGROUND</heading>
<p id="p-0004" num="0003">Conventional Digital Signal Processing (DSP) suffers from aliasing and produces quantization “noise” which includes numerous components non-harmonically related to the signal being processed. Techniques such as dithering and non-uniform sampling may reduce or modify one or both of these undesired effects, but residual aliasing and/or quantization noise typically remains even after applying such techniques.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0005" num="0004">Digitally processing an analog signal that has been quantized without sampling results in no aliasing and reduces in-band quantization error as compared to conventional digital processing techniques. The following description sets forth a continuous-time digital system that quantizes an analog signal without sampling and processes an input signal with substantially the same transfer function as a classical analog transmission line filter.</p>
<p id="p-0006" num="0005">In one aspect, an apparatus for generating a continuous-time quantized and digitized signal from a continuous-time analog signal includes one or more comparators for comparing the continuous-time analog signal to a set of reference signals, and producing an intermediate signal that represents the reference signal to which the analog signal is nearest in amplitude. The apparatus also includes an encoder for producing a continuous-time digital word that represents the intermediate signal. The apparatus may include a recorder for recording the digital word on a continuous-time storage medium. The recorder may also record timing information related to when the digital word changes from one value to another value.</p>
<p id="p-0007" num="0006">In another aspect, a method of generating a continuous-time quantized and digitized signal from a continuous-time analog signal includes comparing the continuous-time analog signal to a set of reference signals, and producing an intermediate signal that represents the reference signal to which the analog signal is nearest in amplitude. The method further includes producing a continuous-time digital word that represents the intermediate signal. The method may include recording the continuous-time digital word on a continuous-time storage medium, and the recorder may record timing information related to when the digital word changes from one value to another value.</p>
<p id="p-0008" num="0007">In another aspect, a method of generating a continuous-time quantized and digitized signal from a continuous-time analog signal includes producing a sequence of discrete signals corresponding to the analog signal. Each discrete signal corresponds to the analog signal falling within one of a set of contiguous amplitude ranges. The method also includes producing a sequence of digital words. Each of the digital words represents a corresponding discrete signal from the sequence of discrete signals. The method may include recording the digital word on a continuous-time storage medium, and/or recording timing information related to when the digital word changes from one value to another value.</p>
<p id="p-0009" num="0008">In another aspect, a continuous-time digital signal processor includes a quantizer for producing a continuous-time digital signal from an analog signal. The quantizer produces the continuous-time digital signal without periodic sampling. The continuous-time digital processor further includes a continuous-time delay line for producing one or more delayed versions of the continuous-time digital signal. Each delayed version is delayed by nT, where n is a number greater than zero, and T is a delay interval. The processor further includes multipliers for multiplying the continuous-time digital signal and each of the delayed versions by one or more associated coefficients representing a filtering function, so as to produce a set of products. The processor also includes an adder for adding the set of products, so as to produce a sum value corresponding to the analog signal processed by a transfer function defined by the associated coefficients. The quantizer may include a non-sampling ADC that compares the analog signal to a set of reference voltages. Each time the analog signal equals or exceeds a particular one of the reference voltages, the non-sampling ADC produces a digital word that represents the particular one of the reference voltages. The continuous-time digital signal is a sequence of digital binary words, each of which corresponds to an amplitude of the analog signal at an instant of time.</p>
<p id="p-0010" num="0009">In one embodiment, the continuous-time delay line includes a cascade of logic devices. The cascade of logic devices may include logic inverters, some or all coupled to a load capacitance for slowing the logic inverter switching time.</p>
<p id="p-0011" num="0010">In one embodiment, the continuous-time digital signal includes a sequence of digital words, and the multiplier multiplies each bit of each digital word by one or more transfer function coefficients. The multiplier includes one or more AND gating functions, wherein the multiplying includes gating each bit of each digital word with one or more transfer function coefficients.</p>
<p id="p-0012" num="0011">In one embodiment, the continuous-time digital signal is stored on a memory medium, such as magnetic tape, for later processing and/or transmitting.</p>
<p id="p-0013" num="0012">In another aspect, a method of digitally processing an analog signal in continuous time includes producing a continuous-time digital signal from an analog signal without periodic sampling. The method further includes producing one or more delayed versions of the continuous-time digital signal, each delayed version being delayed by nT, where n is a number greater than zero, and T is a delay interval. The method further includes multiplying the continuous-time digital signal and each of the delayed versions by one or more associated coefficients to produce a set of products, and adding the set of products to produce a sum value. This sum value corresponds to the analog signal processed by a transfer function defined by the associated coefficients.</p>
<p id="p-0014" num="0013">In one embodiment, the method further includes producing a continuous-time digital signal from an analog signal by comparing the analog signal to a set of reference voltages, and producing a digital word that represents the particular one of the reference voltages each time the analog signal equals or exceeds a particular one of the reference voltages.</p>
<p id="p-0015" num="0014">In one embodiment, the method further includes multiplying the continuous-time digital signal and each of the delayed versions by one or more associated coefficients representing a filtering function. The method may further include multiplying individual bits of the continuous-time digital signal by one or more transfer function coefficients.</p>
<p id="p-0016" num="0015">In one embodiment, the method further includes storing the continuous-time digital signal on a memory medium, for example on magnetic tape, for later processing.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 1</figref> shows one way of representing an input analog signal with a quantized and digitized continuous-time signal;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of a continuous-time DSP;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 3</figref> is a more detailed view of the continuous-time DSP shown in <figref idref="DRAWINGS">FIG. 2</figref>; and,</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 4</figref> shows a general representation of the continuous-time DSP embodiment of <figref idref="DRAWINGS">FIG. 2</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0021" num="0020">The described embodiment quantizes and digitizes an input analog signal without sampling, so as to produce a continuous-time digital signal. This continuous-time digital signal is a function of continuous time, such that a set of pairs, e.g., (t<sub>i</sub>, x<sub>i</sub>) completely describes the continuous-time digital signal (where x<sub>i </sub>represents the amplitude value, and t<sub>i </sub>represents the time at which that amplitude value was reached). Since the amplitude levels are known, a type of delta modulation signal may also be used. In some embodiments, the quantized and digitized information related to the input analog signal is stored in a memory medium (such as magnetic tape or some other continuous-time storage medium) and may be later transmitted, and/or processed as described herein.</p>
<p id="p-0022" num="0021">Note that in addition to quantizing and digitizing the amplitude information related to the input analog signal, the timing information related to when quantized and digitized amplitude information changes states can also be stored on storage media, along with the associated amplitude information. Note also that this stored information does not need to be processed as described herein; the generation, storage and/or transmission of the quantized and digitized continuous-time signal has utility in and of itself.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 1</figref> shows one way of representing an input analog signal x(t) with a quantized continuous-time signal w(t). In this embodiment, the continuous-time bit waveforms that form w(t) are shown below x(t) and w(t), where b<sub>K </sub>represents the least significant bit of the continuous-time digital signal. Although <figref idref="DRAWINGS">FIG. 1</figref> shows only three bits in the continuous-time digital signal, it is understood that the digitized continuous-time signal w(t) may include any number of bits. Other embodiments for representing an input analog signal with a quantized and digitized continuous-time signal may also be used. It is emphasized that what is different here from the prior art is that the bit waveforms are continuous-time ones. This is to be distinguished from the standard representation using discrete-time digital signals.</p>
<p id="p-0024" num="0023">The continuous-time digital signal may be processed by a continuous-time ADC/DSP/DAC (Analog to Digital Converter/Digital Signal Processor/Digital to Analog Converter) that delays each bit of the continuous-time digital signal with one or more continuous-time delay lines. Since the bits of the continuous-time digital signal do not derive from periodic sampling, each bit remains a function of continuous-time. The DSP then multiplies the delayed bits by filtering coefficients, and forms a binary-weighted sum of the multiplication products. The resulting sum is a filtered version of the continuous-time digital signal, where the coefficients define the filter transfer function.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram of a continuous-time ADC/DSP/DAC <b>100</b>, including a non-sampling ADC <b>102</b>, a continuous-time delay <b>104</b>, a coefficient multiplier <b>106</b>, a binary-weighted adder <b>108</b>, and a DAC <b>110</b>. In general, the ADC <b>102</b> receives an analog signal <b>112</b>, and produces a sequence of discrete amplitude values <b>114</b> that is a continuous-time digital version of the analog signal. In one embodiment, the non-sampling ADC <b>102</b> quantizes the input analog signal <b>112</b> by comparing the input signal <b>112</b> to 16 discrete reference voltage levels, and setting the continuous-time digital signal <b>114</b> to a digital value that corresponds to a particular reference voltage level whenever the input level equals or exceeds that reference voltage level. Other types of non-sampling quantization known in the art may also be used.</p>
<p id="p-0026" num="0025">Although shown in <figref idref="DRAWINGS">FIG. 2</figref> as a single line, the continuous-time digital signal <b>114</b> is actually a digital word having a most significant bit, a least significant bit, and a word width, as described in more detail later.</p>
<p id="p-0027" num="0026">The continuous-time delay <b>104</b> receives the continuous-time digital signal <b>114</b> from the ADC <b>102</b> and forwards a delayed version <b>116</b> of the continuous-time digital signal <b>114</b> along with the original continuous-time digital signal <b>114</b> to the coefficient multiplier <b>106</b>.</p>
<p id="p-0028" num="0027">The coefficient multiplier <b>106</b> multiplies the continuous-time digital signal <b>114</b> with one coefficient, and multiplies the delayed version <b>116</b> by another coefficient. These coefficients correspond to a transfer function, and are described in more detail below. The binary-weighted adder <b>108</b> combines the products <b>118</b> of the coefficients and the delayed/undelayed continuous-time digital signal as a weighted summation with respect to relative significance of the bits within those products <b>118</b>.</p>
<p id="p-0029" num="0028">The DAC <b>110</b> receives the weighted sum <b>120</b> and produces an analog output signal <b>122</b> therefrom.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 3</figref> is a more detailed view of one possible implementation of the continuous-time DSP <b>100</b> shown in <figref idref="DRAWINGS">FIG. 2</figref>. The non-sampling ADC <b>102</b> quantizes the input analog signal <b>112</b> and produces a continuous-time digital signal <b>114</b> represented by a four-bit word, i.e., with 16-level quantization. Such an ADC can be implemented, for example, using a conventional “flash” architecture, in which an array of comparators compares the input signal to quantization level values. The outputs of the comparator can be fed into encoding logic, to produce the required bit values at the output of the ADC, without using any clock and latches, in order to ensure continuous-time operation. While the code used in the present example is a straight-forward one, it is to be understood that other well-known digital codes can be employed as well, with associated well-known advantages.</p>
<p id="p-0031" num="0030">A continuous-time delay <b>104</b> delays each bit of the continuous-time digital signal <b>114</b> by a time period T. In this embodiment, each of the continuous-time delays <b>104</b> is a cascade of logic inverters, some or all coupled with load capacitances matched to their current drive capability to produce an appropriately slow switching time. Other continuous-time delay techniques known in the art may also be used for the delays <b>104</b>. The delay such structures provide can be set to a precise value by making their current drive capability adjustable and locking their responses to an external clock, using standard techniques know in the art. Note that a clock used for this purpose does not affect the continuous-time nature of the signal flow through the DSP <b>100</b>, and this is the only way the DSP <b>100</b> uses a clock. In other words, a clock used to set the delay lines to a precise delay value is not related to sampling in any way.</p>
<p id="p-0032" num="0031">The coefficient multiplier <b>106</b> then multiplies the continuous-time digital signal <b>114</b> by coefficient C<sub>A</sub>, and multiplies the delayed version <b>116</b> of the continuous-time digital signal <b>114</b> by coefficient C<sub>B</sub>. In this embodiment, the “multiplication” is not true arithmetic multiplication, but is rather gating via AND gates <b>130</b>. The coefficient C<sub>A </sub>includes three bits, C<sub>1</sub>, C<sub>2 </sub>and C<sub>3</sub>. The coefficient C<sub>B </sub>includes three bits Ĉ<sub>1</sub>, Ĉ<sub>2 </sub>and Ĉ<sub>3</sub>. Thus, for each bit from the ADC <b>102</b>, the multiplier <b>106</b> produces six bits of product data <b>118</b>. For example, D4, the most significant bit (MSB) from the ADC <b>102</b> results in C<sub>1</sub>.D4, C<sub>1</sub>.D4, C<sub>1</sub>.D4, Ĉ<sub>1</sub>.D<sup>2</sup>.D<sup>2</sup>4 and Ĉ<sub>3</sub>.D<sup>2</sup>4, where D4 is the un-delayed continuous-time digital signal <b>114</b>, and D<sup>2</sup>4 is the delayed D4 <b>116</b>.</p>
<p id="p-0033" num="0032">The binary-weighted adder <b>108</b> sums the resulting 24 bits of product data <b>118</b> via three summing stages. The first summing stage includes a set of four-bit adders <b>132</b><i>a</i>, <b>132</b><i>b</i>, <b>132</b><i>c </i>and <b>132</b><i>d</i>, each of which adds the delayed products to the un-delayed products for a particular bit to produce an intermediate sum. Note that although not shown in <figref idref="DRAWINGS">FIG. 3</figref>, the most significant input for each set of four-bit inputs to the adders <b>132</b> is held fixed at logic zero.</p>
<p id="p-0034" num="0033">The second stage includes two eight-bit adders <b>134</b><i>a </i>and <b>134</b><i>b</i>, each of which adds the intermediate sum for two of the bit paths from the ADC <b>102</b>. This second stage accounts for the decreasing bit significance from the most significant bit path to the least significant bit path by increasingly padding logic zeros in the higher significant bits of the adder inputs. This padding produces the “binary weighting” described herein. For the D4 bit path, adder <b>134</b><i>a </i>has a logic zero at input b<b>8</b>, and uses bits b<b>4</b> through b<b>7</b> to receive the intermediate sum bits. For the D3 bit path, adder <b>134</b><i>a </i>has logic zeros at inputs a<b>7</b> and a<b>8</b>, and uses bits a<b>3</b> through a<b>6</b> to receive the intermediate sum bits. For the D2 path, adder <b>134</b><i>b </i>has logic zeros at inputs b<b>6</b> through b<b>8</b>, and uses bits b<b>2</b> through b<b>5</b> to receive the intermediate sum bits. For the D1 path, adder <b>134</b><i>b </i>has logic zeros at input bits a<b>5</b> through a<b>8</b>, and uses bits a<b>1</b> through a<b>4</b> to receive the intermediate sum bits. Note also that all unused lower bits on adders <b>134</b><i>a </i>and <b>134</b><i>b </i>are set to logic zero.</p>
<p id="p-0035" num="0034">The third summing stage includes a single eight-bit adder <b>136</b> that adds the outputs from the adders <b>134</b><i>a </i>and <b>134</b><i>b </i>to produce the weighted sum <b>120</b>. Although not shown in <figref idref="DRAWINGS">FIG. 3</figref>, the weighted sum <b>120</b> is subsequently converted to an analog signal via a digital to analog conversion process, i.e., as with the DAC <b>110</b> shown in <figref idref="DRAWINGS">FIG. 2</figref>. It is to be understood that the adder implementation is only used as an example. In high-speed applications, adder implementation should possibly take into account the nonzero propagation delays in the logic gates, and consider the delays of the various paths so that “isochronic forks” are implemented to ensure that bits to be added change their value at the same time.</p>
<p id="p-0036" num="0035">The embodiment shown in <figref idref="DRAWINGS">FIG. 3</figref> uses a four-bit digital signal and employs only two coefficients as an example for the sake of simplicity. In general, the concepts this embodiment represents can readily be extended to more bits and more coefficients. In addition, although for simplicity above we have presented the technique using for an example a non-recursive structure, the technique described can be implemented also in recursive form, where there is feedback such that the output of the DSP is processed in a manner similar to that above and is fed back to an internal point in the processor. Several other topologies commonly used in signal processors, as described, for example, in A. V. Oppenheim and R. W. Schafer, “Discrete-Time Signal Processing,” Prentice-Hall, 1989 and elsewhere in the relevant technical literature, can also be used with this technique. Further, the specific components of this embodiment (i.e., the multiplier, the adder, the continuous-time delay, etc.) can all be implemented via other techniques known in the art, including optical ones. We will describe other more general embodiments later in this description, although no particular embodiment is mean to limit the concepts described herein.</p>
<p id="p-0037" num="0036">The transfer function corresponding to each of N tap delays (where N in the example above is 2) is e<sup>−sT</sup>, where s is the Laplace transform variable and T is the continuous-time delay between taps. Thus, in the case of integer n, each continuous-time bit is processed by a transfer function of the form:</p>
<p id="p-0038" num="0037">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <mrow>
          <mi>H</mi>
          <mo>⁢</mo>
          <mstyle>
            <mspace width="0.6em" height="0.6ex"/>
          </mstyle>
          <mo>⁢</mo>
          <mrow>
            <mo>(</mo>
            <msup>
              <mi>ⅇ</mi>
              <mi>sT</mi>
            </msup>
            <mo>)</mo>
          </mrow>
        </mrow>
        <mo>=</mo>
        <mrow>
          <munderover>
            <mo>∑</mo>
            <mrow>
              <mi>n</mi>
              <mo>=</mo>
              <mn>0</mn>
            </mrow>
            <mi>N</mi>
          </munderover>
          <mo>⁢</mo>
          <mstyle>
            <mspace width="0.3em" height="0.3ex"/>
          </mstyle>
          <mo>⁢</mo>
          <mrow>
            <msub>
              <mi>c</mi>
              <mi>n</mi>
            </msub>
            <mo>⁢</mo>
            <msup>
              <mi>ⅇ</mi>
              <mrow>
                <mo>-</mo>
                <mi>nsT</mi>
              </mrow>
            </msup>
          </mrow>
        </mrow>
      </mrow>
    </mtd>
    <mtd>
      <mrow>
        <mo>(</mo>
        <mn>1</mn>
        <mo>)</mo>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
</p>
<p id="p-0039" num="0038">The continuous-time digital signal <b>114</b> is represented as a binary-weighted sum of individual bits, each of which is processed by transfer function (1). The binary-weighted sum formed by the adder <b>108</b> therefore corresponds to the continuous-time digital signal <b>114</b> processed by exactly the same transfer function (1). The transfer function of (1) corresponds to that of classical analog transmission-line filters, and is identical to the corresponding transfer function H(z) of a conventional digital filter.</p>
<p id="p-0040" num="0039">Substituting jω for s in transfer function (1) shows that the frequency response is periodic, with period 2π/T. Since the continuous-time DSP <b>100</b> does not use sampling in any form, there is no aliasing in the filtered output, i.e., an input at a frequency ω produces an output at a frequency ω, regardless of the value of ω.</p>
<p id="p-0041" num="0040">The continuous-time DSP described herein produces improved quantization noise characteristics as compared to sampling DSP systems because the quantization error of the continuous-time DSP contains only harmonics of the analog input signal. No aliasing of distortion components into the baseband occurs.</p>
<p id="p-0042" num="0041">Due to the way the ADC <b>102</b> quantizes the analog signal, i.e., by generating quantization steps when the input signal crosses reference voltage levels, the step intervals in the quantization signal <b>114</b> are short when input analog signal <b>112</b> changes rapidly. Even shorter intervals can occur at the output of the binary-weighted adder <b>108</b> due to certain input combinations. These short step intervals, alone or combined with glitches caused by the combinatorial hardware, can cause momentary errors in the analog output signal <b>122</b>. Such errors, however, are significantly different as compared to conventional DSP systems. Such deviations simply mean that the value of the quantization error in the output signal <b>122</b> changes somewhat, similar to the way noise and distortion in analog system vary depending on transient changes in system parameters. For the continuous-time DSP system described herein, the momentary errors in the analog output signal <b>122</b> are periodic when the input analog signal is periodic since there is no sampling. The noise spectra due to these errors occur at harmonic frequencies of the input, changing only the harmonic distortion of the output signal <b>122</b>. Such momentary errors do not have a lasting effect on the output signal <b>122</b> because the DSP <b>100</b> does not use components with memory. The errors contribute little to the total mean square error of the output signal <b>122</b>, precisely because they last only a short time and because much of the energy they contribute is out of band.</p>
<p id="p-0043" num="0042">Although the embodiment described in <figref idref="DRAWINGS">FIGS. 2 and 3</figref> is a hardware implementation, the concepts of that embodiment can also be implemented via software executing by a processor. These concepts can also be implemented in a recursive structure, in either hardware or software.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 4</figref> shows a general representation of the continuous-time DSP described herein. In this figure, CT means continuous-time, D represents a continuous-time delay block, and a<sub>n </sub>represents a coefficient multiplication. <figref idref="DRAWINGS">FIG. 4</figref> adds an “_a” suffix to the reference numbers from corresponding components in <figref idref="DRAWINGS">FIG. 2</figref> to highlight the relationship between components in the two figures. As described herein, and as represented in <figref idref="DRAWINGS">FIG. 4</figref> by broken lines and multiple dots (...), the continuous-time digital signal may include any number of bits, and the processor may use any number of delays and coefficients.</p>
<p id="p-0045" num="0044">Other aspects, modifications, and embodiments are within the scope of the following claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001" nb-file="US07298310-20071120-M00001.NB">
<img id="EMI-M00001" he="8.81mm" wi="76.20mm" file="US07298310-20071120-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An apparatus for generating and storing a continuous-time quantized and digitized signal from a continuous-time analog signal, comprising:
<claim-text>one or more comparators for comparing the continuous-time analog signal to a set of reference signals, and for producing an intermediate signal that represents the reference signal to which the analog signal is nearest in amplitude;</claim-text>
<claim-text>an encoder for producing a continuous-time digital word that represents the intermediate signal, wherein the continuous-time digital word is not related to a sampling reference, and the continuous-time digital word can change state at any point along a time continuum; and,</claim-text>
<claim-text>a continuous-time storage medium for storing the continuous-time digital word.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. A method of generating a continuous-time quantized and digitized signal from a continuous-time analog signal, comprising:
<claim-text>comparing the continuous-time analog signal to a set of reference signals, and producing an intermediate signal that represents the reference signal to which the analog signal is nearest in amplitude;</claim-text>
<claim-text>producing a continuous-time digital word that represents the intermediate signal, wherein the continuous-time digital word is not related to a sampling reference, and the continuous-time digital word can change state at any point along a time continuum; and,</claim-text>
<claim-text>storing the continuous-time digital word on a continuous-time storage medium.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. A method of generating a continuous-time quantized and digitized signal from a continuous-time analog signal, comprising:
<claim-text>producing a sequence of discrete signals corresponding to the analog signal, wherein each discrete signal corresponds to the analog signal falling within one of a set of contiguous amplitude ranges;</claim-text>
<claim-text>producing a sequence of continuous-time digital words, wherein each of the digital words represents a corresponding discrete signal from the sequence of discrete signals, and wherein the continuous-time digital word is not related to a sampling reference, and the continuous-time digital word can change state at any point along a time continuum; and,</claim-text>
<claim-text>storing the digital word on a continuous-time storage medium.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. A continuous-time digital signal processor, comprising:
<claim-text>one or more continuous-time delay lines for producing one or more delayed versions of the continuous-time digital signal, each delayed version being delayed by a specified amount of time;</claim-text>
<claim-text>a continuous-time digital multiplier for multiplying the continuous-time digital signal and each of the delayed versions by one or more associated digital coefficients, so as to produce a set of products; and,</claim-text>
<claim-text>a non-clocked binary-weighted adder for adding the set of products, so as to produce a sum value corresponding to a transfer function defined by the associated coefficients and delays.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The continuous-time digital signal processor of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein at least one of the one or more continuous-time delay lines, the continuous-time digital multiplier, and the non-clocked binary-weighted adder are approximated with time-quantized components.</claim-text>
</claim>
</claims>
</us-patent-grant>
