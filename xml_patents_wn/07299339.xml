<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299339-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299339</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10931068</doc-number>
<date>20040830</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>281</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>12</main-group>
<subgroup>08</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>712 24</main-classification>
<further-classification>712 10</further-classification>
<further-classification>712 11</further-classification>
</classification-national>
<invention-title id="d0e53">Super-reconfigurable fabric architecture (SURFA): a multi-FPGA parallel processing architecture for COTS hybrid computing framework</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5197130</doc-number>
<kind>A</kind>
<name>Chen et al.</name>
<date>19930300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>712  3</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5233539</doc-number>
<kind>A</kind>
<name>Agrawal et al.</name>
<date>19930800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>716 16</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5684980</doc-number>
<kind>A</kind>
<name>Casselman</name>
<date>19971100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>703 23</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6026459</doc-number>
<kind>A</kind>
<name>Huppenthal</name>
<date>20000200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6076152</doc-number>
<kind>A</kind>
<name>Huppenthal et al.</name>
<date>20000600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6247110</doc-number>
<kind>B1</kind>
<name>Huppenthal et al.</name>
<date>20010600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6295598</doc-number>
<kind>B1</kind>
<name>Bertoni et al.</name>
<date>20010900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6339819</doc-number>
<kind>B1</kind>
<name>Huppenthal et al.</name>
<date>20020100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6356983</doc-number>
<kind>B1</kind>
<name>Parks</name>
<date>20020300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6434687</doc-number>
<kind>B1</kind>
<name>Huppenthal</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6594736</doc-number>
<kind>B1</kind>
<name>Parks</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6627985</doc-number>
<kind>B2</kind>
<name>Huppenthal et al.</name>
<date>20030900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>6684318</doc-number>
<kind>B2</kind>
<name>DeHon et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>712 15</main-classification></classification-national>
</citation>
<citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>2003/0065904</doc-number>
<kind>A1</kind>
<name>Burns et al.</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>712 11</main-classification></classification-national>
</citation>
<citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>2004/0003201</doc-number>
<kind>A1</kind>
<name>Burns et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>712 11</main-classification></classification-national>
</citation>
<citation>
<nplcit num="00016">
<othercit>“SRC Technology Overview”, http://www.srccomp.com/Technology.htm, © Oct. 1999-2004 SRC Computers, Inc., Colorado Springs, CO, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00017">
<othercit>Barat et al., “Low Power Coarse-Grained Reconfigurable Instruction Set Processor”; http://www.elis.rug.ac.be/wog/edegem2003/barat.pdf, (2003).</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00018">
<othercit>Virtual Java/FPGA Interface for Networked Reconfiguration, http://www.imec.be/reconfigurable/pdf/ASPDAC<sub>—</sub>01<sub>—</sub>virtual.pdf, (2000).</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>23</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>712 24</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>712 10</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>712 11</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>10</number-of-drawing-sheets>
<number-of-figures>12</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20060095716</doc-number>
<kind>A1</kind>
<date>20060504</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Ramesh</last-name>
<first-name>Tirumale K.</first-name>
<address>
<city>Centreville</city>
<state>VA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Ingrassia Fisher &amp; Lorenz, P.C.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>The Boeing Company</orgname>
<role>02</role>
<address>
<city>Chicago</city>
<state>IL</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Kindred</last-name>
<first-name>Alford</first-name>
<department>2181</department>
</primary-examiner>
<assistant-examiner>
<last-name>Lai</last-name>
<first-name>Vincent</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A field programmable gate array includes a virtual bus interface that receives a control word from a host processor over a standard I/O bus. A configurable very long instruction word (VLIW) controller receives the control word via virtual bus interface signals mapped from the virtual bus interface. A reconfigurable communication and control fabric controls the data paths and programming modes of single instruction-multiple data (SIMD) processing element cells. The configurable VLIW controller has an interface with the reconfigurable communication and control fabric. SIMD processing element cells are controlled by the configurable VLIW controller through the reconfigurable communication and control fabric via the interface.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="154.35mm" wi="193.21mm" file="US07299339-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="211.41mm" wi="155.79mm" orientation="landscape" file="US07299339-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="222.25mm" wi="159.60mm" orientation="landscape" file="US07299339-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="197.87mm" wi="95.08mm" orientation="landscape" file="US07299339-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="245.96mm" wi="184.91mm" orientation="landscape" file="US07299339-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="249.77mm" wi="168.66mm" orientation="landscape" file="US07299339-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="232.33mm" wi="152.99mm" orientation="landscape" file="US07299339-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="242.82mm" wi="152.65mm" orientation="landscape" file="US07299339-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="236.81mm" wi="176.28mm" orientation="landscape" file="US07299339-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="230.46mm" wi="155.19mm" orientation="landscape" file="US07299339-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="251.46mm" wi="181.86mm" file="US07299339-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">The present invention generally relates to computer architectures. More particularly, the present invention relates to a parallel processing computer architecture using multiple field programmable gate arrays (FPGA) for a commercial off-the-shelf (COTS) hybrid-computing framework.</p>
<p id="p-0003" num="0002">High performance computer systems having flexibility for providing user configuration are attracting wide spread interest, and in particular, in the defense and intelligence communities. Increasing silicon density in field programmable gate arrays (FPGAs) is attracting many users to build parallel processing architectures such as single instruction-multiple data (SIMD) architectures using coarse-grained processing arrays in FPGAs. Signal and image processing applications are well fit to parallel data structures handled by multiple data architectures. Even though digital signal processors (DSPs) are maturing to use more SIMD or very long instruction word (VLIW) architecture elements within a processor, still there is a compelling argument against using DSPs for high performance computer systems due to their inflexibility and compiler generated overhead. So, more and more solution developers are turning towards FPGA based high performance systems.</p>
<p id="p-0004" num="0003">A major problem faced by these solution developers is to accelerate compute intensive functions in these high-data processing applications—such as wavelet transformation, high performance simulation, and cryptography—by executing the functions in hardware. Many compute intensive functions have regular data structures that are highly amenable to data parallelism and work well with traditional SIMD parallel processing techniques. With growing silicon component density in FPGAs, it is becoming more desirable to implement SIMD using FPGAs.</p>
<p id="p-0005" num="0004">Another important problem faced by solution developers is the ability to make the solution independent of any particular commercial programmable hardware board vendor. Input/output (I/O) is still a bottleneck to achieving high overall system throughput performance. Fast data transfer is required and most importantly the interoperability of systems across different I/O standards is required. Currently, there are various I/O and switch fabric standards in place—such as PCI, PCI-X, PCI-Express, Infiniband, and RapidIO, for example—and new standards may emerge in the future. In essence, what is needed is a means to map from the commercial standard I/O buses—such as those noted—to a single, universal bus and to build application glue to a single, universal memory port. With rapid requirements changes and technology development, adaptability of a solution is required to protect investment in the solution. As systems have to be interoperable capable with other systems in the future, a solution is needed for connecting heterogeneous high performance computing systems and smart sensors. A further consideration is that a solution can adapt itself to address critical needs of defense applications running on next generation embedded distributed systems.</p>
<p id="p-0006" num="0005">As can be seen, there is a need for a solution to the technical problem of improving high performance for very computation-intensive, high data stream applications over conventional high performance servers or host machines. There is also a need for a solution to provide support as a “super hardware accelerator” for servers and other host machines.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0007" num="0006">In one embodiment of the present invention, a system includes: a configurable very long instruction word controller that receives a control word from a host processor; a reconfigurable communication and control fabric having a very long instruction word interface to the configurable very long instruction word controller; and a single instruction-multiple data processing element cell controlled by the configurable very long instruction word controller through the reconfigurable communication and control fabric via the very long instruction word interface.</p>
<p id="p-0008" num="0007">In another embodiment of the present invention, a reconfigurable communication and control fabric has interfaces to a single instruction-multiple data processing element cell, a configurable very long instruction word controller, and a floating-point unit. The reconfigurable communication and control fabric includes: an inter-chip communication module with a “v4” interface to the configurable very long instruction word controller; a data memory controller having a “v6” interface to the configurable very long instruction word controller; and an I/O controller with a “cd” interface to the data memory controller, an interface to the inter-chip communication module, and a “v5” interface to the configurable very long instruction word controller.</p>
<p id="p-0009" num="0008">In still another embodiment of the present invention, a single instruction-multiple data processing element cell includes: a multiple number of processing elements and a fine grain reconfigurable cell having a fine grain reconfigurable cell controller interface to each of the processing elements.</p>
<p id="p-0010" num="0009">In yet another embodiment of the present invention a virtual bus interfaces to a super reconfigurable fabric architecture module. The virtual bus interface includes a virtual memory port that maps a standard bus protocol to virtual bus interface signals provided between the virtual bus interface and the super reconfigurable fabric architecture module.</p>
<p id="p-0011" num="0010">In a further embodiment of the present invention, a field programmable gate array includes a virtual bus interface that receives a control word from a host processor over a standard I/O bus; a configurable very long instruction word controller that receives the control word via virtual bus interface signals from the virtual bus interface; a reconfigurable communication and control fabric wherein the configurable very long instruction word controller has a very long instruction word interface “v” with the reconfigurable communication and control fabric; and a single instruction-multiple data processing element cell controlled by the configurable very long instruction word controller through the reconfigurable communication and control fabric via the very long instruction word interface “v”.</p>
<p id="p-0012" num="0011">In a still further embodiment of the present invention, a method for parallel processing includes operations of: interconnecting a single instruction-multiple data processing element cell through a reconfigurable communication and control fabric to a configurable very long instruction word controller; and configuring the configurable very long instruction word controller via a control word from a host processor so that the configurable very long instruction word controller controls processing in the single instruction-multiple data processing element cell, and the configurable very long instruction word controller controls communication and control in the reconfigurable communication and control fabric.</p>
<p id="p-0013" num="0012">These and other features, aspects and advantages of the present invention will become better understood with reference to the following drawings, description and claims.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 1</figref> is a system block diagram of super-reconfigurable fabric computer architecture in accordance with one embodiment of the present invention;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 2</figref> is a system block diagram showing a detail of the SPEC and RCCF subsystems shown in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 3</figref> is an information map diagram of a very long instruction word for super-reconfigurable fabric computer architecture in accordance with one embodiment of the present invention;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 4</figref> is a detailed system block diagram of a super-reconfigurable fabric computer architecture showing one example of distribution of system modules among multiple FPGA chips in accordance with an embodiment of the present invention;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 5A</figref> is a system block diagram illustrating an example of interconnection of super-reconfigurable fabric computer architecture modules and instruction flow for SIMD programming in accordance with an embodiment of the present invention;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 5B</figref> is a system block diagram illustrating an example of interconnection of super-reconfigurable fabric computer architecture modules and instruction flow for multiple SIMD programming in accordance with an embodiment of the present invention;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 6</figref> is a chart providing an overview of virtual bus interface signals in accordance with one embodiment of the present invention;</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 7</figref> is a system block diagram illustrating an example of interfaces between a virtual bus interface and a super-reconfigurable fabric computer architecture module in accordance with one embodiment of the present invention;</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 8</figref> is a system block diagram illustrating an example of a single generic self-processing interface for virtual memory for super-reconfigurable fabric computer architecture in accordance with an embodiment of the present invention;</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 9</figref> is a system block diagram showing detail for an example implementation for an inter-chip communication module (ICCM) as shown in <figref idref="DRAWINGS">FIG. 4</figref>;</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 10</figref> is a system block diagram showing detail for an example implementation for a virtual bus interface as shown in <figref idref="DRAWINGS">FIGS. 4 and 7</figref>; and</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 11</figref> is a flowchart of a method for multiple data computer processing in accordance with one embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0026" num="0025">The following detailed description is of the best currently contemplated modes of carrying out the invention. The description is not to be taken in a limiting sense, but is made merely for the purpose of illustrating the general principles of the invention, since the scope of the invention is best defined by the appended claims.</p>
<p id="p-0027" num="0026">Broadly, the present invention provides a computer architecture referred to herein as super-reconfigurable fabric architecture. Super-reconfigurable fabric architecture can provide a major high performance reconfigurable platform building block supporting a hybrid-computing framework. As systems are required to become interoperable capable with other systems in the future, super-reconfigurable fabric architecture can facilitate connecting heterogeneous high performance computing systems and smart sensors. Super-reconfigurable fabric architecture can adapt itself to address critical needs of defense applications running on next generation embedded distributed systems.</p>
<p id="p-0028" num="0027">Super-reconfigurable fabric architecture can provide a scaleable and highly reconfigurable system solution using multiple-field programmable gate arrays (FPGAs). The super-reconfigurable fabric architecture has been developed exploiting parallel processing techniques. A major problem solved by super-reconfigurable fabric architecture is to accelerate computation—intensive functions in high-data processing applications—such as wavelet transformation, high performance simulation, and cryptography—by executing the functions in hardware using a unique combination of coarse grain FPGA architecture, parallel processing techniques and a reconfigurable communication and control fabric (RCCF)—such as RCCF shown in <figref idref="DRAWINGS">FIGS. 1 and 4</figref>. Computation-intensive functions generally have regular data structures that are highly amenable to data parallelism and work well with traditional single instruction-multiple data (SIMD) parallel processing techniques. Increasing component density in FPGAs provides feasibility to implement SIMD processing using an array of coarse-grain processing elements in FPGAs. Using a high density FPGA, one embodiment of the invention provides a scalable FPGA reconfigurable architectural capability with provision to program SIMD elements, multiple SIMD elements or VLIW (very long instruction word) elements.</p>
<p id="p-0029" num="0028">Another major problem solved by super-reconfigurable fabric architecture is the ability to provide processing solutions that are independent of the commercial programmable hardware board vendor. Using a virtual bus interface (VBI)—such as VBI shown in <figref idref="DRAWINGS">FIGS. 4</figref>, <b>7</b>, and <b>10</b>—all communication to the hardware is mapped to an on-chip memory. With this approach, application ports need only communicate through these virtual memory ports. In essence, what is provided is a plug-in to map from the commercial standard I/O buses—such as PCI, PCI-X, PCI-Express, Infiniband, and RapidIO, for example—to the virtual bus and build application glue to the virtual memory port. In one embodiment of the present invention, this virtual bus interface and associated memory port architecture may be built into the reconfigurable communication and control fabric—RCCF—of super-reconfigurable fabric architecture providing a single, universal bus interface and associated memory port architecture.</p>
<p id="p-0030" num="0029">In general, super-reconfigurable fabric architecture provides a solution to technical problems of improving performance for very computation-intensive, high data stream applications over conventional high performance servers or host machines and of providing support as a “super hardware accelerator” for servers and other host machines.</p>
<p id="p-0031" num="0030">One embodiment differs, for example, from a prior art computer architecture known as Unified Computing Architecture in that specific MAP® processors within “Direct Execution Logic” (DEL) are exploited only with FPGAs programmable logic devices (PLD)s and the architecture essentially shifts the software-directed processors area to microprocessors (uP), application specific integrated circuits (ASIC)s, and digital signal processors (DSP)s within “Dense Logic Device” (DLD). The Unified Computing Architecture programming environment can provide either exclusive (DEL) access or implicit fixed-architecture (DLD) access. So, from a general application development point of view, the application program code needs to state explicitly to launch on the DEL. One embodiment of the present invention may differ by launching a high-level object to FPGA when recognized with service availability. This makes architectures using the super-reconfigurable fabric architecture highly versatile as more resources can be added across chips, boards and even systems across backplanes. Super-reconfigurable fabric architecture can provide a generic platform with a group of acceleration resources that can be mapped to FPGAs, ASICs with some programmable cores, and any other special purpose processors. A major difference between super-reconfigurable fabric architecture and DEL is that a DEL is explicit access of FPGA at a much lower level (fine-grain). Super-reconfigurable fabric architecture is a higher-level defined hybrid architecture on which applications are mapped. Super-reconfigurable fabric architecture is transparent to the object mapping from a high-level application code. Also, super-reconfigurable fabric architecture uses a VLIW emitted control as further described below. The flexibility of a generic super-reconfigurable fabric architecture is an added advantage and the FPGA mapping is a combination of coarse-grain (super-reconfigurable fabric architecture multiple processors) and fine-grain reconfigurable cells (FGRC)—such as shown in <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 1</figref> illustrates system <b>100</b> embodying a super-reconfigurable fabric architecture (SuRFA) in accordance with one embodiment of the present invention. Super-reconfigurable fabric architecture may be considered to be a hybrid architecture that combines coarse-grain field programmable gate array architecture with SIMD and multiple SIMD (MSIMD) coupled parallel processing techniques providing temporal programmability of an array of simple coarse-grain processing elements and fine-grain FPGA cells within a multi-FPGA platform. For example, <figref idref="DRAWINGS">FIG. 4</figref> shows an example distribution of system modules among two FPGAs, FPGA <b>102</b> and FPGA <b>104</b>. Super-reconfigurable fabric architecture can serve as a super hardware accelerator to port software executable objects in hardware.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a four-chip super-reconfigurable fabric architecture. For example, each of four FPGA chips may contain one of the configurable very long instruction word (CVLIW) control modules <b>106</b> (also referred to as CVLIW controller <b>106</b>) and one of the SIMD processing element cell and reconfigurable control and communication fabric (SPEC&amp;RCCF) modules <b>108</b>. Two such FPGA chips <b>102</b> and <b>104</b> are illustrated in <figref idref="DRAWINGS">FIG. 4</figref>. <figref idref="DRAWINGS">FIG. 1</figref> also shows the signal interfaces between modules, which may be defined as follows.</p>
<p id="p-0034" num="0033">Host <b>110</b> may send an FPGA control word <b>112</b> that may include data block length, start address, and accelerator function. Each CVLIW application control flow may be hardwired (programmed in CVLIW control modules <b>106</b>) and executed with instruction pointer using a functional slot in FPGA control. The subsequent words may be all data words <b>112</b><i>b </i>on the I/O interface <b>114</b>. I/O interface <b>114</b> is also shown in <figref idref="DRAWINGS">FIG. 2</figref>, where it is designated “u”. The data word <b>112</b><i>b </i>is designated as data(u) and the instruction word <b>112</b><i>a </i>as inst(u). The CVLIW <b>106</b> is configurable in the sense that all CVLIWs <b>106</b> may be synchronized to one accelerator function or multiple accelerator functions stated in inst(u), and the accelerator function or multiple accelerator functions may be executed within individual CVLIWs <b>106</b>.</p>
<p id="p-0035" num="0034">An example of a high level application may be given as follows. &lt;A&gt;=&gt; FPGA function “A” executed on FPGA with sub-functions across multiple FPGAs. Each sub-function is executed by application control flow within an individual CVLIW <b>106</b>. &lt;A&gt;, &lt;B&gt;, &lt;C&gt;=&gt; FPGA three accelerator functions are executed simultaneously on three different FPGAs or on three hardware partitions within a single FPGA.</p>
<p id="p-0036" num="0035">FPGA control word <b>112</b> may include a data pointer, block count, and mode and may be denoted as: FPGA control=&gt; (data pointer, block count, mode). Mode component of FPGA control word <b>112</b> may determine the above options,—e.g., function “A” executed on FPGA with sub-functions across multiple FPGAs or three accelerator functions are executed simultaneously on three different FPGAs—and may also determine how each CVLIW <b>106</b> controls the processing arrays as SIMD or MSIMD, as illustrated by the examples shown in <figref idref="DRAWINGS">FIGS. 5A and 5B</figref>. <figref idref="DRAWINGS">FIG. 5A</figref> shows, for example, an SIMD topology of control word flow for FPGA control word <b>112</b> (denoted “I” in <figref idref="DRAWINGS">FIG. 5A</figref>) on I/O interface <b>114</b>, and also shows an exemplary distribution of SIMD processing element cells (SPEC)s <b>116</b> among multiple FPGAs <b>102</b><i>a</i>, <b>102</b><i>b</i>, <b>102</b><i>c</i>, and <b>102</b><i>d</i>. Similarly, <figref idref="DRAWINGS">FIG. 5B</figref> shows, for example, an MSIMD topology of control word flow for FPGA control words <b>112</b> (denoted “I<b>1</b>” through “I<b>8</b>” in <figref idref="DRAWINGS">FIG. 5B</figref>) on I/O interface <b>114</b>, and also shows an exemplary distribution of SIMD processing element cells (SPEC)s <b>116</b> among multiple FPGAs <b>102</b><i>a</i>, <b>102</b><i>b</i>, <b>102</b><i>c</i>, and <b>102</b><i>d. </i></p>
<p id="p-0037" num="0036">Many programming modes are possible depending on how the CVLIWs <b>106</b> are configured. For example, an SIMD mode using 64 processing elements (PEs)—such as PEs <b>119</b>—with four chips may be denoted SI<b>64</b> and other modes SI<b>16</b>, SI<b>32</b>, and so on may be similarly defined. An MSIMD mode SM<b>8</b> may have 8 MSIMD streams using 64 PEs mapped onto 4 chips. A mixed SIMD/VLIW mode may program floating point units (FPU)—such as FPUs <b>130</b>—and fine grain reconfigurable cells (FGRC)—such as FGRCs <b>117</b>—as VLIW resources supporting SIMD PE arrays. Each SPEC <b>116</b> may be described as a cell including a 2×2 array of simple n-bit coarse-grain processing elements <b>119</b>. Each PE <b>119</b> can execute, for example, arithmetic and logic unit (ALU) operations, shift operations, complex multiplication, and multiply-accumulate (MAC) type of operations. A PE <b>119</b> can communicate to another PE <b>119</b> through their I/O ports and passing through reconfigurable control and communication fabric (RCCF) <b>118</b>. Each cell or SPEC <b>116</b> may have a single-precision, IEEE compliant floating-point unit FPU <b>130</b> shared by PEs <b>119</b> within that cell or SPEC <b>116</b>. To achieve high throughput in FPU sharing, the FPUs <b>130</b> may be pipelined to execute on PE streams within a cell. As shown in <figref idref="DRAWINGS">FIG. 1</figref>, a super-reconfigurable fabric architecture system <b>100</b> on a single chip may consist of four cells, providing a cluster-based organization of simple and powerful reconfigurable processing elements with built-in high-speed input/output connectivity.</p>
<p id="p-0038" num="0037">Signal interfaces for reconfigurable control and communication fabric RCCF <b>118</b> may be implemented as shown in <figref idref="DRAWINGS">FIG. 2</figref>. The “v” interface <b>120</b> may be output by CVLIW control modules <b>106</b> as shown in <figref idref="DRAWINGS">FIG. 3</figref>. For example, instruction word inst(u) <b>112</b><i>a</i>, which may be passed to CVLIW control modules <b>106</b> over I/O interface <b>114</b>, may be a pointer to very long instruction word (VLIW) <b>120</b><i>a</i>. Various interfaces <b>121</b> through <b>127</b> of very long instruction word <b>120</b><i>a </i>may be passed over interface <b>120</b>, as shown in <figref idref="DRAWINGS">FIGS. 1 through 4</figref>, from CVLIW control modules <b>106</b> to various modules, for example, of the SPEC&amp;RCCF modules <b>108</b>, which may include RCCF <b>118</b> and SPEC <b>116</b>.</p>
<p id="p-0039" num="0038">For example, interface <b>121</b>, labeled “v1”, from dynamic reconfigurable cell (DRC) portion of VLIW <b>120</b><i>a </i>may provide dynamic reconfigurable interconnection control to SPECs <b>116</b>. Interface <b>122</b>, labeled “v2”, from fine grain reconfigurable cell (FGRC) portion of VLIW <b>120</b><i>a </i>may provide bit level fine grain mapping in the SPEC <b>116</b>, which may include a fine grain reconfigurable cell <b>117</b> and multiple processing elements, PEs <b>119</b>. Interface <b>123</b>, labeled “v3”, from floating point unit (FPU) portion of VLIW <b>120</b><i>a </i>may provide IEEE single-precision arithmetic control to FPUs <b>130</b>. Interface <b>124</b>, labeled “v4”, from inter-chip communication module (ICCM) portion of VLIW <b>120</b><i>a </i>may provide communication control instructions for inter-chip communication modules <b>132</b>. ICCMs <b>132</b> may be included, for example, in RCCFs <b>118</b> (see <figref idref="DRAWINGS">FIGS. 2 and 4</figref>) or SPEC &amp; RCCFs <b>108</b> (see <figref idref="DRAWINGS">FIGS. 1 and 4</figref>). Interface <b>125</b>, labeled “v5”, from input/output (I/O) portion of VLIW <b>120</b><i>a </i>may provide instructions for I/O controllers <b>134</b>. I/O controllers <b>134</b> may also be included, for example, in RCCFs <b>118</b> or SPEC &amp; RCCFs <b>108</b>. Interface <b>126</b>, labeled “v6”, from memory portion of VLIW <b>120</b><i>a </i>may provide instructions for data random access memory (RAM) controllers <b>136</b>, local RAM controllers <b>138</b>, and PE memory controllers <b>140</b> (see <figref idref="DRAWINGS">FIG. 4</figref>). Data RAM controllers <b>136</b>, local RAM controllers <b>138</b>, and PE memory controllers <b>140</b> may be included, for example, in RCCFs <b>118</b> or SPEC &amp; RCCFs <b>108</b>. Interface <b>127</b>, labeled “v7”, from SPEC portion of VLIW <b>120</b><i>a </i>may provide processing instructions to SPECs <b>116</b>.</p>
<p id="p-0040" num="0039">RCCFs <b>118</b> may include a number of other interfaces as seen in <figref idref="DRAWINGS">FIGS. 2 and 4</figref>. RCCFs <b>118</b> may include a processor generated address and data interface for processor referred to as “pad” <b>142</b>. RCCFs <b>118</b> may include an interface from I/O controller and SPEC referred to as “pcd” <b>144</b>. RCCFs <b>118</b> may include a data interface for floating point unit referred to as “fd” <b>146</b>. RCCFs <b>118</b> may include a memory controller interface to on-board memory <b>150</b> referred to as “mc” <b>148</b>. RCCFs <b>118</b> may include a memory control/address/data interface to SDRAM data memory <b>152</b> referred to as “mcad1” <b>153</b>. RCCFs <b>118</b> may include a memory control/address/data interface to SSRAM local RAM <b>154</b> referred to as “mcad2” <b>155</b>. RCCFs <b>118</b> may include a memory control/address/data interface to on-chip PE local memory <b>156</b> referred to as “mcad3” <b>157</b>.</p>
<p id="p-0041" num="0040">RCCFs <b>118</b> may include an I/O controller-control interface between SPECs <b>116</b> and memory controllers <b>140</b>, <b>136</b>, and <b>138</b>. RCCFs <b>118</b> may include a control/data interface between I/O controllers <b>134</b> and SDRAM controllers <b>138</b> and <b>136</b> referred to as “cd” <b>158</b>. RCCF <b>118</b> may include a common bus to the PE memory controller <b>140</b> “mcd” <b>158</b><i>a</i>. RCCF <b>118</b> may also include a single chip data entry point connection from I/O controller <b>134</b> to the ICCM via “icd” <b>158</b><i>b</i>. SPECs <b>116</b> may include a fine-grain reconfigurable cell (FGRC) controller-control interface <b>160</b> for the fine-grain reconfigurable cell <b>117</b> within each SPEC <b>116</b>. Super-reconfigurable fabric architecture—such as that embodied by system <b>100</b>—may include a reconfigurable inter-chip interconnection referred to as “w” <b>162</b>. Reconfigurable inter-chip interconnection w <b>162</b> may be provided by inter-chip communication module ICCM <b>132</b> (see <figref idref="DRAWINGS">FIGS. 1</figref>, <b>2</b>, <b>4</b>, and <b>9</b>). Reconfigurable inter-chip interconnection w <b>162</b> may provide closely coupled inter-PE communication from chip to chip, board to board and system to system, for example, between PEs <b>119</b>, FPGA chips <b>102</b>, FPGA chips <b>102</b> on separate boards, or from a first system <b>100</b> to a second system <b>100</b>. Reconfigurable switch fabric, e.g., high-speed serial adaptive switch fabric <b>133</b>, shown in <figref idref="DRAWINGS">FIG. 9</figref>, may be controlled by v1 <b>121</b> and v4 <b>124</b>, which have been described above.</p>
<p id="p-0042" num="0041">In summary, reconfigurable communication and control fabric <b>118</b> may be implemented with fine-grain FPGA architecture. Each cluster, e.g., SPEC <b>116</b> may be connected to its neighbor through RCCF <b>118</b>. RCCF <b>118</b> may control the data path unit of cell PEs <b>119</b>. The physical layer of the interconnection to the outside world may be a configurable layer of various emerging high-speed interconnection technologies built into RCCF <b>118</b>. RCCF <b>118</b> may also be an entry point for processing elements, e.g., PEs <b>119</b>, within a single chip in a multi-chip single board solution. A super scalar may be used for dynamic reconfigurable operations in the fine-grain RCCF <b>118</b>. The super scalar operations may be performed at the second level of the architecture and pointed to by reconfigurable code within the VLIW control word <b>120</b><i>a</i>. The dynamic status of the processors, e.g., PEs <b>119</b>, and hardware execution in run-time for these issued instructions, e.g., VLIW control words <b>120</b><i>a</i>, may be used to schedule and complete the reconfiguration in run-time. The primitive management directions given in the VLIW control, e.g., VLIW control words <b>120</b><i>a </i>and interfaces <b>120</b>, may manage the run-time. The compiler may set up a static scheduling of the states-gathering and decision-making supervision, which may be provided to the super scalar engine, e.g., CVLIW <b>106</b>, during its operation in run-time.</p>
<p id="p-0043" num="0042">Thus, super-reconfigurable fabric architecture control may be achieved through a unique configurable VLIW controller, e.g., CVLIW <b>106</b>. For example, the control algorithm for each functional operation (“op”) code, e.g., accelerator function, may be embedded into CVLIW <b>106</b> and the instruction word, e.g., VLIW <b>120</b><i>a</i>, points to the selected “accelerator function”. The instruction word <b>120</b><i>a </i>may have slots for SIMD/MSIMD selection, e.g., interfaces v1 <b>121</b> and v4 <b>124</b>, the data block length, and the beginning address of data block. The data width may be configurable from 8, 16, 32 and 64-bits. CVLIW controllers <b>106</b> can emit several types of controls, including: program control, memory control, data path configuration control, and I/O control. A configuration memory, e.g., PE local memory <b>156</b>, may be built into RCCF <b>118</b> for configuration of data path widths, pipeline stages within PE, e.g., PEs <b>119</b>, and also for RCCF self-reconfiguring its interconnections, for example, to its own SPECs <b>116</b> or to other RCCFs <b>118</b>.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 6</figref> illustrates exemplary virtual bus interface signals <b>163</b> that may be provided, for example, between virtual bus interface (VBI) <b>164</b> (see <figref idref="DRAWINGS">FIGS. 4</figref>, <b>7</b>, and <b>10</b>) and RAM controllers <b>136</b>, <b>138</b> and I/O controller <b>134</b> (see <figref idref="DRAWINGS">FIG. 4</figref>). Operation of virtual bus interface signals <b>163</b> is shown in more detail in <figref idref="DRAWINGS">FIGS. 7</figref>, <b>8</b>, and <b>10</b>.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 7</figref> shows exemplary interfaces between virtual bus interface VBI <b>164</b> and super-reconfigurable fabric architecture—such as a super-reconfigurable fabric architecture module <b>166</b>. Super-reconfigurable fabric architecture module <b>166</b> may be implemented, for example, as FPGA <b>102</b> as shown in <figref idref="DRAWINGS">FIG. 4</figref> and may include SPEC <b>116</b>, CVLIW controller <b>106</b>, and RCCF <b>118</b>. Direct memory access <b>168</b> may permit direct access of memory by the host <b>110</b>, bypassing the FPGA memory controller (e.g., PE memory controller <b>140</b>) and without using the super-reconfigurable fabric architecture module <b>166</b>. <figref idref="DRAWINGS">FIG. 7</figref> shows an example of virtual memory (VM) ports <b>176</b>. From an application within FPGA point of view, each VM port <b>176</b> may be a look-up table (LUT), hence the designation as VM-LUT ports <b>176</b>. The granularity of data width for memory ports may be 8-bits, as in the example shown. Each 8-bit port <b>176</b> may be implemented with a 16×8 distributed RAM <b>177</b> (see <figref idref="DRAWINGS">FIG. 8</figref>) of which one location is used for data mapping and the rest for storing data self-processing results.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 8</figref> shows a signal generic self-processing interface <b>170</b> for virtual memory. Port signals <b>172</b> can be of type “data”, “control”, specific interface to on-chip data FIFO (“fifo”), or “bit”. Each port signal type may have a self-processor <b>174</b>. Each self-processor <b>174</b> can, for example, perform distinct operations on data that are useful for general signal and image processing applications and store the processed data in memory <b>177</b> locations attached to each port <b>176</b>. For illustrative purposes, eight self-processors <b>174</b> are shown in <figref idref="DRAWINGS">FIG. 8</figref>. The eight self-processors <b>174</b> map, for example, a 64-bit word onto eight 8-bit ports <b>176</b> with eight 8-bit self-processors <b>174</b> for processing data on each port <b>176</b>. Each type of port (data, control, fifo, and bit) may be glued to application logic <b>178</b> as illustrated in <figref idref="DRAWINGS">FIG. 8</figref>, where “dp” indicates a data port, “cp” indicates a control port, “bp” indicates a bit port, and “fip” indicates a fifo port. P_n<b>1</b> <b>180</b>, P_n<b>2</b> <b>182</b>, P_n<b>3</b> <b>184</b> may be used to designate the number of port signals on each type of port <b>176</b>, as shown in <figref idref="DRAWINGS">FIG. 7</figref>. For example, for mapping a 64-bit FPGA data word <b>112</b><i>b </i>onto eight 8-bit ports <b>176</b> may require a 256-bit port configuration with its configuration as follows: four 64-bit ports (Long), or eight 32-bit ports (Half), or sixteen 16-bit ports (Short), or thirty-two 8-bit ports (Byte).</p>
<p id="p-0047" num="0046">In summary, virtual bus interface <b>164</b> may be used to map standard bus protocol to a virtual bus, e.g., virtual bus interface signals <b>163</b>. Virtual memory ports <b>176</b> may communicate via virtual bus signals <b>163</b> and map data, e.g., data word data(u) <b>112</b><i>b</i>, in and out from the host platform <b>110</b>. All application ports, e.g., application logic <b>178</b>, are glued to the virtual memory ports <b>176</b> and the glue is highly configurable.</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 11</figref> illustrates method <b>200</b> for multiple data, parallel computer processing in accordance with one embodiment of the present invention. Operation <b>202</b> may include interconnect a single instruction-multiple data processing element cell—such as SPEC <b>116</b>—through a reconfigurable communication and control fabric—such as RCCF <b>118</b>—to a configurable very long instruction word controller—such as CVLIW controller <b>106</b>.</p>
<p id="p-0049" num="0048">Operation <b>204</b> may include configuring the configurable very long instruction word controller—such as CVLIW controller <b>106</b>—via a control word from a host processor—such as control word <b>112</b> from host <b>110</b>—to control processing in the single instruction-multiple data processing element cell—such as SPEC <b>116</b>. Operation <b>204</b> may further include controlling a plurality of simple n-bit coarse-grain processing elements—such as PEs <b>119</b>—in the single instruction-multiple data processing element cell SPEC <b>116</b>. Operation <b>204</b> may further include controlling a fine grain reconfigurable cell—such as FGRC <b>117</b> in the single instruction-multiple data processing element cell SPEC <b>116</b>.</p>
<p id="p-0050" num="0049">Operation <b>206</b> may include configuring the configurable very long instruction word controller—such as CVLIW controller <b>106</b>—via a control word from a host processor—such as control word <b>112</b> from host <b>110</b>—to control communication and control in the reconfigurable communication and control fabric—such as RCCF <b>118</b> or SPEC &amp; RCCF modules <b>108</b>.</p>
<p id="p-0051" num="0050">Operation <b>208</b> may include providing communication control instructions for an inter-chip communication module—such as ICCM <b>132</b>—to control inter-chip communication between the single instruction-multiple data processing element cell—such as SPEC <b>116</b> on FPGA <b>102</b>—and a second single instruction-multiple data processing element cell—such as SPEC <b>116</b> on FPGA <b>104</b>.</p>
<p id="p-0052" num="0051">It should be understood, of course, that the foregoing relates to exemplary embodiments of the invention and that modifications may be made without departing from the spirit and scope of the invention as set forth in the following claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>I claim:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A system comprising:
<claim-text>a super reconfigurable fabric architecture module, comprising:
<claim-text>a configurable very long instruction word controller that receives a control word from a host processor over a standard I/O bus;</claim-text>
<claim-text>a reconfigurable communication and control fabric having a very long instruction word interface to said configurable very long instruction word controller; and</claim-text>
<claim-text>a single instruction-multiple data processing element cell controlled by said configurable very long instruction word controller through said reconfigurable communication and control fabric via said very long instruction word interface; and</claim-text>
</claim-text>
<claim-text>a virtual bus interface to the super reconfigurable fabric architecture module, wherein the virtual bus interface comprises:
<claim-text>a virtual memory port that maps a standard bus protocol to virtual bus interface signals provided between said virtual bus interface and the super reconfigurable fabric architecture module, wherein said virtual memory port provides a port signal having a type chosen from “data”, “control”, “fifo”, or “bit”, wherein each port signal type has a self-processor that performs distinct operations producing processed data, and wherein said processed data is stored in a memory location attached to said virtual memory port.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said single instruction-multiple data processing element cell further comprises:
<claim-text>a coarse grain reconfigurable processing element connected through said very long instruction word interface to said reconfigurable communication and control fabric.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said single instruction-multiple data processing element cell further comprises:
<claim-text>a fine grain reconfigurable cell connected through said very long instruction word interface to said reconfigurable communication and control fabric.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said single instruction-multiple data processing element cell further comprises:
<claim-text>a fine grain reconfigurable cell connected through said very long instruction word interface to said reconfigurable communication and control fabric; and</claim-text>
<claim-text>a coarse grain reconfigurable processing element connected through a fine-grain reconfigurable controller interface to said fine grain reconfigurable cell.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the reconfigurable communication and control fabric further comprises:
<claim-text>an interface to a single instruction-multiple data processing element cell;</claim-text>
<claim-text>an interface to a floating-point unit;</claim-text>
<claim-text>an inter-chip communication module with a “v4” interface to the configurable very long instruction word controller;</claim-text>
<claim-text>a data memory controller having a “v6” interface to the configurable very long instruction word controller; and</claim-text>
<claim-text>an I/O controller with a “cd” interface to said data memory controller, an “icd” interface to said inter-chip communication module, and a “v5” interface to the configurable very long instruction word controller.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The system of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising:
<claim-text>a “pcd” interface between said I/O controller and the single instruction-multiple data processing element cell.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The system of <claim-ref idref="CLM-00005">claim 5</claim-ref>, further comprising:
<claim-text>a processing element memory controller with a “pad” interface to the single instruction-multiple data processing element cell and an “mcd” interface to said I/O controller.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The system of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein said I/O controller has an “fd” interface to the floating-point unit.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the single instruction-multiple data processing element cell further comprises:
<claim-text>a plurality of processing elements; and</claim-text>
<claim-text>a fine grain reconfigurable cell having a fine grain reconfigurable cell controller interface to each of said plurality of processing elements.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein said fine grain reconfigurable cell has a “v2” interface that receives a fine grain reconfigurable cell portion of a very long instruction word.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein said fine grain reconfigurable cell is implemented by a field programmable gate array.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The system of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein said plurality of processing elements are configured as a 2×2 array of n-bit coarse-grain processing elements that communicate through their I/O ports and passing through a reconfigurable control and communication fabric.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said virtual memory port is glued to an application logic according to the port signal type of said virtual memory port.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The system of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said self-processor includes a look-up table.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A field programmable gate array comprising:
<claim-text>a virtual bus interface that receives a control word from a host processor over a standard I/O bus;</claim-text>
<claim-text>a super reconfigurable fabric architecture module, comprising:
<claim-text>a configurable very long instruction word controller that receives said control word via virtual bus interface signals from said virtual bus interface;</claim-text>
<claim-text>a reconfigurable communication and control fabric wherein said configurable very long instruction word controller has a very long instruction word interface “v” with said reconfigurable communication and control fabric; and</claim-text>
<claim-text>a single instruction-multiple data processing element cell controlled by said configurable very long instruction word controller through said reconfigurable communication and control fabric via said very long instruction word interface “v”; and</claim-text>
</claim-text>
<claim-text>wherein the virtual bus interface comprises:
<claim-text>a virtual memory port that maps a standard bus protocol to virtual bus interface signals provided between said virtual bus interface and the super reconfigurable fabric architecture module, wherein said virtual memory port provides a port signal having one of a plurality of port signal types, wherein each port signal type has a self-processor that performs distinct operations producing processed data, and wherein said processed data is stored in a memory location attached to said virtual memory port.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The field programmable gate array of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein said reconfigurable communication and control fabric further comprises an inter-chip communication module wherein said configurable very long instruction word controller has a very long instruction word interface “v4” with said inter-chip communication module.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The field programmable gate array of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein said single instruction-multiple data processing element cell further comprises:
<claim-text>a fine grain reconfigurable cell wherein said configurable very long instruction word controller has a very long instruction word interface “v2” with said fine grain reconfigurable cell.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The field programmable gate array of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein said field programmable gate array is configured in a single instruction-multiple data program mode using said very long instruction word interface “v”.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The field programmable gate array of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein said field programmable gate array is configured in a multiple single instruction-multiple data program mode using said very long instruction word interface “v”.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. A method for operating a super reconfigurable fabric architecture module to perform parallel processing, the method comprising operations of:
<claim-text>interconnecting a single instruction-multiple data processing element cell through a reconfigurable communication and control fabric to a configurable very long instruction word controller;</claim-text>
<claim-text>configuring said configurable very long instruction word controller via a control word from a host processor wherein: said configurable very long instruction word controller controls processing in said single instruction-multiple data processing element cell; and said configurable very long instruction word controller controls communication and control in said reconfigurable communication and control fabric;</claim-text>
<claim-text>providing a virtual bus interface to the super reconfigurable fabric architecture module, wherein the virtual bus interface comprises: a virtual memory port;</claim-text>
<claim-text>mapping, via said virtual memory port, a standard bus protocol to virtual bus interface signals provided between said virtual bus interface and the super reconfigurable fabric architecture module;</claim-text>
<claim-text>providing a port signal having one of a plurality of port signal types from said virtual memory port, wherein each port signal type has a self-processor that performs distinct operations producing processed data; and</claim-text>
<claim-text>storing said processed data in a memory location attached to said virtual memory port.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The method of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein said configuring operation further comprises controlling a plurality of n-bit coarse-grain processing elements in said single instruction-multiple data processing element cell.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The method of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein said configuring operation further comprises controlling fine grain reconfigurable cell in said single instruction-multiple data processing element cell.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The method of <claim-ref idref="CLM-00020">claim 20</claim-ref>, further including an operation of providing communication control instructions from said configurable very long instruction word controller for an inter-chip communication module included in said reconfigurable communication and control fabric, wherein said inter-chip communication module controls inter-chip communication between said single instruction-multiple data processing element cell and a second single instruction-multiple data processing element cell.</claim-text>
</claim>
</claims>
</us-patent-grant>
