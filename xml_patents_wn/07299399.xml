<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299399-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299399</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10842568</doc-number>
<date>20040511</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>611</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>03</class>
<subclass>M</subclass>
<main-group>13</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>714757</main-classification>
<further-classification>714772</further-classification>
<further-classification>714763</further-classification>
</classification-national>
<invention-title id="d0e53">Method and apparatus for parallelly processing data and error correction code in memory</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5056010</doc-number>
<kind>A</kind>
<name>Huang</name>
<date>19911000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711  4</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5138620</doc-number>
<kind>A</kind>
<name>Miyazaki</name>
<date>19920800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714775</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5257391</doc-number>
<kind>A</kind>
<name>DuLac et al.</name>
<date>19931000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710 10</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6332206</doc-number>
<kind>B1</kind>
<name>Nakatsuji et al.</name>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714755</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6986095</doc-number>
<kind>B2</kind>
<name>Maeda et al.</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714769</main-classification></classification-national>
</citation>
</references-cited>
<number-of-claims>14</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>714757</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714772</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>714763</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>7</number-of-drawing-sheets>
<number-of-figures>8</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20040243906</doc-number>
<kind>A1</kind>
<date>20041202</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Huang</last-name>
<first-name>Che-Chi</first-name>
<address>
<city>Shindian</city>
<country>TW</country>
</address>
</addressbook>
<nationality>
<country>TW</country>
</nationality>
<residence>
<country>TW</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Rosenberg, Klein &amp; Lee</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Genesys Logic, Inc.</orgname>
<role>03</role>
<address>
<city>Taipei</city>
<country>TW</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Torres</last-name>
<first-name>Joseph D</first-name>
<department>2112</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method for parallelly processing data and ECC in the memory and associated apparatus are disclosed. The method includes the following steps: (1) reading the first data, and calculating the first syndrome based on the first data and the first ECC code, (2) correcting the first data according to the first syndrome, while reading the second data, and calculating the second syndrome based on the second data and the second ECC code, (3) and correcting the second data according to the second syndrome, while reading the third data and calculating the third syndrome based on the third data and the third ECC code.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="136.91mm" wi="257.81mm" file="US07299399-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="242.15mm" wi="151.47mm" orientation="landscape" file="US07299399-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="201.25mm" wi="79.25mm" orientation="landscape" file="US07299399-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="242.15mm" wi="158.07mm" orientation="landscape" file="US07299399-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="256.20mm" wi="159.77mm" orientation="landscape" file="US07299399-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="265.01mm" wi="144.86mm" orientation="landscape" file="US07299399-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="227.08mm" wi="134.70mm" orientation="landscape" file="US07299399-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="258.06mm" wi="162.90mm" orientation="landscape" file="US07299399-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">1. Field of the Invention</p>
<p id="p-0003" num="0002">The present invention relates to a method and an apparatus for processing an error correction code and, more particularly, to a method and apparatus for parallelly processing data and error correction code in a memory.</p>
<p id="p-0004" num="0003">2. The Related Arts</p>
<p id="p-0005" num="0004">Flash memory is widely used in many digital consumer products, such as digital cameras, TV game boxes, flash drives. As the semiconductor fabrication technology improves, the capacity of flash memory also increases significantly. For example, the 32 Mb (mega bytes) flash memory chips manufactured by Samsung comprises 1024 blocks, with each block having 64 pages. In each page, there are 528(=512+16) bytes, wherein 512 bytes are the data area, and 16 bytes are the redundant area. The flash memory is typically accessed by block.</p>
<p id="p-0006" num="0005">The universal serial bus (USB) ports of a PC can connect various USB devices, such as, a USB keyboard, a USB mouse, a USB card reader, a USB memory flash drive, a USB floppy drive, a USB printer and a USB scanner. The transmission speed also evolves from 12 Mbps in USB1.1 to 480 Mbps in USB2.0.</p>
<p id="p-0007" num="0006">As the tranceiving speed increases, the speed for accessing the flash memory should be increased. To guarantee the correctness during the speedy access, the flash memory applies the error correction code (ECC) to make sure that the data access is intact.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 1</figref> of the attached drawings shows a block diagram of a conventional flash memory controller, designated with reference numeral <b>100</b>. The flash memory controller <b>100</b> comprises a direct memory access unit <b>110</b>, a first-in-first-out (FIFO) memory <b>120</b>, an ECC calculation unit <b>130</b>, an exclusive-or gate <b>140</b>, an I/O FIFO memory <b>150</b>, and a microprocessor <b>160</b>. The conventional controller <b>100</b> usually accesses the flash memory on a page basis, and generates associated ECC code. Assume that each memory page is 512+16 bytes, where 16 bytes provide a redundancy area for storing system information and associated ECC. For example, ECC is 10 bytes, the following steps show how a direct memory access unit <b>110</b> reads a page from the flash memory (not shown): (1) The direct memory access unit <b>110</b> reads 512 bytes of data into the FIFO memory <b>120</b>. (2) The ECC calculation unit <b>130</b> calculates an associated syndrome using the 512 bytes data and 10 bytes ECC. (3) The exclusive-or gate <b>140</b> corrects error(s) for the 512 bytes of data using the syndrome in step (2). (4) The corrected data are outputted to I/O FIFO memory <b>150</b>. Furthermore, the direct memory access unit <b>110</b> is coupled to and controlled by the microprocessor <b>160</b> for memory accessing. Conventionally, the direct memory access unit <b>110</b> cannot access the next page until the step of error correction is completed. Hence, access latency exists between the accesses to the different pages.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 2</figref> shows the corresponding waveform of the operation in <figref idref="DRAWINGS">FIG. 1</figref>. The high in the data signal waveform indicates the data phase corresponding to reading 512 bytes. On the other hand, the high in the ECC signal waveform indicates the ECC phase corresponding to the accessing of the 10 bytes of ECC code. The low in the last portion of both signal waveforms indicates the access latency between accessing two different pages.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0010" num="0009">The present invention provides an apparatus for parallelly processing the data and the ECC in an external memory, to be coupled to the external memory and access the same. The present apparatus comprises a microprocessor, an auxiliary control circuit coupling with the microprocessor, a direct memory access unit, a FIFO memory, a first ECC calculation unit, a second ECC calculation unit, and an error correction unit. The direct memory access unit is coupled to the microprocessor for accessing the external memory. The FIFO memory is coupled to the direct memory access unit for temporarily storing the data. The first ECC calculation unit is coupled to the direct memory access unit and the auxiliary control circuit for generating the first syndrome based on the first data and the associated first ECC code. The second ECC calculation unit is also coupled to the direct memory access unit and the auxiliary control circuit. The error correction unit is coupled to the first ECC calculation unit, the second calculation unit, the auxiliary control circuit, and the FIFO memory. The FIFO memory receives the second data and the second ECC calculation unit calculates the second syndrome based on the second data and the associated second ECC code, while the error correction unit corrects the first data in the FIFO memory according to the first syndrome.</p>
<p id="p-0011" num="0010">The present invention further discloses a USB controller, comprising a ROM pre-recorded with firmware, a RAM, a microprocessor, a direct memory access unit, a FIFO memory, a first ECC calculation unit, a second ECC calculation unit, an error correction unit, an I/O FIFO memory, a serial interface engine, and a USB physical layer circuit. The microprocessor is coupled to the ROM and the RAM. The direct memory access unit is coupled to the non-volatile memory and the microprocessor for accessing the non-volatile memory. The FIFO memory is coupled to the direct memory access unit for temporarily storing data. The first ECC calculation unit is coupled to the direct memory access unit for generating the first syndrome based on the data and the associated first ECC code. The second ECC calculation unit is also coupled to the direct memory access unit. The error correction unit is coupled to the first ECC calculation unit, the second calculation unit, and the FIFO memory. The I/O FIFO memory is coupled to the error correction unit. The serial interface engine is coupled to the I/O FIFO memory, and the USB physical layer circuit is coupled to the serial interface engine for tranceiving a USB differential signal. While the error correction unit corrects data in the FIFO memory according to the first syndrome, the controller reads another data from the non-volatile memory, and the second ECC calculation unit calculates the second syndrome based on the second data and the associated second ECC code.</p>
<p id="p-0012" num="0011">The present invention further discloses a USB flash drive, comprising a non-volatile memory and a controller. The controller is coupled to the non-volatile memory. The controller preferably comprises a ROM pre-recorded with firmware, a RAM, a microprocessor, a direct memory access unit, a FIFO memory, a first ECC calculation unit, a second ECC calculation unit, an error correction unit, an I/O FIFO memory, a serial interface engine, a USB physical layer circuit. The microprocessor is coupled to the ROM and the RAM. The direct memory access unit is coupled to the non-volatile memory and the microprocessor for accessing the non-volatile memory. The FIFO memory is coupled to the direct memory access unit for temporarily storing data. The first ECC calculation unit is coupled to the direct memory access unit for generating the first syndrome based on the data and the associated first ECC code. The second ECC calculation unit is also coupled to the direct memory access unit. The error correction unit is coupled to the first ECC calculation unit, the second calculation unit, and the FIFO memory. The I/O FIFO memory is coupled to the error correction unit. The serial interface engine is coupled to the I/O FIFO memory, and the USB physical layer circuit is coupled to the serial interface engine for tranceiving a USB differential signal. When the error correction unit corrects data in the FIFO memory according to the first syndrome, the controller reads another data from the non-volatile memory, and the second ECC calculation unit calculates the second syndrome based on the second data and the associated second ECC code.</p>
<p id="p-0013" num="0012">The present invention also discloses a method for parallelly processing data and ECC in the memory. The method comprises the following steps: (1) reading the first data, and calculating the first syndrome based on the first data and the first ECC code, (2) correcting the first data according to the first syndrome, while reading the second data, and calculating the second syndrome based on the second data and the second ECC code, (3) and correcting the second data according to the second syndrome, while reading the third data, and calculating the third syndrome based on the third data and the third ECC code.</p>
<p id="p-0014" num="0013">These and other objects, syndromes and advantages of the invention will be apparent to those skilled in the art, from a reading of the following brief description of the drawings, the detailed description of the preferred embodiment, and the appended claims.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 1</figref> shows a block diagram of a conventional flash memory controller.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 2</figref> shows a waveform with reference to <figref idref="DRAWINGS">FIG. 1</figref>.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 3</figref> shows a block diagram of the flash memory controller according to one embodiment of the present invention.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 4</figref> shows the format of the memory page in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 5</figref> shows an operation diagram in view of time according to the embodiment in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 6</figref> shows a block diagram of the flash drive according to an embodiment of the present invention.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 7</figref> shows a block diagram of the flash drive according to another embodiment of the present invention.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 8</figref> shows a block diagram of the flash drive according to yet another embodiment of the present invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
<p id="p-0023" num="0022">With reference to <figref idref="DRAWINGS">FIG. 3</figref>, which shows a block diagram of a flash memory controller in accordance with the present invention, the flash memory controller <b>300</b> comprises a direct memory access unit <b>310</b>, a FIFO memory <b>322</b>, a first ECC calculation unit <b>324</b>, a second ECC calculation unit <b>326</b>, an auxiliary control circuit <b>330</b>, an error correction unit <b>340</b>, an I/O FIFO memory <b>350</b>, and a microprocessor <b>360</b>. The flash memory controller <b>300</b> can access a flash memory (not shown). For example, the 1 gigabit flash memory chip manufactured by Samsung Semiconductor Corp. has 128M bytes memory space, and comprises 1024 memory blocks, with each block having 64 memory pages. Each page is 2K+64 bytes, where 2K bytes are for storing data, and the 64 bytes are for the redundant area. The 2K+64 bytes allows flexible format. In this embodiment, the 40 bytes of the 64-byte redundant area is used for storing ECC, and the remaining 24 bytes are for storing other system information. In a preferred embodiment, as shown in <figref idref="DRAWINGS">FIG. 4</figref>, for each 2K+64 bytes, the first 2K+40 bytes are divided into 4 equal parts, and the last 24 bytes of the page store the system information. Therefore, the page <b>400</b> comprises 4 data memory areas <b>410</b>, <b>420</b>, <b>430</b>, <b>440</b>, and a system information area <b>450</b>. Each data memory area is 512+10 bytes, wherein 512 bytes are for data, and the 10 bytes associate with ECC. The system information area has 24 bytes.</p>
<p id="p-0024" num="0023">Referring to <figref idref="DRAWINGS">FIGS. 3 and 4</figref>, when the direct memory access unit <b>310</b> reads the 512 bytes of the data memory area <b>410</b> of the flash memory (not shown in <figref idref="DRAWINGS">FIGS. 3 and 4</figref>), the data is first stored in FIFO memory <b>322</b>, and the entire 512+10 bytes of the data memory area <b>410</b> are provided to the first ECC calculation unit <b>324</b> for calculating the first syndrome. Then, the FIFO memory pushes the 512-byte data from the left to the error correction unit <b>340</b>, while, at the same time, the direct memory access unit <b>310</b> reads the 512 bytes of the data memory area <b>420</b> of the flash memory (not shown in <figref idref="DRAWINGS">FIG. 3</figref>), the data is first stored in FIFO memory <b>322</b>, and the entire 512+10 bytes of the data memory area <b>420</b> are provided to the second ECC calculation unit <b>326</b> for calculating the second syndrome. It should be noted that while reading the data memory area <b>420</b>, the first ECC calculating unit <b>324</b> sends the first syndrome to the error correction unit <b>340</b> so that the 512-byte data sequentially output from the FIFO memory <b>322</b> can be corrected. The corrected 512-byte data is then stored in the I/O FIFO memory <b>350</b>. Therefore, one data from data memory area <b>410</b> and another data from data memory area <b>420</b> are processed in parallel.</p>
<p id="p-0025" num="0024">Furthermore, after the direct memory access unit <b>310</b> reads the 512+10 bytes of the data memory area <b>420</b>, the FIFO memory <b>322</b> outputs the 512-byte data to the error correction unit <b>340</b>, while, at the same time, the direct memory access unit <b>310</b> reads the 512 bytes of the data memory area <b>430</b> into FIFO memory <b>322</b>, and the entire 512+10 bytes of the data memory area <b>430</b> are provided to the first ECC calculation unit <b>324</b> for calculating the first syndrome. Similarly, after the direct memory access unit <b>310</b> reads the 512+10 bytes of the data memory area <b>430</b>, the FIFO memory <b>322</b> pushes the 512-byte data from the left to the error correction unit <b>340</b>, while, at the same time, the direct memory access unit <b>310</b> reads the 512 bytes of the data memory area <b>434</b> into FIFO memory <b>322</b>, and the entire 512+10 bytes of the data memory area <b>440</b> are provided to the second ECC calculation unit <b>326</b> for calculating the second syndrome. After reading the 512+10 bytes of the data memory area <b>440</b>, the direct memory access unit <b>310</b> reads the last 24 bytes of system information area <b>450</b> in memory page <b>400</b>. It should be noted that during the error correction unit <b>340</b> correcting the data memory area <b>440</b>, the direct memory access unit <b>310</b> reads the system information area <b>450</b> in parallel. The parallel processing of reading current data while correcting previous data makes it possible for accessing the entire 2K bytes of data of the memory page <b>400</b> to be completed in 4 parallel processing times, wherein each 512-byte data is corrected and stored in the I/O FIFO memory <b>350</b> individually.</p>
<p id="p-0026" num="0025">The error correction unit <b>340</b>, alternatively, uses the first syndrome and the second syndrome to correct the 512-byte data in the FIFO memory <b>322</b>. The error connection unit <b>340</b> is coupled to and controlled by the auxiliary control circuit <b>330</b> for selecting the first syndrome or the second syndrome as the input for error correction unit <b>340</b>, which, for example, is implemented as an exclusive-or gate. The auxiliary control circuit <b>330</b> can be properly configured by the microprocessor <b>360</b>. The direct memory access unit <b>310</b> is coupled to and controlled by the microprocessor <b>360</b>.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 5</figref> shows an operation diagram in view of time according to the embodiment shown in <figref idref="DRAWINGS">FIG. 3</figref>. For accessing 2K bytes of the same page, the operation shows that the access is performed in five phases, including accessing a plurality of data memory areas <b>510</b>, <b>520</b>, <b>530</b>, <b>540</b>, each having 512+10 bytes, and the system information area <b>550</b>. 512-byte data corrected according to the first syndrome and 512-byte data corrected according to the second syndrome are designated as the first data and the second data, respectively. Preferably, the first data and the second data are temporarily stored in the FIFO memory <b>322</b>. As described, the 522 bytes of the data memory area <b>510</b> are first read to calculate the first syndrome. Then, the 522 bytes of the data memory area <b>520</b> is read to calculate the second syndrome while the first data is corrected according to the first syndrome. Similarly, the 522 bytes of the data memory area <b>530</b> is read to calculate the first syndrome while the second data is corrected according to the second syndrome. Repeat the above steps till finishing accessing the entire 2K of a page, or a page with larger size.</p>
<p id="p-0028" num="0027">A host, for example, reads data from a flash drive, which is so-called uploading. Preferably, downloading and uploading shares the same I/O FIFO memory <b>350</b>. Downloading alternatively uses either the first ECC calculation unit <b>324</b>, or the second ECC calculation unit <b>326</b> to generate the corresponding ECC for writing into the flash memory to make sure that the data is intact.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 6</figref> shows a block diagram of a flash drive <b>600</b> according to one embodiment of the present invention. The flash drive <b>600</b> comprises a USB flash memory controller <b>605</b>, and a flash memory <b>690</b>. The flash memory controller <b>605</b> comprises a direct memory access unit <b>610</b>, a FIFO memory <b>622</b>, a first ECC calculation unit <b>624</b>, a second ECC calculation unit <b>626</b>, an auxiliary control circuit <b>630</b>, an error correction unit <b>640</b>, an I/O FIFO memory <b>650</b>, a microprocessor <b>660</b>, a serial interface engine <b>670</b>, a USB physical layer circuit <b>680</b>. The components interconnect as shown in <figref idref="DRAWINGS">FIG. 6</figref>. When uploading to the host, the direct memory access unit <b>610</b> reads data from the flash memory <b>690</b>. While the FIFO memory <b>622</b> cooperates the first ECC calculation unit <b>624</b> and the second calculation unit <b>626</b> to calculate the syndromes in parallel utilizing the error correction unit <b>640</b>, the corrected data is sent to the I/O FIFO memory <b>650</b>, then to the serial interface engine <b>670</b>, and the USB physical layer circuit <b>680</b>, in order to generate the USB transmission signal. Preferably, the I/O FIFO memory <b>650</b> comprises a pair of FIFO memories (not shown) for ping-pong transmission. The error correction unit <b>640</b> is coupled to and controlled by the auxiliary control circuit <b>630</b> to alternatively apply the first ECC calculation unit <b>624</b> and the second calculation unit <b>626</b> as the input to the error correction unit <b>640</b>. The auxiliary control circuit <b>630</b> can be configured by the microprocessor <b>660</b>. The direct memory access unit <b>610</b> is also coupled to and controlled by the microprocessor <b>660</b>. The microprocessor is coupled to a ROM and a RAM (not shown). The ROM stores the firmware for microprocessor's operation.</p>
<p id="p-0030" num="0029">When downloading data from host to the flash drive <b>600</b>, the data is sent through the USB physical layer circuit <b>680</b>, the serial interface engine <b>670</b>, and to the I/O FIFO memory <b>650</b>. In this embodiment, the first ECC calculation unit <b>624</b> calculates the corresponding ECC code. Further, accompanying with the FIFO memory <b>622</b>, the data and the ECC code are written into the flash memory <b>690</b> by the direct memory access unit <b>610</b>.</p>
<p id="p-0031" num="0030">While the invention has been described with reference to the preferred embodiment, it is to be understood that the invention does not intend to be limited to the disclosed embodiment. For example, in <figref idref="DRAWINGS">FIG. 4</figref>, the system information <b>450</b> is arranged in the last portion of the page <b>400</b>. Alternatively, the system information can be uniformly arranged in each data memory area. And in <figref idref="DRAWINGS">FIG. 6</figref>, the downloading process uses the first ECC calculation unit <b>624</b> for generating the ECC code. Alternatively, the second ECC calculation unit <b>626</b> can also be used for generating the ECC code. Alternatively, the auxiliary control unit <b>630</b> can apply either the first ECC calculation unit <b>624</b>, or the second ECC calculation unit <b>626</b> for ECC calculation, based on the state in the previous uploading phase.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 7</figref> shows a block diagram of a flash drive <b>700</b> according to another embodiment of the present invention. The flash drive <b>700</b> comprises a USB flash memory controller <b>705</b>, and a flash memory <b>790</b>. The flash memory controller <b>705</b> comprises a direct memory access unit <b>710</b>, a first FIFO memory <b>722</b>, a first ECC calculation unit <b>724</b>, a second ECC calculation unit <b>726</b>, a second FIFO memory <b>728</b>, an auxiliary control circuit <b>730</b>, an error correction unit <b>740</b>, a microprocessor <b>760</b>, a serial interface engine <b>770</b>, and a USB physical layer circuit <b>780</b>. As described earlier, the I/O FIFO <b>650</b> preferably comprises a pair of FIFO memories, with each having a width of 512 bytes. In this embodiment, the first FIFO memory <b>722</b> and the second FIFO memory <b>728</b> parallelly perform reading flash memory and calculating ECC. After the error correction unit <b>740</b>, the output is directed to the serial interface engine <b>770</b>, resulting in saving 512-byte memory than the previous embodiment.</p>
<p id="p-0033" num="0032">When downloading data from host to the flash drive <b>700</b>, the data is sent through the USB physical layer circuit <b>780</b>, the serial interface engine <b>770</b>, and to the alternative of the first FIFO memory <b>722</b> and the second FIFO memory <b>728</b> to form a ping-pong buffer. The first 512 bytes are stored in the first FIFO memory <b>722</b>, and the first ECC calculation unit <b>724</b> generates associated 10-byte ECC code. The second 512 bytes are stored in the second FIFO memory <b>728</b>, and the second ECC calculation unit <b>726</b> generates associated 10-byte ECC code. The data and the ECC code are written into the flash memory <b>790</b> by the direct memory access unit <b>710</b>.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 8</figref> shows a block diagram a flash drive <b>800</b> according to yet another embodiment of the present invention. The flash drive <b>800</b> comprises a USB flash memory controller <b>805</b>, and a flash memory <b>890</b>. The flash memory controller <b>805</b> comprises a direct memory access unit <b>810</b>, a first ECC calculation unit <b>824</b>, a second ECC calculation unit <b>826</b>, an auxiliary control circuit <b>830</b>, an error correction unit <b>840</b>, an I/O FIFO memory <b>850</b>, a microprocessor <b>860</b>, a serial interface engine <b>870</b>, and a USB physical layer circuit <b>880</b>, interconnecting as <figref idref="DRAWINGS">FIG. 8</figref>. The difference between this embodiment and the previous embodiment in <figref idref="DRAWINGS">FIG. 6</figref> mainly lies in that the first FIFO memory <b>622</b> is eliminated, and the I/O FIFO <b>850</b> preferably comprises a pair of FIFO memories, with each having a width of 512 bytes, to be used in parallel processing of reading flash memory and calculating ECC. When uploaded from the flash memory <b>890</b> to the host, the data go through the data bus <b>812</b> to be stored in the I/O FIFO memory <b>850</b>. It is then read from the data bus <b>852</b>, and takes turns applying the first ECC calculation unit <b>824</b> and the second ECC calculation unit <b>826</b> to read the data and calculate ECC in parallel. After the error correction unit <b>840</b> correcting the data from the data bus <b>852</b>, the data is sent through the data bus <b>854</b> to the I/O FIFO memory <b>850</b> to perform a ping-pong transmission. Thus, 512-byte memory is saved in this embodiment, compared to the embodiment in <figref idref="DRAWINGS">FIG. 6</figref>.</p>
<p id="p-0035" num="0034">When downloading data from host to the flash drive <b>800</b>, the data is sent through the USB physical layer circuit <b>880</b>, the serial interface engine <b>870</b>, and to the I/O FIFO memory <b>850</b>. In this embodiment, the first ECC calculation unit <b>824</b> generates associated ECC code. Data and associated ECC code is written into the flash memory <b>890</b> by the direct memory access unit <b>810</b>. The ECC calculation unit <b>826</b> can also be used to generate said associated ECC code.</p>
<p id="p-0036" num="0035">In summary, the present invention discloses an apparatus for parallelly processing the data and the ECC code in a memory. The device can be coupled to an external memory to access the memory. The device comprises a microprocessor, an auxiliary control circuit coupling with the microprocessor, a direct memory access unit, a FIFO memory, a first ECC calculation unit, a second ECC calculation unit, and an error correction unit. The direct memory access unit is coupled to the microprocessor for accessing the external memory. The FIFO memory is coupled to the direct memory access unit for temporarily storing the data. The first ECC calculation unit is coupled to the direct memory access unit and the auxiliary control circuit for outputting the first syndrome based on the data and the associated first ECC code. The second ECC calculation unit is also coupled to the direct memory access unit and the auxiliary control circuit. The error correction unit is coupled to the first ECC calculation unit, the second calculation unit, the auxiliary control circuit, and the FIFO memory. When the error correction unit corrects the data from the FIFO memory according to the first syndrome, the FIFO memory also receives the second data, and the second ECC calculation unit calculates the second syndrome based on the second data and associated second ECC code.</p>
<p id="p-0037" num="0036">The present invention also discloses a USB controller, comprising a ROM pre-recording a firmware, a RAM, a microprocessor, a direct memory access unit, a FIFO memory, a first ECC calculation unit, a second ECC calculation unit, an error correction unit, an I/O FIFO memory, a serial interface engine, and a USB physical layer circuit. The microprocessor is coupled to the ROM and the RAM. The direct memory access unit is coupled to the non-volatile memory and the microprocessor for accessing the non-volatile memory. The FIFO memory is coupled to the direct memory access unit for temporarily storing data. The first ECC calculation unit is coupled to the direct memory access unit for generating the first syndrome based on the data and the associated first ECC code. The second ECC calculation unit is also coupled to the direct memory access unit. The error correction unit is coupled to the first ECC calculation unit, the second calculation unit, and the FIFO memory. The I/O FIFO memory is coupled to the error correction unit. The serial interface engine is coupled to the I/O FIFO memory, and the USB physical layer circuit is coupled to the serial interface engine for tranceiving the USB differential signal. When the error correction unit corrects the data from the FIFO memory according to the first syndrome, the controller reads another data from the non-volatile memory, and the second ECC calculation unit calculates the second syndrome based on the second data and associated second ECC code.</p>
<p id="p-0038" num="0037">The present invention further discloses a USB flash drive, comprising a non-volatile memory and a controller. The controller is coupled to the non-volatile memory, and further comprises a ROM pre-recorded with firmware, a RAM, a microprocessor, a direct memory access unit, a FIFO memory, a first ECC calculation unit, a second ECC calculation unit, an error correction unit, an I/O FIFO memory, a serial interface engine, and a USB physical layer circuit. The microprocessor is coupled to the ROM and the RAM. The direct memory access unit is coupled to the non-volatile memory and the microprocessor for accessing the non-volatile memory. The FIFO memory is coupled to the direct memory access unit for temporarily storing data. The first ECC calculation unit is coupled to the direct memory access unit for generating the first syndrome based on the data and associated first ECC code. The second ECC calculation unit is also coupled to the direct memory access unit. The error correction unit is coupled to the first ECC calculation unit, the second calculation unit, and the FIFO memory. The I/O FIFO memory is coupled to the error correction unit. The serial interface engine is coupled to the I/O FIFO memory, and the USB physical layer circuit is coupled to the serial interface engine for tranceiving the USB differential signal. When the error correction unit corrects the data from the FIFO memory according to the first syndrome, the controller reads a second data from the non-volatile memory, and the second ECC calculation unit calculates the second syndrome based on the second data and associated second ECC code.</p>
<p id="p-0039" num="0038">The present invention also discloses a method for parallelly processing data and ECC in the memory. The method comprises the following steps: reading the first data, and calculating the first syndrome based on the first data and the first ECC code; correcting the first data according to the first syndrome while reading the second data, and calculating the second syndrome based on the second data and the second ECC code; correcting the second data according to the second syndrome while reading the third data, and calculating the third syndrome based on the third data and the third ECC code.</p>
<p id="p-0040" num="0039">While the invention has been described in connection with what is presently considered to the most practical and preferred embodiments, it is to be understood that the invention does not intend to be limited to the disclosed embodiments, but on the contrary, is intended to cover various modifications and equivalent arrangement included within the spirit and scope of the appended claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An apparatus for parallelly processing data and ECC, said apparatus being adapted to be coupled to an external memory, said apparatus comprising:
<claim-text>a microprocessor; an auxiliary control circuit coupled to said microprocessor; a direct memory access unit, coupled to said microprocessor for accessing said external memory; a first-in-first-out (FIFO) memory, coupled to said direct memory access unit; a first ECC calculation unit, coupled to said direct memory access unit and said auxiliary control circuit for calculating a first syndrome based on a first data and an associated first ECC; a second ECC calculation unit, coupled to said direct memory access unit and said auxiliary control circuit; and an error correction unit, coupled to said first ECC calculation unit, said auxiliary control circuit, said second ECC calculation unit, and said FIFO memory; wherein said FIFO memory receives a second data, and said second ECC calculation unit calculates a second syndrome based on said second data and an associated second ECC, while said error correction unit is correcting said first data in said FIFO memory according to said first syndrome.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said external memory is a flash memory.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said error correction unit alternatively applies said first syndrome and said second syndrome to correct the data in said FIFO memory.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising an I/O FIFO memory, coupled to said error correction unit for generating corrected data.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A controller, coupled to a non-volatile memory, for parallelly processing data and ECC in said non-volatile memory, said controller comprising:
<claim-text>a direct memory access unit, for accessing said non-volatile memory; a FIFO memory, coupled to said direct memory access unit for storing data; a first ECC calculation unit, coupled to said direct memory access unit for calculating a first syndrome based on a first data and an associated first ECC; a second ECC calculation unit, coupled to said direct memory access unit; and an error correction unit, coupled to said first ECC calculation unit, said second ECC calculation unit, and said FIFO memory; wherein said controller reads a second data and said second ECC calculation unit calculates a second syndrome based on said second data and an associated second ECC, while said error correction unit is correcting said first data in said FIFO memory according to said first syndrome.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The controller of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein said non-volatile memory is a flash memory.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The controller of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein said error correction unit alternatively applies said first syndrome and said second syndrome for correcting data in said FIFO memory.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The controller of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein said error correction unit is an exclusive-or gate.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The controller of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein said controller receives said first data from a host and writes said first data into said flash memory, and said I/O FIFO memory is further coupled to said FIFO memory and said first ECC calculation unit, said first ECC calculation unit calculates said associated first ECC based on said first data for said direct memory access unit to write said first data and said first ECC into said flash memory.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The controller of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein said controller receives said first data from a host to write said first data into said flash memory, and said I/O FIFO memory is further coupled to said FIFO memory, said first ECC calculation unit and said second ECC calculation unit, wherein the alternative of the said first ECC calculation unit and said second ECC calculation unit calculates an associated ECC based on data in said FIFO memory, for said direct memory access unit to write said data in said FIFO memory and said associated ECC into said flash memory.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A USB controller for parallelly processing data and ECC, coupled to a non-volatile memory, said USB controller comprising:
<claim-text>a microprocessor; a ROM, coupled to said microprocessor for storing a firmware for operating said microprocessor; a RAM, coupled to said microprocessor; an auxiliary control circuit coupled to said microprocessor; a direct memory access unit, coupled to said microprocessor for accessing said non-volatile memory; an I/O FIFO memory, coupled to said direct memory access unit for storing data; a first ECC calculation unit, coupled to said direct memory access unit and said auxiliary control circuit for calculating a first syndrome based on a first data and an associated first ECC; a second ECC calculation unit, coupled to said direct memory access unit and said auxiliary control circuit; an error correction unit, coupled to said first ECC calculation unit, said auxiliary control circuit, said second ECC calculation unit, and said FIFO memory; a serial interface engine, coupled to said I/O FIFO memory; and a USB physical layer circuit, coupled to said serial interface engine for connecting to a host; wherein said I/O FIFO memory receives a second data, and said second ECC calculation unit calculates a second syndrome based on said second data and an associated second ECC, while said error correction unit is correcting said first data according to said first syndrome, and then said corrected first data is stored back in said I/O FIFO memory.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The USB controller of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein said non-volatile memory is a flash memory.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The USB controller of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein said error correction unit alternatively applies said first syndrome and said second syndrome correcting said data.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The USB controller of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein said error correction unit is an exclusive-or gate.</claim-text>
</claim>
</claims>
</us-patent-grant>
