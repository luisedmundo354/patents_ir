<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298811-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298811</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11343234</doc-number>
<date>20060131</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>03</class>
<subclass>B</subclass>
<main-group>19</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>7</main-group>
<subgroup>68</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>377126</main-classification>
<further-classification>327117</further-classification>
<further-classification>327202</further-classification>
</classification-national>
<invention-title id="d0e43">Synchronous frequency dividers and components therefor</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4258273</doc-number>
<kind>A</kind>
<name>Straznicky et al.</name>
<date>19810300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>4656649</doc-number>
<kind>A</kind>
<name>Takahashi</name>
<date>19870400</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5714896</doc-number>
<kind>A</kind>
<name>Nakagawa et al.</name>
<date>19980200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>327115</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5719798</doc-number>
<kind>A</kind>
<name>Lutz et al.</name>
<date>19980200</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>708103</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>EP</country>
<doc-number>0 473 251</doc-number>
<kind>A</kind>
<date>19920300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00006">
<othercit>T. Mathew et al; 2-Bit Adder Carry and Sum Logic Circuits Clocking at 19 GHz Clock Frequency in Transfered Substrate HBT Technology; Conference Proceedings; 2001 International Conference on Indium Phosphide and Related Materials; IPRM; Nara, Japan; May 14-18, 2001; <i>International Conference on Indium Phosphide and Related Materials</i>; New York, New York; IEEE; US; vol. conf. 13; May 14, 2001; pp. 505-508; XP010547086.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00007">
<othercit>A. J. Acosta et al; Design and Characterization of a CMOS VLSI Self-Timed Multiplier Architecture Based on a Bit-Level Pipelined-Array Structure; IEE Proceedings: <i>Circuits Devices and Systems; Institution of Electrical Engineers</i>; Stenvenage, GB; vol. 145; No. 4; Aug. 5, 1998; pp. 247-253; XP006010781; ISSN:1350-2409.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>7</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>377122</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>377126</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>377115</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>377117</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>377 47</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>327115</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>327117</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>327202</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>4</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>PCT/EP03/09564</doc-number>
<kind>00</kind>
<date>20030828</date>
</document-id>
<parent-status>PENDING</parent-status>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>11343234</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20060170464</doc-number>
<kind>A1</kind>
<date>20060803</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Müller</last-name>
<first-name>Bardo</first-name>
<address>
<city>Dreieich</city>
<country>DE</country>
</address>
</addressbook>
<nationality>
<country>DE</country>
</nationality>
<residence>
<country>DE</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Arent Fox PLLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Fujitsu Limited</orgname>
<role>03</role>
<address>
<city>Kawasaki</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Le</last-name>
<first-name>Dinh T.</first-name>
<department>2816</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">The invention discloses a frequency divider using half-adding functions, comprising one latch circuitry with half adding function for each digit, each latch circuitry receiving its output signal Sout at its S-input, the latch circuitry (<b>76</b>) for the least significant bit receiving at its Carry-input a “1”, and each further latch circuity receiving at its Carry-input the carry signal from the latch circuitry of the previous digit, and an And gate circuitry receiving the Sum outputs of the latch circuitries.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="97.87mm" wi="161.88mm" file="US07298811-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="220.47mm" wi="161.54mm" file="US07298811-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="176.95mm" wi="129.71mm" file="US07298811-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="107.95mm" wi="162.22mm" file="US07298811-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="163.41mm" wi="171.20mm" file="US07298811-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<p id="p-0002" num="0001">This nonprovisional application is a continuation application of and claims the benefit of International Application No. PCT/EP2003/009564 filed on Aug. 28, 2003. The disclosure of the prior application is hereby incorporated herein in its entirety by reference.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<p id="p-0003" num="0002">The present invention relates to components for synchronous frequency dividers based on half adders and to synchronous frequency dividers based on half adders.</p>
<p id="p-0004" num="0003">A digital frequency divider, also called a modulo-K counter, produces an output pulse every K input pulses. Depending on the application, it is also desirable to have a wide programming range, e.g. 10-127 for which one needs an N=7 bit counter.</p>
<p id="p-0005" num="0004">Because of the required high-speed operation, the design must be of the synchronous type, i.e. allowing only transitions on either the falling or the rising edge of the input signal. There are two sources for critical delay in conventional frequency dividers:</p>
<p id="p-0006" num="0005">One source of delay is the necessary simultaneous comparison of two N-bit numbers in order to detect the end of the counting cycle. If the counter is of the reset/count-to-K type, a complex logic of N XOR gates followed by an AND gate with fan-in N is required. A high fan-in increases the delay of most digital gates. Alternatively, if the counter is of the preset-to-K/count-to-0 type, the counter bits will settle to 0 from the MSB (Most Significant Bit) to the LSB (Lowest Significant Bit). This successive settling allows a cascaded comparison for the end-of-cycle detection, avoiding the high fan-in and thus reducing the critical path, which delimits the maximum operational speed of the circuit.</p>
<p id="p-0007" num="0006">The other source of delay for the critical path in synchronous counters is the generation of the toggle condition: e.g. a bit is allowed to flip only if all lower bits are 1, realized by a logic circuitry of AND gates with fan-in of 1−n.</p>
<p id="p-0008" num="0007">Another way to eliminate the N-bit comparison and the generation of the toggle condition is by using an accumulator design, i.e. N-bit full adders with constant increment of 1.</p>
<p id="p-0009" num="0008">Clearly, the generation of the toggle condition is now transformed into that of generating the carry bits. But circuit complexity for parallel carry generation (like carry look ahead) grows exponentially with the number of bits.</p>
<p id="p-0010" num="0009">U.S. Pat. No. 5,179,798 Lutz et al provides a modulo-k counter or frequency divider that produces an output pulse for every k clock pulses. The counter of <figref idref="DRAWINGS">FIG. 2</figref> is a synchronous counter since the latches transfer their inputs to their outputs when they receive the clock pulse. As a result, the input clock pulse (which is not shown in the diagram) causes all of the half adders to generate their sum bits S and carry bits C simultaneously.</p>
<p id="p-0011" num="0010">In their implementation, the preset value is set to the negative (one's complement) of K and incremented to “1”, which corresponds to all bits equal 1 (1111111). Again, as with other preset/count-down types, the MSBs settle first, down to LSB, which allows a fast, cascaded test.</p>
<p id="p-0012" num="0011">As explicitly stated in said U.S. Pat. No. 5,179,798, the counter is programmable and synchronous, and it is much faster than any other known programmable frequency divider and its period is lower bounded by the sum of the delays due to a latch, a half adder, and an n-input AND gate.</p>
<p id="p-0013" num="0012">With regards to notation of <figref idref="DRAWINGS">FIGS. 1 to 3</figref>, lower case letters are used to represent numbers and upper case is used to represent sent n-bit words. The subscripted lower case letters represent bits. The meaning of other symbols are given in Table 1. In addition, it should be noted that the lower order bit in a word is bit 0.</p>
<p id="p-0014" num="0013">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="105pt" align="center"/>
<colspec colname="2" colwidth="112pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="2" rowsep="1">TABLE 1</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry>Symbol</entry>
<entry>Meaning</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>∩</entry>
<entry>bitwise and</entry>
</row>
<row>
<entry>∪</entry>
<entry>bitwise or</entry>
</row>
<row>
<entry>⊕</entry>
<entry>bitwise exclusive-or</entry>
</row>
<row>
<entry> <o ostyle="single">x<sub>i</sub></o></entry>
<entry>not x<sub>i</sub></entry>
</row>
<row>
<entry>X</entry>
<entry>one's complement of X</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0015" num="0014">An n-bit half adder consists of n independent half adders. It takes two n-bit two's complement numbers as inputs, and produces two outputs: an n-bit sum and an n-bit carry. Let X=x<sub>n-1 </sub>. . . x<sub>1</sub>, x<sub>o</sub>, and Y=y<sub>n-1 </sub>. . . y<sub>1</sub>, y<sub>0 </sub>be n-bit words with low order bits x<sub>0 </sub>and y<sub>0</sub>. An n-bit half adder produces a carry word C=c<sub>n-1 </sub>. . . c<sub>1</sub>, c<sub>0 </sub>and a sum word S=s<sub>n-1 </sub>. . . s<sub>1</sub>, s<sub>0 </sub>such that
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>C<sub>i</sub><i>=X</i><sub>i-1</sub><i>∩Y</i><sub>i-1</sub>  (2)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>S<sub>i</sub><i>=X</i><sub>i</sub><i>⊕Y</i><sub>i</sub><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
Note that c<sub>0 </sub>is always 0, and that
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>C+S=X+Y </i>(modulo 2<sup>n</sup>)  (2a)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0016" num="0015">The high order carry bit c<sub>n </sub>is not part of C, but is sometimes useful as part of a larger calculation.</p>
<p id="p-0017" num="0016">(C,S) is in half-adder form (or h-a form) if there exist X and Y satisfying equation 2. We write (C,S)=ha(X,Y).</p>
<p id="p-0018" num="0017">A number in half-adder form is represented by the C or carry component and the S or sum component: the actual value of the counter is not calculated, but given only implicitly by the sum of the numbers in the S and C registers.</p>
<p id="p-0019" num="0018">With regard to the C and S components, it should be noted that
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>C+S=−</i>1<img id="CUSTOM-CHARACTER-00001" he="2.46mm" wi="2.46mm" file="US07298811-20071120-P00001.TIF" alt="custom character" img-content="character" img-format="tif"/><i>S=−</i>1  (3)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0020" num="0019">With regard to relationship 3, the definition of a two's complement number shows that X+Y=−1<img id="CUSTOM-CHARACTER-00002" he="2.46mm" wi="2.46mm" file="US07298811-20071120-P00001.TIF" alt="custom character" img-content="character" img-format="tif"/>Y= <o ostyle="single">X</o>. Then according to equation 2, S=X⊕ <o ostyle="single">X</o>=−1.</p>
<p id="p-0021" num="0020">As a result, S consists of all ones. A quick examination of equations 1 and 2 shows that only one of c<sub>i </sub>and s<sub>i-1 </sub>can be set(=1) for i=1, . . . , n−1, as a result, when C+S=−1, C=0 and S=−1.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 2</figref> illustrates a programmable modulo-k counter using half-adders such as the half-adder illustrated in <figref idref="DRAWINGS">FIG. 1</figref>. Half-adders <b>10</b>, <b>12</b>, <b>14</b> and <b>16</b> are well known in the art. The S out-put of half-adders <b>10</b>, <b>12</b>, <b>14</b> and <b>16</b> are stored by latches <b>18</b>, <b>20</b>, <b>22</b> and <b>24</b>, respectively. The outputs of clocked latches <b>18</b>, <b>20</b>, <b>22</b> and <b>24</b> are fed to the S input of half-adders <b>10</b>, <b>12</b>, <b>15</b> and <b>16</b>, respectively. The carryout outputs of half-adders <b>10</b>, <b>12</b>, and <b>14</b> are fed to clocked latches <b>26</b>, <b>28</b> and <b>30</b>, respectively. Latch <b>32</b> is fed a logical 1. The latches may be implemented using registers or D type latches. The outputs of latches <b>32</b>, <b>26</b>, <b>28</b> and <b>30</b> are fed to the carry input of half-adders <b>10</b>, <b>12</b>, <b>14</b> and <b>16</b>, respectively. The S outputs of the half-adders are fed to AND gate <b>34</b>, which provides the divided frequency pulse as output.</p>
<p id="p-0023" num="0022">Generally, the half-adders and their associated latches can be thought of as an incrementer and the AND gate <b>34</b> can be thought of as a detector that detects when S=−1.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 2</figref> is a programmable modulo-k counter based on relationship 3. Initially, (C,S) is set to (0,k). At each input clock pulse (the clock input is not shown), the sum in (C,S) increases by one because of the 1 that is input to the least order half adder. Since the increment value is 1 the incrementer itself can be constructed out of half adders, and (C,S) is always in h-a form. After k input pulses C+S=−1, and by relationship 3, all of the bits of S will be 1. This reduces the detector to an n-input AND of the bits of S. Note that the 1 that is input to the least order half adder is not part of C. By definition, c<sub>0</sub>=0, and since a 0 has so effect on the sum, there is no need to use it as an input to the half adder. The place where c<sub>0 </sub>would have been input is a convenient spot to place a 1 to cause the sum to increase on every pulse.</p>
<p id="p-0025" num="0024">It is an object of the invention to provide advantageous components for building synchronous frequency dividers based on half adders. More specifically, it is an object of the invention to provide latches which perform further functions useful for constructing structing such frequency dividers.</p>
<p id="p-0026" num="0025">This object is achieved by a latch circuitry comprising:</p>
<p id="p-0027" num="0026">a first and a second clocked master-slave latch, each master latch having two OR-wired signal inputs and one clock in-put, the first slave latch having one signal input and a Clk input, the second slave latch having two OR-wired signal in-puts and a clock input, one signal input being connected with the inverting output of the first master latch and the other signal input being connected with the inverting output of the second master latch.</p>
<p id="p-0028" num="0027">This latch circuitry is apt to perform the latching of a carry-signal and a sum-signal, as they are used in frequency dividers based on half-adders.</p>
<p id="p-0029" num="0028">At the same time, such a latching circuitry performs a half-adding function. Both master-slave circuits work in parallel. Therefore, the delay caused by such a latching circuitry is as small as the delay caused by a single master-slave latch.</p>
<p id="p-0030" num="0029">However, due to the OR-wired inputs D<b>1</b> and D<b>2</b> and the way they are connected, such a latch circuitry, while latching the carry-signal and the sum-signal, they simultaneously perform a half-adding function. Such a latch circuitry performs the same functions as e.g. latches <b>20</b>, <b>26</b> and the half-adder <b>12</b> in <figref idref="DRAWINGS">FIG. 2</figref>. However, each pair of latches and half-adder in <figref idref="DRAWINGS">FIG. 2</figref> have a composite delay consisting of the delay caused by the latches and the delay caused by the half-adders.</p>
<p id="p-0031" num="0030">The latch circuitry according to the invention, on the other hand, has only a delay as small as the delay of a master-slave latch.</p>
<p id="p-0032" num="0031">According to a further embodiment, the OR-wired inputs of the first master latch receive the signals XCin and Xsin, resp. and the inputs of the second master latch receive the signals Cin and Sin, resp. In this case the first slave outputs the signals XCout and Cout, the second slave outputs the signals XSout and Sout.</p>
<p id="p-0033" num="0032">Further, it is an object of the present invention to provide a fast frequency divider based on half-adding functions.</p>
<p id="p-0034" num="0033">This object is achieved by a frequency divider using half-adding functions, comprising one latch circuitry with half adding function for each digit, each latch circuitry receiving its output signal at its S-input, the latch circuitry for the least significant bit receiving at its Carry-input a “1”, and each further latch circuity receiving at its Carry-input (Cin) the carry signal from the latch circuitry of the previous digit, and an And gate circuitry receiving the Sum outputs of the latch circuitries.</p>
<p id="p-0035" num="0034">This frequency divider performs the same function as the prior art frequency divider described above in connection with <figref idref="DRAWINGS">FIGS. 1 to 3</figref>, however, it is faster. According to said prior art the Cm and Sin inputs are individually latched before being fed to the AND gate of the half-adder, for generation of the carry Cout and to the XOR gate of the half-adder, for the generation of the sum Sout. These two steps cause two delays, the delay caused by the latch and in addition the delay caused by the half-adder.</p>
<p id="p-0036" num="0035">The frequency divider according to the present invention, however, has the half-adding function merged in its specific latch circuitry. Therefore, no extra delay is caused by performing the half-adding function.</p>
<p id="p-0037" num="0036">The invention yields the advantage that the period of its frequency divider is lower bounded by the delay of the latching circuitry and the delay of the AND gate circuitry. In other words, it is faster than the prior art frequency dividers.</p>
<p id="p-0038" num="0037">According to a specific embodiment of the invention each latch circuitry comprises:</p>
<p id="p-0039" num="0038">a first and a second clocked master-slave latch, each master latch having two OR-wired signal inputs and one clock in-put, the first slave latch having one signal input and a clock input, the second slave latch having two OR-wired signal inputs and a clock input, one signal input being connected with the inverting output of the first master latch and the other signal input being connected with the inverting output of the second master latch.</p>
<p id="p-0040" num="0039">As described above, these latch circuits have been connected to perform a half-adding function which causes no extra delay.</p>
<p id="p-0041" num="0040">This advantage has been achieved by merging the half-adding function into the logic of the latches.</p>
<p id="p-0042" num="0041">Further this new frequency divider has the advantage that it can be economically produced because it needs fewer components, as will be made clear later.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<p id="p-0043" num="0042">Other objects and further features of the present invention will be apparent from the following detailed description when read in conjunction with the accompanying drawings, in which:</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 1</figref> shows a prior art half adder,</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 2</figref> shows a prior art programmable 4-bit synchronous modulo-k counter based on half adders,</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 3</figref> shows a cascaded version of the end-of-cycle detector for a 7-bit modulo-k counter,</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 4</figref> shows a master-slave DFF built from simple latches,</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 5</figref> shows a clocked latch circuitry with merged half-adding input logic,</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 6</figref> shows a programmable 4-bit synchronous modulo-k counter according to the present invention using latch circuitries with merged half-adding function,</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIG. 7</figref> shows an implementation of a simple latch with merged input logic (D<b>1</b> OR D<b>2</b>).</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<p id="p-0051" num="0050"><figref idref="DRAWINGS">FIGS. 1 to 3</figref> have been described above.</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 4</figref> shows a master-slave latch built from simple latches. The simple latch either stores the data D (clock CLK is high) or directly outputs it to the output Q (CLK is low). Because of the latter function, this simple latch is also called a transparent latch.</p>
<p id="p-0053" num="0052">In a master-slave latch, two simple latches are connected in series. The first simple latch <b>60</b> is called master; the second latch <b>62</b> is called slave. The slave latch is operated with the inverted clock of the master latch. In <figref idref="DRAWINGS">FIG. 4</figref> and the following, an inverted signal is shown by a prefix X.</p>
<p id="p-0054" num="0053">The master-slave latch inputs the data D, which exist when the clock has its transition from low to high. Likewise, the slave latch becomes transparent when CLK changes from high to low. Thus, outputs change only on the falling edge of CLK.</p>
<p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. 5</figref> shows two master slave latches, which are arranged substantially in parallel. The upper DFF consists of a master <b>80</b> and a slave <b>86</b>. The master has two inputs D<b>1</b> and D<b>2</b>, which receive the signals XCin, and XSin resp. The other input of master <b>80</b> receives the clock Clk.</p>
<p id="p-0056" num="0055">The Q-output of the latch <b>80</b> outputs the latched signal XCin OR XSin. This output signal is input to the entrance D of the slave <b>86</b>.</p>
<p id="p-0057" num="0056">The lower master slave latch consists of a master <b>82</b> and a slave <b>84</b>. Again, master <b>82</b> has two OR-inputs D<b>1</b> and D<b>2</b>, which receive the signals Cin and Sin respectively. The other input receives the clock.</p>
<p id="p-0058" num="0057">The Q-output of master <b>82</b> is not being used.</p>
<p id="p-0059" num="0058">The inverted output XQ is being fed to an OR input D<b>2</b> of slave <b>84</b>. The other OR input D<b>1</b> of slave <b>84</b> is connected to the XQ output of the master <b>80</b> of the upper master-slave latch. This in-put D<b>1</b> of slave <b>84</b> receives the inverted value of Q which is identical to NOT(XGin+XSin). The output Q of slave <b>84</b> out-puts the signal XSout. The inverted output XQ outputs the signal South, which can also be described by (NOT(XCin+XSin)+NOT(Gin+Sin)), which is equal to Cm XOR Sin.</p>
<p id="p-0060" num="0059">As far as slave <b>86</b> is concerned, its output Q outputs the signal XCout. Its inverted output XQ outputs the signal Cout, which can also be described as NOT(XCin+XSin) which is equal to Cin AND Sin.</p>
<p id="p-0061" num="0060"><figref idref="DRAWINGS">FIG. 6</figref> shows a four-bit programmable synchronous counter. It comprises four clocked latch circuitries each built up like the clocked latch circuitry shown in <figref idref="DRAWINGS">FIG. 5</figref>. The right-hand side latch circuitry <b>76</b> represents the least significant bit (LSB) The clocked latch circuitry <b>70</b> at the far-left side represents the most significant bit (MSB). The Cin input of the clocked latch circuitry <b>76</b> receives a “1” with every clock.</p>
<p id="p-0062" num="0061">The Sin input of the latch circuitries <b>74</b> to <b>76</b> receives the Sout output of this very same latch circuitry. The signal out-put from the output Cout is fed to the input Cin of the latch circuitry <b>74</b> of the next higher bit position.</p>
<p id="p-0063" num="0062">The Sin input of the latch circuitries <b>70</b> to <b>76</b> receives the Sout output of this very same latch circuitry. The signal out-put from the output Cout of the latch circuitry <b>76</b>, <b>74</b>, <b>72</b> is fed to the input Cin of the latch circuitry <b>74</b>, <b>72</b>, <b>70</b> of the next higher bit position.</p>
<p id="p-0064" num="0063">Again, with every clock the signal output from the Cout output is fed to the clock input of the next higher order clocked latch circuitry, in the present case of the clocked latch circuitry.</p>
<p id="p-0065" num="0064">The clock to all LCs is fed from Fin.</p>
<p id="p-0066" num="0065">The Sout output signals of each of the clocked latch circuitry are being fed into cascaded AND circuits <b>36</b> and <b>38</b>. The AND gate <b>36</b> receives the Sout output signal from the clocked latch circuitry <b>70</b> and <b>72</b> and the AND gate <b>38</b> receives the output signal from AND gate <b>36</b> and the output signals Sout from the clocked latch circuitry <b>74</b> and <b>76</b>. The result is outputted from AND gate <b>38</b> as signal Fout.</p>
<p id="p-0067" num="0066">This counter described in connection with <figref idref="DRAWINGS">FIG. 6</figref> performs the identical function as the counter of the prior art as described in connection with <figref idref="DRAWINGS">FIG. 2</figref>.</p>
<p id="p-0068" num="0067">The advantage of the counter to the present invention is that it does not use any extra time for performing the half-adding function. There is no additional delay as there always is with all other known counters built up with half-adders.</p>
<p id="p-0069" num="0068">In addition to the features of the frequency divider of <figref idref="DRAWINGS">FIG. 2</figref>, this frequency divider shows the line Fin that represents the input clock.</p>
<p id="p-0070" num="0069">Further, instead of the parallel end-of-cycle detector consisting of a 4-input AND gate <b>34</b>, there is shown the cascaded AND built from a 2-input AND gate <b>36</b> and a 3-input AND gate <b>38</b>.</p>
<p id="p-0071" num="0070">As shown in the example below, in the last counting step, the last two bits S<b>0</b> to S<b>1</b> change simultaneously from 0 to 1, while the higher significant bits have already settled to 1. So only AND <b>50</b> in <figref idref="DRAWINGS">FIG. 3</figref> and AND <b>38</b> in <figref idref="DRAWINGS">FIG. 5</figref> have to have a fan-in of 3.</p>
<heading id="h-0001" level="1">EXAMPLE OF OPERATION</heading>
<p id="p-0072" num="0071">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
  <mrow>
    <mi>K</mi>
    <mo>=</mo>
    <mn>5</mn>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00001-2" num="00001.2">
<math overflow="scroll">
  <mrow>
    <mi>Initialize</mi>
    <mo>⁢</mo>
    <mstyle>
      <mtext>:</mtext>
    </mstyle>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00001-3" num="00001.3">
<math overflow="scroll">
  <mrow>
    <mi>S</mi>
    <mo>=</mo>
    <mrow>
      <mrow>
        <mi>NOT</mi>
        <mo>⁡</mo>
        <mrow>
          <mo>(</mo>
          <mi>k</mi>
          <mo>)</mo>
        </mrow>
      </mrow>
      <mo>=</mo>
      <mrow>
        <mrow>
          <mi>NOT</mi>
          <mo>⁡</mo>
          <mrow>
            <mo>(</mo>
            <mn>0101</mn>
            <mo>)</mo>
          </mrow>
        </mrow>
        <mo>=</mo>
        <mn>1010</mn>
      </mrow>
    </mrow>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00001-4" num="00001.4">
<math overflow="scroll">
  <mrow>
    <mrow>
      <mi>C</mi>
      <mo>=</mo>
      <mrow>
        <mn>0</mn>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.3em" height="0.3ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mn>0</mn>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.3em" height="0.3ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mn>0</mn>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.3em" height="0.3ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mn>0</mn>
      </mrow>
    </mrow>
    <mo>⁢</mo>
    <mstyle>
      <mspace width="0.3em" height="0.3ex"/>
    </mstyle>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00001-5" num="00001.5">
<math overflow="scroll">
  <mrow>
    <mi>Iterate</mi>
    <mo>⁢</mo>
    <mstyle>
      <mtext>:</mtext>
    </mstyle>
  </mrow>
</math>
</maths>
<maths id="MATH-US-00001-6" num="00001.6">
<math overflow="scroll">
  <mrow>
    <msub>
      <mrow>
        <mi>C</mi>
        <mo>⁡</mo>
        <mrow>
          <mo>(</mo>
          <mi>i</mi>
          <mo>)</mo>
        </mrow>
      </mrow>
      <mi>n</mi>
    </msub>
    <mo>=</mo>
    <mrow>
      <mo>{</mo>
      <mrow>
        <mrow>
          <mtable>
            <mtr>
              <mtd>
                <mrow>
                  <mi/>
                  <mo>⁢</mo>
                  <msub>
                    <mrow>
                      <mi>S</mi>
                      <mo>⁡</mo>
                      <mrow>
                        <mo>(</mo>
                        <mn>0</mn>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                    <mrow>
                      <mi>n</mi>
                      <mo>-</mo>
                      <mn>1</mn>
                    </mrow>
                  </msub>
                </mrow>
              </mtd>
              <mtd>
                <mrow>
                  <mrow>
                    <mi>for</mi>
                    <mo>⁢</mo>
                    <mstyle>
                      <mspace width="0.8em" height="0.8ex"/>
                    </mstyle>
                    <mo>⁢</mo>
                    <mi>i</mi>
                  </mrow>
                  <mo>=</mo>
                  <mn>0</mn>
                </mrow>
              </mtd>
            </mtr>
            <mtr>
              <mtd>
                <mrow>
                  <mi/>
                  <mo>⁢</mo>
                  <mrow>
                    <msub>
                      <mrow>
                        <mi>C</mi>
                        <mo>⁡</mo>
                        <mrow>
                          <mo>(</mo>
                          <mrow>
                            <mi>i</mi>
                            <mo>-</mo>
                            <mn>1</mn>
                          </mrow>
                          <mo>)</mo>
                        </mrow>
                      </mrow>
                      <mrow>
                        <mi>n</mi>
                        <mo>-</mo>
                        <mn>1</mn>
                      </mrow>
                    </msub>
                    <mo>⁢</mo>
                    <mi>XOR</mi>
                    <mo>⁢</mo>
                    <mstyle>
                      <mspace width="0.6em" height="0.6ex"/>
                    </mstyle>
                    <mo>⁢</mo>
                    <msub>
                      <mrow>
                        <mi>S</mi>
                        <mo>⁡</mo>
                        <mrow>
                          <mo>(</mo>
                          <mi>i</mi>
                          <mo>)</mo>
                        </mrow>
                      </mrow>
                      <mrow>
                        <mi>n</mi>
                        <mo>-</mo>
                        <mn>1</mn>
                      </mrow>
                    </msub>
                  </mrow>
                </mrow>
              </mtd>
              <mtd>
                <mrow>
                  <mrow>
                    <mi>for</mi>
                    <mo>⁢</mo>
                    <mstyle>
                      <mspace width="0.8em" height="0.8ex"/>
                    </mstyle>
                    <mo>⁢</mo>
                    <mi>i</mi>
                  </mrow>
                  <mo>&gt;</mo>
                  <mn>0</mn>
                </mrow>
              </mtd>
            </mtr>
          </mtable>
          <mo>⁢</mo>
          <mstyle>
            <mspace width="0.6em" height="0.6ex"/>
          </mstyle>
          <mo>⁢</mo>
          <mstyle>
            <mtext>
</mtext>
          </mstyle>
          <mo>⁢</mo>
          <msub>
            <mrow>
              <mi>S</mi>
              <mo>⁡</mo>
              <mrow>
                <mo>(</mo>
                <mi>i</mi>
                <mo>)</mo>
              </mrow>
            </mrow>
            <mi>n</mi>
          </msub>
        </mrow>
        <mo>=</mo>
        <mrow>
          <mo>{</mo>
          <mrow>
            <mrow>
              <mtable>
                <mtr>
                  <mtd>
                    <mrow>
                      <mi> </mi>
                      <mo>⁢</mo>
                      <msub>
                        <mover>
                          <mrow>
                            <mi>S</mi>
                            <mo>⁡</mo>
                            <mrow>
                              <mo>(</mo>
                              <mi>i</mi>
                              <mo>)</mo>
                            </mrow>
                          </mrow>
                          <mi>_</mi>
                        </mover>
                        <mrow>
                          <mi>n</mi>
                          <mo>-</mo>
                          <mn>1</mn>
                        </mrow>
                      </msub>
                    </mrow>
                  </mtd>
                  <mtd>
                    <mrow>
                      <mrow>
                        <mi>for</mi>
                        <mo>⁢</mo>
                        <mstyle>
                          <mspace width="0.8em" height="0.8ex"/>
                        </mstyle>
                        <mo>⁢</mo>
                        <mi>i</mi>
                      </mrow>
                      <mo>=</mo>
                      <mn>0</mn>
                    </mrow>
                  </mtd>
                </mtr>
                <mtr>
                  <mtd>
                    <mrow>
                      <mi/>
                      <mo>⁢</mo>
                      <mrow>
                        <msub>
                          <mrow>
                            <mi>C</mi>
                            <mo>⁡</mo>
                            <mrow>
                              <mo>(</mo>
                              <mrow>
                                <mi>i</mi>
                                <mo>-</mo>
                                <mn>1</mn>
                              </mrow>
                              <mo>)</mo>
                            </mrow>
                          </mrow>
                          <mrow>
                            <mi>n</mi>
                            <mo>-</mo>
                            <mn>1</mn>
                          </mrow>
                        </msub>
                        <mo>⁢</mo>
                        <mi>AND</mi>
                        <mo>⁢</mo>
                        <mstyle>
                          <mspace width="0.6em" height="0.6ex"/>
                        </mstyle>
                        <mo>⁢</mo>
                        <msub>
                          <mrow>
                            <mi>S</mi>
                            <mo>⁡</mo>
                            <mrow>
                              <mo>(</mo>
                              <mi>i</mi>
                              <mo>)</mo>
                            </mrow>
                          </mrow>
                          <mrow>
                            <mi>n</mi>
                            <mo>-</mo>
                            <mn>1</mn>
                          </mrow>
                        </msub>
                      </mrow>
                    </mrow>
                  </mtd>
                  <mtd>
                    <mrow>
                      <mrow>
                        <mi>for</mi>
                        <mo>⁢</mo>
                        <mstyle>
                          <mspace width="0.8em" height="0.8ex"/>
                        </mstyle>
                        <mo>⁢</mo>
                        <mi>i</mi>
                      </mrow>
                      <mo>&gt;</mo>
                      <mn>0</mn>
                    </mrow>
                  </mtd>
                </mtr>
              </mtable>
              <mo>⁢</mo>
              <mstyle>
                <mtext>
</mtext>
              </mstyle>
              <mo>⁢</mo>
              <mrow>
                <mi>Stop</mi>
                <mo>/</mo>
                <mi>Reload</mi>
              </mrow>
              <mo>⁢</mo>
              <mstyle>
                <mtext>:</mtext>
              </mstyle>
              <mo>⁢</mo>
              <mstyle>
                <mtext>
</mtext>
              </mstyle>
              <mo>⁢</mo>
              <mi>if</mi>
              <mo>⁢</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>⁢</mo>
              <mi>S</mi>
            </mrow>
            <mo>=</mo>
            <mrow>
              <mrow>
                <mo>-</mo>
                <mn>1</mn>
              </mrow>
              <mo>⁢</mo>
              <mrow>
                <mo>(</mo>
                <mrow>
                  <mn>1111</mn>
                  <mo>⁢</mo>
                  <mstyle>
                    <mspace width="0.8em" height="0.8ex"/>
                  </mstyle>
                  <mo>⁢</mo>
                  <mi>in</mi>
                  <mo>⁢</mo>
                  <mstyle>
                    <mspace width="0.8em" height="0.8ex"/>
                  </mstyle>
                  <mo>⁢</mo>
                  <mrow>
                    <mi>two</mi>
                    <mo>'</mo>
                  </mrow>
                  <mo>⁢</mo>
                  <mi>s</mi>
                  <mo>⁢</mo>
                  <mstyle>
                    <mspace width="0.8em" height="0.8ex"/>
                  </mstyle>
                  <mo>⁢</mo>
                  <mi>complement</mi>
                  <mo>⁢</mo>
                  <mstyle>
                    <mspace width="0.8em" height="0.8ex"/>
                  </mstyle>
                  <mo>⁢</mo>
                  <mi>form</mi>
                </mrow>
                <mo>)</mo>
              </mrow>
            </mrow>
          </mrow>
        </mrow>
      </mrow>
    </mrow>
  </mrow>
</math>
</maths>
</p>
<p id="p-0073" num="0072">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="9">
<colspec colname="1" colwidth="28pt" align="center"/>
<colspec colname="2" colwidth="14pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="14pt" align="center"/>
<colspec colname="5" colwidth="28pt" align="center"/>
<colspec colname="6" colwidth="14pt" align="center"/>
<colspec colname="7" colwidth="35pt" align="center"/>
<colspec colname="8" colwidth="14pt" align="center"/>
<colspec colname="9" colwidth="42pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="9" align="center" rowsep="1"/>
</row>
<row>
<entry>n</entry>
<entry>C3</entry>
<entry>C2</entry>
<entry>C1</entry>
<entry>C0</entry>
<entry>S3</entry>
<entry>S2</entry>
<entry>S1</entry>
<entry>S0</entry>
</row>
<row>
<entry namest="1" nameend="9" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
</row>
<row>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>1</entry>
<entry>1</entry>
</row>
<row>
<entry>2</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>1</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
</row>
<row>
<entry>3</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
</row>
<row>
<entry>4</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>0</entry>
<entry>0</entry>
</row>
<row>
<entry>5</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>0</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
<entry>1</entry>
</row>
<row>
<entry namest="1" nameend="9" align="center" rowsep="1"/>
</row>
<row>
<entry namest="1" nameend="9" align="left" id="FOO-00001">The table shows how the S bits settle to 1 from MSB to LSB.</entry>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0074" num="0073">In the above-described U.S. Pat. No. 5,179,578 in <figref idref="DRAWINGS">FIG. 1</figref>, the Cin and Sin inputs are individually latched (stored), before being fed to the AND gate of the half-adders, for the generation of the carry Cout and to the XOR gate of the half-adder, for the generation of sum Sout.</p>
<p id="p-0075" num="0074">The present patent however takes advantage the differential signals of the master-slave latches <b>80</b>, <b>86</b> and <b>82</b>, <b>84</b> to generate the Sum and Carry signals using common intermediate logical terms.</p>
<p id="p-0076" num="0075">Latches generally provide differential signals, i.e. both non-inverted and inverted output signals. For example, an 2-input OR gate provides outputs
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>Q=D1 OR D2<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>XQ=NOT(D1 OR D2).<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0077" num="0076">In high-speed logic families like current switching logic, it is easy to increase the fan-in of gates, as known in the art. The simplest example is the N-input OR/XOR ECL gate (Emitter-Coupled Logic) with N parallel input transistors.</p>
<p id="p-0078" num="0077">The basic building block of this clocked circuitry with half-adding function is the simple latch with two inputs performing the function D<b>1</b> OR D<b>2</b>.</p>
<p id="p-0079" num="0078">For this approach, it is necessary to transform the generation of Sum and Carry into a form, which is compatible with OR/NOR logic. Using de Morgan's Law of Duality, one can write:</p>
<p id="p-0080" num="0079">
<maths id="MATH-US-00002" num="00002">
<math overflow="scroll">
  <mtable>
    <mtr>
      <mtd>
        <mrow>
          <mi>Sout</mi>
          <mo>=</mo>
          <mrow>
            <mi>Cin</mi>
            <mo>⁢</mo>
            <mstyle>
              <mspace width="0.8em" height="0.8ex"/>
            </mstyle>
            <mo>⁢</mo>
            <mi>AND</mi>
            <mo>⁢</mo>
            <mstyle>
              <mspace width="0.8em" height="0.8ex"/>
            </mstyle>
            <mo>⁢</mo>
            <mi>Sin</mi>
          </mrow>
        </mrow>
      </mtd>
    </mtr>
    <mtr>
      <mtd>
        <mrow>
          <mo>=</mo>
          <mrow>
            <mi>NOT</mi>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <mrow>
                <mi>XCin</mi>
                <mo>⁢</mo>
                <mstyle>
                  <mspace width="0.8em" height="0.8ex"/>
                </mstyle>
                <mo>⁢</mo>
                <mi>OR</mi>
                <mo>⁢</mo>
                <mstyle>
                  <mspace width="0.8em" height="0.8ex"/>
                </mstyle>
                <mo>⁢</mo>
                <mi>X</mi>
                <mo>⁢</mo>
                <mstyle>
                  <mspace width="0.3em" height="0.3ex"/>
                </mstyle>
                <mo>⁢</mo>
                <mi>Sin</mi>
              </mrow>
              <mo>)</mo>
            </mrow>
          </mrow>
        </mrow>
      </mtd>
    </mtr>
  </mtable>
</math>
</maths>
<maths id="MATH-US-00002-2" num="00002.2">
<math overflow="scroll">
  <mtable>
    <mtr>
      <mtd>
        <mrow>
          <mi>Cout</mi>
          <mo>=</mo>
          <mrow>
            <mi>Cin</mi>
            <mo>⁢</mo>
            <mstyle>
              <mspace width="0.8em" height="0.8ex"/>
            </mstyle>
            <mo>⁢</mo>
            <mi>EXOR</mi>
            <mo>⁢</mo>
            <mstyle>
              <mspace width="0.8em" height="0.8ex"/>
            </mstyle>
            <mo>⁢</mo>
            <mi>Sin</mi>
          </mrow>
        </mrow>
      </mtd>
    </mtr>
    <mtr>
      <mtd>
        <mrow>
          <mo>=</mo>
          <mrow>
            <mi>NOT</mi>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <mrow>
                <mrow>
                  <mi>NOT</mi>
                  <mo>⁡</mo>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <mi>XCin</mi>
                      <mo>⁢</mo>
                      <mstyle>
                        <mspace width="0.8em" height="0.8ex"/>
                      </mstyle>
                      <mo>⁢</mo>
                      <mi>OR</mi>
                      <mo>⁢</mo>
                      <mstyle>
                        <mspace width="0.8em" height="0.8ex"/>
                      </mstyle>
                      <mo>⁢</mo>
                      <mi>Xcin</mi>
                    </mrow>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>⁢</mo>
                <mi>OR</mi>
                <mo>⁢</mo>
                <mstyle>
                  <mspace width="0.8em" height="0.8ex"/>
                </mstyle>
                <mo>⁢</mo>
                <mrow>
                  <mi>NOT</mi>
                  <mo>⁡</mo>
                  <mrow>
                    <mo>(</mo>
                    <mrow>
                      <mi>Cin</mi>
                      <mo>⁢</mo>
                      <mstyle>
                        <mspace width="0.8em" height="0.8ex"/>
                      </mstyle>
                      <mo>⁢</mo>
                      <mi>OR</mi>
                      <mo>⁢</mo>
                      <mstyle>
                        <mspace width="0.8em" height="0.8ex"/>
                      </mstyle>
                      <mo>⁢</mo>
                      <mi>Sin</mi>
                    </mrow>
                    <mo>)</mo>
                  </mrow>
                </mrow>
              </mrow>
              <mo>)</mo>
            </mrow>
          </mrow>
        </mrow>
      </mtd>
    </mtr>
  </mtable>
</math>
</maths>
</p>
<p id="p-0081" num="0080">The required intermediate logic terms are thus readily obtained at the output of the master latches <b>80</b>, <b>86</b> and the output of the slave latches <b>82</b>, <b>84</b> contain the wanted expressions for Sum and Carry.</p>
<p id="p-0082" num="0081"><figref idref="DRAWINGS">FIG. 7</figref> shows the ECL realization of a simple latch <b>60</b> of <figref idref="DRAWINGS">FIG. 4</figref>, except for the double inputs D<b>1</b> and D<b>2</b> which are also shown in latches <b>80</b>, <b>82</b> or <b>84</b> in <figref idref="DRAWINGS">FIG. 5</figref>. The function of <figref idref="DRAWINGS">FIG. 7</figref> is as follows.</p>
<p id="p-0083" num="0082">When CLK is high, the constant current Ibias generated in the bias circuit <b>98</b> is steered to the left side of the latch <b>90</b>. D<b>1</b> and D<b>2</b> are the data input signals.</p>
<p id="p-0084" num="0083">The transistor <b>103</b> has its base connected to the reference voltage Vref. This reference voltage has a mid-value between the high voltage and the low voltage of the input voltages in putted to D<b>1</b> or D<b>2</b>. The voltage Vref is a threshold value used to decide whether D<b>1</b> and D<b>2</b> are at high or at low level.</p>
<p id="p-0085" num="0084">When transistor <b>103</b> opens, the voltage at the node <b>96</b> drops from VDD to (VDD−(R*Ibias)). The resistance value of resistor <b>107</b> is identical to the one of resistor <b>106</b>.</p>
<p id="p-0086" num="0085">When at least one of the inputs D<b>1</b> (base of transistor <b>101</b>) or D<b>2</b> (base of transistor <b>102</b>) is high, the current will flow through the left resistor <b>106</b>. Therefore, the voltage at the node <b>94</b> drops form VDD to (VDD−(R*Ibias)) and produce a low level. Because no current is flowing through resistor <b>107</b>, a high level is generated for Q <b>96</b>. Thus the logic operation of the circuit is equivalent to Q=D<b>1</b> OR D<b>2</b>.</p>
<p id="p-0087" num="0086">Transistors <b>104</b> and <b>105</b> serve to store the potentials of nodes <b>94</b> and <b>96</b> when the clock switches from high to low. When CLK has a “low” potential, the bias current flows through the right branch of the circuit. The values of Q and XQ, which are generated before, are then stored by the positive feedback of the cross-coupled transistors <b>104</b> and <b>105</b>.</p>
<p id="p-0088" num="0087">The present invention is not limited to these specific embodiments, but various variations and modifications may be made without departing from the disclosure of the present invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001 MATH-US-00001-2 MATH-US-00001-3 MATH-US-00001-4 MATH-US-00001-5 MATH-US-00001-6" nb-file="US07298811-20071120-M00001.NB">
<img id="EMI-M00001" he="42.67mm" wi="76.20mm" file="US07298811-20071120-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00002 MATH-US-00002-2" nb-file="US07298811-20071120-M00002.NB">
<img id="EMI-M00002" he="16.59mm" wi="76.20mm" file="US07298811-20071120-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>The invention claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A frequency divider using half-adding functions, comprising:
<claim-text>a plurality of latch circuits performing a half adding function, one latch circuit being provided for each of a plurality of bits, each latch circuit having a sum input, a carry input, a sum output and a carry output, wherein the sum output of each latch circuit is input to the sum input of the same latch circuit, the latch circuit for a least significant bit of the plurality of bits receives a “1” at the carry input thereof, and each of the other latch circuits receives, at the carry input thereof, a carry signal output from the carry output of the latch circuit of the next lower bit position; and</claim-text>
<claim-text>AND gate circuitry receiving the sum outputs of the latch circuits,</claim-text>
<claim-text>wherein the frequency of the frequency divider is lower bounded only by one latch circuit and the AND circuitry.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The frequency divider according to <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the AND gate circuitry consists of cascaded gates.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. A frequency divider using half-adding functions, comprising:
<claim-text>a plurality of latch circuits performing a half adding function, one latch circuit being provided for each of a plurality of bits, each latch circuit having a sum input, a carry input, a sum output and a carry output, wherein the sum output of each latch circuit is input to the sum input of the same latch circuit, the latch circuit for a least significant bit of the plurality of bits receives a “1” at the carry input thereof, and each of the other latch circuits receives, at the carry input thereof, a carry signal output from the carry output of the latch circuit of the next lower bit position; and</claim-text>
<claim-text>AND gate circuitry receiving the sum outputs of the latch circuits, wherein each latch circuit comprises a first and a second clocked master-slave latch, each including a master latch and a slave latch,</claim-text>
<claim-text>the master latch of each master-slave latch having two signal inputs wired to perform an OR function and one clock input,</claim-text>
<claim-text>the first slave latch having one signal input and one clock input,</claim-text>
<claim-text>the second slave latch having two signal inputs wired to perform an OR function and one clock input, wherein one of the signal inputs of the second slave latch is connected with an inverting output of the first master latch and the other of the signal inputs of the second slave latch is connected with an inverting output of the second master latch.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The frequency divider according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein a non-inverting output of the first master latch is connected to the signal input of the first slave latch, and
<claim-text>the clock input of the first master latch and the second slave latch receive an inverted clock.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The frequency divider according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the two signal inputs of the second master latch receive a first signal and a second signal, respectively, and the two signal inputs of the first master latch receive the inverse of the first signal and the inverse of the second signal, respectively.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The frequency divider according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein said master-slave latches are synchronous latches.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The frequency divider according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein some or all of the latch circuits are transparent latches.</claim-text>
</claim>
</claims>
</us-patent-grant>
