<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298842-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298842</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>09872509</doc-number>
<date>20010601</date>
</document-id>
</application-reference>
<us-application-series-code>09</us-application-series-code>
<priority-claims>
<priority-claim sequence="01" kind="national">
<country>JP</country>
<doc-number>P09-106136</doc-number>
<date>19970423</date>
</priority-claim>
</priority-claims>
<us-term-of-grant>
<us-term-extension>1138</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>9</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>N</subclass>
<main-group>7</main-group>
<subgroup>167</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>380 44</main-classification>
<further-classification>380201</further-classification>
<further-classification>713189</further-classification>
</classification-national>
<invention-title id="d0e71">Utilizing a key for enciphering and deciphering that is modified during enciphering and deciphering</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4203166</doc-number>
<kind>A</kind>
<name>Ehrsam et al.</name>
<date>19800500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>4531021</doc-number>
<kind>A</kind>
<name>Bluestein et al.</name>
<date>19850700</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>178 2208</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5029207</doc-number>
<kind>A</kind>
<name>Gammie</name>
<date>19910700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>380228</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5341425</doc-number>
<kind>A</kind>
<name>Wasilewski et al.</name>
<date>19940800</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>380 20</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5425103</doc-number>
<kind>A</kind>
<name>Shaw</name>
<date>19950600</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>380 44</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6105012</doc-number>
<kind>A</kind>
<name>Chang et al.</name>
<date>20000800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6256391</doc-number>
<kind>B1</kind>
<name>Ishiguro et al.</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>380203</main-classification></classification-national>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6539094</doc-number>
<kind>B1</kind>
<name>Osakabe et al.</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>EP</country>
<doc-number>0 756 276</doc-number>
<date>19970100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>EP</country>
<doc-number>0 765 061</doc-number>
<date>19970300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00011">
<othercit>Schneier Bruce: “Applied Cryptography Second Edition: protocols, algorithms, and source code in C” 1996, John Wiley &amp; Sons, USA XP002104180, pp. 180-181; 265-301; 30-31; 429-459 and 351-354.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00012">
<othercit>“Encryption for Open VMS, Version 1.3” Digital Software Product Descriptions, Updated: Apr. 30, 1996, Retrieved From Internet: May 27, 1999 Via http://www.Digital.com/Info/SP2674, XP002104179, the whole document.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00013">
<othercit>Schneier Bruce: “Applied Cryptography Second Edition: protocols, algorithms, and source code in C” 1996, John Wiley &amp; Sons, USA XP002104180.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00014">
<othercit>“Encryption for Open VMS, Version 1.3” Digital Software Product Descriptions, Updated: Apr. 30, 1996, Retrieved from Internet: May 27, 1999 Via http://www.Digital.com/info/SP2674, XP002104179.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00015">
<othercit>Schneier Bruce: “Applied Cryptography Second Edition: protocols, algorithms, and source code in C” 1996, John Wiley &amp; Sons, USA XP002104588.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00016">
<othercit>Bloks R.H.J., “The IEEE—1394 High Speed Serial Bus”, Philips Journal of Research, vol. 50, No. 1, Jan. 1, 1996; pp. 209-216.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00017">
<othercit>Kunzman A.J. et al., “1394 High Performance Serial Bus: The Digital Interface for ATV”, IEEE Transactions on Consumer Electronics, vol. 41, No. 3; Aug. 1, 1995; pp. 893-900.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>52</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>380201-203</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380 44- 46</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380239</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380277-278</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>713189</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>705 59</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>22</number-of-drawing-sheets>
<number-of-figures>24</number-of-figures>
</figures>
<us-related-documents>
<continuation>
<relation>
<parent-doc>
<document-id>
<country>US</country>
<doc-number>09059776</doc-number>
<kind>00</kind>
<date>19980414</date>
</document-id>
<parent-grant-document>
<document-id>
<country>US</country>
<doc-number>6256391</doc-number>
<kind>A </kind>
</document-id>
</parent-grant-document>
</parent-doc>
<child-doc>
<document-id>
<country>US</country>
<doc-number>09872509</doc-number>
</document-id>
</child-doc>
</relation>
</continuation>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20030191956</doc-number>
<kind>A1</kind>
<date>20031009</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Ishiguro</last-name>
<first-name>Ryuji</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
<nationality>
<country>JP</country>
</nationality>
<residence>
<country>JP</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Osawa</last-name>
<first-name>Yoshitomo</first-name>
<address>
<city>Kanagawa</city>
<country>JP</country>
</address>
</addressbook>
<nationality>
<country>JP</country>
</nationality>
<residence>
<country>JP</country>
</residence>
</applicant>
<applicant sequence="003" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Osakabe</last-name>
<first-name>Yoshio</first-name>
<address>
<city>Kanagawa</city>
<country>JP</country>
</address>
</addressbook>
<nationality>
<country>JP</country>
</nationality>
<residence>
<country>JP</country>
</residence>
</applicant>
<applicant sequence="004" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Sato</last-name>
<first-name>Makoto</first-name>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
<nationality>
<country>JP</country>
</nationality>
<residence>
<country>JP</country>
</residence>
</applicant>
<applicant sequence="005" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Shima</last-name>
<first-name>Hisato</first-name>
<address>
<city>Saratoga</city>
<country>JP</country>
</address>
</addressbook>
<nationality>
<country>JP</country>
</nationality>
<residence>
<country>JP</country>
</residence>
</applicant>
<applicant sequence="006" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Asano</last-name>
<first-name>Tomoyuki</first-name>
<address>
<city>Kanagawa</city>
<country>JP</country>
</address>
</addressbook>
<nationality>
<country>JP</country>
</nationality>
<residence>
<country>JP</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Frommer Lawrence &amp; Haug LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Frommer</last-name>
<first-name>William S.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Sony Corporation</orgname>
<role>03</role>
<address>
<city>Tokyo</city>
<country>JP</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Song</last-name>
<first-name>Hosuk</first-name>
<department>2135</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">The invention provides an enciphering apparatus and method, a deciphering apparatus and method and an information processing apparatus and method by which illegal copying can be prevented with certainty. Data enciphered by a 1394 interface of a DVD player is transmitted to a personal computer and a magneto-optical disk apparatus through a 1394 bus. In the magneto-optical disk apparatus with which a change to a function is not open to a user, the received data is deciphered by a 1394 interface. In contrast, in the personal computer with which a change to a function is open to a user, the enciphered data is deciphered using a time variable key by a 1394 interface, and a result of the decipherment is further deciphered using a session key by an application section.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="88.31mm" wi="169.25mm" file="US07298842-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="169.59mm" wi="103.72mm" orientation="landscape" file="US07298842-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="231.14mm" wi="174.67mm" file="US07298842-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="225.30mm" wi="140.89mm" orientation="landscape" file="US07298842-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="210.65mm" wi="167.81mm" file="US07298842-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="235.63mm" wi="153.75mm" orientation="landscape" file="US07298842-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="239.69mm" wi="140.55mm" orientation="landscape" file="US07298842-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="194.99mm" wi="134.70mm" orientation="landscape" file="US07298842-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="216.32mm" wi="146.22mm" orientation="landscape" file="US07298842-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="213.61mm" wi="140.46mm" orientation="landscape" file="US07298842-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="206.08mm" wi="115.91mm" orientation="landscape" file="US07298842-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="240.79mm" wi="153.42mm" orientation="landscape" file="US07298842-20071120-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="203.37mm" wi="153.84mm" file="US07298842-20071120-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="206.08mm" wi="133.77mm" orientation="landscape" file="US07298842-20071120-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="249.94mm" wi="149.27mm" orientation="landscape" file="US07298842-20071120-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="223.44mm" wi="123.95mm" orientation="landscape" file="US07298842-20071120-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="241.64mm" wi="154.18mm" orientation="landscape" file="US07298842-20071120-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="209.80mm" wi="122.00mm" orientation="landscape" file="US07298842-20071120-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="239.44mm" wi="149.27mm" orientation="landscape" file="US07298842-20071120-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="269.66mm" wi="148.08mm" orientation="landscape" file="US07298842-20071120-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="263.91mm" wi="144.36mm" orientation="landscape" file="US07298842-20071120-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="265.09mm" wi="148.51mm" orientation="landscape" file="US07298842-20071120-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="264.33mm" wi="146.98mm" orientation="landscape" file="US07298842-20071120-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<p id="p-0002" num="0001">Continuation of prior application Ser. No. 09/059,776, filed Apr. 14, 1998 now U.S. Pat. No. 6,256,391.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">1. Field of the Invention</p>
<p id="p-0004" num="0003">This invention relates to an enciphering apparatus and method, a deciphering apparatus and method and an information processing apparatus and method, and more particularly to an enciphering apparatus and method, a deciphering apparatus and method and an information processing apparatus and method by which high security is assured.</p>
<p id="p-0005" num="0004">2. Description of the Related Art</p>
<p id="p-0006" num="0005">Recently, a network is available which is composed of a plurality of electronic apparatus represented by AV apparatus, computers and so forth which are connected to each other by a bus so that various data may be communicated between them.</p>
<p id="p-0007" num="0006">Where a network of the type mentioned is employed, for example, data of a movie reproduced from a DVD (Digital Video Disk or Digital Versatile Disk) by a DVD player connected to the network can be transferred through the bus to and displayed by a display unit such as a television receiver or a monitor. Usually, it is licensed from the proprietor of copyright at a point of time when a DVD is purchased to display and enjoy a movie reproduced from the DVD on a display unit.</p>
<p id="p-0008" num="0007">However, it is not usually licensed from the proprietor of copyright to copy data reproduced from the DVD onto another recording medium and utilize the same. Thus, in order to prevent data sent out through the bus (network) from being copied illegally, it is a possible idea to encipher the data on the sending side and decipher the data on the receiving side.</p>
<p id="p-0009" num="0008">However, consumer electronics apparatus (CE apparatus) such as DVD players and television receivers are normally designed and produced for predetermined objects and are each produced such that it is impossible for a user to modify it or incorporate a different part into it to acquire or alter internal data (change of functions) of the apparatus. On the other hand, for example, in regard to personal computers, the architecture or circuitry is open to the public, and it is possible to add a board or install various application software to add or alter various functions.</p>
<p id="p-0010" num="0009">Accordingly, in regard to a personal computer, it can be performed comparatively readily to directly access or alter data on an internal bus of the personal computer by adding predetermined hardware or applying a software program. This signifies that, by producing and applying application software, it can be performed readily, for example, to receive data transmitted as ciphered data from a DVD player to a television receiver and decipher or copy the received data by a personal computer.</p>
<p id="p-0011" num="0010">In other words, a personal computer has a weak connection between a link portion which effects communication via a bus and an application portion which prepares data to be transmitted and utilizes received data, and includes many portions which can be modified physically and logically by a user. In contrast, a CE apparatus has a strong connection between them and includes little portion which allows intervention of a user.</p>
<heading id="h-0002" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0012" num="0011">It is an object of the present invention to provide an enciphering apparatus and method, a deciphering apparatus and method and an information processing apparatus and method by which illegal copying of data can be prevented with a higher degree of certainty.</p>
<p id="p-0013" num="0012">In order to attain the object described above, according to an aspect of the present invention to provide an enciphering apparatus, comprising enciphering means for enciphering data using a cryptographic key, first generating means for generating a first key, second generating means for generating a second key which is changed at a predetermined timing while the data is enciphered, and producing means for producing the cryptographic key using the first key and the second key.</p>
<p id="p-0014" num="0013">According to another aspect of the present invention, there is provided an enciphering method, comprising the steps of enciphering data using a cryptographic key, generating a first key, generating a second key which is changed at a predetermined timing while the data are enciphered, and producing the cryptographic key using the first key and the second key.</p>
<p id="p-0015" num="0014">With the enciphering apparatus and the enciphering method, since a cryptographic key is produced using a first key and a second key which is changed at a predetermined timing while data is enciphered, encipherment can be performed with a high degree of security.</p>
<p id="p-0016" num="0015">According to a further aspect of the present invention, there is provided a deciphering apparatus, comprising receiving means for receiving enciphered data, deciphering means for deciphering the received data using a cryptographic key, first generating means for generating a first key, second generating means for generating a second key which is changed at a predetermined timing while the data is deciphered, and producing means for producing the cryptographic key using the first key and the second key.</p>
<p id="p-0017" num="0016">According to a still further aspect of the present invention, there is provided a deciphering method, comprising the steps of receiving enciphered data, deciphering the received data using a cryptographic key, generating a first key, generating a second key which is changed at a predetermined timing while the data is deciphered, and producing the cryptographic key using the first key and the second key.</p>
<p id="p-0018" num="0017">With the deciphering apparatus and the deciphering method, since a cryptographic key is produced using a first key and a second key which is changed at a predetermined timing while data is deciphered, enciphered data can be deciphered with a higher degree of security.</p>
<p id="p-0019" num="0018">According to a yet further aspect of the present invention, there is provided an information processing system, comprising a plurality information processing apparatus connected to each other by a bus, the information processing apparatus including first information processing apparatus each having a function whose change is not open to a user, and second information processing apparatus each having a function whose change is open to a user, each of the first information processing apparatus including first receiving means for receiving enciphered data, first deciphering means for deciphering the data received by the first receiving means using a cryptographic key, first generating means for generating a first key, second generating means for generating a second key which is changed at a predetermined timing while the data is deciphered, and first producing means for producing the cryptographic key using the first key generated by the first generating means and the second key generated by the second generating means, each of the second information processing apparatus including second receiving means for receiving enciphered data, third generating means for generating the first key, fourth generating means for generating the second key which is changed at a predetermined timing while the data is deciphered, second producing means for producing a first cryptographic key using one of the first key generated by the third generating means and the second key generated by the fourth generating means, third producing means for producing a second cryptographic key using the other of the first key generated by the third generating means and the second key generated by the fourth means, second deciphering means for deciphering the enciphered data received by the receiving means using the first cryptographic key, and third deciphering means for further deciphering the data deciphered by the second deciphering means using the second cryptographic key.</p>
<p id="p-0020" num="0019">According to a yet further aspect of the present invention, there is provided an information processing method for an information processing system composed of a plurality information processing apparatus connected to each other by a bus, the information processing apparatus including first information processing apparatus each having a function whose change is not open to a user, and second information processing apparatus each having a function whose change is open to a user, comprising the steps performed by each of the first information processing apparatus of receiving enciphered data, deciphering the data received in the receiving step using a cryptographic key, generating a first key, generating a second key which is changed at a predetermined timing while the data is deciphered, and producing the cryptographic key using the first key generated in the first generating step and the second key generated in the second generating step, and the steps performed by each of the second information processing apparatus of receiving enciphered data, generating the first key, generating the second key which is changed at a predetermined timing while the data is deciphered, producing a first cryptographic key using one of the first key and the second key, producing a second cryptographic key using the other of the first key and the second key, deciphering the enciphered data received in the receiving step using the first cryptographic key, and deciphering the deciphered data further using the second cryptographic key.</p>
<p id="p-0021" num="0020">With the information processing system and the information processing method, since, in the first information processing apparatus which have functions whose change is not open to a user, a cryptographic key is produced using a first key and a second key which is changed at a predetermined timing while data is deciphered, but in the second information processing apparatus which have functions whose change is open to a user, a first cryptographic key is produced using one of a first key and a second key which is changed at a predetermined timing while data is deciphered, and then a second cryptographic key is produced using the other, whereafter the enciphered data is deciphered using the first cryptographic key, and the deciphered data is further deciphered using the second cryptographic key, the information processing apparatus and method has a higher degree of reliability than ever.</p>
<p id="p-0022" num="0021">According to a yet further aspect of the present invention, there is provided an information processing apparatus, comprising receiving means for receiving data transmitted thereto through a bus, producing means composed of a software program for producing a first cryptographic key and a second cryptographic key which is changed at a predetermined timing while the data is deciphered from the data received by the receiving means, first deciphering means for deciphering the enciphered data received by the receiving means using one of the first cryptographic key and the second cryptographic key produced by the producing means, and second deciphering means for deciphering and processing the data deciphered by the first deciphering means further using the other of the first cryptographic key and the second cryptographic key produced by the producing means.</p>
<p id="p-0023" num="0022">According to a yet further aspect of the present invention, there is provided an information processing method, comprising the steps of receiving data transmitted thereto through a bus, producing, from the received data, a first cryptographic key and a second cryptographic key which is changed at a predetermined timing while the data is deciphered, deciphering the received enciphered data using one of the first cryptographic key and the second cryptographic key, and deciphering the deciphered data further using the other of the first cryptographic key and the second cryptographic key.</p>
<p id="p-0024" num="0023">With the information processing apparatus and the information processing method, since a first cryptographic key and a second cryptographic key which is changed at a predetermined timing while data is deciphered are produced based on a software program, decipherment can be performed for each application program, and illegal copying can be prevented with a higher degree of accuracy.</p>
<p id="p-0025" num="0024">The above and other objects, features and advantages of the present invention will become apparent from the following description and the appended claims, taken in conjunction with the accompanying drawings in which like parts or elements are denoted by like reference characters.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram showing an example of a construction of an information processing system to which the present invention is applied;</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 2</figref> is a block diagram showing an example of internal constructions of a DVD player, a personal computer and a magneto-optical disk apparatus shown in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram illustrating an authentication procedure performed in the information processing system of <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 4</figref> is a timing chart illustrating the authentication procedure illustrated in <figref idref="DRAWINGS">FIG. 3</figref>;</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 5</figref> is a diagrammatic view illustrating a format of a node_unique_ID;</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 6</figref> is a timing chart illustrating another authentication procedure;</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 7</figref> is a similar view but illustrating a further authentication procedure;</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 8</figref> is a similar view but illustrating a still further authentication procedure;</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 9</figref> is a similar view but illustrating a yet further authentication procedure;</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 10</figref> is a block diagram illustrating an enciphering procedure;</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 11</figref> is a block diagram showing an example of a construction of a 1394 interface used in the enciphering procedure of <figref idref="DRAWINGS">FIG. 10</figref>;</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 12</figref> is a block diagram showing an example of a more detailed construction of the 1394 interface of <figref idref="DRAWINGS">FIG. 11</figref>;</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 13</figref> is a block diagram showing an example of a more detailed construction of a linear feedback shift register shown in <figref idref="DRAWINGS">FIG. 12</figref>;</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 14</figref> is a block diagram showing an example of a more detailed construction of the linear feedback shift register of <figref idref="DRAWINGS">FIG. 13</figref>;</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 15</figref> is a block diagram showing an example of a construction of a 1394 interface used in the enciphering procedure of <figref idref="DRAWINGS">FIG. 10</figref>.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 16</figref> is a block diagram showing an example of a more detailed construction of the 1394 interface of <figref idref="DRAWINGS">FIG. 15</figref>;</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 17</figref> is a block diagram showing an example of a construction of a 1394 interface used in the enciphering procedure of <figref idref="DRAWINGS">FIG. 10</figref>;</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 18</figref> is a block diagram showing an example of a more detailed construction of the 1394 interface of <figref idref="DRAWINGS">FIG. 17</figref>;</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 19</figref> is a block diagram showing an example of a construction of an application section used in the enciphering procedure of <figref idref="DRAWINGS">FIG. 10</figref>;</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 20</figref> is a block diagram showing an example of a more detailed construction of the application section of <figref idref="DRAWINGS">FIG. 19</figref>;</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 21</figref> is a block diagram showing another example of the construction of the 1394 interface used in the enciphering procedure of <figref idref="DRAWINGS">FIG. 10</figref>:</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 22</figref> is a block diagram showing another example of the construction of the 1394 interface used in the enciphering procedure of <figref idref="DRAWINGS">FIG. 10</figref>;</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 23</figref> is a block diagram showing another example of the construction of the 1394 interface used in the enciphering procedure of <figref idref="DRAWINGS">FIG. 10</figref>; and</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 24</figref> is a block diagram showing another example of the construction of the application section used in the enciphering procedure of <figref idref="DRAWINGS">FIG. 10</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DESCRIPTION OF THE PREFERRED EMBODIMENTS</heading>
<p id="p-0050" num="0049">Referring first to <figref idref="DRAWINGS">FIG. 1</figref>, there is shown an exemplary information processing system to which the present invention is applied. The information processing system shown includes a DVD player <b>1</b>, a personal computer <b>2</b>, an magneto-optical disk apparatus <b>3</b>, a data broadcasting receiver <b>4</b>, a monitor <b>5</b> and a television receiver <b>6</b> all connected to each other by an IEEE 1394 serial bus <b>11</b>.</p>
<p id="p-0051" num="0050">Referring now <figref idref="DRAWINGS">FIG. 2</figref>, there are shown more detailed internal constructions of the DVD player <b>1</b>, personal computer <b>2</b> and magneto-optical disk apparatus <b>3</b> of the information processing system shown in <figref idref="DRAWINGS">FIG. 1</figref>. The DVD player <b>1</b> is connected to the 1394 bus <b>11</b> by a 1394 interface <b>26</b>. The DVD player <b>1</b> includes a CPU <b>21</b> which executes various processes in accordance with programs stored in a ROM <b>22</b>. A RAM <b>23</b> is used to suitably stores data, programs and so forth necessary for the CPU <b>21</b> to execute various processes. An operation section <b>24</b> is formed from buttons, switches, a remote controller and so forth, and when it is operated by a user, it outputs a signal corresponding to the operation. A drive <b>25</b> drives a DVD not shown to reproduce data recorded on the DVD. An EEPROM (Electrically Erasable Programmable Read only Memory) <b>27</b> stores information such as key information which must remain stored also after the power supply to the apparatus is turned off. An internal bus <b>28</b> connects the components to each other.</p>
<p id="p-0052" num="0051">The magneto-optical disk apparatus <b>3</b> includes a CPU <b>31</b>, a ROM <b>32</b>, a RAM <b>33</b>, an operation section <b>34</b>, a drive <b>35</b>, a 1394 interface <b>36</b>, an EEPROM <b>37</b> and an internal bus <b>38</b> which have similar functions to those of the DVD player <b>1</b> described above. Here, description of the similar components is omitted to avoid redundancy. It is to be noted, however, that the drive <b>35</b> drives not a DVD but a magneto-optical disk not shown to record or reproduce data onto or from the magneto-optical disk.</p>
<p id="p-0053" num="0052">The personal computer <b>2</b> is connected to the 1394 bus <b>11</b> via a 1394 interface <b>49</b>. The personal computer <b>2</b> includes a CPU <b>41</b> which executes various processes in accordance with programs stored in a ROM <b>42</b>, and a RAM <b>43</b> into which data, programs and so forth necessary for the CPU <b>41</b> to execute various processes are stored suitably. A keyboard <b>45</b> and a mouse <b>46</b> are connected to an input/output interface <b>44</b>, and the input/output interface <b>44</b> outputs signals inputted thereto from the keyboard <b>45</b> and the mouse <b>46</b> to the CPU <b>41</b>. Further, a hard disk drive (HDD) <b>47</b> is connected to the input/output interface <b>44</b> so that data, programs and so forth can be recorded onto and reproduced from a hard disk not shown by the hard disk driver <b>47</b>. Further, an extended board <b>48</b> can be suitably mounted onto the input/output interface <b>44</b> so that a necessary function can be additionally provided to the personal computer <b>2</b>. An EEPROM <b>50</b> is used to store information which must remain stored also after the power supply to the personal computer <b>2</b> is turned off such as information of various keys. An internal bus <b>51</b> is formed from, for example, a PCI (Peripheral Component Interconnect) bus, a local bus or the like and connects the components mentioned above to each other.</p>
<p id="p-0054" num="0053">It is to be noted that the internal bus <b>51</b> is open to the user so that the user can suitably receive data transmitted by the internal bus <b>51</b> by suitably connecting a predetermined board to the extended board <b>48</b> or by producing and installing a predetermined software program.</p>
<p id="p-0055" num="0054">In contrast, in any of consumer electronics (CE) apparatus such as the DVD player <b>1</b> and the magneto-optical disk apparatus <b>3</b>, the internal bus <b>28</b> or the internal bus <b>38</b> is not open to a user and the user cannot acquire data transmitted in it unless special alteration is performed for it.</p>
<p id="p-0056" num="0055">Subsequently, a procedure of authentication performed between a source and a sink is described. Here, the authentication procedure is performed, for example, as seen in <figref idref="DRAWINGS">FIG. 3</figref>, between firmware <b>20</b> as one of software programs stored in advance in the ROM <b>22</b> of the DVD player <b>1</b> serving as a source and a license manager <b>62</b> as one of software programs stored in the ROM <b>42</b> of the personal computer <b>2</b> serving as a sink and processed by the CPU <b>41</b>.</p>
<p id="p-0057" num="0056"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a procedure of authentication performed between the source (DVD player <b>1</b>) and the sink (personal computer <b>2</b>). A service key (service_key) and a function (hash) are stored in advance in the EEPROM <b>27</b> of the DVD player <b>1</b>. They are both provided to the user of the DVD player <b>1</b> from the proprietor of copyright, and the user stores them in the EEPROM <b>27</b> secretly.</p>
<p id="p-0058" num="0057">The service key is provided for each information provided by the proprietor of copyright and is common to systems which are constructed using the 1394 bus <b>11</b>. It is to be noted that the system in the present specification signifies a general apparatus formed from a plurality of apparatus.</p>
<p id="p-0059" num="0058">The hash function is a function for outputting data of a fixed length such as 64 bits or 128 bits in response to an input of an arbitrary length, and is a function with which, when y (=hash(x)) is given, it is difficult to determine x, and also it is difficult to determine a set of x<b>1</b> and x<b>2</b> with which hash(x<b>1</b>)=hash(x<b>2</b>) is satisfied. As representative ones of one-directional hash functions, MD5, SHA and so forth are known. The one-directional hash function is explained in detail in Bruce Schneier, “Applied Cryptography (Second Edition), Wiley”.</p>
<p id="p-0060" num="0059">Meanwhile, for example, the personal computer <b>2</b> as a sink stores an identification number (ID) and a license key (license_key) given from the proprietor of copyright and peculiar to the personal computer <b>2</b> itself secretly in the EEPROM <b>50</b>. The license key is a value obtained by applying the hash function to data (ID | | service_key) of n+m bits obtained by connecting the ID of n bits and the service key of m bits. In particular, the license key is represented by the following expression:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>license_key=hash(ID | | service_key)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0061" num="0060">For the ID, for example, a node_unique_ID prescribed in the standards for a 1394 bus can be used. The node_unique_ID is composed of, as seen from <figref idref="DRAWINGS">FIG. 5</figref>, 8 bytes (64 bits), wherein the first 3 bytes are managed by the IEEE and given from the IEEE to the individual maker of electronic apparatus. Meanwhile, the lower 5 bytes can be given by each maker to each apparatus provided to any user by the maker itself. Each maker applies, for example, numbers of the lower 5 bytes serially to individual apparatus with a single number applied to one apparatus, and if all available numbers for the 5 bytes are used up, then another node_unique_ID whose upper 3 bytes are different is given to the maker whereas a single number is applied to one apparatus with the lower 5 bytes. Accordingly, the node_unique_ID is different among different units irrespective of its maker and is unique to each unit.</p>
<p id="p-0062" num="0061">In step S<b>1</b>, the firmware <b>20</b> of the DVD player <b>1</b> controls the 1394 interface <b>26</b> to request the personal computer <b>2</b> for an ID through the 1394 bus <b>11</b>. The license manager <b>62</b> of the personal computer <b>2</b> receives the request for an ID in step S<b>2</b>. In particular, the 1394 interface <b>49</b> outputs, when it receives the signal of the request for an ID transmitted thereto from the DVD player <b>1</b> through the 1394 bus <b>11</b>, the signal to the CPU <b>41</b>. The license manager <b>62</b> of the CPU <b>41</b> reads out, when the request for an ID is received, the ID stored in the EEPROM <b>50</b> and transmits the ID from the 1394 bus <b>11</b> to the DVD player <b>1</b> through the 1394 interface <b>49</b> in step S<b>3</b>.</p>
<p id="p-0063" num="0062">In the DVD player <b>1</b>, the ID is received by the 1394 interface <b>26</b> in step S<b>4</b> and supplied to the firmware <b>20</b> which is being operated by the CPU <b>21</b>.</p>
<p id="p-0064" num="0063">The firmware <b>20</b> couples, in step S<b>5</b>, the ID transmitted thereto from the personal computer <b>2</b> and the service key stored in the EEPROM <b>27</b> to produce data (ID | | service_key) and applies a hash function as given by the following expression to the data to produce a key lk:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>lk=</i>hash(<i>ID </i>| | service_key)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0065" num="0064">Then, in step S<b>6</b>, the firmware <b>20</b> produces a cryptographic key sk which is hereinafter described in detail. The cryptographic key sk is utilized as a session key in the DVD player <b>1</b> and the personal computer <b>2</b>.</p>
<p id="p-0066" num="0065">Then, in step S<b>7</b>, the firmware <b>20</b> enciphers the cryptographic key sk produced in step S<b>6</b> using the key lk produced in step S<b>5</b> as a key to obtain enciphered data (enciphered key) e. In other words, the firmware <b>20</b> calculates the following expression:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>e=Enc</i>(<i>lk,sk</i>)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where Enc(A, B) represents to encipher data B using a key A in a common key cryptography.
</p>
<p id="p-0067" num="0066">Then, in step S<b>8</b>, the firmware <b>20</b> transmits the enciphered data e produced in step S<b>7</b> to the personal computer <b>2</b>. In particular, the enciphered data e is transmitted from the 1394 interface <b>26</b> of the DVD player <b>1</b> to the personal computer <b>2</b> through the 1394 bus <b>11</b>. In the personal computer <b>2</b>, the enciphered data e is received by the 1394 interface <b>49</b> in step S<b>9</b>. The license manager <b>62</b> deciphers the enciphered data e received in this manner using the license key stored in the EEPROM <b>50</b> in accordance with the following expression to produce a deciphering key sk′:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>sk′=Dec</i>(license_key,<i>e</i>)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where Dec(A, B) represents to decipher data B using a key A in a common key cryptography.
</p>
<p id="p-0068" num="0067">It is to be noted that, as an algorithm for encipherment in the common key cryptography, the DES is known. Also the common key cryptography is explained in detail in “Applied Cryptography (Second Edition)” mentioned hereinabove.</p>
<p id="p-0069" num="0068">The key lk produced in step S<b>5</b> by the DVD player <b>1</b> has a value equal to that (license_key) stored in the EEPROM <b>50</b> of the personal computer <b>2</b>. In other words, the following expression is satisfied:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>lk=license_key<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0070" num="0069">Accordingly, the key sk′ obtained by the decipherment in step S<b>10</b> by the personal computer <b>2</b> has a value equal to that of the cryptographic key sk produced in step S<b>6</b> by the DVD player <b>1</b>. In other words, the following expression is satisfied:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>sk′=sk<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0071" num="0070">In this manner, the keys sk and sk′ which are equal to each other can be possessed commonly by both of the DVD player <b>1</b> (source) and the personal computer <b>2</b> (sink). Thus, either the key sk can be used as it is as a cryptographic key, or a pseudo-random number may be produced based on the key sk and used as a cryptographic key by both of the source and the sink.</p>
<p id="p-0072" num="0071">Since the license key is produced based on the ID peculiar to the apparatus and the service key corresponding to information to be provided as described above, another apparatus cannot produce the key sk or sk′. Further, any apparatus which is not authorized by the proprietor of copyright cannot produce the sk or sk′ since it does not have a license key. Accordingly, when the DVD player <b>1</b> thereafter enciphers reproduction data using the cryptographic key sk and transmits resulting data to the personal computer <b>2</b>, where the personal computer <b>2</b> has the license key obtained legally, since it has the cryptographic key sk′, it can decipher the enciphered reproduction data transmitted thereto from the DVD player <b>1</b>. However, where the personal computer <b>2</b> is not legal, since it does not have the cryptographic key sk′, it cannot decipher the enciphered reproduction data transmitted thereto. In other words, since only a legal apparatus can produce the common cryptographic keys sk and sk′, authentication is performed as a result.</p>
<p id="p-0073" num="0072">Even if the license key of the single personal computer <b>2</b> is stolen, since the ID is different among different units, it is impossible for another apparatus to decipher enciphered data transmitted thereto from the DVD player <b>1</b> using the license key. Accordingly, the security is augmented.</p>
<p id="p-0074" num="0073"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an exemplary procedure when not only the personal computer <b>2</b> but also the magneto-optical disk apparatus <b>3</b> function as a sink with respect to a source (DVD player <b>1</b>).</p>
<p id="p-0075" num="0074">In this instance, an ID<b>1</b> is stored as an ID and a license_key<b>1</b> is stored as a license key in the EEPROM <b>50</b> of the personal computer <b>2</b> which serves as a sink<b>1</b>, but in the magneto-optical disk apparatus <b>3</b> which serves as a sink<b>2</b>, an ID<b>2</b> is stored as an ID and a license_key2 is stored as a license key in the EEPROM <b>37</b>.</p>
<p id="p-0076" num="0075">Processes in steps S<b>11</b> to S<b>20</b> performed between the DVD player <b>1</b> (source) and the personal computer <b>2</b> (sink<b>1</b>) are substantially similar to the processes in steps S<b>1</b> to S<b>10</b> illustrated in <figref idref="DRAWINGS">FIG. 4</figref>. Therefore, description of the processes in steps S<b>11</b> to S<b>20</b> is omitted to avoid redundancy.</p>
<p id="p-0077" num="0076">After the DVD player <b>1</b> cooperates with the personal computer <b>2</b> to perform an authentication procedure in such a manner as described above, it requests, in step S<b>21</b>, the magneto-optical disk apparatus <b>3</b> for an ID. When the ID requesting signal is received via the 1394 interface <b>36</b> in step S<b>22</b> by the magneto-optical disk apparatus <b>3</b>, firmware <b>30</b> (<figref idref="DRAWINGS">FIG. 10</figref>) in the magneto-optical disk apparatus <b>3</b> reads out the ID (ID<b>2</b>) stored in the EEPROM <b>37</b> in step S<b>23</b> and transmits the ID from the 1394 interface <b>36</b> to the DVD player <b>1</b> through the 1394 bus <b>11</b>. The firmware <b>20</b> of the DVD player <b>1</b> receives the ID<b>2</b> via the 1394 interface <b>26</b> in step S<b>24</b> and produces a key lk<b>2</b> based on the following expression in step S<b>25</b>:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>lk</i>2=hash(<i>ID</i>2 | | service_key)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0078" num="0077">Further, the firmware <b>20</b> calculates the following expression in step S<b>26</b> to encipher the key sk produced in step S<b>16</b> using the key lk<b>2</b> produced in step S<b>25</b> to produce enciphered data e2:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>e</i>2<i>=Enc</i>(<i>lk</i>2<i>,sk</i>)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0079" num="0078">Then, in step S<b>27</b>, the firmware <b>20</b> transmits the enciphered data e<b>2</b> from the 1394 interface <b>26</b> to the magneto-optical disk apparatus <b>3</b> through the 1394 bus <b>11</b>.</p>
<p id="p-0080" num="0079">The magneto-optical disk apparatus <b>3</b> receives the enciphered data e<b>2</b> via the 1394 interface <b>36</b> in step S<b>28</b>, and calculates the following expression in step S<b>29</b> to produce a cryptographic key sk<b>2</b>′:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>sk</i>2′=<i>Dec</i>(license_key2,<i>e</i>2)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0081" num="0080">The cryptographic keys sk<b>1</b>′ and sk<b>2</b>′ are obtained by the personal computer <b>2</b> and the magneto-optical disk apparatus <b>3</b>, respectively, in such a manner as described above. The values of them are an equal value to the cryptographic key sk of the DVD player <b>1</b>.</p>
<p id="p-0082" num="0081">While, in the procedure of <figref idref="DRAWINGS">FIG. 6</figref>, the DVD player <b>1</b> requests the personal computer <b>2</b> and the magneto-optical disk apparatus <b>3</b> individually for an ID and processes the received IDs, where a request for an ID can be delivered by broadcast communication, such a procedure as illustrated in <figref idref="DRAWINGS">FIG. 7</figref> can be performed.</p>
<p id="p-0083" num="0082">In particular, in the procedure of <figref idref="DRAWINGS">FIG. 7</figref>, the DVD player <b>1</b> as a source requests all sinks, which are, in the present procedure, the personal computer <b>2</b> and the magneto-optical disk apparatus <b>3</b>, for an ID by broadcast communication. After the personal computer <b>2</b> and the magneto-optical disk apparatus <b>3</b> receive the signal of the request for transfer of an ID in steps S<b>42</b> and S<b>43</b>, respectively, each of them reads out the ID<b>1</b> or the ID<b>2</b> stored in the EEPROM <b>50</b> or the EEPROM <b>37</b> and transfers it to the DVD player <b>1</b> in step S<b>44</b> or step S<b>45</b>. The DVD player <b>1</b> receives the IDs in steps S<b>46</b> and S<b>47</b>.</p>
<p id="p-0084" num="0083">The DVD player <b>1</b> produces a cryptographic key lk<b>1</b> based on the following expression in step S<b>48</b>:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>lk</i>1=hash(<i>ID</i>1 | | service_key)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0085" num="0084">Further, in step S<b>49</b>, a cryptographic key lk<b>2</b> is produced based on the following expression:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>lk</i>2=has(<i>ID</i>2 | | service_key)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0086" num="0085">In the DVD player <b>1</b>, a cryptographic key sk is produced further in step S<b>50</b>, and in step S<b>51</b>, the cryptographic key sk is enciphered as given by the following expression using the key lk<b>1</b> as a key:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>e</i>1<i>=Enc</i>(<i>lk</i>1,<i>sk</i>)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0087" num="0086">Further, in step S<b>52</b>, the cryptographic key sk is enciphered in accordance with the following expression using the key lk<b>2</b> as a key:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>e</i>2=<i>Enc</i>(<i>lk</i>2,<i>sk</i>)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0088" num="0087">Furthermore, in step S<b>53</b>, the values ID<b>1</b>, e<b>1</b>, ID<b>2</b> and e<b>2</b> thus obtained are coupled as given by the following expression to produce enciphered data e:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>e=ID</i>1 | |<i>e</i>1 <i>| | ID</i>2 | |<i>e</i>2<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0089" num="0088">The enciphered data e produced in the DVD player <b>1</b> in such a manner as described above is transmitted to the personal computer <b>2</b> and the magneto-optical disk apparatus <b>3</b> by broadcast communication further in step S<b>54</b>.</p>
<p id="p-0090" num="0089">The personal computer <b>2</b> and the magneto-optical disk apparatus <b>3</b> receive the enciphered data e in steps S<b>55</b> and S<b>56</b>, respectively. Then, in the personal computer <b>2</b> and the magneto-optical disk apparatus <b>3</b>, calculation indicated by the following expressions is performed in steps S<b>57</b> and S<b>58</b> so that cryptographic keys sk<b>1</b>′ and sk<b>2</b>′ are produced, respectively:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>sk</i>1′=<i>Dec</i>(license_key1,<i>e</i>1)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>sk</i>2′=<i>Dec</i>(license_key2,<i>e</i>2)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0091" num="0090"><figref idref="DRAWINGS">FIG. 8</figref> illustrates an example of a procedure where one sink can enjoy a plurality of services (decipherment of a plurality of kinds of information). Referring to <figref idref="DRAWINGS">FIG. 8</figref>, in the present procedure, for example, the personal computer <b>2</b> serving as a sink has a plurality of license keys (license<sub>13 </sub>key<b>1</b>, license_key<b>2</b>, license_key<b>3</b> and so forth) stored in the EEPROM <b>50</b> thereof. The DVD player <b>1</b> serving as a source has a plurality of service keys (service_key<b>1</b>, service_key<b>2</b>, service_key<b>3</b> and so forth) stored in the EEPROM <b>27</b> thereof. In this instance, when the DVD player <b>1</b> requests the personal computer <b>2</b> as a sink for an ID in step S<b>81</b>, it transfers a service ID for identification of information (a service) to be transferred subsequently from the DVD player <b>1</b>. When the personal computer <b>2</b> receives the service_ID in step S<b>82</b>, it selects one of the plurality of license keys stored in the EEPROM <b>50</b> which corresponds to the service_ID and performs deciphering processing in step S<b>90</b> using the selected license key. The other operations are similar to those illustrated in <figref idref="DRAWINGS">FIG. 4</figref>.</p>
<p id="p-0092" num="0091"><figref idref="DRAWINGS">FIG. 9</figref> illustrates a further example of a procedure. In the present procedure, the DVD player <b>1</b> serving as a source has a service_key, a hash function and a pseudo-random number generation function pRNG stored in the EEPROM <b>27</b> thereof. They have been given from the proprietor of copyright and are stored secretly. Meanwhile, in the EEPROM <b>50</b> of the personal computer <b>2</b> serving as a sink, an ID, LK, LK′, function G and pseudo-random number generation function pRNG given thereto from the proprietor of copyright are stored.</p>
<p id="p-0093" num="0092">LK is a unique random number produced by the proprietor of copyright, and LK′ is produced so that it may satisfy the following expressions:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>LK′=G^−</i>1(<i>R</i>)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>R=pRNG</i>(<i>H</i>)(+)<i>pRNG</i>(<i>LK</i>)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>H=</i>hash(<i>ID </i>| | service_key)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0094" num="0093">It is to be noted that G^−1 signifies an inverse function of G. G^−1 has such a characteristic that it can be calculated simply if a predetermined rule is known, but if the rule is not known, it is difficult to calculate. For such a function, a function which is used for a public key cryptography can be used.</p>
<p id="p-0095" num="0094">Further, the pseudo-random function generation function may be provided as hardware.</p>
<p id="p-0096" num="0095">The firmware <b>20</b> of the DVD player <b>1</b> first requests the license manager <b>62</b> of the personal computer <b>2</b> for an ID in step S<b>101</b>. The license manager <b>62</b> of the personal computer <b>2</b> reads out, when it receives the ID requesting signal in step S<b>102</b>, the ID stored in the EEPROM <b>50</b> and transfers it to the DVD player <b>1</b> in step S<b>103</b>. The firmware <b>20</b> of the DVD player <b>1</b> receives this ID in step S<b>104</b> and calculates the following expression in step S<b>105</b>:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>H</i>=hash(<i>ID </i>| | service_key)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0097" num="0096">Further, the firmware <b>20</b> produces a key sk in step S<b>106</b> and calculates the following expression in step S<b>107</b>:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>e=sk</i>(+)<i>pRNG</i>(<i>H</i>)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0098" num="0097">It is to be noted that A(+)B represents operation of exclusive ORing of A and B.</p>
<p id="p-0099" num="0098">In other words, the key sk is enciphered by operating exclusive ORing, for each bit, of a result pRNG (H) obtained by inputting H calculated in step S<b>105</b> to the pseudo-random generation key pRNG and the key sk produced in step S<b>106</b>.</p>
<p id="p-0100" num="0099">Then, in step S<b>108</b>, the firmware <b>20</b> transmits e to the personal computer <b>2</b>.</p>
<p id="p-0101" num="0100">In the personal computer <b>2</b>, this e is received in step S<b>109</b>, and the following expression is calculated in step S<b>110</b>:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>sk′=e</i>(+)<i>G</i>(<i>LK</i>′)(+)<i>pRNG</i>(<i>LK</i>)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0102" num="0101">In particular, exclusive ORing of e transmitted from the DVD player <b>1</b>, the value G(LK′) obtained by applying LK′ stored in the EEPROM <b>50</b> to the function G also stored in the EEPROM <b>50</b> and the result PRNG(LK) obtained by applying LK stored stored in the EEPROM <b>50</b> to the pseudo-random number generation function pRNG also stored in the EEPROM <b>50</b> is calculated to obtain a key sk′.</p>
<p id="p-0103" num="0102">Here, as seen from the following expression, sk=sk′:</p>
<p id="p-0104" num="0103">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mrow>
        <msup>
          <mi>sk</mi>
          <mi>′</mi>
        </msup>
        <mo>=</mo>
        <mi/>
        <mo>⁢</mo>
        <mrow>
          <mrow>
            <mi>e</mi>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <mo>+</mo>
              <mo>)</mo>
            </mrow>
          </mrow>
          <mo>⁢</mo>
          <mrow>
            <mi>G</mi>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <msup>
                <mi>LK</mi>
                <mi>′</mi>
              </msup>
              <mo>)</mo>
            </mrow>
          </mrow>
          <mo>⁢</mo>
          <mrow>
            <mo>(</mo>
            <mo>+</mo>
            <mo>)</mo>
          </mrow>
          <mo>⁢</mo>
          <mrow>
            <mi>pRNG</mi>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <mi>LK</mi>
              <mo>)</mo>
            </mrow>
          </mrow>
        </mrow>
      </mrow>
    </mtd>
  </mtr>
  <mtr>
    <mtd>
      <mrow>
        <mo>=</mo>
        <mi/>
        <mo>⁢</mo>
        <mrow>
          <mrow>
            <mi>sk</mi>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <mo>+</mo>
              <mo>)</mo>
            </mrow>
          </mrow>
          <mo>⁢</mo>
          <mrow>
            <mi>pRNG</mi>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <mi>H</mi>
              <mo>)</mo>
            </mrow>
          </mrow>
          <mo>⁢</mo>
          <mrow>
            <mo>(</mo>
            <mo>+</mo>
            <mo>)</mo>
          </mrow>
          <mo>⁢</mo>
          <mrow>
            <mi>R</mi>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <mo>+</mo>
              <mo>)</mo>
            </mrow>
          </mrow>
          <mo>⁢</mo>
          <mrow>
            <mi>pRNG</mi>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <mi>LK</mi>
              <mo>)</mo>
            </mrow>
          </mrow>
        </mrow>
      </mrow>
    </mtd>
  </mtr>
  <mtr>
    <mtd>
      <mrow>
        <mo>=</mo>
        <mi/>
        <mo>⁢</mo>
        <mrow>
          <mrow>
            <mi>sk</mi>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <mo>+</mo>
              <mo>)</mo>
            </mrow>
          </mrow>
          <mo>⁢</mo>
          <mrow>
            <mi>pRNG</mi>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <mi>H</mi>
              <mo>)</mo>
            </mrow>
          </mrow>
          <mo>⁢</mo>
          <mrow>
            <mo>(</mo>
            <mo>+</mo>
            <mo>)</mo>
          </mrow>
          <mo>⁢</mo>
          <mrow>
            <mi>pRNG</mi>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <mi>H</mi>
              <mo>)</mo>
            </mrow>
          </mrow>
          <mo>⁢</mo>
          <mrow>
            <mo>(</mo>
            <mo>+</mo>
            <mo>)</mo>
          </mrow>
          <mo>⁢</mo>
          <mrow>
            <mi>pRNG</mi>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <mi>LK</mi>
              <mo>)</mo>
            </mrow>
          </mrow>
          <mo>⁢</mo>
          <mrow>
            <mo>(</mo>
            <mo>+</mo>
            <mo>)</mo>
          </mrow>
          <mo>⁢</mo>
          <mrow>
            <mi>pRNG</mi>
            <mo>⁡</mo>
            <mrow>
              <mo>(</mo>
              <mi>LK</mi>
              <mo>)</mo>
            </mrow>
          </mrow>
        </mrow>
      </mrow>
    </mtd>
  </mtr>
  <mtr>
    <mtd>
      <mrow>
        <mo>=</mo>
        <mi/>
        <mo>⁢</mo>
        <mi>sk</mi>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
</p>
<p id="p-0105" num="0104">In this manner, the DVD player <b>1</b> as a source and the personal computer <b>2</b> as a sink can possess the cryptographic keys sk and sk′, which are equal to each other, commonly. Since only the proprietor of copyright can produce LK and LK′, even if the source tries to produce LK or LK′ illegally, it cannot produce the same, and consequently, the security can be further promoted.</p>
<p id="p-0106" num="0105">While, in the description above, authentication is performed between a source and a sink, for example, the personal computer <b>2</b> can normally use an arbitrary application program as a load. Further, as such application program, an application program produced illegally may be used. Accordingly, for each application program, it must be discriminated whether or not it is licensed from the proprietor of copyright. Therefore, as shown in <figref idref="DRAWINGS">FIG. 3</figref>, also between each application section <b>61</b> and the license manager <b>62</b>, authentication processing may be performed in such a manner as described above. In this instance, the license manager <b>62</b> serves as a source, and the application section <b>61</b> serves as a sink.</p>
<p id="p-0107" num="0106">Subsequently, operation when, after authentication is performed (after common possession of a cryptographic key is performed), enciphered data is transferred from a source using a cryptographic key to a sink and the enciphered data is deciphered by the sink is described.</p>
<p id="p-0108" num="0107">In an apparatus whose internal functions are not open to an ordinary user such as the DVD player <b>1</b> or the magneto-optical disk apparatus <b>3</b>, processing of encipherment and decipherment of data communicated through the 1394 bus <b>11</b> is performed by the 1394 interface <b>26</b> or the 1394 interface <b>36</b>. While, for the encipherment and the decipherment, a session key S and a time variable key i are used, the session key S and the time variable key i (more accurately, a key i′ to be used for production of the time variable key i) are supplied from the firmware <b>20</b> or the firmware <b>30</b> to the 1394 interface <b>26</b> or the 1394 interface <b>36</b>, respectively. The session key S is composed of an initial value key Ss to be used as an initial value and a disturbance key Si to be used for disturbing the time variable key i. The initial value key Ss and the disturbance key Si can be composed of upper bits and lower bits of predetermined bit numbers of a cryptographic key sk (=sk′) produced in the authentication described above, respectively. The session key S is suitably updated for each session, for example, for information of each one movie or for each reproduction. In contrast, the time variable key i produced from the disturbance key Si and the key i′ is updated frequently in one session, and for example, time information at a predetermined timing or the like can be used.</p>
<p id="p-0109" num="0108">Now, it is assumed that video data reproduced by and outputted from the DVD player <b>1</b> service as a source is transmitted to the magneto-optical disk apparatus <b>3</b> and the personal computer <b>2</b> through the 1394 bus <b>11</b> so that it is deciphered by the magneto-optical disk apparatus <b>3</b> and the personal computer <b>2</b>. In this instance, in the DVD player <b>1</b>, enciphering processing is performed using the session key S and the time variable key i by the 1394 interface <b>26</b>. In the magneto-optical disk apparatus <b>3</b>, deciphering processing is performed using the session key S and the time variable key i by the 1394 interface <b>36</b>.</p>
<p id="p-0110" num="0109">In contrast, in the personal computer <b>2</b>, the license manager <b>62</b> supplies the initial value key Ss of the session key S to the application section <b>61</b> and supplies the disturbance key Si and the time variable key i (more accurately, the key i′ for production of the time variable key i) to the 1394 interface <b>49</b> (link portion). Then, by the 1394 interface <b>49</b>, a time variable key i is produced from the disturbance key Si and the key i′ and decipherment is performed using the time variable key i, and the deciphered data is further deciphered using the session key S (more accurately, the initial value key Ss) by the application section <b>61</b>.</p>
<p id="p-0111" num="0110">In this manner, in the personal computer <b>2</b>, since the internal bus <b>51</b> is open to a user, only decipherment in the first stage is performed by the 1394 interface <b>49</b> so that resulting data still remains in a condition of a cryptograph. Then, further decipherment in the second stage is performed by the application section <b>61</b> to produce a non-cryptograph. By this, the personal computer <b>2</b> is inhibited from adding a function suitably to the same to copy data (a non-cryptograph) communicated by the internal bus <b>51</b> onto the hard disk <b>47</b> or any other apparatus.</p>
<p id="p-0112" num="0111">In this manner, in the present system, while, in a CE apparatus whose internal bus is not open, an enciphering or deciphering procedure is performed once using a session key S and a time variable key i, in another apparatus (the personal computer <b>2</b> or the like) whose internal bus is open, a deciphering procedure is performed separately as a deciphering procedure in which the time variable key i is used and another deciphering procedure in which the session key S is used. In order to allow both of the deciphering procedure by one stage and the deciphering procedure by two separate stages to be performed in this manner, the following expression must be satisfied:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>Dec</i>(<i>S,Dec</i>(<i>i,Enc</i>(<i>algo</i>(<i>S+i</i>),Data)))=Data<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where algo(S+i) represents a result obtained by inputting the session key S and the time variable key i to a predetermined algorithm.
</p>
<p id="p-0113" num="0112"><figref idref="DRAWINGS">FIG. 11</figref> shows an example of a construction of the 1394 interface <b>26</b> which satisfies the expression above. Referring to <figref idref="DRAWINGS">FIG. 11</figref>, in the 1394 interface <b>26</b> shown, data of m bits produced by an additive generator <b>71</b> is supplied to a shrink generator <b>73</b>. Meanwhile, a linear feedback shift register (LFSR) <b>72</b> outputs data of 1 bit and supplies it to the shrink generator <b>73</b>. The shrink generator <b>73</b> selects the output of the additive generator <b>71</b> in response to the output of the linear feedback shift register <b>72</b> and outputs the selected data as a cryptographic key to an adder <b>74</b>. The adder <b>74</b> adds an inputted non-cryptograph (data of m bits to be transmitted to the 1394 bus <b>11</b>) and the data of m bits (cryptographic key) supplied from the shrink generator <b>73</b> and outputs a result of the addition as a cryptograph (enciphered data) to the 1394 bus <b>11</b>.</p>
<p id="p-0114" num="0113">The addition processing of the adder <b>74</b> is addition of the output of the shrink generator <b>73</b> and a non-cryptogr aph by mod 2^m (^ signifies a power exponent). In other words, data of m bits are added to each other, and a sum with a carry-over ignored is outputted.</p>
<p id="p-0115" num="0114"><figref idref="DRAWINGS">FIG. 12</figref> shows an example of a more detailed construction of the 1394 interface <b>26</b> shown in <figref idref="DRAWINGS">FIG. 11</figref>. Of the session key S outputted from the firmware <b>20</b>, the initial value key Ss is transferred via an adder <b>81</b> to and stored into a register <b>82</b>. The initial value key Ss is composed of, for example, <b>55</b> words (one word has a width from 8 bits to 32 bits). Further, of the session key S supplied from the firmware <b>20</b>, the disturbance key Si composed of, for example, 32 bits of the LSB (Least Significant Bit) side is stored into another register <b>85</b>.</p>
<p id="p-0116" num="0115">A key i′ is stored into a further register <b>84</b>. Here, for example, each time one packet is transmitted through the 1394 bus <b>11</b>, a key <b>1</b>′ of 2 bits is supplied to the register <b>84</b>, and when a key <b>1</b>′ for 16 packets (32 bits) is stored into the register <b>84</b>, it is added to the disturbance key Si of 32 bits stored in the register <b>85</b> by an adder <b>86</b> and is supplied as a final time variable key i to the adder <b>81</b>. The adder <b>81</b> adds the value currently stored in the register <b>82</b> and the time variable key i supplied from the adder <b>86</b> and supplies a result of the addition to the register <b>82</b> so that it is stored into the register <b>82</b>.</p>
<p id="p-0117" num="0116">Where the number of bits of a word of the register <b>82</b> is, for example, 8, since the time variable key i outputted from the adder <b>86</b> is 32 bits, the time variable key i is divided into four parts of 8 bits, and each 8 bits are added to the word of a predetermined address (0 to 54) of the register <b>82</b>.</p>
<p id="p-0118" num="0117">After the initial value key Ss is first stored into the register <b>82</b> in this manner, it is updated with the time variable key i each time a non-cryptograph for 16 packets is transmitted.</p>
<p id="p-0119" num="0118">An adder <b>83</b> selects predetermined 2 words (in the case of a timing illustrated in <figref idref="DRAWINGS">FIG. 12</figref>, the words at the address <b>23</b> and the address <b>54</b>) of the 55 words stored in the register <b>82</b>, and adds the two selected words and outputs a resulting word to the shrink generator <b>73</b>. Further, the output of the adder <b>83</b> is transferred, at the timing illustrated in <figref idref="DRAWINGS">FIG. 12</figref>, to the address <b>0</b> of the register <b>82</b> so that it is stored in place of the preceding stored value at the address <b>0</b>.</p>
<p id="p-0120" num="0119">Then, at the next timing, the addresses of the two words to be supplied to the adder <b>83</b> are shifted upwardly by one word in <figref idref="DRAWINGS">FIG. 12</figref> from the address <b>54</b> and the address <b>23</b> to the address <b>53</b> and the address <b>22</b>, respectively, and also the address to be updated with the output of the adder <b>83</b> is shifted to a higher address in the figure. However, since an address higher than the address <b>0</b> is not present, in this instance, the address is shifted to the address <b>54</b>.</p>
<p id="p-0121" num="0120">It is to be noted that the adders <b>81</b>, <b>83</b> and <b>86</b> may otherwise operate exclusive ORing.</p>
<p id="p-0122" num="0121">The linear feedback shift register <b>72</b> is composed of, for example, as shown in <figref idref="DRAWINGS">FIG. 13</figref>, a shift register <b>101</b> of n bits, and an adder <b>102</b> for adding values of predetermined bits (registers) of the n bits of the shift register <b>101</b>. The shift register <b>101</b> stores a bit supplied from the adder <b>102</b> into the register b<sub>n </sub>leftmost in <figref idref="DRAWINGS">FIG. 13</figref> and shifts data which has been stored there till then to the next register b<sub>n-1 </sub>on the right side. Also the registers b<sub>n-1</sub>, b<sub>n-2</sub>, . . . perform similar processing. Then, at a further next timing, a value obtained by addition of the values of the bits by the adder <b>102</b> is stored into the leftmost bit b<sub>n </sub>in <figref idref="DRAWINGS">FIG. 13</figref>. The operations described above are successively repeated while an output is successively outputted one by one bit from the rightmost register b<sub>1 </sub>in <figref idref="DRAWINGS">FIG. 13</figref>.</p>
<p id="p-0123" num="0122">While <figref idref="DRAWINGS">FIG. 13</figref> shows an example of an ordinary construction, more particularly the linear feedback shift register <b>72</b> may be constructed in such a manner as shown, for example, in <figref idref="DRAWINGS">FIG. 14</figref>. In the linear feedback shift register <b>72</b> shown in <figref idref="DRAWINGS">FIG. 14</figref>, the shift register <b>101</b> is composed of 31 bit, and the value of the register b<sub>1 </sub>at the right end in <figref idref="DRAWINGS">FIG. 14</figref> and the register b<sub>31 </sub>at the left end in <figref idref="DRAWINGS">FIG. 14</figref> are added by the adder <b>102</b>, and a result of the addition is fed back to the register b<sub>31</sub>.</p>
<p id="p-0124" num="0123">When the data of 1 bit outputted from the linear feedback shift register <b>72</b> has the logical value 1, a condition discrimination section <b>91</b> transfers data of m bits supplied from the adder <b>83</b> of the additive generator <b>71</b> as it is to a FIFO (first-in first-out) memory <b>92</b> so as to be stored into the FIFO <b>92</b>. On the other hand, when the data of 1 bit supplied from the linear feedback shift register <b>72</b> has the logic value 0, the condition discrimination section <b>91</b> does not accept the data of m bits supplied from the CPU <b>31</b> but interrupts the enciphering processing. In this manner, only those of data of m bits produced by the additive generator <b>71</b> which are outputted at timings at which the linear feedback shift register <b>72</b> outputs the logical value 1 are selected and stored into the FIFO <b>92</b> of the shrink generator <b>73</b>.</p>
<p id="p-0125" num="0124">The data of m bits stored in the FIFO <b>92</b> is supplied as a cryptographic key to the adder <b>74</b>, by which it is added to data of a non-cryptograph to be transmitted (reproduction data from a DVD) to produce a cryptograph.</p>
<p id="p-0126" num="0125">The enciphered data is supplied from the DVD player <b>1</b> to the magneto-optical disk apparatus <b>3</b> and the personal computer <b>2</b> through the 1394 bus <b>11</b>.</p>
<p id="p-0127" num="0126">The 1394 interface <b>36</b> of the magneto-optical disk apparatus <b>3</b> has such a construction as shown in <figref idref="DRAWINGS">FIG. 15</figref> in order to decipher data received from the 1394 bus <b>11</b>. Referring to <figref idref="DRAWINGS">FIG. 15</figref>, in the 1394 interface <b>36</b> shown, data of m bits outputted from an additive generator <b>171</b> and data of 1 bit outputted from a linear feedback shift register <b>172</b> are supplied to a shrink generator <b>173</b>. Then, a key of m bits outputted from the shrink generator <b>173</b> is supplied to a subtractor <b>174</b>. The subtractor <b>174</b> subtracts the key supplied from the shrink generator <b>173</b> from a cryptograph to decipher the cryptograph into a non-cryptograph.</p>
<p id="p-0128" num="0127">In particular, the 1394 interface <b>36</b> shown in <figref idref="DRAWINGS">FIG. 15</figref> has a basically similar construction to the <b>1394</b> interface <b>26</b> shown in <figref idref="DRAWINGS">FIG. 11</figref>, but is different only in that the adder <b>74</b> shown in <figref idref="DRAWINGS">FIG. 11</figref> is replaced by the subtractor <b>174</b>.</p>
<p id="p-0129" num="0128"><figref idref="DRAWINGS">FIG. 16</figref> shows an example of a more detailed construction of the 1394 interface <b>36</b> shown in <figref idref="DRAWINGS">FIG. 15</figref>. Referring to <figref idref="DRAWINGS">FIG. 16</figref>, while also the 1394 interface <b>36</b> has a basically similar construction to the 1394 interface <b>26</b> shown in <figref idref="DRAWINGS">FIG. 12</figref>, the adder <b>74</b> shown in <figref idref="DRAWINGS">FIG. 12</figref> is replaced by the subtractor <b>174</b>. The other components of the additive generator <b>171</b>, the linear feedback shift register <b>172</b>, the shrink generator <b>173</b>, an adder <b>181</b>, a register <b>182</b>, another adder <b>183</b>, registers <b>184</b> and <b>185</b>, a further adder <b>186</b>, a condition discrimination section <b>191</b> and a FIFO <b>192</b> correspond to the additive generator <b>71</b>, linear feedback shift register <b>72</b>, shrink generator <b>73</b>, adder <b>81</b>, register <b>82</b>, adder <b>83</b>, registers <b>84</b> and <b>85</b>, adder <b>86</b>, condition discrimination section <b>91</b> and FIFO <b>92</b> shown in <figref idref="DRAWINGS">FIG. 12</figref>, respectively.</p>
<p id="p-0130" num="0129">Accordingly, since operation of the 1394 interface <b>36</b> is basically same as that of the 1394 interface <b>26</b> shown in <figref idref="DRAWINGS">FIG. 12</figref>, overlapping description of it is omitted here to avoid redundancy. However, in the 1394 interface <b>36</b> of <figref idref="DRAWINGS">FIG. 16</figref>, a key of m bits outputted from the FIFO <b>192</b> of the shrink generator <b>173</b> is subtracted from a cryptograph by the subtractor <b>174</b> to decipher the cryptograph into a non-cryptograph.</p>
<p id="p-0131" num="0130">As described above, in the 1394 interface <b>36</b>, enciphered data are deciphered at a time using the session key S (initial value key Ss and disturbance key Si) and the time variable key i.</p>
<p id="p-0132" num="0131">In contrast, as described above, in the personal computer <b>2</b>, decipherment is performed in two stages individually by the 1394 interface <b>49</b> and the application section <b>61</b>.</p>
<p id="p-0133" num="0132"><figref idref="DRAWINGS">FIG. 17</figref> shows an exemplary construction of the 1394 interface <b>49</b> where decipherment is performed by hardware. Referring to <figref idref="DRAWINGS">FIG. 17</figref>, the 1394 interface <b>49</b> shown has a basic construction similar to that of the 1394 interface <b>36</b> shown in <figref idref="DRAWINGS">FIG. 15</figref>. In particular, also the present 1394 interface <b>49</b> is composed of an additive generator <b>271</b>, a linear feedback shift register <b>272</b>, a shrink generator <b>273</b> and a subtractor <b>274</b>, and those components have basically similar constructions to those of the additive generator <b>171</b>, linear feedback shift register <b>172</b>, shrink generator <b>173</b> and subtractor <b>174</b> shown in <figref idref="DRAWINGS">FIG. 15</figref>, respectively. However, while, in the 1394 interface shown in <figref idref="DRAWINGS">FIG. 17</figref>, similar keys to those of the 1394 interface <b>36</b> shown in <figref idref="DRAWINGS">FIG. 15</figref> are supplied as the key i′ to be for production of the time variable key i and the disturbance key Si of the session key S for disturbing the time variable key i from the license manager <b>62</b> to the additive generator <b>271</b>, as the initial value key Ss, an identity element wherein all bits are 0 is supplied.</p>
<p id="p-0134" num="0133">In particular, as shown in <figref idref="DRAWINGS">FIG. 18</figref>, since all of the bits of the initial value key Ss are 0, substantially similarly to the alternative case wherein no initial value key Ss is present, a cryptographic key is produced based only on the time variable key i. As a result, the subtractor <b>274</b> performs only decipherment based on the time variable key i of a crypto-graph. Further, since decipherment based on the initial value key Ss is not performed, data obtained as a result of the decipherment does not make a complete non-cryptograph, but remains in a condition of a cryptograph. Accordingly, even if the data is fetched from the internal bus <b>51</b> and recorded onto the hard disk <b>47</b> or some other recording medium, it cannot be utilized as it is.</p>
<p id="p-0135" num="0134">Then, the construction of the application section <b>61</b> which deciphers data deciphered once based on the time variable key i by hardware in the 1394 interface <b>49</b> in such a manner as described above further by software is composed of, as shown in <figref idref="DRAWINGS">FIG. 19</figref>, an additive generator <b>371</b>, a linear feedback shift register <b>372</b>, a shrink generator <b>373</b> and a subtractor <b>374</b>. The basic constructions of the components are similar to those of the additive generator <b>171</b>, linear feedback shift register <b>172</b>, shrink generator <b>173</b> and subtractor <b>174</b> shown in <figref idref="DRAWINGS">FIG. 15</figref>, respectively.</p>
<p id="p-0136" num="0135">However, while, as the initial value key Ss of the session key S, an ordinary initial value key is supplied in a similar manner as in the case of <figref idref="DRAWINGS">FIG. 15</figref>, each of the disturbance key Si and the key i′ to be used for production of the time variable key i is data of an identity element wherein all bits are 0.</p>
<p id="p-0137" num="0136">As a result, as particularly shown in <figref idref="DRAWINGS">FIG. 20</figref> (the elements <b>371</b> to <b>392</b> correspond to the elements <b>171</b> to <b>192</b> shown in <figref idref="DRAWINGS">FIG. 16</figref>, respectively), since the key i′ stored in the register <b>384</b> and the disturbance key Si stored in the register <b>385</b> are 0 at all bits thereof, also the time variable key i outputted from the adder <b>386</b> is 0 at all bits, and operation substantially similar to that of the alternative case wherein the time variable key i is not present is performed. In other words, a cryptographic key based only on the initial value key Ss is produced. Then, by the subtractor <b>374</b>, a cryptograph is deciphered into a non-cryptograph based on the cryptographic key produced in such a manner as described above. Since this cryptograph has been obtained by the decipherment in the first stage based on the time variable key i by the 1394 interface <b>49</b> as described above, a complete non-cryptograph can be obtained by performing decipherment in the second stage based on the initial value key Ss here.</p>
<p id="p-0138" num="0137">In the magneto-optical disk apparatus <b>3</b>, when a cryptograph is deciphered in such a manner as described above, the CPU <b>31</b> supplies the deciphered data to the drive <b>35</b> so that it may be recorded onto a magneto-optical disk.</p>
<p id="p-0139" num="0138">Meanwhile, in the personal computer <b>2</b>, the CPU <b>41</b> (application section <b>61</b>) supplies the data deciphered in such a manner as described above, for example, to the hard disk drive <b>47</b> so as to be recorded. In the personal computer <b>2</b>, while a predetermined board can be connected as the extended board <b>48</b> to monitor data communicated by the internal bus <b>51</b>, since the element which can finally decipher data transmitted to the internal bus <b>51</b> is the application section <b>61</b>, even if the extended board <b>48</b> can monitor the data for which the decipherment based on the time variable key i has been performed by the 1394 interface <b>49</b> (the data for which decipherment based on the session key S has not been performed as yet), data deciphered completely to a non-cryptograph cannot be monitored. Therefore, illegal copying can be prevented.</p>
<p id="p-0140" num="0139">It is to be noted that common possession of a session key may be performed using, for example, the Diffie-Hellman method or the like.</p>
<p id="p-0141" num="0140">It is to be note that, in some other case such as, for example, where the 1394 interface <b>49</b> or the application section <b>61</b> of the personal computer <b>2</b> has such a comparatively low processing capacity that it cannot perform deciphering processing, if one or both of the session key and the time variable key are formed from an identity element on the source side while they are used with the identity element also on the sink side, then communication of data is possible substantially without using the session key and the time variable key. However, where this method is employed, the possibility that data may be illegally copied increases.</p>
<p id="p-0142" num="0141">If the application section <b>61</b> itself originates from illegal copying, then there is the possibility that deciphered data may be copied illegally. However, this can be prevented if the application section <b>61</b> is authenticated by the license manager <b>62</b> in such a manner as described above.</p>
<p id="p-0143" num="0142">As the authentication method in this instance, in addition to a common key cryptography, a digital autograph for which a public key cryptography is used can be utilized.</p>
<p id="p-0144" num="0143">The 1394 interfaces shown in <figref idref="DRAWINGS">FIGS. 11</figref>, <b>12</b> and <b>15</b> to <b>20</b> described above satisfy a relationship of a homomorphism (homomorphism). In particular, when keys K<sub>1 </sub>and K<sub>2 </sub>are elements of a Galois field G, a result K<sub>1</sub>·K<sub>2 </sub>of a group operation of them makes an element of the Galois field G. Further, the following expression is satisfied with regard to a predetermined function H:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>H</i>(<i>K</i><sub>1</sub><i>·K</i><sub>2</sub>)=<i>H</i>(<i>K</i><sub>1</sub>)·<i>H</i>(<i>K</i><sub>2</sub>)<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0145" num="0144"><figref idref="DRAWINGS">FIG. 21</figref> shows a further exemplary construction of the 1394 interface <b>26</b>. In the 1394 interface <b>26</b>, a session key S is supplied to linear feedback shift registers <b>501</b> to <b>503</b> so that initialization is performed with it. The widths n<sub>1 </sub>to n<sub>3 </sub>of the linear feedback shift registers <b>501</b> to <b>503</b> are individually approximately 20 bits, and the individual widths n<sub>1 </sub>to n<sub>3 </sub>are constructed so as to be relatively prime. Accordingly, for example, of the session key S, for example, the upper n<sub>1 </sub>bits are initially set to the linear feedback shift register <b>501</b>, and the next upper n<sub>2 </sub>bits are initially set to the linear feedback shift register <b>502</b> while the further next upper n<sub>3 </sub>bits are initially set to the linear feedback shift register <b>503</b>.</p>
<p id="p-0146" num="0145">Each of the linear feedback shift registers <b>501</b> to <b>503</b> performs a shifting operation by m bits when an enable signal of, for example, the logical value 1 is inputted from a clocking function <b>506</b>, and outputs data of m bits. The value of m may be, for example, 8, 16, 32, 40 or the like.</p>
<p id="p-0147" num="0146">Outputs of the linear feedback shift register <b>501</b> and the linear feedback shift register <b>502</b> are inputted to an adder <b>504</b>, by which they are added. Of the addition value of the adder <b>504</b>, a carry component is supplied to the clocking function <b>506</b> while a sum component is supplied to an adder <b>505</b>, by which it is added to an output of the linear feedback shift register <b>503</b>. A carry component of the adder <b>505</b> is supplied to the clocking function <b>506</b> while a sum component is supplied to an exclusive OR circuit <b>508</b>.</p>
<p id="p-0148" num="0147">The clocking function <b>506</b> outputs, since the combination of the data supplied from the adder <b>504</b> and the adder <b>505</b> is one of 00, 01, 10 and 11, data of one of 000 to 111 in accordance with the combination of the data to the linear feedback shift registers <b>501</b> to <b>503</b>. Each of the linear feedback shift registers <b>501</b> to <b>503</b> performs a shifting operation of m bits and outputs new data of m bits when the logical value 1 is inputted, but when the logical value 0 is inputted, it outputs data of m bits same as that outputted in the preceding cycle.</p>
<p id="p-0149" num="0148">The exclusive OR circuit <b>508</b> operates exclusive ORing of the sum component outputted from the adder <b>505</b> and a time variable key i stored in a register <b>507</b> and outputs a result of the calculation to an exclusive OR circuit <b>509</b>. The exclusive OR circuit <b>509</b> operates exclusive ORing of a non-cryptograph inputted and the cryptographic key inputted from the exclusive OR circuit <b>508</b> and outputs a result of the calculation as a cryptograph.</p>
<p id="p-0150" num="0149"><figref idref="DRAWINGS">FIG. 22</figref> shows another exemplary construction of the 1394 interface <b>36</b> of the magneto-optical disk apparatus <b>3</b>. Referring to <figref idref="DRAWINGS">FIG. 22</figref>, the 1394 interface <b>36</b> shown includes elements <b>601</b> to <b>609</b> which are similar to the elements <b>501</b> to <b>509</b> described hereinabove with reference to <figref idref="DRAWINGS">FIG. 21</figref>, respectively. Therefor, overlapping description of the similar components is omitted here to avoid redundancy. The 1394 interface <b>36</b> of <figref idref="DRAWINGS">FIG. 22</figref>, however, is different from the 1394 interface <b>26</b> of <figref idref="DRAWINGS">FIG. 21</figref> in that, while, in the 1394 interface <b>26</b>, enciphering processing is performed, deciphering processing is performed in the 1394 interface <b>36</b>.</p>
<p id="p-0151" num="0150"><figref idref="DRAWINGS">FIG. 23</figref> shows another exemplary construction of the 1394 interface <b>49</b> of the magneto-optical disk apparatus <b>3</b>. Referring to <figref idref="DRAWINGS">FIG. 23</figref>, the 1394 interface <b>36</b> shown includes elements <b>701</b> to <b>709</b> which are similar to the elements <b>601</b> to <b>609</b> described hereinabove with reference to <figref idref="DRAWINGS">FIG. 22</figref>, respectively. However, the session key S initially set to the linear feedback shift registers <b>701</b> to <b>703</b> is an identify element wherein all bits are 0. Accordingly, in the present instance, deciphering processing is performed substantially only with the time variable key i stored in the register <b>707</b>.</p>
<p id="p-0152" num="0151"><figref idref="DRAWINGS">FIG. 24</figref> shows an exemplary construction of the application section <b>61</b> of the personal computer <b>2</b>. Referring to <figref idref="DRAWINGS">FIG. 24</figref>, the application section <b>61</b> shown includes elements <b>801</b> to <b>809</b> which have basically similar constructions to those of the elements <b>601</b> to <b>609</b> described hereinabove with reference to <figref idref="DRAWINGS">FIG. 22</figref>, respectively. The application section <b>61</b> is different from the 1394 interface <b>36</b> of <figref idref="DRAWINGS">FIG. 22</figref> only in that the time variable key i to be inputted to the register <b>807</b> is an identity element wherein all bits are 0. Accordingly, in the application section <b>61</b>, a cryptographic key is produced and deciphering processing is performed based only on the session key S.</p>
<p id="p-0153" num="0152">It is to be noted that, since the processing illustrated in <figref idref="DRAWINGS">FIGS. 19</figref>, <b>20</b> and <b>24</b> is performed by the application section <b>61</b>, it is processed by software.</p>
<p id="p-0154" num="0153">While, in the foregoing description, the DVD player <b>1</b> serves as a source and the personal computer <b>2</b> and the magneto-optical disk apparatus <b>3</b> serve as sinks, any apparatus can serve as a source or a sink.</p>
<p id="p-0155" num="0154">Further, also the external bus for interconnecting the different apparatus is not limited to the 1394 bus, but various buses can be utilized, and also the electronic apparatus to be connected to the external bus are not limited to those described above, but an arbitrary apparatus can be connected.</p>
<p id="p-0156" num="0155">Having now fully described the invention, it will be apparent to one of ordinary skill in the art that many changes and modifications can be made thereto without departing from the spirit and scope of the invention as set forth herein.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001" nb-file="US07298842-20071120-M00001.NB">
<img id="EMI-M00001" he="15.92mm" wi="76.20mm" file="US07298842-20071120-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An enciphering apparatus for enciphering data using a cryptographic key, comprising:
<claim-text>first providing means for providing first information;</claim-text>
<claim-text>second providing means for providing second information which is changed during a session;</claim-text>
<claim-text>producing means for producing a cryptographic key based on the first information and the second information; and</claim-text>
<claim-text>enciphering means for enciphering data using said cryptographic key, wherein said cryptographic key is changed at a predetermined timing during the session in accordance with a change in said second information; and</claim-text>
<claim-text>wherein said producing means produces a homomorphic cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. An enciphering apparatus for enciphering data using a cryptographic key, comprising:
<claim-text>first providing means for providing first information;</claim-text>
<claim-text>second providing means for providing second information which is changed during a session;</claim-text>
<claim-text>producing means for producing a cryptographic key based on the first information and the second information; and</claim-text>
<claim-text>enciphering means for enciphering data using said cryptographic key, wherein said cryptographic key is changed at a predetermined tuning during the session in accordance with a change in said second information; and</claim-text>
<claim-text>wherein said producing means produces said cryptographic key with which a correct decipherment result is obtained even if the first information and the second information which are used to generate said cryptographic key are used individually to successively decipher the enciphered data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. An enciphering apparatus for enciphering data using a cryptographic key, comprising:
<claim-text>first providing means for providing first information;</claim-text>
<claim-text>second providing means for providing second information which is changed during a session;</claim-text>
<claim-text>producing means for producing a cryptographic key based on the first information and the second information; and</claim-text>
<claim-text>enciphering means for enciphering data using said cryptographic key, wherein said cryptographic key is changed at a predetermined timing during the session in accordance with a change in said second information; and</claim-text>
<claim-text>wherein said producing means adds the second information to a value whose initial value is the first information to produce the cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. An enciphering apparatus according to <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein the first information has a number of bits larger than that of the second information, and said producing means adds the second information to bits at predetermined positions of the first information, extracts a bit at a predetermined position of a result of the addition and further adds the extracted bit to produce the cryptographic key.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. An enciphering apparatus according to <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein said producing means further updates the predetermined bits of the result of the addition with a result of the further addition of the extracted bit.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. An enciphering apparatus according to <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein said producing means selects predetermined bits from a result of the further addition of the extracted bits further at a predetermined timing to produce the cryptographic key.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A deciphering apparatus for deciphering data using a cryptographic key, comprising:
<claim-text>receiving means for receiving enciphered data;</claim-text>
<claim-text>first providing means for providing first information;</claim-text>
<claim-text>second providing means for providing second information which is changed during a session;</claim-text>
<claim-text>producing means for producing a cryptographic key based upon the first information and the second information; and</claim-text>
<claim-text>deciphering means for deciphering said received enciphered data using said cryptographic key, wherein said cryptographic key is changed at a predetermined timing during the session in accordance with a change in said second information and</claim-text>
<claim-text>wherein said producing means includes first producing means for producing a first cryptographic key based upon one of the first information and the second information, and second producing means for producing a second cryptographic key based upon the other of the first information and the second information, and said deciphering means includes first deciphering means for deciphering the enciphered data based upon the first cryptographic key, and second deciphering means for deciphering the data deciphered by said first deciphering means further based upon the second cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A deciphering apparatus according to <claim-ref idref="CLM-00007">claim 7</claim-ref>, wherein said second deciphering means is formed from application software for processing the deciphered data.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. An information processing apparatus, comprising:
<claim-text>receiving means for receiving enciphered data transmitted thereto through a bus;</claim-text>
<claim-text>producing means composed of a software program for producing a first cryptographic key and a second cryptographic key based upon first information and second information which is changed during a predetermined session;</claim-text>
<claim-text>first deciphering means for deciphering the enciphered data received by said receiving means using one of the first cryptographic key and the second cryptographic key produced by said producing means; and</claim-text>
<claim-text>second deciphering means for deciphering and processing the data deciphered by said first deciphering means further using the other of the first cryptographic key and the second cryptographic key produced by said producing means, wherein said second cryptographic key is changed while said data is being deciphered.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. An information processing method, comprising the steps of:
<claim-text>receiving enciphered data transmitted thereto through a bus;</claim-text>
<claim-text>producing, from the received data, a first cryptographic key, and a second cryptographic key based upon first information and second information which is changed during a session;</claim-text>
<claim-text>deciphering the received enciphered data using one of the first cryptographic key and the second cryptographic key; and</claim-text>
<claim-text>deciphering the deciphered data further using the other of the first cryptographic key and the second cryptographic key, wherein said second cryptographic key is changed while said data is being deciphered.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The enciphering apparatus for enciphering data using a cryptographic key, comprising:
<claim-text>an encipherer;</claim-text>
<claim-text>a first information provider coupled with said encipherer;</claim-text>
<claim-text>a second information provider coupled with said encipherer; and</claim-text>
<claim-text>a cryptographic key producer coupled with said encipherer, whereby said encipherer enciphers data using a cryptographic key produced by said cryptographic key producer based upon first information provided by said first information provider and second information provided by said second information provider and changed at a predetermined timing during a session and</claim-text>
<claim-text>wherein said cryptographic key producer produces a homomorphic cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The enciphering apparatus for enciphering data using a cryptographic key, comprising:
<claim-text>an encipherer;</claim-text>
<claim-text>a first information provider coupled with said encipherer;</claim-text>
<claim-text>a second information provider coupled with said encipherer; and</claim-text>
<claim-text>a cryptographic key producer coupled with said encipherer, whereby said encipherer enciphers data using a cryptographic key produced by said cryptographic key producer based upon first information provided by said first information provider and second information provided by said second information provider and changed at a predetermined timing during a session and</claim-text>
<claim-text>wherein said cryptographic key producer produces said cryptographic key with which a correct decipherment result is obtained even if the first information and the second information on which the cryptographic key is based are used individually to successively decipher the enciphered data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The enciphering apparatus for enciphering data using a cryptographic key, comprising:
<claim-text>an encipherer;</claim-text>
<claim-text>a first information provider coupled with said encipherer;</claim-text>
<claim-text>a second information provider coupled with said encipherer; and</claim-text>
<claim-text>a cryptographic key producer coupled with said encipherer, whereby said encipherer enciphers data using a cryptographic key produced by said cryptographic key producer based upon first information provided by said first information provider and second information provided by said second information provider and changed at a predetermined timing during a session and</claim-text>
<claim-text>wherein said cryptographic key producer adds the second information to a value whose initial value is the first information to produce the cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The enciphering apparatus according to <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the first information has a number of bits larger than that of the second information, and said cryptographic key producer adds the second information to bits at predetermined positions of the first information, extracts a bit at a predetermined position of a result of the addition and further adds the extracted bit to produce the cryptographic key.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The enciphering apparatus according to <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein said cryptographic key producer further updates the result of the addition with the further addition of the extracted bit.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The enciphering apparatus according to <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein said cryptographic key producer selects predetermined bits from a result of the further addition of the extracted bits at a predetermined timing to produce the cryptographic key.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The deciphering apparatus for deciphering data using a cryptographic key, comprising:
<claim-text>a receiver;</claim-text>
<claim-text>a decipherer coupled with said receiver;</claim-text>
<claim-text>a first information provider coupled with said decipherer;</claim-text>
<claim-text>a second information provider coupled with said decipherer; and</claim-text>
<claim-text>a cryptographic key producer coupled with said decipherer, whereby said decipherer deciphers data received by said receiver using a cryptographic key produced by said cryptographic key producer based upon first information provided by said first information provider and second information provided by said second information provider and changed at a predetermined timing during a session,</claim-text>
<claim-text>wherein said cryptographic key producer includes a first cryptographic key producer coupled with said first and second information providers for producing a first cryptographic key using one of the first information and the second information, and a second cryptographic key producer coupled with said first and second information providers and said first cryptographic key producer for producing a second cryptographic key using the other of the first information and the second information, and said decipherer includes a first deciphering section and a second deciphering section, said first deciphering section deciphering the enciphered data using the first cryptographic key, and said second deciphering section deciphering the data deciphered by said first deciphering section using the second cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The deciphering apparatus according to <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein said second deciphering section is formed from application software for processing the deciphered data.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. An enciphering method for enciphering data using a cryptographic key, comprising the steps of:
<claim-text>providing first information;</claim-text>
<claim-text>providing second information which is changed during a session;</claim-text>
<claim-text>producing a cryptographic key based upon the first information and the second information; and</claim-text>
<claim-text>enciphering data using said cryptographic key, wherein said cryptographic key is changed at a predetermined timing during a session in accordance with a change in said second information and</claim-text>
<claim-text>wherein a homomorphic cryptographic key is produced.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. An enciphering method for enciphering data using a cryptographic key, comprising the steps of:
<claim-text>providing first information;</claim-text>
<claim-text>providing second information which is changed during a session;</claim-text>
<claim-text>producing a cryptographic key based upon the first information and the second information; and</claim-text>
<claim-text>enciphering data using said cryptographic key, wherein said cryptographic key is changed at a predetermined timing during a session in accordance with a change in said second information and</claim-text>
<claim-text>wherein said cryptographic key is produced with which a correct decipherment result is obtained even if the first information and the second information which compose the cryptographic key are used individually to successively decipher the enciphered data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. An enciphering method for enciphering data using a cryptographic key, comprising the steps of:
<claim-text>providing first information;</claim-text>
<claim-text>providing second information which is changed during a session;</claim-text>
<claim-text>producing a cryptographic key based upon the first information and the second information; and</claim-text>
<claim-text>enciphering data using said cryptographic key, wherein said cryptographic key is changed at a predetermined timing during a session in accordance with a change in said second information and</claim-text>
<claim-text>wherein the second information is added to a value whose initial value is the first information to produce the cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. An enciphering method according to <claim-ref idref="CLM-00021">claim 21</claim-ref>, wherein the first information has a number of bits larger than that of the second information, and the second information is added to bits at predetermined positions of the first information, a bit at a predetermined position of a result of the addition is extracted and the extracted bit is further added to produce the cryptographic key.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. An enciphering method according to <claim-ref idref="CLM-00022">claim 22</claim-ref>, wherein the predetermined bits of the result of the addition are updated with a result of the further addition of the extracted bit.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. An enciphering method according to <claim-ref idref="CLM-00023">claim 23</claim-ref>, wherein predetermined bits are selected from a result of the further addition of the extracted bits further at a predetermined timing to produce the cryptographic key.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. A deciphering method for deciphering data using a cryptographic key, comprising the steps of:
<claim-text>receiving enciphered data;</claim-text>
<claim-text>providing first information;</claim-text>
<claim-text>providing second information which is changed during a session;</claim-text>
<claim-text>producing a cryptographic key based upon the first information and the second information; and</claim-text>
<claim-text>deciphering said received enciphered data using said cryptographic key, wherein said cryptographic key is changed at a predetermined timing during a session in accordance with a change in said second information and</claim-text>
<claim-text>wherein a first cryptographic key is produced using one of the first information and the second information, and a second cryptographic key is produced using the other of the first information and the second information, and the enciphered data is first deciphered using the first cryptographic key, the data deciphered using the first cryptographic key is further deciphered using the second cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. A deciphering apparatus according to <claim-ref idref="CLM-00025">claim 25</claim-ref>, wherein deciphering using said second cryptographic key is performed by application software for processing the deciphered data.</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. An enciphering apparatus for enciphering data using a cryptographic key, comprising:
<claim-text>first providing means for providing first information which is held in common with another device in an authentication process by communication between the two devices;</claim-text>
<claim-text>second providing means for providing second information which is changed at a predetermined timing;</claim-text>
<claim-text>producing means for producing the cryptographic key based on the first information held in common with the other device and the second information which is used for changing the crytographic key; and</claim-text>
<claim-text>enciphering means for enciphering data using said cryptographic key, wherein said cryptographic key is changed at a predetermined timing in accordance with a change in said second information and</claim-text>
<claim-text>wherein said producing means produces a homomorphic cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. An enciphering apparatus for enciphering data using a cryptographic key, comprising:
<claim-text>first providing means for providing first information which is held in common with another device in an authentication process by communication between the two devices;</claim-text>
<claim-text>second providing means for providing second information which is changed at a predetermined timing;</claim-text>
<claim-text>producing means for producing the cryptographic key based on the first information held in common with the other device and the second information which is used for changing the cryptographic key; and</claim-text>
<claim-text>enciphering means for enciphering data using said cryptographic key, wherein said cryptographic key is changed at a predetermined timing in accordance with a change in said second information and</claim-text>
<claim-text>wherein said producing means produces said cryptographic key with which a correct decipherment result is obtained even if the first information and the second information which are used to generate said cryptographic key are used individually to successively decipher the enciphered data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. An enciphering apparatus for enciphering data using a cryptographic key, comprising:
<claim-text>first providing means for providing first information which is held in common with another device in an authentication process by communication between the two devices;</claim-text>
<claim-text>second providing means for providing second information which is changed at a predetennined timing;</claim-text>
<claim-text>producing means for producing the cryptographic key based on the first information held in common with the other device and the second information which is used for changing the cryptographic key; and</claim-text>
<claim-text>enciphering means for enciphering data using said cryptographic key, wherein said cryptographic key is changed at a predetermined timing in accordance with a change in said second information and</claim-text>
<claim-text>wherein said producing means adds the second information to a value whose initial value is the first information to produce the cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. An enciphering apparatus according to <claim-ref idref="CLM-00029">claim 29</claim-ref>, wherein the first information has a number of bits larger than that of the second information, and said producing means adds the second information to bits at predetermined positions of the first information, extracts a bit at a predetermined position of a result of the addition and further adds the extracted bit to produce the cryptographic key.</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. An enciphering apparatus according to <claim-ref idref="CLM-00030">claim 30</claim-ref>, wherein said producing means further updates the predetermined bits of the result of the addition with a result of the further addition of the extracted bit.</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. An enciphering apparatus according to <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein said producing means selects predetermined bits from a result of the further addition of the extracted bits further at a predetermined timing to produce the cryptographic key.</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. A deciphering apparatus for deciphering data using a cryptographic key, comprising:
<claim-text>receiving means for receiving enciphered data;</claim-text>
<claim-text>first providing means for providing first information which is held in common with another device in an authentication process by communication between the two devices;</claim-text>
<claim-text>second providing means for providing second information which is changed at a predetermined timing;</claim-text>
<claim-text>producing means for producing a cryptographic key based upon the first information held in common with the other device and the second information which is used for changing the cryptographic key; and</claim-text>
<claim-text>deciphering means for deciphering said received enciphered data using said cryptographic key, wherein said cryptographic key is changed at a predetermined timing in accordance with a change in said second information and</claim-text>
<claim-text>wherein said producing means includes first producing means for producing a first cryptographic key based upon one of the first information and the second information, and second producing means for producing a second cryptographic key based upon the other of the first information and the second information, and said deciphering means includes first deciphering means for deciphering the enciphered data based upon the first cryptographic key, and second deciphering means for deciphering the data deciphered by said first deciphering means further based upon the second cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. A deciphering apparatus according to <claim-ref idref="CLM-00033">claim 33</claim-ref>, wherein said second deciphering means is formed from application software for processing the deciphered data.</claim-text>
</claim>
<claim id="CLM-00035" num="00035">
<claim-text>35. An information processing apparatus, comprising:
<claim-text>receiving means for receiving enciphered data transmitted thereto through a bus;</claim-text>
<claim-text>producing means composed of a software program for producing a first cryptographic key and a second cryptographic key based upon first information which is held in common with another device in an authentication process by communication between the two devices and second information which is changed at a predetermined timing;</claim-text>
<claim-text>first deciphering means for deciphering the enciphered data received by said receiving means using one of the first cryptographic key and the second cryptographic key produced by said producing means; and</claim-text>
<claim-text>second deciphering means for deciphering and processing the data deciphered by said first deciphering means further using the other of the first cryptographic key and the second cryptographic key produced by said producing means, wherein said second cryptographic key is changed in accordance with said second information at a predetermined timing.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00036" num="00036">
<claim-text>36. An information processing method, comprising the steps of:
<claim-text>receiving enciphered data transmitted thereto through a bus;</claim-text>
<claim-text>producing, from the received data, a first cryptographic key, and a second cryptographic key based upon first information held in common with another device in an authentication process by communication between the two devices and second information which is changed at a predetermined timing;</claim-text>
<claim-text>deciphering the received enciphered data using one of the first cryptographic key and the second cryptographic key; and</claim-text>
<claim-text>deciphering the deciphered data further using the other of the first cryptographic key and the second cryptographic key, wherein said second cryptographic key is changed in accordance with the second information at a predetermined timing.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00037" num="00037">
<claim-text>37. An enciphering apparatus for enciphering data using a cryptographic key, comprising:
<claim-text>an encipherer;</claim-text>
<claim-text>a first information provider coupled with said encipherer;</claim-text>
<claim-text>a second information provider coupled with said encipherer; and</claim-text>
<claim-text>a cryptographic key producer coupled with said encipherer, whereby said encipherer enciphers data using a cryptographic key produced by said cryptographic key producer based upon first information provided by said first information provider and held in common with another device in an authentication process by communication between the two devices, and second information provided by said second information provider and changed at a predetermined timing</claim-text>
<claim-text>wherein said cryptographic key producer produces a homomorphic cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00038" num="00038">
<claim-text>38. An enciphering apparatus for enciphering data using a cryptographic key, comprising:
<claim-text>an encipherer;</claim-text>
<claim-text>a first information provider coupled with said encipherer:</claim-text>
<claim-text>a second information provider coupled with said encipherer; and</claim-text>
<claim-text>a cryptographic key producer coupled with said encipherer, whereby said encipherer enciphers data using a cryptographic key produced by said cryptographic key producer based upon first information provided by said first information provider and held in common with another device in an authentication process by communication between the two devices, and second information provided by said second information provider and changed at a predetermined timing</claim-text>
<claim-text>wherein said cryptographic key producer produces said cryptographic key with which a correct decipherment result is obtained even if a first information and a second information which compose the cryptographic key are used individually to successively decipher the enciphered data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00039" num="00039">
<claim-text>39. An enciphering apparatus for enciphering data using a cryptographic key, comprising:
<claim-text>an encipherer;</claim-text>
<claim-text>a first information provider coupled with said encipherer;</claim-text>
<claim-text>a second information provider coupled with said encipherer; and</claim-text>
<claim-text>a cryptographic key producer coupled with said encipherer, whereby said encipherer enciphers data using a cryptographic key produced by said cryptographic key producer based upon first information provided by said first information provider and held in common with another device in an authentication process by communication between the two devices, and second information provided by said second information provider and changed at a predetermined timing,</claim-text>
<claim-text>wherein said cryptographic key producer adds the second information to a value whose initial value is the first information to produce the cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00040" num="00040">
<claim-text>40. The enciphering apparatus according to <claim-ref idref="CLM-00039">claim 39</claim-ref>, wherein the first information has a number of bits larger than that of the second information, and said cryptographic key producer adds the second information to bits at predetermined positions of the first information, extracts a bit at a predetermined position of a result of the addition and further adds the extracted bit to produce the cryptographic key.</claim-text>
</claim>
<claim id="CLM-00041" num="00041">
<claim-text>41. The enciphering apparatus according to <claim-ref idref="CLM-00040">claim 40</claim-ref>, wherein said cryptographic key producer further updates the result of the addition with the further addition of the extracted bit.</claim-text>
</claim>
<claim id="CLM-00042" num="00042">
<claim-text>42. The enciphering apparatus according to <claim-ref idref="CLM-00041">claim 41</claim-ref>, wherein said cryptographic key producer selects predetermined bits from a result of the further addition of the extracted bits at a predetermined timing to produce the cryptographic key.</claim-text>
</claim>
<claim id="CLM-00043" num="00043">
<claim-text>43. A deciphering apparatus for deciphering data using a cryptographic key, comprising:
<claim-text>a receiver;</claim-text>
<claim-text>a decipherer coupled with said receiver;</claim-text>
<claim-text>a first information provider coupled with said decipherer;</claim-text>
<claim-text>a second information provider coupled with said decipherer; and</claim-text>
<claim-text>a cryptographic key producer coupled with said decipherer, whereby said decipherer deciphers data received by said receiver using a cryptographic key produced by said cryptographic key producer based upon first information provided by said first information provider and held in common with another device in an authentication device by communication between the two devices and second information provided by said second information provider and changed at a predetermined timing,</claim-text>
<claim-text>wherein said cryptographic key producer includes a first cryptographic key producer coupled with said first and second information providers for producing a first cryptographic key using one of the first information and the second information, and a second cryptographic key producer coupled with said first and second information providers and said first cryptographic key producer for producing a second cryptographic key using the other of the first information and the second information, and said decipherer includes a first deciphering section and a second deciphering section, said first deciphering section deciphering the enciphered data using the first cryptographic key, and said second deciphering section deciphering the data deciphered by said first deciphering section using the second cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00044" num="00044">
<claim-text>44. The deciphering apparatus according to <claim-ref idref="CLM-00043">claim 43</claim-ref>, wherein said second deciphering section is formed from application software for processing the deciphered data.</claim-text>
</claim>
<claim id="CLM-00045" num="00045">
<claim-text>45. An enciphering method for enciphering data using a cryptographic key, comprising the steps of:
<claim-text>providing first information which is held in common with another device in an authentication process by communication between the two devices;</claim-text>
<claim-text>providing second information which is changed at a predetermined timing;</claim-text>
<claim-text>producing a cryptographic key based upon the first information held in common with the other device and the second information which is used for changing the cryptographic key; and</claim-text>
<claim-text>enciphering data using said cryptographic key, wherein said cryptographic key is changed at a predetermined timing in accordance with a change in said second information, and</claim-text>
<claim-text>wherein a homomorphic cryptographic key is produced.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00046" num="00046">
<claim-text>46. An enciphering method for enciphering data using a cryptographic key, comprising the steps of:
<claim-text>providing first information which is held in common with another device in an authentication process by communication between the two devices;</claim-text>
<claim-text>providing second information which is changed at a predetermined timing;</claim-text>
<claim-text>producing a cryptographic key based upon the first information held in common with the other device and the second information which is used for changing the cryptographic key; and</claim-text>
<claim-text>enciphering data using said cryptographic key, wherein said cryptographic key is changed at a predetermined timing in accordance with a change in said second information, and</claim-text>
<claim-text>wherein said cryptographic key is produced with which a correct decipherment result is obtained even if the first information and the second information which compose the cryptographic key are used individually to successively decipher the enciphered data.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00047" num="00047">
<claim-text>47. An enciphering method for enciphering data using a cryptographic key, comprising the steps of:
<claim-text>providing first information which is held in common with another device in an authentication process by communication between the two devices;</claim-text>
<claim-text>providing second information which is changed at a predetermined timing;</claim-text>
<claim-text>producing a cryptographic key based upon the first information held in common with the other device and the second information which is used for changing the cryptographic key; and</claim-text>
<claim-text>enciphering data using said cryptographic key, wherein said cryptographic key is changed at a predetermined timing in accordance with a change in said second information, and</claim-text>
<claim-text>wherein the second information is added to a value whose initial value is the first information to produce the cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00048" num="00048">
<claim-text>48. An enciphering method according to <claim-ref idref="CLM-00047">claim 47</claim-ref>, wherein the first information has a number of bits larger than that of the second information, and the second information is added to bits at predetermined positions of the first information, a bit at a predetermined position of a result of the addition is extracted and the extracted bit is further added to produce the cryptographic key.</claim-text>
</claim>
<claim id="CLM-00049" num="00049">
<claim-text>49. An enciphering method according to <claim-ref idref="CLM-00048">claim 48</claim-ref>, wherein the predetermined bits of the result of the addition are updated with a result of the further addition of the extracted bit.</claim-text>
</claim>
<claim id="CLM-00050" num="00050">
<claim-text>50. An enciphering method according to <claim-ref idref="CLM-00049">claim 49</claim-ref>, wherein predetermined bits are selected from a result of the further addition of the extracted bits further at a predetermined timing to produce the cryptographic key.</claim-text>
</claim>
<claim id="CLM-00051" num="00051">
<claim-text>51. A deciphering method for deciphering data using a cryptographic key, comprising the steps of:
<claim-text>receiving enciphered data;</claim-text>
<claim-text>providing first information which is held in common with another device in an authentication process by communication between the two devices;</claim-text>
<claim-text>providing second information which is changed at a predetermined timing;</claim-text>
<claim-text>producing a cryptographic key based upon the first information held in common with the other device and the second information which is used for changing the cryptographic key; and</claim-text>
<claim-text>deciphering said received enciphered data using said cryptographic key, wherein said cryptographic key is changed at a predetermined timing in accordance with a change in said second information, and</claim-text>
<claim-text>wherein a first cryptographic key is produced using one of the first information and the second information, and a second cryptographic key is produced using the other of the first information and the second information, and the enciphered data is first deciphered using the first cryptographic key, the data deciphered using the first cryptographic key is further deciphered using the second cryptographic key.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00052" num="00052">
<claim-text>52. A deciphering apparatus according to <claim-ref idref="CLM-00051">claim 51</claim-ref>, wherein deciphering using said second cryptographic key is performed by application software for processing the deciphered data.</claim-text>
</claim>
</claims>
</us-patent-grant>
