<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298503-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298503</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10322021</doc-number>
<date>20021217</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>793</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>15</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>3</main-group>
<subgroup>12</subgroup>
<symbol-position>L</symbol-position>
<classification-value>N</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>358  113</main-classification>
<further-classification>358  11</further-classification>
</classification-national>
<invention-title id="d0e53">Partitioning of print jobs for raster image processing</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5619624</doc-number>
<kind>A</kind>
<name>Schoenzeit et al.</name>
<date>19970400</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5652711</doc-number>
<kind>A</kind>
<name>Vennekens</name>
<date>19970700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5859711</doc-number>
<kind>A</kind>
<name>Barry et al.</name>
<date>19990100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5923013</doc-number>
<kind>A</kind>
<name>Suzuki et al.</name>
<date>19990700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5926188</doc-number>
<kind>A</kind>
<name>Kawamoto et al.</name>
<date>19990700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5978563</doc-number>
<kind>A</kind>
<name>Kawamoto et al.</name>
<date>19991100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6327050</doc-number>
<kind>B1</kind>
<name>Motamed et al.</name>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6373585</doc-number>
<kind>B1</kind>
<name>Mastie et al.</name>
<date>20020400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6825943</doc-number>
<kind>B1</kind>
<name>Barry et al.</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>358  115</main-classification></classification-national>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2002/0060801</doc-number>
<kind>A1</kind>
<name>Motamed et al.</name>
<date>20020500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>WO</country>
<doc-number>WO 02/073390</doc-number>
<kind>A</kind>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>WO</country>
<doc-number>WO 2073390</doc-number>
<kind>A2</kind>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00013">
<othercit>European Search Report for Application No. EP03257024. Report issued Dec. 13, 2005.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>40</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>358  115</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>358  113</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>358  116</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>358  11</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>358  118</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>358402</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>358448</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>16</number-of-drawing-sheets>
<number-of-figures>19</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20040114170</doc-number>
<kind>A1</kind>
<date>20040617</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Christiansen</last-name>
<first-name>Robert D</first-name>
<address>
<city>Boise</city>
<state>ID</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Wissenbach</last-name>
<first-name>Paul R</first-name>
<address>
<city>Boise</city>
<state>ID</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="003" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Stevahn, Jr.</last-name>
<first-name>Robert E</first-name>
<address>
<city>Boise</city>
<state>ID</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Hewlett-Packard Development Company, L.P.</orgname>
<role>02</role>
<address>
<city>Houston</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Garcia</last-name>
<first-name>Gabriel I.</first-name>
<department>2625</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Various systems and methods for raster image processing employing partitioning of print jobs are described herein. In one representative embodiment, a method is provided that comprises the steps of determining a page count for a print job expressed in a page description language and specifying a number of partitions of the print job. The method also includes the steps of assigning each of the partitions of the print job to one of a number of raster image processing (RIP) engines for raster image processing, and, re-aggregating a number of raster image processed partitions from the RIP engines into a raster image processed output file. Each of the raster image processed partitions is generated by raster image processing a corresponding one of the partitions with a respective one of the RIP engines.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="108.97mm" wi="129.79mm" file="US07298503-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="142.49mm" wi="130.89mm" file="US07298503-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="243.92mm" wi="166.96mm" file="US07298503-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="233.43mm" wi="171.87mm" orientation="landscape" file="US07298503-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="233.17mm" wi="168.83mm" orientation="landscape" file="US07298503-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="233.76mm" wi="171.28mm" orientation="landscape" file="US07298503-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="187.28mm" wi="133.69mm" file="US07298503-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="236.81mm" wi="164.59mm" file="US07298503-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="239.86mm" wi="132.08mm" file="US07298503-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="106.68mm" wi="141.48mm" file="US07298503-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="212.51mm" wi="149.35mm" file="US07298503-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="249.77mm" wi="150.62mm" file="US07298503-20071120-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="163.91mm" wi="115.91mm" file="US07298503-20071120-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="241.13mm" wi="151.21mm" file="US07298503-20071120-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="219.46mm" wi="137.92mm" file="US07298503-20071120-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="238.68mm" wi="174.33mm" file="US07298503-20071120-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="224.79mm" wi="143.34mm" file="US07298503-20071120-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">In the printing field, raster image processing is performed on very large print jobs during the printing of very large documents. Specifically, a document may be embodied in one of a number of page description languages that must be converted into raster bits in order to drive a printing device to print the various pixels, etc., on a page. Raster image processing may be performed, for example, by Raster Image Processing (RIP) Engines. Unfortunately, for very large documents, RIP engines can take a very long time to perform the needed raster image processing before the document can be completely printed.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0002" level="1">BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS</heading>
<p id="p-0003" num="0002">The invention can be understood with reference to the following drawings. The components in the drawings are not necessarily to scale. Also, in the drawings, like reference numerals designate corresponding parts throughout the several views.</p>
<p id="p-0004" num="0003"><figref idref="DRAWINGS">FIG. 1</figref> is a block diagram that illustrates the raster image processing of a print job using partitioning of the print job;</p>
<p id="p-0005" num="0004"><figref idref="DRAWINGS">FIG. 2</figref> is a schematic of a computer system that includes a raster image process (RIP) manager to accomplish the partitioning illustrated in <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 3</figref> is a schematic of a RIP engine of <figref idref="DRAWINGS">FIG. 1</figref> that is employed to RIP one or more partitions of a print job;</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 4</figref> is a drawing of an exemplary user interface generated by a pipeline configuration system in the RIP Manager of <figref idref="DRAWINGS">FIG. 2</figref> that illustrates one or more pipelines and the RIP engines associated therewith;</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 5</figref> is a drawing of the exemplary user interface of <figref idref="DRAWINGS">FIG. 4</figref> that further illustrates an exemplary RIP engine status tab;</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 6</figref> is a drawing of the exemplary user interface of <figref idref="DRAWINGS">FIG. 4</figref> that further illustrates a drop down menu that may be manipulated by a user to configure a pipeline or a RIP engine in the RIP manager of <figref idref="DRAWINGS">FIG. 2</figref>;</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 7</figref> is a drawing of an exemplary user interface that is generated by a pipeline configuration system in the RIP manager of <figref idref="DRAWINGS">FIG. 2</figref> to configure a pipeline;</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 8</figref> is a drawing of an exemplary user interface that is generated by a pipeline configuration system in the RIP manager of <figref idref="DRAWINGS">FIG. 2</figref> to input information employed in configuring a pipeline;</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 9</figref> is a drawing of an exemplary user interface that is generated by a pipeline configuration system in the RIP manager of <figref idref="DRAWINGS">FIG. 2</figref> to specify print job acceptance criteria associated with a pipeline;</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 10</figref> is a drawing of an exemplary user interface that is generated by a pipeline configuration system in the RIP manager of <figref idref="DRAWINGS">FIG. 2</figref> to specify an imposition that is associated with a pipeline;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 11</figref> is a drawing of an exemplary user interface that is generated by a pipeline configuration system in the RIP manager of <figref idref="DRAWINGS">FIG. 2</figref> to specify a priority associated with each configured pipeline in the RIP manager;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 12</figref> is a drawing of an exemplary user interface that is generated by a pipeline configuration system in the RIP manager of <figref idref="DRAWINGS">FIG. 2</figref> to configure one or more RIP engines associated with one or more pipelines configured in the RIP manager;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIGS. 13A and 13B</figref> depict an exemplary flow chart that illustrates a pipeline configuration system executed as a portion of the RIP manager of <figref idref="DRAWINGS">FIG. 2</figref> to configure a pipeline;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 14</figref> is an exemplary flow chart of a print job preprocessor that is executed as a portion of the RIP manager of <figref idref="DRAWINGS">FIG. 2</figref>;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIGS. 15A and 15B</figref> depict an exemplary flow chart of a partition manager that is executed as a portion of the RIP manager of <figref idref="DRAWINGS">FIG. 2</figref>;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 16</figref> is an exemplary flow chart of a RIP handler that is executed as a portion of the RIP manager of <figref idref="DRAWINGS">FIG. 2</figref>; and</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 17</figref> is an exemplary flow chart of RIP engine logic that is executed by the RIP engine of <figref idref="DRAWINGS">FIG. 2</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0003" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0021" num="0020">With reference to <figref idref="DRAWINGS">FIG. 1</figref>, shown is a block diagram that illustrates an example of a raster image processing (RIPping) operation <b>100</b> of a print job <b>103</b> according to an embodiment of the present invention. In this respect, the block diagram of <figref idref="DRAWINGS">FIG. 1</figref> provides an overview of the exemplary RIPping operation <b>100</b> that is described in further detail with reference to later figures that are described herein.</p>
<p id="p-0022" num="0021">The print job <b>103</b> includes an embodiment of a document expressed in a page description language that is to be printed. To begin, the print job <b>103</b> is applied to a RIP manager <b>106</b>. The RIP manager <b>106</b> first determines a page count that comprises the total number of pages of the print job <b>103</b>. Assuming that the page count can be determined, then the RIP manager <b>106</b> determines a number of partitions of the print job <b>103</b> that are to be applied to RIP Engines <b>109</b> that are associated with a predefined pipeline <b>113</b>. A partition is generally defined as a subset of the total number of pages in a print job that may be consecutive or nonconsecutive. Once the partitions are known, the RIP manager <b>106</b> creates a partition specification in a database or other data structure that is employed to track a status of the RIPping of each of the partitions. In this respect, a partition RIP status is maintained for each of the partitions in the partition specification. Initially, the partition RIP status for each of the partitions is set to be “unassigned” or equivalent value.</p>
<p id="p-0023" num="0022">Thereafter, the RIP manager <b>106</b> then assigns partitions to one or more RIP engines <b>109</b> associated with a respective pipeline <b>113</b> for raster image processing. If no RIP engines <b>109</b> are currently associated with the respective pipeline <b>113</b> that is selected to RIP the print job, then the partitions and/or the print job is/are queued up to wait until at least one RIP engine <b>109</b> is assigned to the respective pipeline <b>113</b>. In assigning each of the partitions to the RIP engines <b>109</b>, the RIP manager <b>106</b> sends a partition assignment <b>116</b> to the respective RIP engines <b>109</b>. The partition assignment <b>116</b> identifies a number of pages of the print job <b>103</b> that are to be RIPped by the respective RIP engine <b>109</b>. When a partition has been assigned to a respective RIP engine <b>109</b>, the partition RIP status associated with the respective partition is updated as “assigned” or equivalent value.</p>
<p id="p-0024" num="0023">Once a RIP engine <b>109</b> receives a partition assignment <b>116</b> it determines whether it has a copy of the print job <b>103</b> in a memory local to the RIP engine <b>109</b> that is accessible by the RIP engine <b>109</b>. If the print job <b>103</b> is not stored in the local memory, then the RIP engine <b>109</b> requests a copy of the print job <b>103</b> from the RIP manager <b>106</b>. In response to the request, the RIP manager <b>106</b> transmits a copy of the print job <b>103</b> to the RIP engine <b>109</b>. The RIP engine <b>109</b> then proceeds to RIP the partition of the print job <b>103</b> as specified by the partition assignment <b>116</b>, thereby producing a RIPped partition <b>119</b>. Thus, the RIPped partition <b>119</b> comprises a RIPped portion of the document embodied in the print job <b>103</b> that corresponds to the pages specified in the respective partition assignment <b>116</b>. Once finished, the RIP engine <b>109</b> notifies the RIP manager <b>106</b> that the RIPping of the partition assigned thereto has been completed.</p>
<p id="p-0025" num="0024">In response, the RIP manager <b>106</b> uploads the RIPped partition <b>119</b> and stores it in memory that is local to the RIP manager <b>106</b>. Once the RIPped partition has been successfully uploaded in the memory local to the RIP manager <b>106</b>, then the RIP manager <b>106</b> updates the partition RIP status to “completed” or equivalent value. The status is not updated as such until the RIPped partition <b>119</b> is successfully uploaded just in case a power outage occurs during the transfer, etc.</p>
<p id="p-0026" num="0025">Once any one of the number of RIP engines <b>109</b> associated with a selected pipeline <b>113</b> has completed the RIPping of a respective partition, if there are further unassigned partitions that remain, the RIP manager <b>106</b> assigns the remaining partitions to the RIP engine <b>109</b> until all partitions have been RIPped accordingly. The print job <b>103</b> need only be downloaded to each of the RIP engines <b>109</b> once. That is to say, after the print job <b>103</b> is downloaded to a RIP engine <b>109</b> to RIP a first assigned partition, the print job <b>103</b> is then available in the local memory of the RIP engine <b>109</b> for RIPping of subsequently assigned partitions.</p>
<p id="p-0027" num="0026">Once all of the partitions of a print job <b>103</b> have been RIPped and corresponding RIPped partitions <b>119</b> are stored in the memory local to the RIP manager <b>106</b>, then the RIP manager <b>106</b> combines or re-aggregates the RIPped partitions <b>119</b> into a single RIPped output file <b>123</b>. The RIPped output file <b>123</b> is then applied to a print device <b>126</b> for printing. The print device <b>126</b> may be any appropriate printer taking into account the size of the print job <b>103</b> and the printing capacity of a respective print device <b>126</b>.</p>
<p id="p-0028" num="0027">In addition, the RIP manager <b>106</b> includes a pipeline configuration system that allows a user to configure pipelines <b>113</b> by generating various user interfaces as will be discussed.</p>
<p id="p-0029" num="0028">With reference to <figref idref="DRAWINGS">FIG. 2</figref>, shown is a computer system <b>140</b> that is employed to execute the RIP manager <b>106</b> according to an embodiment of the present invention. The computer system <b>140</b> comprises a processor circuit having one or more processors <b>143</b> and one or more memories <b>146</b>, both of which are coupled to a local interface <b>149</b>. The local interface <b>149</b> may be, for example, a data bus with an accompanying control/address bus as can be appreciated by those with ordinary skill in the art. In addition, the computer system <b>140</b> includes peripheral devices such as, for example, a display device <b>153</b>, a keyboard <b>156</b>, and a mouse <b>159</b>. The computer system <b>140</b> may also include other peripheral devices such as, for example, keypad, touch pad, touch screen, microphone, scanner, joystick, or one or more push buttons, etc. The peripheral devices may also include indicator lights, speakers, printers, etc. Specific display device <b>153</b> may be, for example, a cathode ray tube (CRT), liquid crystal display screen, gas plasma-based flat panel display, or other type of display device.</p>
<p id="p-0030" num="0029">A number of software components are stored on the memory <b>146</b> and are executable by the processor <b>143</b>. Such components include, for example, the RIP manager <b>106</b>, an operating system <b>163</b>, one or more print jobs <b>103</b>, one or more RIPped partitions <b>119</b>, and one or more RIPped output files <b>123</b>. It is understood that the print jobs <b>103</b>, RIPped partitions <b>119</b>, and the RIPped output files <b>123</b> may or may not appear within the memory <b>146</b> from time to time as is dictated by the operation of the RIP manager <b>106</b> as will be described.</p>
<p id="p-0031" num="0030">The RIP manager <b>106</b> includes a number of exemplary components that perform various operations. As shown in <figref idref="DRAWINGS">FIG. 2</figref>, each component may comprise one or more modules, objects, or other groupings or encapsulations of underlying functionality as implemented in programming code. Also, the same underlying functionality may exist in one or more modules, objects, or other groupings or encapsulations that differ from those shown in <figref idref="DRAWINGS">FIG. 2</figref> without departing from the present invention as defined by the appended claims. Also, the RIP manager <b>106</b> may be expressed in any one of a number of programming languages such as, for example, C++, JAVA™, or other programming language.</p>
<p id="p-0032" num="0031">The exemplary components of the RIP manager <b>106</b> may comprise a print job preprocessor <b>173</b>, the partition manager <b>176</b>, a RIP handler <b>179</b>, and a database <b>183</b> within which a partition specification <b>186</b> is stored that maintains a partition RIP status <b>189</b> for each of the partitions of the print job <b>103</b> as was discussed above. The RIP manager <b>106</b> may also include a pipeline configuration system <b>193</b> that is manipulated by users to configure a number of pipelines <b>113</b>. Specifically, a user may manipulate the pipeline configuration system <b>193</b> to create one or more pipelines <b>113</b> and associate one or more RIP engines <b>109</b> with each pipeline <b>113</b> as will be described. In manipulating the pipeline configuration system <b>193</b>, a number of user interfaces <b>196</b> are generated by the pipeline configuration system <b>193</b> on the display device <b>153</b>. To manipulate the pipeline configuration system <b>193</b>, a user may manipulate the keyboard <b>156</b>, the mouse <b>159</b>, or other input device as is appropriate.</p>
<p id="p-0033" num="0032">Turning then to <figref idref="DRAWINGS">FIG. 3</figref>, shown is a RIP engine system <b>200</b> according to an embodiment of the present invention. The RIP engine system <b>200</b> includes a processor circuit having a processor <b>203</b> and a memory <b>206</b>, both of which are coupled to a local interface <b>209</b>. The local interface <b>209</b> may be, for example, a data bus with an accompanying control/address bus as can be appreciated by those with ordinary skill in the art. In this respect, the RIP engine system <b>200</b> may comprise a computer system or other device with like capability.</p>
<p id="p-0034" num="0033">The RIP engine system <b>200</b> includes a number of software components that are stored in the memory <b>206</b> and are executable by the processor <b>203</b>. Such components may comprise, for example, an operating system <b>213</b>, a RIP engine <b>109</b>, a RIPped partition <b>119</b>, and the print job <b>103</b>. The RIPped partition <b>119</b> and the print job <b>103</b> are stored in the memory <b>206</b> as needed, or when created from time to time as mandated by the operation of the RIP engine <b>109</b> as will be described. Also, the RIP engine <b>109</b> may be expressed in any one of a number of programming languages such as, for example, C++, JAVA™, or other programming language.</p>
<p id="p-0035" num="0034">With reference to both <figref idref="DRAWINGS">FIGS. 2 and 3</figref>, each of the memories <b>146</b> and <b>206</b> are defined herein as both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus, the memories <b>146</b> and <b>206</b> may each comprise, for example, random access memory (RAM), read-only memory (ROM), hard disk drives, floppy disks accessed via an associated floppy disk drive, compact discs accessed via a compact disc drive, magnetic tapes accessed via an appropriate tape drive, and/or other memory components, or a combination of any two or more of these memory components. In addition, the RAM may comprise, for example, static random access memory (SRAM), dynamic random access memory (DRAM), or magnetic random access memory (MRAM) and other such devices. The ROM may comprise, for example, a programmable read-only memory (PROM), an erasable programmable read-only memory (EPROM), an electrically erasable programmable read-only memory (EEPROM), or other like memory device.</p>
<p id="p-0036" num="0035">Also, each of the processors <b>143</b> and <b>203</b> may represent multiple processors and each of the memories <b>146</b> and <b>206</b> may represent multiple memories that operate in parallel processing circuits, respectively. In such a case, each of the local interfaces <b>149</b> and <b>209</b> may be an appropriate network that facilitates communication between any two of the multiple processors, between any processor and any of the memories, or between any two of the memories, etc. The processors <b>143</b> and <b>203</b> may be electrical or optical in nature.</p>
<p id="p-0037" num="0036">Referring next to <figref idref="DRAWINGS">FIG. 4</figref>, shown is an exemplary user interface <b>196</b><i>a </i>that is generated by the pipeline configuration system <b>193</b> (<figref idref="DRAWINGS">FIG. 2</figref>) to create pipelines <b>113</b> and to associate RIP engines <b>109</b> with such pipelines <b>113</b> according to an embodiment of the present invention. The user interface <b>196</b><i>a </i>depicts one or more pipelines <b>113</b> and one more RIP engines <b>109</b> associated therewith. Specifically, the user interface <b>196</b><i>a </i>illustrates an association <b>223</b> between the respective pipelines <b>113</b> and each of the RIP engines <b>109</b> associated therewith. This is done, for example, with a tree structure, although other structures may be employed to illustrate the associations <b>223</b>. The user interface <b>196</b><i>a </i>also includes a job queue tab <b>226</b> that lists a number of print jobs <b>103</b> that are waiting for processing, are being actively processed, or have completed processing. Specifically, the processing described herein refers to a raster image processing. It may be the case that no RIP engines <b>109</b> are associated with a particular pipeline <b>113</b>. In such case, all print jobs that are received for such a pipeline are placed in a queue until such time that RIP engines <b>109</b> are associated with the pipeline <b>113</b>. This provides a user with significant flexibility in assigning RIP engines <b>109</b> to pipelines <b>113</b> from time to time based upon the need to RIP print jobs <b>103</b> of greater importance at the expense of other less important print jobs <b>103</b>.</p>
<p id="p-0038" num="0037">With reference to <figref idref="DRAWINGS">FIG. 5</figref>, shown is a second view of the exemplary user interface <b>196</b><i>a </i>that illustrates a RIP status tab <b>229</b> according to an embodiment of the present invention. In this respect, the RIP status tab <b>229</b> includes RIP status windows <b>233</b>. Each of the RIP status windows <b>233</b> details a status of a respective one of the RIP engines <b>109</b> that are associated with a currently highlighted pipeline <b>113</b>. In this respect, each of the pipelines <b>113</b> may be highlighted by opening a folder associated therewith. However, such highlighting may be indicated in any one of a number of different ways as can be appreciated by those with ordinary skill in the art.</p>
<p id="p-0039" num="0038">Turning then to <figref idref="DRAWINGS">FIG. 6</figref>, shown is a third view of the exemplary user interface <b>196</b><i>a </i>that illustrates a manipulation by the user to create a pipeline <b>113</b> (<figref idref="DRAWINGS">FIG. 5</figref>) and to associate a RIP engine <b>109</b> (<figref idref="DRAWINGS">FIG. 5</figref>) therewith. In this respect, a user may position a cursor <b>243</b> to generate a configuration pull down menu <b>246</b> that lists a pipeline option <b>249</b> and a RIP engine option <b>253</b>. A user may “click” on or otherwise manipulate the pipeline option <b>249</b> which causes a subsequent user interface to appear on the display device <b>153</b> to allow a user to configure a new pipeline. As employed herein, the term “clicking” is defined as positioning a cursor over a graphical component and manipulating the component such as, for example, with a pushbutton on a mouse, etc. If a user clicks on the RIP engine option <b>253</b>, then a subsequent user interface appears on the display device <b>153</b> that facilitates the user configuration of RIP engines <b>109</b> for a specified pipeline <b>113</b>. Such subsequent user interfaces are discussed with reference to later figures.</p>
<p id="p-0040" num="0039">Turning then to <figref idref="DRAWINGS">FIG. 7</figref>, shown is a pipeline configuration interface <b>196</b><i>b </i>according to an embodiment of the present invention. The pipeline configuration interface <b>196</b><i>b </i>includes a “create pipeline” button <b>263</b> and a “Delete” pipeline button <b>266</b>. The create pipeline button <b>263</b> and the delete pipeline button <b>266</b> may be manipulated to create a new pipeline <b>113</b> (<figref idref="DRAWINGS">FIG. 4</figref>) or to delete a new pipeline <b>113</b>, respectively. The pipeline configuration interface <b>196</b><i>b </i>also includes a pipeline display window <b>269</b> in which current existing pipelines <b>113</b> are displayed. A number of exemplary buttons are provided that allow a user to create or modify settings associated with the pipelines <b>113</b> listed in the pipeline display window <b>269</b>. These buttons include, for example, a “pipeline name” button <b>273</b>, a “job selection” button <b>276</b>, a “page layout” button <b>279</b>, a “media layout” button <b>283</b>, a “color manager” button <b>286</b>, an “impositions” button <b>289</b>, and a “priority” button <b>293</b>. Upon clicking or otherwise manipulating any one of the buttons <b>273</b>-<b>293</b>, one or more user interfaces are generated with which a user may enter and/or edit various parameters associated with a highlighted one of the pipelines <b>113</b> listed in the pipeline display window <b>269</b>. Assuming that the user has completed all desired configuration tasks, the user may click on or otherwise manipulate the “OK” button <b>296</b> to revert back to the user interface <b>196</b><i>a </i>(<figref idref="DRAWINGS">FIG. 5</figref>).</p>
<p id="p-0041" num="0040">Referring next to <figref idref="DRAWINGS">FIG. 8</figref>, shown is a user interface <b>196</b><i>c </i>that is generated in response to a user manipulation of the “pipeline name” button <b>273</b> (<figref idref="DRAWINGS">FIG. 7</figref>) according to an embodiment of the present invention. The user interface <b>196</b><i>c </i>provides the user with the ability to input various parameters and/or information associated with a selected one of the pipelines <b>113</b> (<figref idref="DRAWINGS">FIG. 7</figref>). Such parameters and/or information may comprise, for example, a pipeline name, a model name of an associated printing device <b>126</b> (<figref idref="DRAWINGS">FIG. 1</figref>), a model number of the associated printing device <b>126</b>, a vendor name of the RIP engines <b>109</b> (<figref idref="DRAWINGS">FIG. 1</figref>), and other information. Also, various user interface components may be employed to provide a user with an ability to specify various pipeline settings, etc.</p>
<p id="p-0042" num="0041">Turning then to <figref idref="DRAWINGS">FIG. 9</figref>, shown is a user interface <b>196</b><i>d </i>according to an embodiment of the present invention. The user interface <b>196</b><i>d </i>provides a user with an ability to specify a set of pipeline acceptance criteria <b>299</b> that is employed to determine whether a print job <b>103</b> (<figref idref="DRAWINGS">FIG. 1</figref>) can be accepted by a respective pipeline <b>113</b> (<figref idref="DRAWINGS">FIG. 7</figref>) selected in the pipeline configuration interface <b>196</b><i>b </i>(<figref idref="DRAWINGS">FIG. 7</figref>). It is understood that the various graphical components employed to specify the pipeline acceptance criteria <b>299</b> merely provide examples of the various ways that such criteria may be selected or otherwise specified.</p>
<p id="p-0043" num="0042">In this respect, exemplary criteria may include determining whether a pipeline <b>113</b> will accept print jobs for RIPping automatically, restricting print jobs <b>103</b> to those designated for a particular type of print device <b>126</b>, specifying a maximum page count for acceptable print jobs, specifying an accepted file type of the print job <b>103</b>, specifying a specific page description language for the print job that will be accepted, specifying an acceptable priority range, or specifying a range of file sizes for acceptable print jobs. In addition, it is understood that other criteria may be employed and that the criteria is not limited to that which is expressly described herein.</p>
<p id="p-0044" num="0043">With respect to <figref idref="DRAWINGS">FIG. 10</figref>, shown is a user interface <b>196</b><i>e </i>that provides for an association of an imposition with the respective pipeline <b>113</b> (<figref idref="DRAWINGS">FIG. 7</figref>). In this regard, the user interface <b>196</b><i>e </i>includes a listing of a number of impositions <b>303</b> that can be selected for association with a respective pipeline <b>113</b>. In addition, the user interface <b>196</b><i>e </i>includes components that may be manipulated to add or delete impositions, etc. As contemplated herein, an imposition refers to an arrangement or layout of pages on a print media as can be appreciated by those with ordinary skill in the art.</p>
<p id="p-0045" num="0044">Turning to <figref idref="DRAWINGS">FIG. 11</figref>, shown is a user interface <b>196</b><i>f </i>that includes a pipeline priority window <b>306</b> that lists a number of pipelines <b>113</b> in an order of priority. That is to say, the priority associated with each of the pipelines <b>113</b> is determined based upon its position among other pipelines <b>113</b> listed in the pipeline priority window <b>306</b>. In addition, the user interface <b>196</b><i>f </i>includes buttons <b>309</b> that may be manipulated with respect to a selected one of the pipelines <b>113</b> in the pipeline priority window <b>306</b> to alter a position of the selected pipeline <b>113</b> in the pipeline priority window <b>306</b>, thereby altering the relative priorities of the pipelines <b>113</b> listed therein.</p>
<p id="p-0046" num="0045">Referring next to <figref idref="DRAWINGS">FIG. 12</figref>, shown is a RIP engine manager interface <b>196</b><i>g </i>that is generated upon a manipulation of the RIP engine option <b>253</b> (<figref idref="DRAWINGS">FIG. 6</figref>) according to an embodiment of the present invention. In this respect, the RIP engine manager interface <b>196</b><i>g </i>depicts each RIP engine <b>109</b> in association with a respective pipeline <b>113</b>. The RIP engine manager interface <b>196</b><i>g </i>also includes buttons or other components that provide an ability to add and/or edit configurations of RIP engines <b>109</b> as is appropriate. Such components may cause the generation of additional user interfaces that facilitate the user input of parameters associated with the RIP engines <b>109</b> listed in the RIP engine manager interface <b>196</b><i>g. </i></p>
<p id="p-0047" num="0046">With reference to <figref idref="DRAWINGS">FIGS. 13A and 13B</figref>, shown is an exemplary flow chart of the pipeline configuration system <b>193</b> according to an embodiment of the present invention. Alternatively, the flowchart of <figref idref="DRAWINGS">FIGS. 13A and 13B</figref> may also be viewed as depicting steps of a method implemented in the computer system <b>140</b> (<figref idref="DRAWINGS">FIG. 2</figref>) to configure one or more pipelines <b>113</b> (<figref idref="DRAWINGS">FIG. 2</figref>) and to associate one more RIP engines <b>109</b> (<figref idref="DRAWINGS">FIG. 2</figref>) with respective ones of the pipelines <b>113</b>.</p>
<p id="p-0048" num="0047">Beginning with box <b>333</b>, the pipeline configuration system <b>193</b> displays the user interface <b>196</b><i>a </i>(<figref idref="DRAWINGS">FIG. 4</figref>) on the display device <b>153</b> (<figref idref="DRAWINGS">FIG. 2</figref>) that associates the RIP engines <b>109</b> (<figref idref="DRAWINGS">FIG. 4</figref>) with respective pipelines <b>113</b> (<figref idref="DRAWINGS">FIG. 4</figref>). In addition, the various tabs of the user interface <b>196</b><i>a </i>are displayed as selected by a user. Thereafter, the pipeline configuration system <b>193</b> proceeds to box <b>336</b> in which it is determined whether the pipeline option <b>249</b> (<figref idref="DRAWINGS">FIG. 6</figref>) has been selected by a user. If such is the case, then the pipeline configuration system <b>193</b> proceeds to box <b>339</b> in which the pipeline configuration interface <b>196</b><i>b</i>, for example, is generated on the display device <b>153</b>. Thereafter, the pipeline configuration system <b>193</b> proceeds to connector A as shown.</p>
<p id="p-0049" num="0048">However, assuming that the user has not manipulated the pipeline option <b>249</b> in box <b>336</b>, then the pipeline configuration system <b>193</b> proceeds to box <b>343</b> in which it is determined whether the user has manipulated the RIP engine option <b>253</b> (<figref idref="DRAWINGS">FIG. 6</figref>) to add, delete, or edit configurations of RIP engines <b>253</b> in association with one or more pipelines <b>113</b>. If such is the case, then the pipeline configuration system <b>193</b> proceeds to box <b>346</b>. Otherwise, the pipeline configuration system <b>193</b> reverts back to box <b>336</b>.</p>
<p id="p-0050" num="0049">In box <b>346</b>, the RIP engine manager interface <b>196</b><i>g </i>is generated on the display device <b>153</b>. Thereafter, in box <b>349</b>, the pipeline configuration system <b>193</b> determines whether a configuration for a RIP engine <b>109</b> is to be added. If such is the case, then the pipeline configuration system <b>193</b> proceeds to box <b>353</b>. Otherwise, the pipeline configuration system <b>193</b> moves to box <b>356</b>. In box <b>353</b>, the various parameters and/or information relative to the configuration of the new RIP engine <b>109</b> are input by the pipeline configuration system <b>193</b>. This may be accomplished, for example, by generating one or more user interfaces that facilitate a user input of the parameters and/or information, etc. One such parameter may be, for example, the pipeline <b>113</b> with which the new RIP engine is associated. Thereafter, in box <b>359</b> the RIP engine <b>109</b> is associated with the identified pipeline <b>113</b>. This may be done, for example, by including the RIP engine <b>109</b> and the pipeline <b>113</b> in a table or other data structure that maintains associations between elements.</p>
<p id="p-0051" num="0050">From box <b>359</b> the pipeline configuration system <b>193</b> proceeds to box <b>356</b> in which it is determined whether a configuration for a RIP engine <b>109</b> is to be deleted. If such is the case, then the pipeline configuration system <b>193</b> proceeds to box <b>363</b> in which the configuration information of the selected RIP engine <b>109</b> is deleted. If no deletion is to occur in box <b>356</b>, or if the deletion is completed in box <b>363</b>, then in box <b>366</b> the pipeline configuration system <b>193</b> determines whether a configuration for a RIP engine <b>109</b> is to be edited. If so, then the pipeline configuration system <b>193</b> proceeds to box <b>369</b> to input edits of the selected RIP engine <b>109</b>.</p>
<p id="p-0052" num="0051">This may be accomplished, for example, by generating one or more user interfaces that facilitate a user input of the parameters and/or information, etc. If no edits are to be made in box <b>366</b>, or if edits are completed in box <b>369</b>, then the pipeline configuration system <b>193</b> proceeds to box <b>373</b>. In box <b>373</b> it is determined whether the configuration of RIP engines <b>109</b> is complete. This may be determined, for example, if a user clicks or otherwise manipulates an “OK”, “Done” or other appropriate button displayed in the RIP engine manager interface <b>196</b><i>g</i>. If so, then the pipeline configuration system <b>193</b> reverts back to box <b>333</b>. Otherwise, the pipeline configuration system <b>193</b> reverts back to box <b>349</b>.</p>
<p id="p-0053" num="0052">Referring back to box <b>339</b>, assuming that the pipeline configuration interface <b>196</b><i>b </i>is displayed on the display device <b>153</b>, then the pipeline configuration system <b>193</b> proceeds to box <b>376</b> through connector A. In box <b>376</b> it is determined whether a new pipeline <b>113</b> is to be created as indicated by a user manipulation of the “create pipeline” button <b>263</b>. If such is the case, then the pipeline configuration system <b>193</b> proceeds to box <b>379</b> in which the pipeline is created in the memory <b>146</b> (<figref idref="DRAWINGS">FIG. 2</figref>) by inclusion, for example, in a table, etc. If no pipeline <b>113</b> is to be created in box <b>376</b>, or if a new pipeline has been created in box <b>379</b>, the pipeline configuration system <b>193</b> proceeds to box <b>383</b>.</p>
<p id="p-0054" num="0053">In box <b>383</b>, the pipeline configuration system <b>193</b> determines whether a pipeline <b>113</b> (<figref idref="DRAWINGS">FIG. 7</figref>) is to be deleted. This may be determined, for example, by detecting a manipulation of the “Delete pipeline” button <b>266</b> (<figref idref="DRAWINGS">FIG. 7</figref>). If such is the case, then the pipeline configuration system <b>193</b> proceeds to box <b>386</b> to delete the pipeline <b>113</b> that is highlighted in the pipeline display window <b>269</b> (<figref idref="DRAWINGS">FIG. 7</figref>). The pipeline configuration system <b>193</b> may also provide for a dialog box that confirms the desire to delete a particular pipeline <b>113</b>. If no pipeline <b>113</b> is to be deleted in box <b>383</b> or if the pipeline <b>113</b> has been deleted in box <b>386</b>, then the pipeline configuration system <b>193</b> proceeds to box <b>389</b>.</p>
<p id="p-0055" num="0054">In box <b>389</b> it is determined whether information relative to one of the pipelines <b>113</b> in the pipeline display window <b>269</b> is to be input by the pipeline configuration system <b>193</b>. This may be determined, for example, by detecting whether a user has manipulated the “pipeline name” button <b>273</b> (<figref idref="DRAWINGS">FIG. 7</figref>) in the pipeline configuration interface <b>196</b><i>b </i>(<figref idref="DRAWINGS">FIG. 7</figref>). If such is the case, then the pipeline configuration system <b>193</b> proceeds to box <b>393</b>. Otherwise, the pipeline configuration system <b>193</b> moves to box <b>396</b> as shown. In box <b>393</b>, the pipeline configuration system <b>193</b> inputs information relative to a respective pipeline <b>113</b> such as the information input using the user interface <b>196</b><i>c </i>(<figref idref="DRAWINGS">FIG. 8</figref>) thereafter, and box <b>399</b> the pipeline information is associated with the respective pipeline <b>113</b> in the memory <b>146</b> using an appropriate data structure such as a table, etc. Then, the pipeline configuration system <b>193</b> proceeds to box <b>396</b>.</p>
<p id="p-0056" num="0055">In box <b>396</b>, the pipeline configuration system <b>193</b> determines whether pipeline acceptance criteria are to be entered or otherwise configured for a respective pipeline <b>113</b>. Such may determined by detecting a manipulation of the “Job selection” button <b>276</b> (<figref idref="DRAWINGS">FIG. 7</figref>). If such is the case then the pipeline configuration system <b>193</b> proceeds to box <b>403</b> to input new or edited acceptance criteria for a respective one of the pipelines <b>113</b>. On the other hand, if in box <b>396</b> no pipeline acceptance criteria are to be entered or edited, then the pipeline configuration system proceeds to box <b>406</b>. Once the acceptance criteria is input in box <b>403</b>, then the pipeline configuration system <b>193</b> proceeds to box <b>409</b> to associate the acceptance criteria with a respective one of the pipelines <b>113</b>. Thereafter, the pipeline configuration system <b>193</b> moves to box <b>406</b>.</p>
<p id="p-0057" num="0056">In box <b>406</b>, the pipeline configuration system <b>193</b> determines whether a page layout is to be entered or otherwise edited for a respective one of the pipelines <b>113</b>. This may be determined by detecting a manipulation of the page layout button <b>279</b> (<figref idref="DRAWINGS">FIG. 7</figref>). If such is the case then the pipeline configuration system <b>193</b> proceeds to box <b>413</b>. Otherwise, the pipeline configuration system <b>193</b> moves to box <b>416</b>. In box <b>413</b>, page layout parameters are input by the pipeline configuration system <b>193</b>. In this respect, the pipeline configuration system <b>193</b> generates one or more user interfaces (not shown) that facilitate the input of such parameters by a user. The page layout parameters may include, for example, page size, page width, page height, measuring units, number of copies, horizontal centering, vertical centering, page trimming options, and other parameters associated with the layout of the page upon a print media. Thereafter, in box <b>419</b> the page layout information is associated with a respective one of the pipelines <b>113</b> highlighted in the pipeline display window <b>269</b>. In this regard, such information is stored in an appropriate data structure in the memory <b>146</b> such as a table, etc. Thereafter, the pipeline configuration system <b>193</b> moves to box <b>416</b> as shown.</p>
<p id="p-0058" num="0057">In box <b>416</b>, the pipeline configuration system <b>193</b> determines whether a media layout is to be entered or otherwise edited for a respective one of the pipelines <b>113</b>. This may be determined by detecting a manipulation of the media layout button <b>283</b> (<figref idref="DRAWINGS">FIG. 7</figref>). If such is the case then the pipeline configuration system <b>193</b> proceeds to box <b>423</b>. Otherwise, the pipeline configuration system <b>193</b> moves to box <b>426</b>. In box <b>423</b>, media layout attributes are input by the pipeline configuration system <b>193</b>. In this respect, the pipeline configuration system <b>193</b> generates one or more user interfaces (not shown) that facilitate the input of such attributes by a user. The media is defined herein as the target media upon which the print job <b>103</b> (<figref idref="DRAWINGS">FIG. 1</figref>) is to be printed. The media layout information may comprise, for example, the media type, media width, media height, left and right margin sizes, measuring units, media color, media weight, media grain, media rotation specifications, mirroring techniques, negative features, and other attributes. Thereafter, in box <b>429</b> the media layout information is associated with a respective one of the pipelines <b>113</b> highlighted in the pipeline display window <b>269</b>. In this regard, such information is stored in an appropriate data structure in the memory <b>146</b> such as a table, etc. Thereafter, the pipeline configuration system <b>193</b> moves to box <b>426</b> as shown.</p>
<p id="p-0059" num="0058">In box <b>426</b>, the pipeline configuration system <b>193</b> determines whether an imposition is to be specified or otherwise edited for a respective one of the pipelines <b>113</b>. This may be determined by detecting a manipulation of the “impositions” button <b>289</b> (<figref idref="DRAWINGS">FIG. 7</figref>). If such is the case then the pipeline configuration system <b>193</b> proceeds to box <b>433</b>. Otherwise, the pipeline configuration system <b>193</b> moves to box <b>436</b>. In box <b>433</b>, a selection of an imposition <b>303</b> (<figref idref="DRAWINGS">FIG. 10</figref>) is input by the pipeline configuration system <b>193</b>. In this respect, the pipeline configuration system <b>193</b> generates one or more user interfaces that facilitate the input of such information by a user such as the exemplary user interface <b>196</b><i>e </i>(<figref idref="DRAWINGS">FIG. 10</figref>). Thereafter, in box <b>439</b> the selected imposition <b>303</b> is associated with a respective one of the pipelines <b>113</b> highlighted in the pipeline display window <b>269</b>. In this regard, such information is stored in an appropriate data structure in the memory <b>146</b> such as a table, etc. Thereafter, the pipeline configuration system <b>193</b> moves to box <b>436</b> as shown.</p>
<p id="p-0060" num="0059">In box <b>436</b>, the pipeline configuration system <b>193</b> determines whether the prioritization of the pipelines <b>113</b> displayed in the pipeline display window <b>269</b> is to be altered. This may be determined by detecting a manipulation of the “priority” button <b>293</b> (<figref idref="DRAWINGS">FIG. 7</figref>). If such is the case then the pipeline configuration system <b>193</b> proceeds to box <b>443</b>. Otherwise, the pipeline configuration system <b>193</b> moves to box <b>446</b>. In box <b>443</b>, the prioritization of the pipelines <b>113</b> is input by the pipeline configuration system <b>193</b>. In this respect, the pipeline configuration system <b>193</b> generates one or more user interfaces that facilitate the specification of the priority of the pipelines <b>113</b> by a user such as the exemplary user interface <b>196</b><i>f </i>(<figref idref="DRAWINGS">FIG. 11</figref>). Thereafter, in box <b>449</b> the priorities of each of the pipelines <b>113</b> as specified in box <b>443</b> are associated the pipelines <b>113</b>, respectively. In this regard, the priority information is stored in an appropriate data structure in the memory <b>146</b> such as a table, etc. Thereafter, the pipeline configuration system <b>193</b> moves to box <b>446</b> as shown.</p>
<p id="p-0061" num="0060">In box <b>446</b> the pipeline configuration system <b>193</b> determines whether the user has completed the configuration of a respective pipeline <b>113</b>. This may be determined, for example, by detecting whether a user has manipulated the “OK” button <b>296</b> (<figref idref="DRAWINGS">FIG. 7</figref>). If such is the case, then the pipeline configuration system <b>193</b> reverts back to box <b>333</b> through connector B as shown.</p>
<p id="p-0062" num="0061">In addition, the pipeline configuration system <b>193</b> may also include other functionality beyond that described herein as depicted on the user interfaces <b>196</b><i>a</i>-<i>g. </i></p>
<p id="p-0063" num="0062">With reference to <figref idref="DRAWINGS">FIG. 14</figref>, shown is an exemplary flow chart of the print job preprocessor <b>173</b> according to an embodiment of the present invention. Alternatively, the flowchart of <figref idref="DRAWINGS">FIG. 14</figref> may be viewed as depicting steps in a method implemented in the computer system <b>140</b> in order to perform raster image processing on a print job <b>103</b> (<figref idref="DRAWINGS">FIG. 1</figref>).</p>
<p id="p-0064" num="0063">Beginning in box <b>503</b>, the print job preprocessor <b>173</b> waits to receive a print job <b>103</b> that is embodied, for example, in a page description language that requires raster image processing for printing. Assuming that a print job <b>103</b> is received by the print job preprocessor <b>173</b> in box <b>503</b>, then the print job preprocessor <b>173</b> proceeds to box <b>506</b> in which the print job <b>103</b> is stored in a queue or other portion of the memory <b>146</b> (<figref idref="DRAWINGS">FIG. 2</figref>). Thereafter, in box <b>509</b>, the print job preprocessor <b>173</b> determines whether a total number of pages embodied in the print job <b>103</b> can be ascertained from the print job <b>103</b> itself. If not, then the print job preprocessor <b>173</b> proceeds to box <b>513</b>. Otherwise, the print job preprocessor <b>173</b> moves to box <b>516</b>. In box <b>513</b>, the print job preprocessor <b>173</b> sets a flag that is associated with the print job <b>103</b> that indicates that the pages of the print job <b>103</b> could not be counted. Thereafter, the print job preprocessor <b>173</b> proceeds to box <b>519</b>.</p>
<p id="p-0065" num="0064">Assuming that the print job preprocessor <b>173</b> has proceeded to box <b>516</b>, then the print job preprocessor <b>173</b> determines the total page count of the print job <b>103</b> and associates such page count with the print job <b>103</b>. Then, in box <b>519</b>, the print job preprocessor <b>173</b> determines which pipeline <b>113</b> (<figref idref="DRAWINGS">FIG. 1</figref>) to which the print job <b>103</b> is to be applied based upon the priorities assigned to each of the existing pipelines <b>113</b> as well as the pipeline acceptance criteria <b>299</b> (<figref idref="DRAWINGS">FIG. 9</figref>) associated with each pipeline <b>113</b>. In this respect, the print job preprocessor <b>173</b> scrutinizes the pipeline acceptance criteria <b>299</b> of each of the pipelines <b>113</b> in turn according to the priorities assigned to each of the pipelines <b>113</b>. This is done until the print job <b>103</b> meets the pipeline acceptance criteria <b>299</b> of one of the pipelines <b>113</b>. Thereafter, in box <b>523</b> the print job <b>103</b> is applied to the partition manager <b>176</b>.</p>
<p id="p-0066" num="0065">Turning then to <figref idref="DRAWINGS">FIGS. 15A and 15B</figref>, shown is an exemplary flow chart of the partition manager <b>176</b> according to an embodiment of the present invention. Alternatively, the flowchart of <figref idref="DRAWINGS">FIGS. 15A and 15B</figref> may be viewed as depicting steps of a method implemented in the computer system <b>140</b> (<figref idref="DRAWINGS">FIG. 2</figref>) that determines the number of partitions of the print job <b>103</b> (<figref idref="DRAWINGS">FIG. 1</figref>) for raster image processing.</p>
<p id="p-0067" num="0066">Beginning with box <b>553</b>, the partition manager <b>176</b> determines whether a print job <b>103</b> has been assigned to a respective pipeline <b>113</b> to be RIPped. If such is the case, then the partition manager <b>176</b> proceeds to box <b>556</b> in which the number of available RIP engines <b>109</b> (<figref idref="DRAWINGS">FIG. 1</figref>) associated with the respective pipeline <b>113</b> is determined. The number of available RIP engines <b>109</b> is referred to herein as the “RIP count”. A RIP engine <b>109</b> is available when it is not RIPping a print job <b>103</b> and is not subject to an error condition. Once the RIP count is determined, the partition manager <b>176</b> proceeds to box <b>559</b> in which it is determined whether any of the RIP engines <b>109</b> associated with the respective pipeline <b>113</b> are currently available such that they can RIP the current print job <b>103</b>. If none of the RIP engines <b>109</b> are available, then the partition manager <b>176</b> moves to box <b>563</b> in which a predefined delay is executed. Thereafter, the RIP manager <b>176</b> reverts back to box <b>556</b>.</p>
<p id="p-0068" num="0067">Assuming that at least one RIP engine <b>109</b> is available in box <b>559</b>, then the partition manager <b>176</b> proceeds to box <b>566</b> in which it is determined whether a page count could be ascertained in box <b>516</b> (<figref idref="DRAWINGS">FIG. 14</figref>). If not, then the partition manager <b>176</b> moves to box <b>569</b> in which a partition of “1” that encompasses the entire print job <b>103</b> is designated. Thereafter, the partition manager <b>176</b> proceeds to connector C as shown. On the other hand, if the partition manager <b>176</b> determines that a page count exists in box <b>566</b>, then the partition manager <b>176</b> proceeds to box <b>573</b> in which it is determined whether a user defined partition routine is to be employed to divide the print job <b>103</b> into individual partitions for RIPping. If such is the case, then the partition manager <b>176</b> proceeds to box <b>576</b> in which the user defined partition routine is executed. Thereafter, the partition manager <b>176</b> moves to connector D as shown. The user defined partition routine may be created using any one of a number of programming languages or may be configured as a portion of the partition manager, etc.</p>
<p id="p-0069" num="0068">However, if no user defined partition routine is to be employed as determined in box <b>573</b>, then the partition manager <b>176</b> proceeds to box <b>579</b>. In box <b>579</b>, the partition manager <b>176</b> determines whether the page count of the current print job <b>103</b> is less than the RIP count of the current pipeline <b>113</b>. If so, then the partition manager <b>176</b> proceeds to box <b>583</b> in which a partition interval is set equal to the page count. As defined herein, the partition interval is a value that equals the number of pages within a number of equal partitions of the print job <b>103</b>, excluding any remainder number of pages as will be described. From box <b>583</b>, the partition manager <b>176</b> proceeds to connector D as shown. If the page count is greater than the RIP count as determined in box <b>576</b>, then the partition manager <b>176</b> proceeds to box <b>586</b> in which it is determined whether the RIP count is equal to one. If such is the case, then the partition manager <b>176</b> proceeds to box <b>589</b> were the partition interval is set equal to the page count. From box <b>589</b>, the partition manager <b>176</b> proceeds to connector D as shown.</p>
<p id="p-0070" num="0069">If the RIP count is not equal to one in box <b>586</b>, then the partition manager <b>176</b> proceeds to box <b>593</b> in which it is determined whether the page count is less than a constant C<sub>1</sub>. The constant C<sub>1 </sub>may equal, for example, 50 or other appropriate value. If the page count is less than the constant C<sub>1 </sub>in box <b>593</b>, then the partition manager <b>176</b> proceeds to box <b>596</b> in which the partition interval is set equal to the page count/RIP count. Thereafter, the partition manager <b>176</b> proceeds to connector D as shown. However, if the page count is greater than the constant C<sub>1 </sub>in box <b>593</b>, then the partition manager <b>176</b> proceeds to box <b>599</b> in which it is determined whether the page count is less then the second constant C<sub>2</sub>. The second constant C<sub>2 </sub>may be, for example, 500 or some other value as is appropriate. In this respect, the partitioning may be performed based upon the length of the print job <b>103</b>. If the page count is less than the constant C<sub>2 </sub>in box <b>599</b>, then the partition manager <b>176</b> proceeds to box <b>603</b> in which the partition interval is set equal to a constant value C<sub>3</sub>. The constant value C<sub>3 </sub>may be, for example, 25 or other appropriate value. Thereafter, the partition manager <b>176</b> proceeds to connector D.</p>
<p id="p-0071" num="0070">If however the page count is greater than the second constant C<sub>2</sub>, then the partition manager <b>176</b> proceeds to box <b>606</b> in which the partition interval is set equal to the page count/constant C<sub>4</sub>. The constant C<sub>4 </sub>may be, for example, 20 or other appropriate value. Thereafter, the partition manager <b>176</b> proceeds to connector D. The constants C<sub>1</sub>-C<sub>4 </sub>may be preset or user configurable, etc.</p>
<p id="p-0072" num="0071">Thus, in boxes <b>579</b> through <b>606</b>, the partition manager <b>176</b> provides for a set of partitioning criteria that are employed to determine a partition interval that is used to partition the print job <b>103</b>. As discussed above, the set of partitioning criteria can be based upon a number of the RIP engines that are available to perform the raster image processing of the partitions of the print job. The set of partitioning criteria may also compare the page count with a number of predefined threshold values. There is no limitation on the nature of the partitioning criteria that may be applied.</p>
<p id="p-0073" num="0072">From connector D, the partition manager <b>176</b> proceeds to box <b>609</b> to determine whether the partition interval is less then a minimum partition threshold. If the partition interval is less than the minimum partition threshold, then the partition manager <b>176</b> proceeds to box <b>613</b>. Otherwise, the partition manager <b>176</b> moves to box <b>616</b>. In box <b>613</b>, the partition manager <b>176</b> sets the partition interval equal to the minimum threshold value. Thereafter, the partition manager <b>176</b> proceeds to box <b>619</b> as shown. Assuming that the partition manager <b>176</b> has proceeded to box <b>616</b>, the partition manager <b>176</b> determines whether the partition interval is greater than a maximum partition threshold. If such is the case, then the partition manager <b>176</b> proceeds to box <b>623</b> in which the partition interval is set equal to the maximum partition threshold. Thereafter, the partition manager <b>176</b> moves to box <b>619</b>. The minimum and maximum partition thresholds each may be any appropriate value that is selected based upon design considerations.</p>
<p id="p-0074" num="0073">In box <b>619</b>, the partition manager <b>176</b> determines whether a remainder partition exists. A remainder partition is a partition that includes a number of pages that is less than the number pages specified in the partition interval. Thus, a remainder partition exists if the partition interval does not evenly divide into the page count. The existence of a partition remainder may be determined by calculating the modulo of the page count divided by the partition interval. If no remainder exists, then the partition manager <b>176</b> proceeds to box <b>623</b>. Otherwise, the partition manager <b>176</b> moves to box <b>626</b>. In box <b>623</b>, the partition manager <b>176</b> creates a partition specification <b>186</b> (<figref idref="DRAWINGS">FIG. 2</figref>) for the print job <b>103</b> in the database <b>183</b> (<figref idref="DRAWINGS">FIG. 2</figref>) that specifies a number of partitions equal to the page count divided by the partition interval. Assuming that the partition manager <b>176</b> has proceeded to box <b>626</b>, then a remainder partition exists. In such case, the partition manager <b>176</b> creates a partition specification <b>186</b> in the database <b>183</b> that specifies a number of partitions equal to the page count divided by the partition interval plus one. From either box <b>623</b> or <b>626</b>, the partition manager <b>176</b> proceeds to box <b>629</b> in which the newly created partition specification <b>186</b> is saved in the database <b>183</b>. In any event, the partition specification <b>186</b> tracks a partition RIP status <b>189</b> for each of the partitions. Then, the partition manager <b>176</b> applies the print job <b>103</b> to a pipeline <b>113</b> (<figref idref="DRAWINGS">FIG. 1</figref>) for RIPping. In this regard, the partition manager <b>176</b> may place the print job <b>103</b> into a queue associated with the respective pipeline <b>113</b>, etc. Alternatively, the print job <b>103</b> may be marked for a specific pipeline <b>113</b> and placed in a general queue for all print jobs <b>103</b>, or some other approach may be employed. Thereafter, the partition manager <b>176</b> reverts back to box <b>553</b> through connector E as shown. Also, with reference back to box <b>569</b>, once a single partition is specified for the print job <b>103</b>, then the partition manager <b>176</b> proceeds to box <b>629</b> through connector C as shown.</p>
<p id="p-0075" num="0074">Referring next to <figref idref="DRAWINGS">FIG. 16</figref>, shown is an exemplary flow chart that illustrates the functionality of the RIP handler <b>179</b>. Alternatively, the flow chart of <figref idref="DRAWINGS">FIG. 16</figref> may be viewed as depicting steps of a method implemented in the computer system <b>140</b> (<figref idref="DRAWINGS">FIG. 1</figref>) to orchestrate the RIPping of a print job <b>103</b> (<figref idref="DRAWINGS">FIG. 1</figref>).</p>
<p id="p-0076" num="0075">Beginning with box <b>653</b>, the RIP handler <b>179</b> waits until a print job <b>103</b> is to be partitioned for a respective pipeline <b>113</b>. Thereafter, in box <b>656</b> the RIP handler <b>179</b> identifies all available RIP engines <b>109</b> (<figref idref="DRAWINGS">FIG. 1</figref>) for the respective pipeline <b>113</b>. Next, in box <b>659</b>, if any of the RIP engines <b>109</b> associated with the pipeline <b>113</b> are available to RIP the current print job <b>103</b>, then the RIP handler <b>179</b> proceeds to box <b>663</b>. Otherwise, the RIP handler <b>179</b> proceeds to box <b>666</b>. In box <b>663</b>, the RIP handler <b>179</b> determines whether there are any partitions of the present print job <b>103</b> that have a partition RIP status <b>189</b> of “unassigned”.</p>
<p id="p-0077" num="0076">In this respect, each partition may be “unassigned”, “assigned”, or “completed”. The “unassigned” designation indicates that the respective partition has yet to be assigned to a RIP engine <b>109</b> for RIPping. The “assigned” designation indicates that the RIP engine <b>109</b> has been assigned to a RIP engine <b>109</b> and is currently being RIPped. The “completed” designation indicates that the partition has been successfully RIPped and the RIPped partition <b>119</b> (<figref idref="DRAWINGS">FIG. 1</figref>) generated therefrom has been transmitted to the memory <b>146</b> that is local to the RIP manager <b>106</b> (<figref idref="DRAWINGS">FIG. 2</figref>).</p>
<p id="p-0078" num="0077">Assuming that there are partitions with a partition RIP status <b>189</b> of “unassigned” in box <b>663</b>, then the RIP handler <b>179</b> proceeds to box <b>669</b>. Otherwise, the RIP handler <b>179</b> moves to box <b>666</b>. In box <b>669</b> one or more unassigned partitions are assigned to one or more RIP engines <b>109</b>, depending upon how many RIP engines <b>109</b> associated with the respective pipeline <b>113</b> are available for RIPping and depending upon the number of unassigned partitions. To assign a partition to a RIP engine <b>109</b>, the RIP handler <b>179</b> sends the corresponding partition assignment <b>116</b> to one of the RIP engines <b>109</b>. Thereafter, in box <b>673</b> the partition RIP status <b>189</b> of all newly assigned partitions is updated from “unassigned” to “assigned.” Then, in box <b>676</b>, the RIP handler <b>179</b> initiates a timer for each of the newly assigned partitions. The timer enables the RIP handler <b>179</b> to determine whether a RIP engine <b>109</b> has taken too long to RIP a partition, thereby indicating an error condition or power outage, etc., has occurred. The actual time period tracked by the timer may be configured by the user. The RIP handler <b>179</b> then proceeds to box <b>666</b>.</p>
<p id="p-0079" num="0078">In box <b>666</b> the RIP handler <b>179</b> determines whether a copy of the print job <b>103</b> has been requested by one of the RIP engines <b>109</b>. If such is the case, then the RIP handler <b>179</b> proceeds to box <b>679</b> in which a copy of the print job <b>103</b> is downloaded to a memory that is local to the requesting RIP engine <b>109</b> such as, for example, the memory <b>206</b> (<figref idref="DRAWINGS">FIG. 3</figref>). If no copy of the print job <b>103</b> is requested in box <b>666</b>, or if the copy of the print job <b>103</b> is successfully downloaded in box <b>679</b>, then the RIP handler <b>179</b> proceeds to box <b>683</b>.</p>
<p id="p-0080" num="0079">In box <b>683</b> the RIP handler <b>179</b> determines if any one of the RIP engines <b>109</b> has completed RIPping an assigned partition. If so, then the RIP handler <b>179</b> proceeds to box <b>686</b>. Otherwise, the RIP handler <b>179</b> moves to box <b>689</b>. In box <b>686</b> the corresponding RIPped partition <b>119</b> is uploaded from the RIP engine <b>109</b> to a memory that is local to the RIP manager <b>106</b> such as, for example, the memory <b>146</b>. Once the RIPped partition <b>119</b> has been successfully uploaded, then the RIP handler <b>179</b> proceeds to box <b>693</b> in which the partition RIP status <b>189</b> associated with the respective partition is updated to “completed”. The status is not updated to “completed” until after the RIPped partition <b>119</b> has been successfully uploaded just in case a power outage or other error occurs during the transmission. Next, in box <b>696</b> the timer associated with the completed partition is canceled. Thereafter, the RIP handler <b>179</b> proceeds to box <b>689</b>.</p>
<p id="p-0081" num="0080">In box <b>689</b>, the RIP handler <b>179</b> determines whether a timeout of one of the timers set in box <b>676</b> has occurred, thereby indicating that a problem exists with the RIPping of one of the partitions by the respective RIP engine <b>109</b>. In this respect, the RIP engine <b>109</b> may have experienced a failure or error that interrupted the RIPping process. As such, the RIPping will not have been completed within the allotted time. If a timeout is detected in box <b>689</b>, then the RIP handler <b>179</b> proceeds to box <b>699</b>. Otherwise, the RIP handler <b>179</b> moves to box <b>703</b>.</p>
<p id="p-0082" num="0081">In box <b>699</b> the RIPping of the assigned partition by the RIP engine <b>109</b> is canceled. In this respect, the RIP handler <b>179</b> may send a message, for example, to the RIP engine <b>109</b> informing it that the RIPping of the assigned partition has been canceled if the RIP engine <b>109</b> is responsive. Thereafter, in box <b>706</b> the RIP handler <b>179</b> updates the respective partition RIP status <b>189</b> to “unassigned” in the respective partition specification <b>186</b> so that the partition may ultimately be reassigned to a properly functioning RIP engine in box <b>669</b>. The RIP handler <b>179</b> then proceeds to box <b>703</b>.</p>
<p id="p-0083" num="0082">In box <b>703</b>, the RIP handler <b>179</b> determines whether all partitions associated with respective print jobs <b>103</b> have been RIPped. This may be determined by scanning one or more partition specifications <b>186</b> in the database <b>183</b> (<figref idref="DRAWINGS">FIG. 2</figref>) to determine if the partition RIP status <b>189</b> associated with each of the partitions is “completed”. If so, then the RIP handler <b>179</b> proceeds to box <b>709</b>. Otherwise the RIP handler <b>179</b> reverts back to box <b>659</b>.</p>
<p id="p-0084" num="0083">In box <b>709</b>, the RIP handler <b>179</b> re-aggregates all of the RIPped partitions <b>119</b> stored in memory accessible by the RIP manager <b>106</b> into a single RIPped output file <b>123</b>. Then, in box <b>713</b> the print job <b>103</b> as noted in the corresponding partition specification <b>186</b> is indicated as re-aggregated. Thereafter, in box <b>716</b> the RIP handler <b>179</b> applies the RIPped output file <b>123</b> to a print device <b>126</b> or a print queue for printing. Alternatively, the RIPped output file <b>123</b> may be stored for later printing, etc. Thereafter, the RIP handler <b>179</b> reverts back to box <b>653</b>.</p>
<p id="p-0085" num="0084">With reference to <figref idref="DRAWINGS">FIG. 17</figref>, shown is an exemplary flow chart of the RIP engine <b>109</b> according to an embodiment of the present invention. Alternatively, the flowchart of <figref idref="DRAWINGS">FIG. 17</figref> may be viewed as depicting steps of a method implemented in the RIP engine system <b>200</b> (<figref idref="DRAWINGS">FIG. 3</figref>) to RIP a respective partition of a print job <b>103</b> (<figref idref="DRAWINGS">FIG. 1</figref>).</p>
<p id="p-0086" num="0085">Beginning with box <b>733</b>, upon startup the RIP engine <b>109</b> initializes and reports its availability to the RIP manager <b>106</b> (<figref idref="DRAWINGS">FIG. 2</figref>). Thereafter, in box <b>736</b>, the RIP engine <b>109</b> waits to receive a partition assignment <b>116</b> from the partition manager <b>106</b>. Assuming a partition assignment <b>116</b> is received, then the RIP engine <b>109</b> proceeds to box <b>739</b> in which it is determined whether a copy of the print job <b>103</b> from which the assigned partition is taken exists in the memory local to the RIP engine <b>109</b> such as, for example, the memory <b>206</b> (<figref idref="DRAWINGS">FIG. 3</figref>). If not, then the RIP engine <b>109</b> proceeds to box <b>743</b>. Otherwise, the RIP engine <b>109</b> moves to box <b>746</b>.</p>
<p id="p-0087" num="0086">In box <b>743</b>, the RIP engine <b>109</b> sends a request to the RIP manager <b>106</b> to transmit a copy of the print job <b>103</b> for use by the RIP engine <b>109</b>. Then, in box <b>749</b>, once the RIP engine <b>109</b> receives the entire print job <b>103</b>, the RIP engine <b>109</b> proceeds to box <b>746</b>. In box <b>746</b>, the RIP engine <b>109</b> initiates the RIPping of the assigned partition. In this respect, the RIP engine <b>109</b> accesses and RIPs the corresponding portion of the entire print job <b>103</b> indicated by the partition assignment <b>116</b>. Then, in box <b>753</b>, if the RIP engine <b>109</b> completes the RIPping of the assigned partition, the RIP engine <b>109</b> proceeds to box <b>756</b> in which the RIPped partition <b>119</b> is stored in memory that is local to the RIP engine <b>109</b> such as, for example, the memory <b>206</b>. Thereafter, in box <b>759</b> the RIP engine <b>109</b> reports to the RIP manager <b>106</b> that the RIPping of the assigned partition is complete and that the RIP engine <b>109</b> is available to RIP further partitions as needed.</p>
<p id="p-0088" num="0087">Next, in box <b>763</b>, the RIP engine <b>109</b> waits for a request from the RIP manager <b>106</b> to upload the RIPped partition <b>116</b> to the RIP manager <b>106</b>. Assuming the request is received, then in box <b>766</b>, the RIP partition <b>119</b> is transmitted to the RIP manager <b>106</b>. Thereafter, the RIP engine <b>109</b> reverts back to box <b>736</b>. In addition, the RIP engine <b>109</b> may report the progress of the RIPping of a partition to the RIP manager <b>106</b> during the course of the RIPping operation.</p>
<p id="p-0089" num="0088">Although the RIP Manager <b>106</b> (<figref idref="DRAWINGS">FIG. 2</figref>) and all of the components included therein is embodied in software or code executed by general purpose hardware as discussed above, as an alternative the RIP Manager <b>106</b> may also be embodied in dedicated hardware or a combination of software/general purpose hardware and dedicated hardware. If embodied in dedicated hardware, the RIP Manager <b>106</b> can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include, but are not limited to, discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals, application specific integrated circuits having appropriate logic gates, programmable gate arrays (PGA), field programmable gate arrays (FPGA), or other components, etc. Such technologies are generally well known by those skilled in the art and, consequently, are not described in detail herein.</p>
<p id="p-0090" num="0089">The block diagram of <figref idref="DRAWINGS">FIG. 1</figref> and/or the flow charts of <figref idref="DRAWINGS">FIGS. 13A</figref>, <b>13</b>B, <b>14</b>, <b>15</b>A, <b>15</b>B, <b>16</b>, and <b>17</b> show the architecture, functionality, and operation of an implementation of the RIP Manager <b>106</b> and its various components. If embodied in software, each block may represent a module, segment, or portion of code that comprises program instructions to implement the specified logical function(s). The program instructions may be embodied in the form of source code that comprises human-readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code, etc. If embodied in hardware, each block may represent a circuit or a number of interconnected circuits to implement the specified logical function(s).</p>
<p id="p-0091" num="0090">Although the block diagram and/or flow charts of <figref idref="DRAWINGS">FIGS. 1</figref>, <b>13</b>A, <b>13</b>B, <b>14</b>, <b>15</b>A, <b>15</b>B, <b>16</b>, and <b>17</b> show a specific order of execution, it is understood that the order of execution may differ from that which is depicted. For example, the order of execution of two or more blocks may be scrambled relative to the order shown. Also, two or more blocks shown in succession in <figref idref="DRAWINGS">FIGS. 1</figref>, <b>13</b>A, <b>13</b>B, <b>14</b>, <b>15</b>A, <b>15</b>B, <b>16</b>, and <b>17</b> may be executed concurrently or with partial concurrence. In addition, any number of counters, state variables, warning semaphores, or messages might be added to the logical flow described herein, for purposes of enhanced utility, accounting, performance measurement, or providing troubleshooting aids, etc. In addition, various blocks shown in the flow charts of <figref idref="DRAWINGS">FIGS. 1</figref>, <b>13</b>A, <b>13</b>B, <b>14</b>, <b>15</b>A, <b>15</b>B, <b>16</b>, and <b>17</b> may represent functionality that is implemented with multiple threads, etc. It is understood that all such variations are within the scope of the present invention.</p>
<p id="p-0092" num="0091">Also, where the RIP Manager <b>106</b> and its various components comprises software or code, each can be embodied in any computer-readable medium for use by or in connection with an instruction execution system such as, for example, a processor in a computer system or other system. In this sense, the logic may comprise, for example, statements including instructions and declarations that can be fetched from the computer-readable medium and executed by the instruction execution system. In the context of the present invention, a “computer-readable medium” can be any medium that can contain, store, or maintain the RIP Manager <b>106</b> and its various components for use by or in connection with the instruction execution system. The computer readable medium can comprise any one of many physical media such as, for example, electronic, magnetic, optical, electromagnetic, infrared, or semiconductor media. More specific examples of a suitable computer-readable medium would include, but are not limited to, magnetic tapes, magnetic floppy diskettes, magnetic hard drives, or compact discs. Also, the computer-readable medium may be a random access memory (RAM) including, for example, static random access memory (SRAM) and dynamic random access memory (DRAM), or magnetic random access memory (MRAM). In addition, the computer-readable medium may be a read-only memory (ROM), a programmable read-only memory (PROM), an erasable programmable read-only memory (EPROM), an electrically erasable programmable read-only memory (EEPROM), or other type of memory device.</p>
<p id="p-0093" num="0092">Although the invention is shown and described with respect to certain embodiments, it is obvious that equivalents and modifications will occur to others skilled in the art upon the reading and understanding of the specification. The present invention includes all such equivalents and modifications, and is limited only by the scope of the claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>We claim:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for raster image processing, comprising:
<claim-text>determining a page count for a print job;</claim-text>
<claim-text>specifying a number of partitions of the print job;</claim-text>
<claim-text>assigning each of the partitions of the print job to one of a number of raster image processing (RIP) engines for raster image processing;</claim-text>
<claim-text>maintaining a partition RIP status for each of the partitions after the partitions of the print job have been assigned to a respective one of the RIP engines; and</claim-text>
<claim-text>re-aggregating a number of raster image processed partitions from the RIP engines into a raster image processed output file, wherein each of the raster image processed partitions is generated by raster image processing a corresponding one of the partitions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising transmitting the entire print job to the RIP engines.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the transmitting of the entire print job to the RIP engines further comprises:
<claim-text>receiving a request for the print job from one of the RIP engines in a RIP manager; and</claim-text>
<claim-text>transmitting the print job to the one of the RIP engines in response to the request.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising transmitting one of the raster image processed partitions from one of the RIP engines to a raster image processing manager after the generation of the one of the raster image processed partitions by one of the RIP engines is complete.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising determining a number of RIP engines that are available to perform the raster image processing of the partitions of the print job.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising tracking a time duration of the raster image processing of each of the partitions by respective ones of the RIP engines.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising canceling the raster image processing of one of the partitions by one of the RIP engines if the time duration exceeds a predefined timeout period.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the specifying the number of partitions of the print job further comprises specifying a number of consecutive pages of the print job for each one of the partitions.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising determining whether the page count can be ascertained from the print job.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising applying the print job to one of the RIP engines for raster image processing if the page count cannot be ascertained from the print job.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the specifying of the number of partitions of the print job further comprises applying a set of partitioning criteria to the print job to determine a partition interval.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising providing the set of partitioning criteria that are based upon a number of the RIP engines that are available to perform the raster image processing of the partitions of the print job.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising providing the set of partitioning criteria that compares the page count with a number of predefined threshold values.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00011">claim 11</claim-ref>, further comprising specifying a remainder one of the partitions where modulo((page count)/(partition interval))≠0.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. A system for raster image processing, comprising:
<claim-text>a processor circuit having a processor and a memory;</claim-text>
<claim-text>a raster image processing (RIP) manager stored in the memory and executable by the processor, the RIP manager further comprising:
<claim-text>logic that determines a page count for a print job;</claim-text>
<claim-text>logic that specifies a number of partitions of the print job;</claim-text>
<claim-text>logic that assigns each of the partitions of the print job to one of a number of raster image processing (RIP) engines for raster image processing;</claim-text>
<claim-text>logic that maintains a partition RIP status for each of the partitions after the partitions of the print job have been assigned to a respective one of the RIP engines; and</claim-text>
<claim-text>logic that re-aggregates a number of raster image processed partitions from the RIP engines into a raster image processed output file, wherein each of the raster image processed partitions is generated by raster image processing a corresponding one of the partitions.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the RIP manager further comprises logic that transmits the entire print job to the RIP engines.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The system of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the logic that transmits the entire print job to the RIP engines further comprises logic that transmits the print job to one of the RIP engines in response to a request for the print job received from the one of the RIP engines.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the RIP manager further comprises logic that transmits a request for a raster image processed partition from one of the RIP engines upon receiving a message from the one of the RIP engines that the raster image processing of a partition assigned to the one of the RIP engines is complete.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the RIP manager further comprises logic that determines a number of RIP engines that are available to perform the raster image processing of the partitions of the print job.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the RIP manager further comprises logic that tracks a time duration of the raster image processing of each of the partitions by respective ones of the RIP engines.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The system of <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein the RIP manager further comprises logic that cancels the raster image processing of one of the partitions by one of the RIP engines if the time duration exceeds a predefined timeout period.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the logic that specifies the number of partitions of the print job further comprises logic that specifies a number of consecutive pages of the print job for each one of the partitions.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising logic that determines whether the page count can be ascertained from the print job.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The system of <claim-ref idref="CLM-00023">claim 23</claim-ref>, further comprising logic that applies the print job to one of the RIP engines for raster image processing if the page count cannot be ascertained from the print job.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The system of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein the logic that specifies the number of partitions of the print job further comprises logic that applies a set of partitioning criteria to the print job to determine a partition interval.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The system of <claim-ref idref="CLM-00025">claim 25</claim-ref>, wherein the set of partitioning criteria are based in part upon an available number of the RIP engines to perform the raster image processing of the partitions of the print job.</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The system of <claim-ref idref="CLM-00025">claim 25</claim-ref>, wherein the set of partitioning criteria further comprise a comparison of the page count with a number of predefined threshold values.</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The system of <claim-ref idref="CLM-00025">claim 25</claim-ref>, wherein the logic that specifies the number of partitions of the print job further comprises logic that specifies a remainder one of the partitions where modulo((page count)/(partition interval))≠0.</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. A computer readable medium embodying computer executable instructions, comprising:
<claim-text>code that determines a page count for a print job;</claim-text>
<claim-text>code that specifies a number of partitions of the print job;</claim-text>
<claim-text>code that assigns each of the partitions of the print job to one of a number of raster image processing (RIP) engines for raster image processing;</claim-text>
<claim-text>code that maintains a partition RIP status for each of the partitions after the partitions of the print job have been assigned to a respective one of the RIP engines; and</claim-text>
<claim-text>code that re-aggregates a number of raster image processed partitions from the RIP engines into a raster image processed output file, wherein each of the raster image processed partitions is generated by raster image processing a corresponding one of the partitions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. The computer readable medium of <claim-ref idref="CLM-00029">claim 29</claim-ref>, further comprising code that transmits the entire print job to the RIP engines.</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. The computer readable medium of <claim-ref idref="CLM-00029">claim 29</claim-ref>, further comprising code that determines a number of RIP engines that are available to perform the raster image processing of the partitions of the print job.</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. The computer readable medium of <claim-ref idref="CLM-00029">claim 29</claim-ref>, further comprising code that tracks a time duration of the raster image processing of each of the partitions by respective ones of the RIP engines.</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. The computer readable medium of <claim-ref idref="CLM-00032">claim 32</claim-ref>, further comprising code that cancels the raster image processing of one of the partitions by one of the RIP engines if the time duration exceeds a predefined timeout period.</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. The computer readable medium of <claim-ref idref="CLM-00029">claim 29</claim-ref>, further comprising code that determines whether the page count can be ascertained from the print job.</claim-text>
</claim>
<claim id="CLM-00035" num="00035">
<claim-text>35. The computer readable medium of <claim-ref idref="CLM-00034">claim 34</claim-ref>, further comprising code that applies the print job to one of the RIP engines for raster image processing if the page count cannot be ascertained from the print job.</claim-text>
</claim>
<claim id="CLM-00036" num="00036">
<claim-text>36. The computer readable medium of <claim-ref idref="CLM-00029">claim 29</claim-ref>, wherein the code that specifies the number of partitions of the print job further comprises code that applies a set of partitioning criteria to the print job to determine a partition interval.</claim-text>
</claim>
<claim id="CLM-00037" num="00037">
<claim-text>37. A system for raster image processing, comprising:
<claim-text>means for determining a page count for a print job;</claim-text>
<claim-text>means for specifying a number of partitions of the print job;</claim-text>
<claim-text>means for assigning each of the partitions of the print job to one of a number of raster image processing (RIP) engines for raster image processing;</claim-text>
<claim-text>means for maintaining a partition RIP status for each of the partitions after the partitions of the print job have been assigned to a respective one of the RIP engines; and</claim-text>
<claim-text>means for re-aggregating a number of raster image processed partitions from the RIP engines into a raster image processed output file, wherein each of the raster image processed partitions is generated by raster image processing a corresponding one of the partitions.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00038" num="00038">
<claim-text>38. The system of <claim-ref idref="CLM-00037">claim 37</claim-ref>, further comprising means for determining a number of RIP engines that are available to perform the raster image processing of the partitions of the print job.</claim-text>
</claim>
<claim id="CLM-00039" num="00039">
<claim-text>39. The system of <claim-ref idref="CLM-00037">claim 37</claim-ref>, further comprising means for determining whether the page count can be ascertained from the print job.</claim-text>
</claim>
<claim id="CLM-00040" num="00040">
<claim-text>40. The system of <claim-ref idref="CLM-00039">claim 39</claim-ref>, further comprising means for applying the print job to one of the RIP engines for raster image processing if the page count cannot be ascertained from the print job.</claim-text>
</claim>
</claims>
</us-patent-grant>
