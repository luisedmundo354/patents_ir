<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298843-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298843</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10633059</doc-number>
<date>20030801</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>851</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>L</subclass>
<main-group>9</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>380 46</main-classification>
</classification-national>
<invention-title id="d0e53">Method and apparatus for seeding a random number generator</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5463689</doc-number>
<kind>A</kind>
<name>Schutte et al.</name>
<date>19951000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>380209</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6865660</doc-number>
<kind>B2</kind>
<name>Duncan</name>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>711217</main-classification></classification-national>
</citation>
</references-cited>
<number-of-claims>24</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>380 46</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>380 47</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>3</number-of-drawing-sheets>
<number-of-figures>3</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20050036610</doc-number>
<kind>A1</kind>
<date>20050217</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Krell</last-name>
<first-name>Sherry L</first-name>
<address>
<city>Sacramento</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Gerasimov</last-name>
<first-name>Sergey V.</first-name>
<address>
<city>Rocklin</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Hewlett-Packard Development Company, L.P.</orgname>
<role>02</role>
<address>
<city>Houston</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Zand</last-name>
<first-name>Kambiz</first-name>
<department>2134</department>
</primary-examiner>
<assistant-examiner>
<last-name>Nalven</last-name>
<first-name>Andrew L</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Disclosed are systems and methods for seeding a random number generator, comprising retrieving a first data block from a memory; initially seeding the random number generator using the first data block as a seed; retrieving a number generated by the random number generator; mapping the number to a memory address in the memory using a mathematical function; retrieving a successive data block from the memory address; and successively seeding the random number generator with a combination of the seed and the successive data block such that the combination of the seed and the successive data block becomes a resulting seed.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="241.22mm" wi="98.30mm" file="US07298843-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="256.29mm" wi="103.21mm" file="US07298843-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="230.21mm" wi="180.17mm" orientation="landscape" file="US07298843-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="127.25mm" wi="78.91mm" orientation="landscape" file="US07298843-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0002" num="0001">The present invention relates generally to the operation of computer systems and more specifically to the generation of random or pseudo-random numbers in computer systems.</p>
<p id="p-0003" num="0002">In the operation of computer systems, it is often desirable to generate random numbers for use in certain applications such as simulations, games, and secure communications. A random number is a sequence of numbers in which no number is more likely to occur at a given place in the sequence than any other number. Generation of a truly random number is generally considered to be impossible, but computer processes may generate numbers called “pseudo-random numbers” that are sufficiently unpredictable to serve an intended purpose. These pseudo-random numbers are hereinafter called “random numbers,” and their generation “random number generation,” in conformance with common usage.</p>
<p id="p-0004" num="0003">One prior method of generating random numbers in a computer system relies on the collection of random data over time from the computer system itself for use as a seed, i.e., a starting value used in generating random numbers, for a random number generator. Another prior method relies directly or indirectly on user interaction via, e.g., a keyboard or mouse, for random data to use as a random number generator seed.</p>
<p id="p-0005" num="0004">In some circumstances, however, user input is not available, for example, for embedded devices requiring no user interaction and having no user interfaces. Further, if one or more random numbers are required in a short time, for example, almost immediately after startup, there may not be enough time for the collection of random data for a seed. In addition, where the resources from which random data may be gathered are limited, for example in the limited memory of an embedded device, the data available may be insufficient to provide enough random data for a random number generator seed.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0002" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0006" num="0005"><figref idref="DRAWINGS">FIG. 1</figref> is a flowchart showing an embodiment of the invention;</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 2</figref> is a flowchart showing another embodiment of the invention; and</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram of an embodiment of the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0003" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0009" num="0008">Broadly stated, the present invention is directed to apparatus and methods for seeding a random number generator in a computer system without user interaction, network connection, or an elapsed period of time to collect data to form a seed, allowing a requirement for a random number to be fulfilled by a random number generator in a relatively short time, e.g., immediately after power-up of a computer device.</p>
<p id="p-0010" num="0009">Turning now to <figref idref="DRAWINGS">FIG. 1</figref>, showing a flowchart for an embodiment of the invention, a first data block is retrieved from memory (<b>10</b>). The first retrieved data block may include but is not limited to previously stored data or a unique identifier for a device or component such as a media access control (“MAC”) address. A random number generator is initially seeded with the retrieved first data block (<b>12</b>). The random number generator generates a number and that number is retrieved (<b>14</b>). The generated number is mapped to a memory address using a mathematical function (<b>16</b>). A successive memory block is retrieved starting at the memory address to which the generated number was mapped (<b>18</b>).</p>
<p id="p-0011" num="0010">The successive data block retrieved by step <b>18</b> is tested for satisfaction of at least one criterion for the suitability of the seed (<b>20</b>), and if the at least one criterion is not satisfied, steps <b>14</b>, <b>16</b>, <b>18</b>, and <b>20</b> are repeated until the at least one criterion is satisfied. In embodiments of the invention in which step <b>20</b> tests for satisfaction of more than one criterion, the testing may be satisfied if one, some, or all of the criteria are satisfied, depending on the application in which the embodiments are being used. Use of the phrase “at least one criterion” is not intended to limit embodiments of the invention to satisfaction of only one of a plurality of criteria when a plurality of criteria are employed.</p>
<p id="p-0012" num="0011">When the at least one criterion is satisfied, the successive memory block and the seed are combined, and the combination becomes the resulting seed of the random number generator (<b>22</b>). The combination of the successive memory block and the seed may be accomplished by hashing the successive memory block and the seed but is not limited to that method.</p>
<p id="p-0013" num="0012">In an embodiment of the invention, the mathematical function of step <b>16</b> is:</p>
<p id="p-0014" num="0013">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="28pt" align="left"/>
<colspec colname="1" colwidth="84pt" align="left"/>
<colspec colname="2" colwidth="105pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>f(x) = x (mod m) + b</entry>
<entry>for x &lt; b;</entry>
</row>
<row>
<entry/>
<entry>f(x) = x</entry>
<entry>for b ≦ x ≦ b + m; and</entry>
</row>
<row>
<entry/>
<entry>f(x) = x (mod m) + b</entry>
<entry>for x &gt; b + m;</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
where x=retrieved number generated by random number generator; b=base memory address; and m=memory size. The base memory address is the address at which the memory available to this embodiment of the invention begins, and the memory size is the size of that available memory.
</p>
<p id="p-0015" num="0014">In an embodiment of the invention, the at least one criterion of step <b>20</b> includes an absence of a string of identical bits in said successive data block longer than a specified number of bits. In an embodiment of the invention, that number may the equal to the number of bits in the successive data block.</p>
<p id="p-0016" num="0015">Turning now to <figref idref="DRAWINGS">FIG. 2</figref>, showing another embodiment of the invention, steps <b>10</b>, <b>12</b>, <b>14</b>, <b>16</b>, <b>18</b>, <b>20</b>, and <b>22</b> are as described in connection with <figref idref="DRAWINGS">FIG. 1</figref>. The successive data block retrieved from memory in step <b>18</b> is tested for satisfaction of one or more second criteria (<b>20</b>). If the at least one criterion is not satisfied, a determination is made of the number of times steps <b>14</b>, <b>16</b>, <b>18</b>, and <b>20</b> have been repeated due to failure to satisfy the at least one criterion (<b>24</b>). If the number of repetitions of steps <b>14</b>, <b>16</b>, <b>18</b>, and <b>20</b> is less than a specified number (e.g., two), steps <b>14</b>, <b>16</b>, <b>18</b>, and <b>20</b> are repeated. If step <b>20</b> determines that the at least one criterion has been satisfied before step <b>24</b> determines that the specified number of repetitions has been accomplished, the next step after step <b>20</b> is step <b>22</b>. If step <b>24</b> determines that the specified number of repetitions has been accomplished before step <b>20</b> determines that the at least one criterion has been satisfied, the next step after step <b>24</b> is step <b>22</b>.</p>
<p id="p-0017" num="0016">Turning now to <figref idref="DRAWINGS">FIG. 3</figref>, showing an embodiment of the invention, an apparatus includes a memory <b>26</b> and a processor <b>28</b>. The processor <b>28</b> is programmed to (a) retrieve a first data block from a memory; (b) initially seed the random number generator using the first data block as a seed; (c) retrieve a number generated by the random number generator; (d) map the number to a memory address in the memory using a mathematical function; (e) retrieve a successive data block from the memory address; and (f) successively seed the random number generator with a combination of the seed and the successive data block such that the combination of the seed and the successive data block becomes the resulting seed.</p>
<p id="p-0018" num="0017">In an embodiment of the invention, the processor <b>28</b> is further programmed to perform the further step, defined as (e′), which is to test, after each performance of (e), for satisfaction of at least one criterion and if the at least one criterion is not satisfied, repeat steps (c), (d), (e), and (e′).</p>
<p id="p-0019" num="0018">In an embodiment of the invention in which the processor <b>28</b> is programmed to perform step (e′) as described above, the processor <b>28</b> is further programmed to perform the further step, defined as (e″), which is to check, after each performance of (e′), the number of repetitions of steps (c), (d), (e), and (e′) due to failure to satisfy the at least one criterion and stop the repetitions when a specified number of the repetitions have been performed.</p>
<p id="p-0020" num="0019">While various embodiments of the present invention have been shown and described, it should be understood that other modifications, substitutions, and alternatives are apparent to one of ordinary skill in the art. Such modifications, substitutions, and alternatives can be made without departing from the spirit and scope of the invention, which should be determined from the appended claims.</p>
<p id="p-0021" num="0020">Various features of the present invention are set forth in the appended claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for seeding a random number generator, the method comprising the steps of:
<claim-text>(a) retrieving a first data block from a memory;</claim-text>
<claim-text>(b) initially seeding the random number generator using said first data block as a seed;</claim-text>
<claim-text>(c) retrieving a number generated by the random number generator;</claim-text>
<claim-text>(d) mapping said number to a memory address in said memory using a mathematical function;</claim-text>
<claim-text>(e) retrieving a successive data block from said memory address;</claim-text>
<claim-text>(f) successively seeding the random number generator with a combination of said seed and said successive data block such that said combination of said seed and said successive data block becomes a resulting seed of the random number generator; and</claim-text>
<claim-text>(e′) after each performance of (e), testing for satisfaction of at least one criterion and if said at least one criterion is not satisfied, repeating (c), (d), (e), and (e′),</claim-text>
<claim-text>wherein a criterion of said at least one criterion is an absence of a string of identical bits in said successive data block longer than a specified number of bits.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said specified number is equal to the number of bits in said successive data block.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method recited in <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising the further step of:
<claim-text>(e″) after each performance of (e′), checking the number of repetitions of (c), (d), (e), and (e′) due to failure to satisfy said at least one criterion and stopping said repetitions when a specified number of said repetitions have been performed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method recited in <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein said specified number of said repetitions is two.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. A method for seeding a random number generator, the method comprising the steps of:
<claim-text>(a) retrieving a first data block from a memory;</claim-text>
<claim-text>(b) initially seeding the random number generator using said first data block as a seed;</claim-text>
<claim-text>(c) retrieving a number generated by the random number generator;</claim-text>
<claim-text>(d) mapping said number to a memory address in said memory using a mathematical function;</claim-text>
<claim-text>(e) retrieving a successive data block from said memory address; and</claim-text>
<claim-text>(f) successively seeding the random number generator with a combination of said seed and said successive data block such that said combination of said seed and said successive data block becomes a resulting seed of the random number generator,</claim-text>
<claim-text>wherein said first data block includes an identifier unique to a specified computer device.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. A method for seeding a random number generator, the method comprising the steps of:
<claim-text>(a) retrieving a first data block from a memory;</claim-text>
<claim-text>(b) initially seeding the random number generator using said first data block as a seed;</claim-text>
<claim-text>(c) retrieving a number generated, by the random number generator;</claim-text>
<claim-text>(d) mapping said number to a memory addressing said memory using a mathematical function;</claim-text>
<claim-text>(e) retrieving a successive data block from said memory address; and</claim-text>
<claim-text>(f) successively seeding the random number generator with a combination of said seed and said successive data block such that said combination of said seed and said successive data block becomes a resulting seed of the random number generator,</claim-text>
<claim-text>wherein said mathematical function used in said mapping is:
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>f</i>(<i>x</i>)=<i>x</i>(mod <i>m</i>)+<i>b </i>for <i>x&lt;b;</i><?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>f</i>(<i>x</i>)=<i>x </i>for <i>b≦x≦b+m</i>; and<?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
<claim-text>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>f</i>(<i>x</i>)=<i>x</i>(mod <i>m</i>)+<i>b </i>for <i>x&gt;b+m;</i><?in-line-formulae description="In-line Formulae" end="tail"?>
</claim-text>
</claim-text>
<claim-text>wherein f(x)=said memory address to which said generated number is mapped;</claim-text>
<claim-text>x=retrieved number generated by random number generator;</claim-text>
<claim-text>b=base memory address; and</claim-text>
<claim-text>m=memory size.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method recited in <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein said first data block includes previously saved data.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method recited in <claim-ref idref="CLM-00006">claim 6</claim-ref>, wherein said first data block includes an identifier unique to a specified computer device.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A method for seeding a random number generator, the method comprising the steps of:
<claim-text>(a) retrieving a first data block from a memory;</claim-text>
<claim-text>(b) initially seeding the random number generator using said first data block as a seed;</claim-text>
<claim-text>(c) retrieving a number generated by the random number generator;</claim-text>
<claim-text>(d) mapping said number to a memory address in said memory using a mathematical function;</claim-text>
<claim-text>(e) retrieving a successive data block from said memory address; and</claim-text>
<claim-text>(f) successively seeding the random number generator with a combination of said seed and said successive data block such that said, combination of said seed and said successive data block becomes a resulting seed of the random number generator,</claim-text>
<claim-text>wherein said combination of said seed and said successive data block is accomplished by hashing said seed and said successive data block.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. An apparatus for seeding a random number generator, the apparatus comprising:
<claim-text>a memory; and</claim-text>
<claim-text>a processor operatively coupled to said memory, wherein said processor is programmed to:</claim-text>
<claim-text>(a) retrieve a first data block from said memory;</claim-text>
<claim-text>(b) initially seed the random number generator using said first data block as a seed;</claim-text>
<claim-text>(c) retrieve a number generated by the random number generator;</claim-text>
<claim-text>(d) map said number to a memory address in said memory using a mathematical function;</claim-text>
<claim-text>(e) retrieve a successive data block from said memory address;</claim-text>
<claim-text>(f) successively seed the random number generator with a combination of said seed and said successive data block such that said combination of said seed and said successive data block becomes a resulting seed of the random number generator; and</claim-text>
<claim-text>(e′) after each performance of (e), test for satisfaction of at least one criterion and if said at least one criterion is not satisfied, repeat (c), (d), (e), and (e′),</claim-text>
<claim-text>wherein a criterion of said at least one criterion is an absence of a string of identical bits in said successive data block longer than a specified number of bits.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The apparatus recited in <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein said processor is further programmed to:
<claim-text>(e″) after each performance of (e′), check the number of repetitions of (c), (d), (e), and (e′) due to failure to satisfy said at least one criterion and stop said repetitions when a specified number of said repetitions have been performed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The apparatus recited in <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein said first data block includes an identifier unique to a specified computer device.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The apparatus recited in <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein said first data block includes previously saved data.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The apparatus recited in <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein said combination of said seed and said successive data block is accomplished by hashing said seed and said successive data block.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. An apparatus for seeding a random number generator, the apparatus comprising:
<claim-text>(a) means for retrieving a first data block from a memory;</claim-text>
<claim-text>(b) means for initially seeding the random number generator using said first data block as a seed;</claim-text>
<claim-text>(c) means far retrieving a number generated by the random number generator;</claim-text>
<claim-text>(d) means for mapping said number to a memory address in said memory using a mathematical function;</claim-text>
<claim-text>(e) means for retrieving a successive data block from said memory address;</claim-text>
<claim-text>(f) means for successively seeding the random number generator with a combination of said seed and said successive data block such that said combination of said seed and said successive data block becomes a resulting seed of the random number generator; and</claim-text>
<claim-text>(e′) means for testing for satisfaction of at least one criterion after each use of said means for said retrieving said successive data block of (e), and if said at least one criterion is not satisfied, repeating (c), (d), (e), and (e′),</claim-text>
<claim-text>wherein a criterion of said at least one criterion is an absence of a string of identical bits in said successive data block longer than a specified number of bits.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The apparatus recited in <claim-ref idref="CLM-00015">claim 15</claim-ref>, further comprising:
<claim-text>(e″) means for checking the number of repetitions of (c), (d), (e), and (e″) due to failure to satisfy said at least one criterion after each use of said means for said testing and repeating of (e′), and stopping said repeating when a specified number of said repetitions have been performed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The apparatus recited in <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein said first data block includes an identifier unique to a specified computer device.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The apparatus recited in <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein said first data block includes previously saved data.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The apparatus recited in <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein said combination of said seed and said successive data block is accomplished by hashing said seed and said successive data block.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. A computer-readable medium having computer-readable instructions for performing a method of seeding a random number generator, the method comprising the steps of:
<claim-text>(a) retrieving a first data block from a memory;</claim-text>
<claim-text>(b) initially seeding the random number generator using said first data block as a seed;</claim-text>
<claim-text>(c) retrieving a number generated by the random number generator;</claim-text>
<claim-text>(d) mapping said number to a memory address in said memory using a mathematical function;</claim-text>
<claim-text>(e) retrieving a successive data block from said memory address;</claim-text>
<claim-text>(f) successively seeding the random number generator with a combination of said seed and said successive data block such that said combination of said seed and said successive data block becomes a resulting seed of the random number generator; and</claim-text>
<claim-text>(e′) after each performance of (e), testing for satisfaction of at least one criterion and if said at least one criterion is not satisfied, repeating (c), (d), (e), and (e′),</claim-text>
<claim-text>wherein a criterion of said at least one criterion is an absence of a string of identical bits in said successive data block longer than a specified number of bits.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The computer-readable medium recited in <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein said method further comprises the further step of:
<claim-text>(e″) after each performance of (e′), checking the number of repetitions of (c), (d), (e), and (e′) due to failure to satisfy said at least one criterion and stopping said repetitions when a specified number of said repetitions have been performed.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The computer-readable medium recited in <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein said first data block includes an identifier unique to a specified computer device.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The computer-readable medium recited in <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein said first data block includes previously saved data.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The computer-readable medium recited in <claim-ref idref="CLM-00020">claim 20</claim-ref>, wherein said combination of said seed and said successive data block is accomplished by hashing said seed and said successive data block.</claim-text>
</claim>
</claims>
</us-patent-grant>
