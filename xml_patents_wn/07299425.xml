<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299425-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299425</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10606868</doc-number>
<date>20030626</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>129</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>17</main-group>
<subgroup>50</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>716  1</main-classification>
<further-classification>716  2</further-classification>
</classification-national>
<invention-title id="d0e53">Method and apparatus to create bypass logic in a digital circuit design</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5301153</doc-number>
<kind>A</kind>
<name>Johnson</name>
<date>19940400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>365200</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6212629</doc-number>
<kind>B1</kind>
<name>McFarland et al.</name>
<date>20010400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>712241</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6219819</doc-number>
<kind>B1</kind>
<name>Vashi et al.</name>
<date>20010400</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>716  3</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6625788</doc-number>
<kind>B1</kind>
<name>Vashi et al.</name>
<date>20030900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>716  6</main-classification></classification-national>
</citation>
</references-cited>
<number-of-claims>17</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>716  1-  3</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>7</number-of-drawing-sheets>
<number-of-figures>16</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20040268273</doc-number>
<kind>A1</kind>
<date>20041230</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Grundmann</last-name>
<first-name>William J.</first-name>
<address>
<city>Westborough</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Schwegman, Lundberg &amp; Woessner, P.A.</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Intel Corporation</orgname>
<role>02</role>
<address>
<city>Santa Clara</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Whitmore</last-name>
<first-name>Stacy</first-name>
<department>2825</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method and apparatus to create bypass logic in a digital circuit design comprising coupling a first latency delay unit to a data input of the conditional state element (e.g., a flip-flop). Coupling a second latency delay unit to an enable input of the conditional state element. Coupling a first input of a multiplexer to an output of the conditional state element. Coupling a second input of the multiplexer to the data input of the conditional state element; and coupling a select line of the multiplexer to the enable input of the conditional state element to form a logically redundant element. Replacing the conditional state element in a feedback loop of a finite state machine with the logically redundant element and manipulating latency delay units to create bypass logic in the digital circuit design.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="126.32mm" wi="126.32mm" file="US07299425-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="235.97mm" wi="161.71mm" orientation="landscape" file="US07299425-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="226.23mm" wi="119.04mm" orientation="landscape" file="US07299425-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="241.98mm" wi="127.68mm" orientation="landscape" file="US07299425-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="242.06mm" wi="186.77mm" orientation="landscape" file="US07299425-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="139.36mm" wi="124.97mm" orientation="landscape" file="US07299425-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="164.68mm" wi="170.26mm" orientation="landscape" file="US07299425-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="247.73mm" wi="171.20mm" orientation="landscape" file="US07299425-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND</heading>
<p id="p-0002" num="0001">1. Field of the Invention</p>
<p id="p-0003" num="0002">The present invention is related to the field of circuit design. In particular, the present invention is related to method and apparatus to create bypass logic in a digital circuit design.</p>
<p id="p-0004" num="0003">2. Description of the Related Art</p>
<p id="p-0005" num="0004">The use of pipeline stages in microprocessor design is well known by one having ordinary skill in the art. Pipelining provides for the subdivision of circuit delays across multiple cycles. Pipelines stages have state or memory circuit elements that hold data from a previous pipeline stage's output and makes that data available for input of the next pipeline stage's logical operations. These state or memory circuit elements are constructed many different ways, but are sequentially clocked either unconditionally or conditionally. Some of the conditionally clocked memory elements require multiple pipeline stages to just implement their function. Sometimes data needed by a logical operation in one pipeline stage of logic may be dependent upon the results of a conditional memory pipeline element in another stage of the same or different pipeline. Modern microprocessors provide bypass logic to enable the data to be obtained directly from another pipeline stage, rather than waiting the full pipeline time for it to be written to the final conditional memory element (destination register) and then obtaining the data. Thus, bypass logic bypasses the waiting of the data to actually get to the destination register and the reading of the data from the destination register, and therefore decreases the amount of time for the operation and increases a microprocessor's throughput.</p>
<p id="p-0006" num="0005">Bypass logic is used to keep a finite-state-machine's (FSM) total latency loop the same as originally described even though the implementation of some of the latencies within the loop take more cycles. These additional latencies are used to ease the implementation of constructing those circuits. Implementation of bypass logic is only useful for design consideration whenever the pipeline stage is conditionally updated or clocked and when the delay of the function is longer than the delay of an implemented logical multiplexer. These conditional pipeline stages typically are register files or other deterministic memory elements (registers). A simple but valid common abstraction of all of these elements may be a common conditionally enabled flip-flop.</p>
<p id="p-0007" num="0006">Microprocessor designers create logical models, using high-level logic descriptions, to represent the design's behavior. These models are used for the logical validation of the whole design and by the circuit implementation of the microprocessor to constructs the completed final silicon. Implementation diverges from the high-level model details as long as CAD technologies can prove behavioral equivalence. In order to incorporate a bypass logic circuit in a circuit's design, conventionally, the design's high-level logic description includes detailed instructions for implementing the bypass logic circuitry. This is necessary because the methods and computer aided design (CAD) tools do not guarantee proofs for an implementation using a bypass logic circuit without a detailed description of the logic bypass circuit also in the high-level model. Even with a detailed description, the bypass logic may be implemented in other than the optimum location in the circuit's design, and may hinder the circuit's portability and scalability.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0002" level="1">BRIEF SUMMARY OF THE DRAWINGS</heading>
<p id="p-0008" num="0007">Example embodiments of the present invention are illustrated in the accompanying drawings. The accompanying drawings, however, do not limit the scope of the present invention. Similar references in the drawings indicate similar elements.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 1A-1E</figref> illustrates a transformation of a conditional state element to a logically redundant element according to one embodiment of the invention.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 2A-2B</figref> illustrates a finite state machine transformed using the logically redundant element of <figref idref="DRAWINGS">FIG. 1E</figref> according to one embodiment of the invention.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 3A-3B</figref> illustrates the finite state machine of <figref idref="DRAWINGS">FIG. 2A</figref> incorporating one pipeline stage according to one embodiment of the invention.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 4A-4E</figref> illustrates the finite state machine of <figref idref="DRAWINGS">FIG. 3B</figref> incorporating a second pipeline logic stage according to one embodiment of the invention.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 5</figref> illustrates a flow diagram to create bypass logic in a digital circuit design according to one embodiment of the invention.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an apparatus used to create bypass logic in a digital circuit design according to one embodiment of the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0003" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0015" num="0014">Described is a method and apparatus to create bypass logic in a digital circuit design. The method and apparatus comprises coupling a first latency delay unit to a data input of a conditional state element (e.g., a flip-flop, a register file, a deterministic memory etc.). Coupling a second latency delay unit to an enable input of the conditional state element. Coupling a first input of a multiplexer to an output of the conditional state element. Coupling a second input of the multiplexer to the data input of the conditional state element; and coupling a select line of the multiplexer to the enable input of the conditional state element to form a logically redundant element. The method further comprises replacing the conditional state element in a feedback loop of a finite state machine with the logically redundant element. The finite state machine comprises an F function and a G function, coupled to the logically redundant element. Replacing the conditional state element in the finite state machine with the logically redundant element comprises coupling the first latency delay unit to an output of the F function. Coupling the second latency delay unit to an output of the G function; and coupling the multiplexer output to an input of the F function, and to an input of the G function.</p>
<p id="p-0016" num="0015">References in the specification to “one embodiment”, “an embodiment”, “an example embodiment”, etc., indicate that the embodiment described may include a particular feature, structure, or characteristic, but every embodiment may not necessarily include the particular feature, structure, or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. Further, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one of ordinary skill in the art to effect such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described. Parts of the description are presented using terminology commonly employed by those of ordinary skill in the art to convey the substance of their work to others of ordinary skill in the art.</p>
<p id="p-0017" num="0016">In the following description and claims, the terms “coupled” and “connected”, along with derivatives such as “communicatively coupled” may be used. It should be understood that these terms are not intended as synonyms for each other. Rather, in particular embodiments, “connected” may be used to indicate that two or more elements are in direct physical or electrical contact with each other. “Coupled” may mean that two or more elements are in direct physical or electrical contact. However, “coupled” may also mean that two or more elements are not in direct physical contact with each other, but still co-operate or interact with each other.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 1A-1E</figref> illustrates a transformation of a conditional state element to a logically redundant element according to one embodiment of the invention. In order to create bypass logic in a digital circuit design, a conditional state element e.g., a flip-flop, a latch, a register file, a cache memory cell etc. is identified and transformed into a logically redundant element as illustrated in <figref idref="DRAWINGS">FIGS. 1A-1E</figref>. <figref idref="DRAWINGS">FIG. 1A</figref> illustrates a D-type flip-flop <b>100</b> having a D input, enable input (EN), a clock input, and a Q output.</p>
<p id="p-0019" num="0018">As <figref idref="DRAWINGS">FIG. 1B</figref> illustrates, the enabled D flip-flop <b>100</b> is replaced by logically equivalent elements comprising a multiplexer <b>110</b> coupled to a latency delay unit <b>105</b>. A latency delay unit is a mathematical entity, well known by one having ordinary skill in the art, which may be manipulated and transformed into a latency delay unit having other latency delays using certain rules. The resulting latency delay unit may have latency delays of any numerical value. Referring to <figref idref="DRAWINGS">FIG. 1B</figref>, the output of multiplexer <b>110</b> is coupled to the input of latency delay unit <b>105</b>, and the output of the latency delay unit <b>105</b> is coupled to the 0 input of the multiplexer <b>110</b>. The output of the latency delay unit <b>105</b> corresponds with the Q output of flip-flop <b>100</b>. The 1 input of the multiplexer <b>110</b> corresponds with the D input of flip-flop <b>100</b>, and the select input of the multiplexer <b>110</b> corresponds with the EN input of flip-flop <b>100</b>.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 1C</figref> comprises coupling a second multiplexer <b>120</b>, with a corresponding second latency delay unit <b>125</b>, to multiplexer <b>110</b>. In particular, as illustrated in <figref idref="DRAWINGS">FIG. 1C</figref> the output of multiplexer <b>120</b> is coupled to the input of a second latency delay unit <b>125</b>. The EN input of multiplexer <b>120</b> is coupled to the EN input of multiplexer <b>110</b>. The 0 input of multiplexer <b>120</b> is coupled to the 0 input of multiplexer <b>110</b> and to the output of the first latency delay unit <b>105</b>. The 1 input of multiplexer <b>120</b> is coupled to the 1 input of multiplexer <b>110</b>, and to a line representing the D input of flip-flop <b>100</b>. One having ordinary skill in the art will appreciate that the output Q of flip-flop <b>100</b> is the output of the second latency delay unit <b>125</b>. <figref idref="DRAWINGS">FIG. 1B</figref> and <figref idref="DRAWINGS">FIG. 1C</figref> are logically equivalent.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 1D</figref> illustrates moving the latency delay unit <b>125</b> of <figref idref="DRAWINGS">FIG. 1C</figref> from the output of multiplexer <b>120</b> to the 1 input of multiplexers <b>110</b> and <b>120</b>. The movement of the latency delay unit <b>125</b> from the output of multiplexer <b>120</b> causes a latency delay unit <b>130</b> to be added to the select inputs (EN) of the multiplexers <b>110</b> and <b>120</b>. In one embodiment of the invention this operation is called the retime backward operation, well known to one having ordinary skill in the art. <figref idref="DRAWINGS">FIG. 1D</figref> is logically equivalent to <figref idref="DRAWINGS">FIG. 1C</figref>.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 1E</figref> illustrates replacing multiplexer <b>110</b> and the latency delay unit <b>105</b> coupled to the output of multiplexer <b>110</b> with flip-flop <b>110</b> to form logically redundant element <b>150</b>. As illustrated in <figref idref="DRAWINGS">FIG. 1E</figref> logically redundant element <b>150</b> comprises coupling latency delay unit <b>125</b> to the data input (D) of flip-flop <b>110</b>. Coupling the second latency delay unit <b>130</b> to an enable input (EN) of the flip-flop <b>110</b>. Coupling the 0 input of multiplexer <b>120</b> to the output Q of the flip-flop <b>110</b>. Coupling the 1 input of the multiplexer <b>120</b> to the D input of the flip-flop <b>110</b> and to the output of the latency delay unit <b>125</b>, and coupling the select line of the multiplexer <b>120</b> to the enable input (EN) of the flip-flop <b>110</b>. The coupling of multiplexer <b>110</b> and latency element <b>105</b> comprise the circuit of <figref idref="DRAWINGS">FIG. 1B</figref> which is equivalent to the flip-flop <b>100</b> of <figref idref="DRAWINGS">FIG. 1A</figref>.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 2A-2B</figref> illustrates a finite state machine transformed using the logically redundant element of <figref idref="DRAWINGS">FIG. 1E</figref> according to one embodiment of the invention. As <figref idref="DRAWINGS">FIG. 2A</figref> illustrates, the finite state machine comprises two functions F and G coupled to flip-flop <b>215</b>, said flip-flop <b>215</b> in the feedback loop of the F function. The F function determines the value to write to flip-flop <b>215</b>. The G function determines when to write the value from the F function to the flip-flop <b>215</b>. The output of the F function is coupled to the D input of flip-flop <b>215</b> and to the input of latency delay unit <b>220</b> having a latency delay of K units. The output of the G function is coupled to the EN input of flip-flop <b>215</b>. The output Q of flip-flop <b>215</b> is coupled to an input of the G function and to an input of the F function.</p>
<p id="p-0024" num="0023">In order to create bypass logic in the finite state machine, the flip-flop <b>215</b> is replaced by the logically redundant element <b>150</b> of <figref idref="DRAWINGS">FIG. 1E</figref> as illustrated in <figref idref="DRAWINGS">FIG. 2B</figref>. In particular, the output from the F function is coupled to a first latency delay unit <b>225</b> (having a one-unit delay) and to latency delay unit <b>220</b>. The output from the G function is coupled to latency delay unit <b>230</b> (having a one-unit delay). The outputs from latency delay units <b>225</b> and <b>230</b> are coupled to the D input and to the EN input of flip-flop <b>240</b> respectively. The Q output of the flip-flop <b>240</b> is coupled to the 0 input of multiplexer <b>235</b>, and the 1 input of multiplexer <b>235</b> is coupled to the D input of flip-flop <b>240</b>. The output of the multiplexer <b>235</b> is coupled to an input of the G function and to an input of the F function as illustrated. Thus, flip-flop <b>240</b>, latency delay units <b>225</b> and <b>230</b>, and multiplexer <b>235</b> comprise the logically redundant element <b>150</b> described with respect to <figref idref="DRAWINGS">FIG. 1E</figref>.</p>
<p id="p-0025" num="0024">Given the finite state machine of <figref idref="DRAWINGS">FIG. 2A</figref>, the data at the output of F at time t, F(t), is accessible at the input of F after a latency delay of 1 unit. Thus, the value F(t) is available at the input of F, if the flip-flop <b>215</b> is enabled, after (t−1) units of time. In order to add bypass logic, <figref idref="DRAWINGS">FIG. 2B</figref> is modified as illustrated in <figref idref="DRAWINGS">FIGS. 3A-3B</figref>.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 3A-B</figref> illustrates the finite state machine of <figref idref="DRAWINGS">FIG. 2A</figref> incorporating one pipeline stage according to one embodiment of the invention. As illustrated in <figref idref="DRAWINGS">FIG. 3A</figref>, incorporating one pipeline state implies that the data F(t) at the output of function F of the finite state machine, will be available at the output of the flip-flop <b>340</b> after (t−2) units of time. However, because of the bypass logic of the one pipeline stage, the data is accessible at the input of function F after (t−1) units of time if flip-flop <b>340</b> is enabled. Thus, the flip-flop <b>340</b> is bypassed to maintain correct timing behavior.</p>
<p id="p-0027" num="0026">To achieve this, the junction transformation rule, well known by one having ordinary skill in the art, is utilized. <figref idref="DRAWINGS">FIG. 3A</figref> represents the finite state machine of <figref idref="DRAWINGS">FIG. 2A</figref> wherein the flip-flop <b>215</b> is replaced by the logically redundant element <b>150</b> of <figref idref="DRAWINGS">FIG. 1</figref>. In addition, <figref idref="DRAWINGS">FIG. 3A</figref> illustrates the application of the junction transformation rule. Thus, as indicated in <figref idref="DRAWINGS">FIG. 3A</figref>, a latency delay unit having a latency delay of −1 unit is added to the latency delay unit Δ<sub>k </sub>to form latency delay unit Δ<sub>k−1 </sub>having a latency delay of k−1 units. A latency delay unit having a latency delay of +1 unit and a latency delay unit having a latency delay of −1 unit are added to the output of the F function of the finite state machine, in the feedback loop between the F function and latency delay unit <b>325</b>. After adding the aforementioned latency delay units the latency delay units are eliminated by reduction as illustrated in <figref idref="DRAWINGS">FIG. 3B</figref>. Thus, as <figref idref="DRAWINGS">FIG. 3B</figref> illustrates, latency delay unit <b>325</b> is eliminated, since the latency delay unit having a latency delay of −1 unit cancels the latency delay unit <b>325</b> having a latency delay of +1 unit. A new latency delay unit <b>345</b> is added to the output of function F to represent the +1 latency delay unit added in the feedback loop.</p>
<p id="p-0028" num="0027">The modification of the circuit as illustrated in <figref idref="DRAWINGS">FIG. 3B</figref> allows the output of function F to be available at the input of function F after only t−1 units of time if the flip-flop <b>340</b> and hence the appropriate select line of multiplixer <b>335</b> is enabled. Thus, a simple substitution of the flip-flop in a finite state machine with the logically redundant element <b>150</b> described with respect to <figref idref="DRAWINGS">FIG. 1E</figref>, and a manipulation of delay elements as illustrated with respect to <figref idref="DRAWINGS">FIG. 3A-3B</figref> causes bypass logic to be automatically added to a digital logic design. In addition, the circuit with bypass logic is logically and temporally equivalent with the original digital logic circuit, eliminating the need to test the bypass circuit generated.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 4A-4E</figref> illustrates the finite state machine of <figref idref="DRAWINGS">FIG. 3B</figref> incorporating a second pipeline logic stage according to one embodiment of the invention. <figref idref="DRAWINGS">FIG. 4A</figref> illustrates the finite state machine of <figref idref="DRAWINGS">FIG. 3B</figref>, which incorporates one pipeline state. To add a second pipeline stage the flip-flop <b>440</b> of <figref idref="DRAWINGS">FIG. 4A</figref> is identified and is replaced by the logically redundant element <b>150</b> of <figref idref="DRAWINGS">FIG. 1E</figref>. <figref idref="DRAWINGS">FIG. 4B</figref> illustrates the flip-flop <b>440</b> of <figref idref="DRAWINGS">FIG. 4A</figref> replaced with the logically redundant element, said logically redundant element comprising flip-flop <b>460</b>, latency delay unit <b>446</b> and <b>447</b>, and multiplexer <b>448</b>. Next as <figref idref="DRAWINGS">FIG. 4C</figref> illustrates, a latency delay unit having a latency delay of −1 unit is added to the existing latency delay unit <b>420</b> having a latency delay of k−1 units. To compensate for the addition of the −1 latency delay unit to latency delay unit <b>420</b>, a latency delay unit having a latency delay of +1 unit is added to the branch comprising latency delay unit <b>445</b>. Furthermore, a latency delay unit with a latency delay of −1 unit is added to the branch comprising latency delay unit <b>446</b> as illustrated in <figref idref="DRAWINGS">FIG. 4C</figref> (i.e., to the branch comprising the data input of the flip-flop <b>460</b>).</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 4D</figref> illustrates reducing the latency delays. The latency delay units (<b>446</b>, and the −1 latency delay unit) on the branch comprising the D input of the flip-flop <b>460</b> are eliminated because the −1 latency delay unit cancels the existing latency delay unit <b>446</b> introduced by substituting flip-flop <b>440</b> with the logically redundant element. Due to the fork in the branch comprising the D input of the flip-flop <b>460</b>, the latency delay unit <b>452</b> having a latency delay of −1 unit is added to the branch comprising the input of multiplexer <b>435</b>.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 4E</figref> illustrates a further reduction in the latency delay units by eliminating latency delay unit <b>452</b> by moving the 1 input of multiplexer <b>435</b> to a node that is between latency delay units <b>445</b> and <b>451</b>, in accordance with the +1 latency rule well known by one having ordinary skill in the art. Thus, a two stage bypass logic has been automatically added to the one stage bypass logic circuit illustrated in <figref idref="DRAWINGS">FIG. 3B</figref>.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 5</figref> illustrates a flow diagram to create bypass logic in a digital circuit design according to one embodiment of the invention. As illustrated in flow diagram <b>500</b>, at <b>505</b> a conditional state element that may benefit from having a bypass logic circuit e.g., a flip-flop, a register file, a deterministic memory, etc., in the feedback loop of a finite state machine is found e.g., by computer aided design (CAD) software searching for the terminals comprising the flip-flop. At <b>510</b> the flip-flop is replaced with a logically redundant element <b>150</b> of <figref idref="DRAWINGS">FIG. 1E</figref>. At <b>515</b>, A latency delay unit having a latency delay of −1 unit is added to the latency delay unit coupled to the output of the finite state machine said latency delay unit not in the feedback loop of the finite state machine. At <b>520</b>, latency delay units having a +1 and a −1 latency delays are added between the output of the finite state machine and the data input of the flip-flop. At <b>525</b> the latency delay units are eliminated by reduction and/or rerouting of the 1 input of the multiplexer comprising the logically redundant element. For example, a latency delay unit having a +1 latency delay and a latency delay unit having a −1 latency delay cancel each other in a branch and may be eliminated. So also, rerouting the 1 input of the multiplexer comprising the logically redundant element as described with respect to <figref idref="DRAWINGS">FIG. 4E</figref> may eliminate a latency delay unit.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an apparatus used to create bypass logic in a digital circuit design according to one embodiment of the invention. In general, the computer system <b>600</b> may comprise a processing unit <b>602</b> communicatively coupled through a bus <b>601</b> to system memory <b>613</b>, mass storage devices <b>607</b>, Input devices <b>606</b>, display device <b>605</b> and network devices <b>608</b>.</p>
<p id="p-0034" num="0033">Bus <b>601</b> may be any of several types of bus structures including a memory bus, a peripheral bus, and a local bus using any of a variety of bus architectures. System memory <b>613</b> comprises a read only memory (ROM) <b>604</b> and random access memory (RAM) <b>603</b>. ROM <b>604</b> comprises basic input output system (BIOS) <b>616</b>. BIOS <b>616</b> contain the basic routines, e.g., start up routines, that facilitate the transfer of information between elements within computer system <b>600</b>. RAM <b>603</b> includes cache memory and comprises operating system <b>618</b>, application programs <b>620</b>, and program data <b>624</b>. Application programs <b>620</b> include the program code for implementing the method described with respect to <figref idref="DRAWINGS">FIGS. 1-5</figref> above. Program data <b>624</b> may include data generated by application programs <b>620</b>. Mass storage device <b>607</b> represents a persistent data storage device, such as a floppy disk drive, fixed disk drive (e.g., magnetic, optical, magneto-optical, or the like), or streaming tape drive. Mass storage device <b>607</b> may store application programs <b>628</b>, operating system <b>626</b> for computer system <b>600</b>, and program data <b>630</b>. Application programs <b>628</b> and program data <b>630</b> stored on mass storage devices <b>607</b> may include the application programs <b>620</b> and program data <b>624</b> stored in RAM <b>603</b>. One embodiment of the invention may be stored entirely as a software product on mass storage device <b>607</b>. Embodiments of the invention may be represented as a software product stored on a machine-readable medium (also referred to as a computer-accessible medium, a machine-accessible medium, or a processor-accessible medium). The machine-readable medium may be any type of magnetic, optical, or electrical storage medium including a diskette, CD-ROM, memory device (volatile or non-volatile), or similar storage mechanism. The machine-readable medium may contain various sets of instructions, code sequences, configuration information, or other data. Those of ordinary skill in the art will appreciate that other instructions and operations necessary to implement the described invention may also be stored on the machine-readable medium. One embodiment of the invention may be embedded in a hardware product, for example, in a printed circuit board, in a special purpose processor, or in a specifically programmed logic device communicatively coupled to bus <b>601</b>. Processing unit <b>602</b> may be any of a wide variety of general-purpose processors or microprocessors (such as the Pentium® processor family manufactured by Intel® Corporation), a special purpose processor, or a specifically programmed logic device. Processing unit <b>602</b> is operable to receive instructions which, when executed by the processing unit cause the processing unit to execute application programs <b>620</b>.</p>
<p id="p-0035" num="0034">Display device <b>605</b> is coupled to processing unit <b>602</b> through bus <b>601</b> and provides graphical output for computer system <b>600</b>. Input devices <b>606</b> such as a keyboard or mouse are coupled to bus <b>601</b> for communicating information and command selections to processing unit <b>602</b>. Other input devices may include a microphone, joystick, game pad, scanner, or the like. Also coupled to processing unit <b>602</b> through bus <b>601</b> is an input/output interface (not shown) which can be used to control and transfer data to electronic devices (printers, other computers, etc.) connected to computer system <b>600</b>. Computer system <b>600</b> includes network devices <b>608</b> for connecting computer system <b>600</b> to one or more remote devices (e.g., the receiving node) <b>612</b> via network <b>614</b>. Remote device <b>612</b> may be another personal computer, a server, a router, a network PC, a wireless device or other common network node and typically includes one or more of the elements described above with respect to computer system <b>600</b>. Network devices <b>608</b>, may include a network interface for computer system <b>600</b>, Ethernet devices, network adapters, phone jacks, modems, and satellite links. It will be apparent to one of ordinary skill in the art that other network devices may also be utilized.</p>
<p id="p-0036" num="0035">Thus, a method and apparatus to create bypass logic in a digital circuit design has been disclosed. While there has been illustrated and described what are presently considered to be example embodiments of the present invention, it will be understood by those skilled in the art that various other modifications may be made, and equivalents may be substituted, without departing from the true scope of the invention. Additionally, many modifications may be made to adapt a particular situation to the teachings of the present invention without departing from the central inventive concept described herein. Therefore, it is intended that the present invention not be limited to the particular embodiments disclosed, but that the invention include all embodiments falling within the scope of the appended claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method comprising:
<claim-text>adding a bypass logic into a digital circuit design, wherein the adding comprises transforming a conditional state element into a logically redundant element in the digital circuit design, the transforming comprising,
<claim-text>coupling a first latency delay unit to a data input of the conditional state element;</claim-text>
<claim-text>coupling a second latency delay unit to an enable input of the conditional state element;</claim-text>
<claim-text>coupling a first input of a multiplexer to an output of the conditional state element;</claim-text>
<claim-text>coupling a second input of the multiplexer to the data input of the conditional state element; and</claim-text>
<claim-text>coupling a select line of the multiplexer to the enable input of the conditional state element; and</claim-text>
</claim-text>
<claim-text>replacing the conditional state element in a finite state machine with the logically redundant element said finite state machine having an F function and a G function, coupled to the logically redundant element.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein coupling a first latency delay unit to a data input of the conditional state element comprises coupling a signal with a delay of one unit into the data input of the conditional state element.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein coupling a second latency delay unit to an enable input of the conditional state element comprises coupling a signal with a delay of one unit into the data input of the conditional state element.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein transforming a conditional state element, into a logically redundant element in a digital circuit design comprises transforming any one of a flip-flop, a register file, and a deterministic memory into a logically redundant element.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein replacing the conditional state element in a finite state machine with the logically redundant element comprises:
<claim-text>coupling the first latency delay unit to an output of the F function;</claim-text>
<claim-text>coupling the second latency delay unit to an output of the G function; and</claim-text>
<claim-text>coupling the multiplexer output to an input of the F function, and to an input of the G function.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref> further comprising:
<claim-text>adding a first −1 latency delay unit to a latency delay unit coupled to the output of the finite state machine, said latency delay unit not in a feedback loop of the finite state machine;</claim-text>
<claim-text>adding a +1 latency delay unit and a second −1 latency delay unit between the output of the finite state machine and the data input of the conditional state element;</claim-text>
<claim-text>eliminating latency delay units by any one of reduction of the latency delay units and rerouting of the first input of the multiplexer, to automatically create a bypass logic circuit to the finite state machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. An apparatus comprising:
<claim-text>a memory to store a circuit design; and</claim-text>
<claim-text>a processor coupled to the memory through a bus, wherein the processor is to add a bypass logic into the circuit design through a transformation of a conditional statement into a logically redundant element within the circuit design, the processor to perform the following, as part of the transformation identify a conditional state element;</claim-text>
<claim-text>couple a first latency delay unit to a data input of the conditional state element;</claim-text>
<claim-text>couple a second latency delay unit to an enable input of the conditional state element;</claim-text>
<claim-text>couple a first input of a multiplexer to an output of the conditional state element;</claim-text>
<claim-text>couple a second input of the multiplexer to the data input of the conditional state element;</claim-text>
<claim-text>couple a select line of the multiplexer to the enable input of the conditional state element; and</claim-text>
<claim-text>replace the conditional state element in a finite state machine said finite state machine having an F function and a G function coupled to the logically redundant element.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The apparatus of <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein the conditional state element further comprises at least one of a flip-flop, a register file, and a deterministic memory.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The apparatus of <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein the processor to couple a first latency delay unit to a data input of the conditional state element comprises the processor to couple a signal with a delay of one unit into the data input of the conditional state element.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The apparatus of <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein the processor to couple a second latency delay unit to an enable input of the conditional state element comprises the processor to couple a signal with a delay of one unit into the data input of the conditional state element.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The apparatus of <claim-ref idref="CLM-00007">claim 7</claim-ref> wherein the processor to replace the conditional state element in a finite state machine with the logically redundant element comprises the processor to:
<claim-text>couple the first latency delay unit to an output of the F function;</claim-text>
<claim-text>couple the second latency delay unit to an output of the G function; and</claim-text>
<claim-text>couple the multiplexer output to an input of the F function, and to an input of the G function.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The apparatus of <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising the processor to
<claim-text>add a first −1 latency delay unit to a latency delay unit coupled to the output of the finite state machine, said latency delay unit not in a feedback loop of the finite state machine;</claim-text>
<claim-text>add a +1 latency delay unit and a second −1 latency delay unit between the output of the finite state machine and the data input of the conditional state element;</claim-text>
<claim-text>eliminate latency delay units by any one of reduction of the latency delay units and rerouting of the first input of the multiplexer, to automatically create a bypass logic circuit to the finite state machine.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. An article of manufacture that provides instructions, which when executed by a machine, cause said machine to perform operations comprising:
<claim-text>adding a bypass logic into a digital circuit design, wherein adding comprises transforming a conditional state element into a logically redundant element in the digital circuit design, the transforming comprising,
<claim-text>identifying the conditional state element;</claim-text>
<claim-text>coupling a first latency delay unit to a data input of the conditional state element;</claim-text>
<claim-text>coupling a second latency delay unit to an enable input of the conditional state element;</claim-text>
<claim-text>coupling a first input of a multiplexer to an output of the conditional state element;</claim-text>
<claim-text>coupling a second input of the multiplexer to the data input of the conditional state element; and</claim-text>
<claim-text>coupling a select line of the multiplexer to the enable input of the conditional state element; and</claim-text>
</claim-text>
<claim-text>replacing the conditional state element in a finite state machine with the logically redundant element said finite state machine having an F function and a G function, coupled to the logically redundant element.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The article of manufacture of <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein said instructions for coupling a first latency delay unit to a data input of the conditional state element comprises further instructions for coupling a signal with a delay of one unit into the data input of the conditional state element.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The article of manufacture of <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein said instructions for coupling a second latency delay unit to an enable input of the conditional state element comprises further instructions for coupling a signal with a delay of one unit into the data input of the conditional state element.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The article of manufacture of <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein said instructions for replacing the conditional state element in a finite state machine with the logically redundant element comprises further instructions for:
<claim-text>coupling the first latency delay unit to an output of the F function;</claim-text>
<claim-text>coupling the second latency delay unit to an output of the G function; and</claim-text>
<claim-text>coupling the multiplexer output to an input of the F function, and to an input of the G function.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The article of manufacture of <claim-ref idref="CLM-00016">claim 16</claim-ref> comprising further instructions for
<claim-text>adding a first −1 latency delay unit to a latency delay unit coupled to the output of the finite state machine, said latency delay unit not in a feedback loop of the finite state machine;</claim-text>
<claim-text>adding a +1 latency delay unit and a second −1 latency delay unit between the output of the finite state machine and the data input of the conditional state element;</claim-text>
<claim-text>eliminating latency delay units by any one of reduction of the latency delay units and rerouting of the first input of the multiplexer, to automatically create a bypass logic circuit to the finite state machine.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
