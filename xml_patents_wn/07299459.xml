<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299459-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299459</doc-number>
<kind>B1</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>09752541</doc-number>
<date>20001229</date>
</document-id>
</application-reference>
<us-application-series-code>09</us-application-series-code>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>9</main-group>
<subgroup>45</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>7</main-group>
<subgroup>60</subgroup>
<symbol-position>L</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>717137</main-classification>
<further-classification>703  2</further-classification>
</classification-national>
<invention-title id="d0e43">Parser for signomial and geometric programs</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4827428</doc-number>
<kind>A</kind>
<name>Dunlop et al.</name>
<date>19890500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5055716</doc-number>
<kind>A</kind>
<name>El Gamel</name>
<date>19911000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5289021</doc-number>
<kind>A</kind>
<name>El Gamel</name>
<date>19940200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5402358</doc-number>
<kind>A</kind>
<name>Smith et al.</name>
<date>19950300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5633807</doc-number>
<kind>A</kind>
<name>Fishburn et al.</name>
<date>19970500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5754826</doc-number>
<kind>A</kind>
<name>Gamal et al.</name>
<date>19980500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>5973524</doc-number>
<kind>A</kind>
<name>Martin</name>
<date>19991000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>6002860</doc-number>
<kind>A</kind>
<name>Voinigescu et al.</name>
<date>19991200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>6269277</doc-number>
<kind>B1</kind>
<name>Hershenson</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>6311145</doc-number>
<kind>B1</kind>
<name>Hershenson et al.</name>
<date>20011000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>703  2</main-classification></classification-national>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>6311315</doc-number>
<kind>B1</kind>
<name>Tamaki</name>
<date>20011000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>6321367</doc-number>
<kind>B1</kind>
<name>Chun et al.</name>
<date>20011100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>6381563</doc-number>
<kind>B1</kind>
<name>O'Riordan et al.</name>
<date>20020400</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>6425111</doc-number>
<kind>B1</kind>
<name>del Mar Hershenson</name>
<date>20020700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>6532569</doc-number>
<kind>B1</kind>
<name>Christen et al.</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>6577992</doc-number>
<kind>B1</kind>
<name>Tcherniaev et al.</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>6581188</doc-number>
<kind>B1</kind>
<name>Hosomi et al.</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00018">
<document-id>
<country>GB</country>
<doc-number>2 131 228</doc-number>
<kind>A</kind>
<date>19840600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00019">
<othercit>Rajgopal et al., “Robustness of Posynomial Geometric Programming Optima”, Mathematical Programming, vol. 85, pp. 423-431, 1999.</othercit>
</nplcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00020">
<othercit>Rajgopal, “posy.for”, directory /dept/ie/GP at ftp.pitt.edu; Jul. 22, 1996.</othercit>
</nplcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00021">
<othercit>Rajgopal, “gpposy.for”, directory /dept/ie/GP at ftp.pitt.edu; Jul. 22, 1996.</othercit>
</nplcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00022">
<othercit>Dennis Bricker, “Signomial Geometric Programming”, University of Iowa, &lt;http://css.engineering.uiowa.edu/˜dbricker/Stacks<sub>—</sub>pdf8/Signomial<sub>—</sub>GP.pdf&gt;, Apr. 1999.</othercit>
</nplcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00023">
<othercit><i>AMPL: A Modeling Language for Mathematic Programming</i>, Robert Fourer, David M. Gay, and Brian W. Kernighan, Boyd &amp; Fraser Publishing Company, 1993 (351 pgs.).</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00024">
<othercit><i>GAMS, A User's Guide</i>, by: Anthony Brooke, David Kendrick, Alexander Meeraus, Ramesh Raman, Tutorial by: Richard E. Rosenthal, Dec. '98, GAMS Development Corporation, 1998 (262 pgs.).</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00025">
<othercit>Chapter 4, <i>Conveying Problem Structure from an Algebraic Modeling Language to Optimization Algorithyms</i>, Robert Fourer and David M. Gay, Northwestern Universit and; Bell Laboratories, (pg. 77-89); Computing Tools for Modeling, Optimization and Simulation: <i>Interfaces in Computer Science and Operations Research</i>, edited by Manuel Laguna, University of Colorado, Jose Luis Gonzalez Velarde, ITESM Campus Monterrey.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00026">
<othercit><i>An Infeasible Interior-point Algorithm for Solving Primal and Dual Geometric Programs</i>, K.O. Kortanek, Xiaojie Xu, Yinyu Ye, Mathematic Programming, A Publication of the Mathematic Programming Society, Series B, Interior Point Methods in Theory and Practice, edited by Kurt Anstreicher, vol. 76 (1997) No. 1-2 Jan. 1997 (pp. 155-181).</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00027">
<othercit>Chapter 4, <i>sdpsol: A Parser/Solver for Semidefinite Programs with Matrix Structure</i>, Shao-Po Wu and Stephen Boyd (pp. 79-91).</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00028">
<othercit>Mediero, F., et al., “A Vertically Integrated Tool For Automated Design Of Sigma Delta Modulators”, IEEE Journal of Solid-State Circuits, vol. 30., No. 7, Jul. 1, 1995, pp. 762-767.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00029">
<othercit>Von Kaenel, V., et al., “A 320MHz, 1.5mW at 1.36V CMOS PLL For Microprocessor Clock Generation”, IEEE Solid-State Circuits Conference, Nov. 9, 1996, Digest of Technical Papers, 42nd ISSCC96/ Session 8 / Digital Clock and Latches /Paper FA 8.2.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00030">
<othercit>Chan, et al., “Analysis of Linear Networks and Systems,” Addison-Wesley Publishing Company, 1972, pp. 23-25 and 46-57.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00031">
<othercit>Young, et al., “A PLL Clock Generator with 5 to 110 MHz of Lock Range for Microprocessor”, IEEE Journal of Solid-State Circuits, vol. 27, No. 11, Nov. 1992, pp. 1599-1607.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00032">
<othercit>NOVOF, et al., “Full Integrated CMOS Phase-Locked Loop with 15 to 240 MHz Locking Range and ±50 ps Jitter”, IEEE Journal of Solid-State Circuits, vol. 30., No. 11, Nov. 1995, pp. 1259-1266.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00033">
<othercit>Mohan, et al., “Simple Accurate Expressions for Planar Spiral Inductances”, IEEE Journal of Solid-State Circuits, vol. 34, No. 10, Oct. 1999, pp. 1419-1424.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00034">
<othercit>Hershenson, “CMOS Analog Circuit Design Via Geometric Programming”, A Dissertation Submitted to the Department of Electrical Engineering and the Committee on Graduate Studies of Stanford University, Nov. 1999, 241 pages.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00035">
<othercit>Hershenson, M., et al., “Optimization of Inductor Circuits via Geometric Programming”, pp. 994-998, Design Automation Conference, Jun. 21, 1999, Proceedings.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00036">
<othercit>Hershenson, M., et al., “Automated Design of Folded-Cascode Op-Amps with Sensitivity Analysis”, pp. 121-124, Electronics, Circuits and Systems, IEEE International Conference on LISBOA, Sep. 7-10, 1998.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00037">
<othercit>Gielen, G., et al., “An Analogue Module Generator For Mixed Analogue/Digital ASIC Design”, International Journal of Circuit Theory and Applications, vol. 23, pp. 269-283, 1995.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00038">
<othercit>Kortanek, K.O., et al., “An Infeasible Interior-Point Algorithm For Solving Primal And Dual Geometric Programs,” pp., 155-181, Mathematical Programming Society, Inc., 76:155-181, Jan. 1, 1995.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00039">
<othercit>Hershenson, M., et al., “GPCAD: A Tool for CMOS Op-Amp Synthesis” 8 pages, Proceedings of the IEEE/ACM International Conference on Computer Aided Design (ICCAD), pp. 296-303, Nov. 1998.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00040">
<othercit>Hershenson, M., et al., “Posynomial models for MOSFETs” 9 pages, Jul. 7, 1998.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00041">
<othercit>Chang, H, et al., “A Top-Down, Constraint-Driven Design Methodology for Analog Integrated Circuits” 6 pages, IEEE 1992 Custom Integrated Circuits Conference.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00042">
<othercit>Chavez, J., et al, “Analog Design Optimization: A Case Study” 3 pages, IEEE, Jan. 1993.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00043">
<othercit>Geilen, G., et al., “Analog Circuit Design Optimization Based on Symbolic Simulation and Simulated Annealing”, pp. 707-713, IEEE Journal of Solid-State Circuits, vol. 25, No. 3, Jun. 1990.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00044">
<othercit>Fishburn, J, et al., “TILOS: A Posynomial Programming Approach to Transistor Sizing” pp. 326-328, IEEE, 1985.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00045">
<othercit>Maulik, P., et al., “Integer Programming Based on Topology Selection of Cell-Level Analog Circuits”, 12 pages, IEEE Transactions On Computer-Aided Design Of Integrated Circuits And Systems, vol. 14, No. 4, Apr. 1995.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00046">
<othercit>Swings, K., et al., “An Intelligent Analog IC Design System Based On Manipulation Of Design Equations” pp. 8.6.1-8.6.4, IEEE 1990, Custom Integrated Circuits Conference.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00047">
<othercit>Nesterov, Y., et al., “Interior-Point Polynomial algorithms in Convex Programming” 8 pgs., 1994, Society for Industrial and Applied mathematics.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00048">
<othercit>Yang, H.Z., et al., “Simulated Annealing Algorithm with Multi-Molecule: an Approach to Analog Synthesis” pp. 571-575, IEEE, 1996.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00049">
<othercit>Wong, D.F., et al., “Simulated Annealing For VLSI Design” 6 pages, 1998, Kulwer Academic Publishers.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00050">
<othercit>Maulik, P., et al., “Sizing of Cell-Level Analog Circuits Using Constrained Optimization Techniques” pp. 233-241, IEEE Journal of Solid-State Circuits, vol. 28, No. 3, Mar. 1993.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00051">
<othercit>Ochotta, E, et al., “Synthesis of High -Performance Analog Circuits in ASTRX/OBLS” pp. 273-295, IEEE Transactions on Computer-Aided Design of Integrated Circuits And Systems, vol. 15, No. 3, Mar. 1996.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00052">
<othercit>Wright, S., “Primal-Dual Interior-Point Methods” pp. 1-3, http://www.siam.org/books/wright, Printed Aug. 19, 1998.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00053">
<othercit>Shyu, J., et al., “Optimization-Based Transistor Sizing” pp. 400-408, IEEE Journal of Solid-State Circuits, vol. 23, No. 2, Apr. 1998.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00054">
<othercit>Wright, S., “Primal-Dual Interior-Point Methods” 14 pages, 1997, Society for Industrial and Applied Mathematics.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00055">
<othercit>Van Laarhoven, P.J.M., et al., “Simulated Annealing: Theory and Applications” 26 pages, 1987, Kulwer Academic Publishers.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00056">
<othercit>Hershenson, M., et al., “CMOS Operational Amplifier Design and Optimization via Geometric Programming” pp. 1-4, Analog Integrated Circuits, Stanford University.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00057">
<othercit>Aguirre, M.A., et al., “Analog Design Optimization by means of a Tabu Search Approach” pp. 375-378.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00058">
<othercit>Medeiro, F., et al., “A Statistical Optimization-Based Approach for Automated Sizing of Analog Cells”, pp. 594-597, Dept. of Analog Circuit Design.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00059">
<othercit>Spatnekar, S., “Wire Sizing as a Convex Optimization Problem: Exploring the Area-Delay Tradeoff” 27 pages, Dept. of Electrical and Computer Engineering.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00060">
<othercit>Su, H., et al., “Statistical Constrained Optimization of Analog MOS Circuits Using Empirical Performance Models” pp. 133-136.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00061">
<othercit>Vassiliou, I., et al, “A Video Driver System Designed Using a Top-Down, Constraint-Driven Methodology” 6 pages.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00062">
<othercit>Sapatnekar, S, et al., “An Exact Solution to the Transistor Sizing Problem for CMOS Circuits Using Convex Optimization” 35 pages.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00063">
<othercit>Bowman, R., “An Imaging Model For Analog Macrocell Layout Generation”, IEEE International Symposium On Circuits And Systems, vol. 2, May 1989, pp. 1127-1130, XP010085007.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00064">
<othercit>Hunter, A., et al., “Combining Advanced Process Technology and Design for Systems Level Integration”, IEEE Proceedings, pp. 245-250, First International Symposium On Quality Electronic Design, Mar. 20, 2000.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00065">
<othercit>Gielen, G., et al. “An Analogue Module Generator For Mixed Analogue/Digital ASIC Design”, International Journal of Circuit Theory and Applications , vol. 23, pp. 269-283, 1995.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00066">
<othercit>Vandenberghe, L. et al., “Semidefinite Programming”, www.stanford.edu/˜boyd/reports/semidef<sub>—</sub>prog.pdf, 50 pgs. Siam Review, Mar. 1996.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>19</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>717112</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>717137-145</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>717151</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>717154</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>717156</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>716  1</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>716 16</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>716 18- 19</main-classification>
<additional-info>unstructured</additional-info>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>716  2</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>703  2</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>703 13</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>4</number-of-drawing-sheets>
<number-of-figures>4</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60177021</doc-number>
<kind>00</kind>
<date>20000119</date>
</document-id>
</us-provisional-application>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Boyd</last-name>
<first-name>Stephen</first-name>
<address>
<city>Stanford</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Shen</last-name>
<first-name>Xiling</first-name>
<address>
<city>Stanford</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="003" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Hershenson</last-name>
<first-name>Mar</first-name>
<address>
<city>Palo Alto</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="004" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Vandenberghe</last-name>
<first-name>Lieven</first-name>
<address>
<city>Santa Monica</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="005" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Crusius</last-name>
<first-name>Cesar</first-name>
<address>
<city>Palo Alto</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="006" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Colleran</last-name>
<first-name>Dave</first-name>
<address>
<city>San Mateo</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="007" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Mohan</last-name>
<first-name>Sunderarjan</first-name>
<address>
<city>Mountain View</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Blakely Sokoloff Taylor &amp; Zafman LLP</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Sabio Labs, Inc.</orgname>
<role>02</role>
<address>
<city>Mountain View</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Vu</last-name>
<first-name>Tuan A</first-name>
<department>2193</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A method and apparatus for parsing signomial and geometric programs, referred to herein as “the Parser”. Signomial and Geometric programming is a unique class of mathematical problems that is useful in the study of optimization problems. The Parser is a program designed to recognize and parse both signomial and geometric programs such that they may be accepted and solved by signomial and geometric program solvers. The Parser accepts an optimization problem from a user in the form of algebraic expressions. The Parser can then identify the problem as a signomial program and can further determine if it reduces to a geometric program. If either a signomial or geometric program exists, the Parser converts the algebraic expressions to a compact numeric format that can be accepted by a computer-aided solver. In the case of a geometric program, the solver may find a global solution to the optimization problem. However, in the case of signomial program, the solver may only find a local solution. The solution found by the solver is routed back to the Parser which reports it in a user-readable format.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="247.73mm" wi="189.82mm" file="US07299459-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="266.70mm" wi="185.84mm" file="US07299459-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="263.06mm" wi="191.60mm" file="US07299459-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="247.31mm" wi="189.15mm" file="US07299459-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="267.63mm" wi="190.67mm" file="US07299459-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<p id="p-0002" num="0001">Priority is claimed to Provisional Application Ser. No. 60/177,021, filed Jan. 19, 2000.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">The invention relates to the field of mathematical optimization, particularly the recognition and parsing of signomial and geometric programs such that they may be accepted and solved by signomial and geometric program solvers.</p>
<heading id="h-0002" level="1">BACKGROUND AND PRIOR ART</heading>
<p id="p-0004" num="0003">Geometric programming is a unique class of mathematical problems that is useful in the study of optimization problems. The theory of Geometric Programming was initially developed over three decades ago and culminated in a publication by R. J. Duffin, E. L. Peterson and C. M. Zener (Geometric Programming, John Wiley &amp; Sons, 1967). This publication describes a Geometric Program (GP) as an optimization problem having an objective function and a set of constraints which all must meet certain mathematical criteria. Perhaps the most important property of GPs is that they can be solved, with great efficiently, and globally, using recently developed interior-point methods.</p>
<p id="p-0005" num="0004">Since the impact of GPs can be seen in fields of engineering design, manufacturing, economics, statistics, and chemical equilibrium, it is apparent that the ability to solve GPs can have many benefits. A very simple GP can be solved by hand, but more complex GPs effectively must be solved with the aid of computer programs. For example, a very complex GP that may be used to describe a circuit design problem may have hundreds of optimization variables and thousands of constraints. The mathematical operations needed to solve a GP of this magnitude would be too cumbersome to perform by hand; therefore, optimization programs are needed to solve most GPs.</p>
<p id="p-0006" num="0005">Several optimization programs have been written that can solve GPs. For example, two popular GP solvers are MOSEK™ (product of EKA Consulting Aps, Vissenbjerg, Denmark) and COPL_GP (developed by members of the Computational Optimization Laboratory, Department of Management Science, University of Iowa). However, these programs require that GPs be parsed and represented in a particular compact numeric format that can be read and, if possible, globally solved by a solver program. Parsing a GP into this particular format typically requires extensive labor by one or more people. Moreover, if this compact numeric format were generated by hand, any changes to the functions, variables or coefficients contained in the GP would require extensive labor to modify the problem. Thus, it would be advantageous to have a parser program that can automatically convert a geometric program to this compact numeric format.</p>
<p id="p-0007" num="0006">Software tools exist that will parse and solve a wide variety of optimization problems. Two well known examples of such tools are the software packages AMPL™ (product of the Bell Laboratories Division of Lucent Technologies Inc., Murray Hill, N.J.) and GAMS™ (product of the GAMS Development Corporation, Washington, D.C.) which incorporate a variety of backend solvers. These packages allow a user to input one of a variety of optimization problems, in a standard algebraic format, and then will parse the problem into a format that is readable by a solver. However, these programs are very general in function and lack the sophistication required to identify and/or parse a GP. Some parsers have been developed to specifically parse specific classes of optimization problems. For example, a program called SDPSOL (developed by Dr. Stephen Boyd and members of his group at the Information Systems Laboratory, Department of Electrical Engineering, Stanford University) is a parser/solver program specifically designed for semidefinite programming. Similarly, there is a need for a parser program that can identify and parse a GP because current optimization software tools lack the ability to accomplish these tasks.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0008" num="0007">The invention may best be understood by referring to the following description and accompanying drawings that are used to illustrate embodiments of the invention. In the drawings:</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 1</figref> is a flow diagram showing the operations performed by certain exemplary embodiments of the invention.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 2A</figref> is a first half of a flow diagram showing a more detailed look at the operations performed in block <b>130</b> of <figref idref="DRAWINGS">FIG. 1</figref> according to one embodiment of the invention</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 2B</figref> is a second half of a flow diagram showing a more detailed look at the operations performed in block <b>130</b> of <figref idref="DRAWINGS">FIG. 1</figref> according to one embodiment of the invention.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 3</figref> is a flow diagram showing a more detailed look at the operations performed in block <b>130</b> of <figref idref="DRAWINGS">FIG. 1</figref> for an alternate embodiment of the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0013" num="0012">In the following description, numerous specific details are set forth to provide a thorough understanding of the invention. However, it is understood that the invention may be practiced without these specific details. In other instances, well-known mathematical concepts, structures and techniques have not been shown in detail in order not to obscure the invention.</p>
<heading id="h-0005" level="1">Background on Geometric Programming</heading>
<p id="p-0014" num="0013">In order to better understand the scope of the invention, it is important to introduce some mathematical terminology associated with geometric programming. For example, monomials, posynomials, and signomials are three types of mathematical functions found in geometric programs. These functions are defined below, beginning with a monomial.</p>
<p id="p-0015" num="0014">Let x<sub>1</sub>, . . . ,x<sub>2 </sub>denote n real positive variables. A function ƒ: R<sup>n </sup>R of the form
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>ƒ(<i>x</i>)=<i>cx</i><sub>1</sub><sup>a</sup><sup><sub2>2</sub2></sup><i>. . . x</i><sub>n</sub><sup>a</sup><sup><sub2>n</sub2></sup>,<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where c&gt;0 and a<sub>1 </sub>εR, is called a monomial function. Note that exponents can be any real numbers, including fractional or negative. We can refer to a monomial function more informally as just a monomial (of the variables x<sub>1</sub>, . . . , x<sub>n</sub>). We refer to the constant c as the coefficient of the monomial. As an example, 2.3x<sub>1</sub><sup>2</sup>x<sub>2</sub><sup>−0.15 </sup>is a monomial of the variables x<sub>1 </sub>and x<sub>2</sub>, with coefficient 2.3 and x<sub>2</sub>-exponent −0.15.
</p>
<p id="p-0016" num="0015">Any positive constant is a monomial, as is any variable. Monomials are closed under multiplication and division: if ƒ and g are both monomials then so are ƒ×g and ƒ/g. (This includes scaling by any positive constant.) A monomial raised to any power is also a monomial:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>ƒ(<i>x</i>)<sup>γ</sup>=(<i>cx</i><sub>1</sub><sup>a</sup><sup><sub2>1</sub2></sup><i>x</i><sub>2</sub><sup>a</sup><i> . . . x</i><sub>n</sub><sup>a</sup><sup><sub2>n</sub2></sup>)<sup>γ</sup><i>=c</i><sup>γ</sup><i>x</i><sub>1</sub><sup>γa</sup><sup><sub2>1</sub2></sup><i>x</i><sub>2</sub><sup>γa</sup><sup><sub2>2</sub2></sup><i> . . . x</i><sub>n</sub><sup>γa</sup><sup><sub2>n</sub2></sup>.<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
In addition, a sum of zero or more monomials, i.e., a function of the form
</p>
<p id="p-0017" num="0016">
<maths id="MATH-US-00001" num="00001">
<math overflow="scroll">
<mrow>
  <mrow>
    <mrow>
      <mi>f</mi>
      <mo>⁡</mo>
      <mrow>
        <mo>(</mo>
        <mi>x</mi>
        <mo>)</mo>
      </mrow>
    </mrow>
    <mo>=</mo>
    <mrow>
      <munder>
        <mover>
          <mo>∑</mo>
          <mi>K</mi>
        </mover>
        <mrow>
          <mi>k</mi>
          <mo>=</mo>
          <mn>1</mn>
        </mrow>
      </munder>
      <mo>⁢</mo>
      <mrow>
        <msub>
          <mi>c</mi>
          <mi>k</mi>
        </msub>
        <mo>⁢</mo>
        <msubsup>
          <mi>x</mi>
          <mn>1</mn>
          <mrow>
            <msub>
              <mi>a</mi>
              <mn>1</mn>
            </msub>
            <mo>⁢</mo>
            <mi>k</mi>
          </mrow>
        </msubsup>
        <mo>⁢</mo>
        <msubsup>
          <mi>x</mi>
          <mn>2</mn>
          <mrow>
            <msub>
              <mi>a</mi>
              <mn>2</mn>
            </msub>
            <mo>⁢</mo>
            <mi>k</mi>
          </mrow>
        </msubsup>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mi>…</mi>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>⁢</mo>
        <msubsup>
          <mi>x</mi>
          <mi>n</mi>
          <mrow>
            <msub>
              <mi>a</mi>
              <mi>n</mi>
            </msub>
            <mo>⁢</mo>
            <mi>k</mi>
          </mrow>
        </msubsup>
      </mrow>
    </mrow>
  </mrow>
  <mo>,</mo>
</mrow>
</math>
</maths>
<br/>
where c<sub>j</sub>≧0, is called a posynomial function or, more simply, aposynomial (with K terms).
</p>
<p id="p-0018" num="0017">Any monomial is also a posynomial. Posynomials are closed under addition, multiplication, and nonnegative scaling. Posynomials can be divided by monomials (with the result also a posynomial): If ƒ is a posynomial and g is a monomial, then ƒ/g is a posynomial. If γ is a nonnegative integer and ƒ is a posynomial, then ƒ always makes sense and is a posynomial (since it is the product of γ posynomials).</p>
<p id="p-0019" num="0018">A generalization of a posynomial will also be encountered, in which the coefficients are allowed to be negative. A signomial is a function with the same form as a posynomial, as defined above, where the coefficients c<sub>j </sub>are allowed to be negative. Signomials include as special cases posynomials (and therefore also monomials) and (positive or negative) constants. Signomials are closed under addition, subtraction, and multiplication. A signomial can be divided by a signomial that is nonzero and has only one term (i.e., a monomial, or the negative of a monomial). A signomial raised to any nonnegative integer power is also a signomial.</p>
<p id="p-0020" num="0019">Any signomial can be expressed as the difference of two posynomials, by collecting together the terms with positive coefficients, and also the terms with negative coefficients. We will use the notation ƒ<sub>+</sub> to denote the posynomial part of the signomial ƒ<sub>−</sub> and ƒ to denote the negative posynomial part of ƒ, so ƒ=ƒ<sub>+</sub>−ƒ<sub>−</sub> where ƒ<sub>+</sub> and ƒ<sub>−</sub> are both posynomials.</p>
<p id="p-0021" num="0020">The following are some examples of monomials, posynomials and signomials. Suppose x, y, and z are (positive) variables. The functions
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>2x, 0.23, 2z√{square root over (x/y)}, 3x<sup>2</sup>y<sup>−.12</sup>z<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
are monomials (hence, also posynomials and signomials). The functions
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>0, 0.23+ x/y, 2(1+xy)<sup>3</sup>, 2x+3y+2z<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
are posynomials (hence, also signomials) but not monomials. The functions
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>−2.2, −x/y, 2(1−xy)<sup>3</sup>, 2x+3y−2z<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
are signomials but not posynomials. Finally, the functions
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(x+y)<sup>−1</sup>, 2(1+xy)<sup>3.1</sup>, 1+log z<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
are not signomials.
</p>
<p id="p-0022" num="0021">Monomials, posynomials, and signomials are all functions that can be found in a geometric program (“GP”). A standard form GP is an optimization problem of the form show in Equation Set 1.</p>
<p id="p-0023" num="0022">
<maths id="MATH-US-00002" num="00002">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mtable>
        <mtr>
          <mtd>
            <mstyle>
              <mtext>minimize</mtext>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <msub>
                <mi>f</mi>
                <mn>0</mn>
              </msub>
              <mo>⁡</mo>
              <mrow>
                <mo>(</mo>
                <mi>x</mi>
                <mo>)</mo>
              </mrow>
            </mrow>
          </mtd>
          <mtd>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mstyle>
              <mtext>subject  to</mtext>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <mrow>
                <mrow>
                  <msub>
                    <mi>f</mi>
                    <mi>i</mi>
                  </msub>
                  <mo>⁡</mo>
                  <mrow>
                    <mo>(</mo>
                    <mi>x</mi>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>⁢</mo>
                <mstyle>
                  <mspace width="0.8em" height="0.8ex"/>
                </mstyle>
                <mo>⁢</mo>
                <mn>1</mn>
              </mrow>
              <mo>,</mo>
            </mrow>
          </mtd>
          <mtd>
            <mrow>
              <mrow>
                <mi>i</mi>
                <mo>=</mo>
                <mn>1</mn>
              </mrow>
              <mo>,</mo>
              <mi>…</mi>
              <mo>⁢</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>,</mo>
              <mi>m</mi>
              <mo>,</mo>
            </mrow>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <mrow>
                <mrow>
                  <msub>
                    <mi>h</mi>
                    <mi>i</mi>
                  </msub>
                  <mo>⁡</mo>
                  <mrow>
                    <mo>(</mo>
                    <mi>x</mi>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>=</mo>
                <mn>1</mn>
              </mrow>
              <mo>,</mo>
            </mrow>
          </mtd>
          <mtd>
            <mrow>
              <mrow>
                <mi>i</mi>
                <mo>=</mo>
                <mn>1</mn>
              </mrow>
              <mo>,</mo>
              <mi>…</mi>
              <mo>⁢</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>,</mo>
              <mi>p</mi>
            </mrow>
          </mtd>
        </mtr>
      </mtable>
    </mtd>
    <mtd>
      <mrow>
        <mi>Equation</mi>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mi>Set</mi>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.6em" height="0.6ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mn>1</mn>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
<br/>
In Equation Set 1 ƒ<sub>1 </sub>are posynomial functions, h<sub>1 </sub>are monomials, and x<sub>i </sub>are the optimization variables. (There is an implicit constraint that the variables are positive, i.e., x<sub>i</sub>&gt;0). In a GP in standard form the objective ƒ<sub>0 </sub>must be posynomial and it must be minimized; in addition, the equality constraints can only have the form of a monomial equal to one, and the inequality constraints can only have the form of a posynomial less than or equal to one. A solution to a GP is found when a minimum or maximum value of the objective is calculated from values of the optimization variables meeting the conditions set by the constraints. What makes the use of GPs powerful is that they can be solved globally, with great efficiency.
</p>
<p id="p-0024" num="0023">A generalization of a geometric program is a signomial program (“SGP”), which has the form shown in Equation Set 2.</p>
<p id="p-0025" num="0024">
<maths id="MATH-US-00003" num="00003">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mtable>
        <mtr>
          <mtd>
            <mstyle>
              <mtext>minimize</mtext>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <mi>f</mi>
              <mo>⁡</mo>
              <mrow>
                <mo>(</mo>
                <mi>x</mi>
                <mo>)</mo>
              </mrow>
            </mrow>
          </mtd>
          <mtd>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mstyle>
              <mtext>subject  to</mtext>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <mrow>
                <mrow>
                  <msub>
                    <mi>a</mi>
                    <mi>i</mi>
                  </msub>
                  <mo>⁡</mo>
                  <mrow>
                    <mo>(</mo>
                    <mi>x</mi>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>⁢</mo>
                <mstyle>
                  <mspace width="0.8em" height="0.8ex"/>
                </mstyle>
                <mo>⁢</mo>
                <mrow>
                  <msub>
                    <mi>b</mi>
                    <mi>i</mi>
                  </msub>
                  <mo>⁡</mo>
                  <mrow>
                    <mo>(</mo>
                    <mi>x</mi>
                    <mo>)</mo>
                  </mrow>
                </mrow>
              </mrow>
              <mo>,</mo>
            </mrow>
          </mtd>
          <mtd>
            <mrow>
              <mrow>
                <mi>i</mi>
                <mo>=</mo>
                <mn>1</mn>
              </mrow>
              <mo>,</mo>
              <mi>…</mi>
              <mo>⁢</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>,</mo>
              <mi>m</mi>
              <mo>,</mo>
            </mrow>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <mrow>
                <mrow>
                  <msub>
                    <mi>c</mi>
                    <mi>i</mi>
                  </msub>
                  <mo>⁡</mo>
                  <mrow>
                    <mo>(</mo>
                    <mi>x</mi>
                    <mo>)</mo>
                  </mrow>
                </mrow>
                <mo>=</mo>
                <mrow>
                  <msub>
                    <mi>d</mi>
                    <mi>i</mi>
                  </msub>
                  <mo>⁡</mo>
                  <mrow>
                    <mo>(</mo>
                    <mi>x</mi>
                    <mo>)</mo>
                  </mrow>
                </mrow>
              </mrow>
              <mo>,</mo>
            </mrow>
          </mtd>
          <mtd>
            <mrow>
              <mrow>
                <mi>i</mi>
                <mo>=</mo>
                <mn>1</mn>
              </mrow>
              <mo>,</mo>
              <mi>…</mi>
              <mo>⁢</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>,</mo>
              <mi>p</mi>
            </mrow>
          </mtd>
        </mtr>
      </mtable>
    </mtd>
    <mtd>
      <mrow>
        <mi>Equation</mi>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mi>Set</mi>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.6em" height="0.6ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mn>2</mn>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
<br/>
In Equation Set 2 a<sub>i</sub>, b<sub>1 </sub>and d<sub>i </sub>are all signomial functions, and x<sub>1 </sub>are the optimization variables. (As in GP, there is an implicit constraint that the variables are positive, i.e., x<sub>i</sub>&gt;0.) It is also required that the objective ƒ be a posynomial.
</p>
<p id="p-0026" num="0025">Note the differences between the standard form GP (Equation Set 1) and the SGP (Equation Set 2):
<ul id="ul0001" list-style="none">
    <li id="ul0001-0001" num="0000">
    <ul id="ul0002" list-style="none">
        <li id="ul0002-0001" num="0026">In an SGP, the constraint functions can be arbitrary signomials; in a GP they must be posynomials and monomials, respectively.</li>
        <li id="ul0002-0002" num="0027">In an SGP, the righthand side of the inequalities and equalities can also be signomials; in a GP, the righthand side of the inequalities and equalities is one.
<br/>
From a computational point of view, there is a significant difference between a GP and an SGP. While the globally optimal solution of a GP can always be found efficiently (e.g., an absolute maximum, only a locally optimal solution of an SGP can be computed efficiently. Although it is possible to compute the globally optimal solution of an SGP, this can require prohibitive computation, even for relatively small problems.
</li>
    </ul>
    </li>
</ul>
</p>
<p id="p-0027" num="0028">Furthermore, it can be seen that a standard form GP with posynomial objective function ƒ<sub>0</sub>, posynomial constraint functions ƒ<sub>1</sub>, . . . , ƒ<sub>m</sub>, and monomial equality functions g<sub>1</sub>, . . . , g<sub>p</sub>, is already in SGP form, with b<sub>i</sub>=c<sub>i</sub>=1 (which are signomials). Thus any standard form GP is also an SGP.</p>
<p id="p-0028" num="0029">For several purposes of the invention it is convenient to transform a SGP into a special form in which the left and right-hand sides of each constraint are posynomials. This can be done by first expressing the inequality a<sub>i</sub>≦b<sub>i </sub>in Equation Set 2 as a<sub>1</sub>−b<sub>i</sub>≦0, and then splitting it into its posynomial and negative posynomial parts, and expressing it as (a<sub>i</sub>−b<sub>i</sub>+≦(a<sub>i</sub>−b<sub>1</sub>)_. The same can be done to each equality constraint, and examples of splitting a signomial into its posynomial and negative posynomial are shown in Examples 1 and 2.</p>
<heading id="h-0006" level="1">Example 1</heading>
<p id="p-0029" num="0030">
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(2<i>x+</i>3<i>y</i>−2<i>z</i>)<sub>+</sub>=2<i>x+</i>3<i>y</i>, (2<i>x+</i>3<i>y−</i>2<i>z</i>)<sub>−</sub>=2<i>z </i><?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<heading id="h-0007" level="1">Example 2</heading>
<p id="p-0030" num="0031">
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(2(1−<i>xy</i>)<sup>3</sup>)<sub>+</sub>=2+6<i>x</i><sup>2</sup><i>y</i><sup>2</sup>, (2(1<i>−xy</i>)<sup>3</sup>)<sub>−</sub>=6<i>xy+</i>2<i>x</i><sup>3</sup><i>y</i><sup>3 </sup><?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0031" num="0032">Ultimately, the SGP in Equation Set 2 can be rewritten as shown in Equation Set 3 below.</p>
<p id="p-0032" num="0033">
<maths id="MATH-US-00004" num="00004">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mtable>
        <mtr>
          <mtd>
            <mstyle>
              <mtext>minimize</mtext>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <mi>f</mi>
              <mo>⁡</mo>
              <mrow>
                <mo>(</mo>
                <mi>x</mi>
                <mo>)</mo>
              </mrow>
            </mrow>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mstyle>
              <mtext>subject  to</mtext>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <msub>
                <mrow>
                  <mo>(</mo>
                  <mrow>
                    <mrow>
                      <msub>
                        <mi>a</mi>
                        <mi>i</mi>
                      </msub>
                      <mo>⁡</mo>
                      <mrow>
                        <mo>(</mo>
                        <mi>x</mi>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                    <mo>-</mo>
                    <mrow>
                      <msub>
                        <mi>b</mi>
                        <mi>i</mi>
                      </msub>
                      <mo>⁡</mo>
                      <mrow>
                        <mo>(</mo>
                        <mi>x</mi>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                  </mrow>
                  <mo>)</mo>
                </mrow>
                <mo>+</mo>
              </msub>
              <mo>⁢</mo>
              <msub>
                <mrow>
                  <mo>(</mo>
                  <mrow>
                    <mrow>
                      <msub>
                        <mi>a</mi>
                        <mi>i</mi>
                      </msub>
                      <mo>⁡</mo>
                      <mrow>
                        <mo>(</mo>
                        <mi>x</mi>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                    <mo>-</mo>
                    <mrow>
                      <msub>
                        <mi>b</mi>
                        <mi>i</mi>
                      </msub>
                      <mo>⁡</mo>
                      <mrow>
                        <mo>(</mo>
                        <mi>x</mi>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                  </mrow>
                  <mo>)</mo>
                </mrow>
                <mo>-</mo>
              </msub>
            </mrow>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <mrow>
                <mi>i</mi>
                <mo>=</mo>
                <mn>1</mn>
              </mrow>
              <mo>,</mo>
              <mi>…</mi>
              <mo>⁢</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>,</mo>
              <mi>m</mi>
            </mrow>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <msub>
                <mrow>
                  <mo>(</mo>
                  <mrow>
                    <mrow>
                      <msub>
                        <mi>c</mi>
                        <mi>i</mi>
                      </msub>
                      <mo>⁡</mo>
                      <mrow>
                        <mo>(</mo>
                        <mi>x</mi>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                    <mo>-</mo>
                    <mrow>
                      <msub>
                        <mi>d</mi>
                        <mi>i</mi>
                      </msub>
                      <mo>⁡</mo>
                      <mrow>
                        <mo>(</mo>
                        <mi>x</mi>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                  </mrow>
                  <mo>)</mo>
                </mrow>
                <mo>+</mo>
              </msub>
              <mo>=</mo>
              <msub>
                <mrow>
                  <mo>(</mo>
                  <mrow>
                    <mrow>
                      <msub>
                        <mi>c</mi>
                        <mi>i</mi>
                      </msub>
                      <mo>⁡</mo>
                      <mrow>
                        <mo>(</mo>
                        <mi>x</mi>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                    <mo>-</mo>
                    <mrow>
                      <msub>
                        <mi>d</mi>
                        <mi>i</mi>
                      </msub>
                      <mo>⁡</mo>
                      <mrow>
                        <mo>(</mo>
                        <mi>x</mi>
                        <mo>)</mo>
                      </mrow>
                    </mrow>
                  </mrow>
                  <mo>)</mo>
                </mrow>
                <mo>-</mo>
              </msub>
            </mrow>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <mrow>
                <mi>i</mi>
                <mo>=</mo>
                <mn>1</mn>
              </mrow>
              <mo>,</mo>
              <mi>…</mi>
              <mo>⁢</mo>
              <mstyle>
                <mspace width="0.8em" height="0.8ex"/>
              </mstyle>
              <mo>,</mo>
              <mi>p</mi>
            </mrow>
          </mtd>
        </mtr>
      </mtable>
    </mtd>
    <mtd>
      <mrow>
        <mi>Equation</mi>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mi>Set</mi>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.6em" height="0.6ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mn>3</mn>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
<br/>
In this form of the SGP the objective and each of the left and right-hand sides of each constraint is a posynomial function. For this reason we refer to the program in Equation Set 3 as the posynomial form of the SGP.
</p>
<heading id="h-0008" level="1">One Embodiment of the Invention</heading>
<p id="p-0033" num="0034"><figref idref="DRAWINGS">FIG. 1</figref> illustrates the operations that are performed by certain exemplary embodiments of the invention, hereinafter “the Parser,” in order to parse an optimization problem such as a signomial or geometric program. These operations are contained in box <b>100</b>. First a user <b>110</b> must input a source file <b>115</b> that describes an optimization problem (e.g., an SGP), as shown in block <b>120</b>. This process of inputting source file <b>115</b> can occur via a user interface which may include a computer operating system, a web browser, or other user-computer interfaces. Each line of source file <b>115</b> will include one of the following: 1) an optimization variable declaration, 2) an internal variable assignment or 3) an algebraic expression. In addition, the algebraic expressions contained in the source file will collectively comprise: 1) an objective function, 2) one or more equality constraints and 3) one or more inequality constraints.</p>
<p id="p-0034" num="0035">A very simple example of an optimization program, in this case a SGP, is shown in Equation Set 4:</p>
<p id="p-0035" num="0036">
<maths id="MATH-US-00005" num="00005">
<math overflow="scroll">
<mtable>
  <mtr>
    <mtd>
      <mtable>
        <mtr>
          <mtd>
            <mstyle>
              <mtext>minimize</mtext>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <mrow>
                <msub>
                  <mi>x</mi>
                  <mn>1</mn>
                </msub>
                <mo>⁢</mo>
                <msub>
                  <mi>x</mi>
                  <mn>3</mn>
                </msub>
              </mrow>
              <mo>+</mo>
              <mrow>
                <msub>
                  <mi>x</mi>
                  <mn>1</mn>
                </msub>
                <mo>⁢</mo>
                <mrow>
                  <msub>
                    <mi>x</mi>
                    <mn>2</mn>
                  </msub>
                  <mo>/</mo>
                  <msub>
                    <mi>x</mi>
                    <mn>3</mn>
                  </msub>
                </mrow>
              </mrow>
            </mrow>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mstyle>
              <mtext>subject  to</mtext>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <mrow>
                <mrow>
                  <msub>
                    <mi>x</mi>
                    <mn>1</mn>
                  </msub>
                  <mo>⁢</mo>
                  <msubsup>
                    <mi>x</mi>
                    <mn>3</mn>
                    <mrow>
                      <mrow>
                        <mo>-</mo>
                        <mn>0</mn>
                      </mrow>
                      <mo>⁢</mo>
                      <mstyle>
                        <mspace width="0.6em" height="0.6ex"/>
                      </mstyle>
                      <mo>⁢</mo>
                      <mn>3</mn>
                    </mrow>
                  </msubsup>
                </mrow>
                <mo>+</mo>
                <mrow>
                  <mn>1</mn>
                  <mo>⁢</mo>
                  <mstyle>
                    <mspace width="0.8em" height="0.8ex"/>
                  </mstyle>
                  <mo>⁢</mo>
                  <msub>
                    <mi>x</mi>
                    <mn>3</mn>
                  </msub>
                </mrow>
                <mo>-</mo>
                <mrow>
                  <msub>
                    <mi>x</mi>
                    <mn>1</mn>
                  </msub>
                  <mo>⁢</mo>
                  <mrow>
                    <msub>
                      <mi>x</mi>
                      <mn>2</mn>
                    </msub>
                    <mo>/</mo>
                    <msub>
                      <mi>x</mi>
                      <mn>3</mn>
                    </msub>
                  </mrow>
                  <mo>⁢</mo>
                  <msubsup>
                    <mi>x</mi>
                    <mn>2</mn>
                    <mn>1.2</mn>
                  </msubsup>
                </mrow>
              </mrow>
              <mo>,</mo>
            </mrow>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <mrow>
                <msub>
                  <mi>x</mi>
                  <mn>3</mn>
                </msub>
                <mo>⁢</mo>
                <mstyle>
                  <mspace width="0.8em" height="0.8ex"/>
                </mstyle>
                <mo>⁢</mo>
                <mn>30</mn>
              </mrow>
              <mo>,</mo>
            </mrow>
          </mtd>
        </mtr>
        <mtr>
          <mtd>
            <mstyle>
              <mspace width="0.3em" height="0.3ex"/>
            </mstyle>
          </mtd>
          <mtd>
            <mrow>
              <mrow>
                <mrow>
                  <msub>
                    <mi>x</mi>
                    <mn>1</mn>
                  </msub>
                  <mo>-</mo>
                  <mrow>
                    <mrow>
                      <mn>4.1</mn>
                      <mo>/</mo>
                      <msub>
                        <mi>x</mi>
                        <mn>2</mn>
                      </msub>
                    </mrow>
                    <mo>⁢</mo>
                    <msub>
                      <mi>x</mi>
                      <mn>3</mn>
                    </msub>
                  </mrow>
                </mrow>
                <mo>=</mo>
                <mn>0</mn>
              </mrow>
              <mo>,</mo>
            </mrow>
          </mtd>
        </mtr>
      </mtable>
    </mtd>
    <mtd>
      <mrow>
        <mi>Equation</mi>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.8em" height="0.8ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mi>Set</mi>
        <mo>⁢</mo>
        <mstyle>
          <mspace width="0.6em" height="0.6ex"/>
        </mstyle>
        <mo>⁢</mo>
        <mn>4</mn>
      </mrow>
    </mtd>
  </mtr>
</mtable>
</math>
</maths>
<br/>
This problem can be specified in the Parser language as shown in Equation Set 5:
</p>
<heading id="h-0009" level="1">Equation Set 5 variable x1, x2, x3;</heading>
<p id="p-0036" num="0037">
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>minimize x1*x3+x1*x2/x3;<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>x1*2^−0.3+1&lt;x3−x2^1.2;<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i>2&lt;30;<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i>1−4.1 sqrt (<i>x</i>2<i>/x</i>3)=0;<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0037" num="0038">There is a very close similarity between this the Parser source file (i.e., Equation Set 5) and the mathematical description shown in Equation Set 4. In the first line, x1, x2 and x3 are declared to be optimization variables, and in the second line the objective is defined by an algebraic expression that includes a set of mathematical terms. For the purposes of the invention an algebraic expression is defined as a set of one or more variables and, in most problems, constants joined together by mathematical operators and functions including by not limited to addition, subtraction, multiplication and division. In addition, a mathematical term is defined as a subset of an algebraic expression that can independently form a mathematical function. Lines three and four of Equation Set 5 specify inequality constraints, and the last line specifies an equality constraint. Constraints are also defined by algebraic expressions which each include a set of mathematical terms.</p>
<p id="p-0038" num="0039">At block <b>130</b> the Parser will determine if the algebraic expressions contained in the source file <b>115</b> form a GP. This provides the advantage of knowing that a global (e.g., an absolute minimum) solution to the optimization problem will be found as opposed to a local (e.g., a relative minimum) solution. Block <b>130</b> is illustrated in more detail in <figref idref="DRAWINGS">FIGS. 2A and 2B</figref> and will soon be discussed.</p>
<p id="p-0039" num="0040">If block <b>130</b> is successful then at block <b>150</b> the Parser will continue to parse the GP by converting it from its algebraic format (e.g., Equation Set 5) to a compact numeric format (“CNF”), thus creating CNF file <b>175</b>. Otherwise, if block <b>130</b> is unsuccessful then an error message will be reported to user <b>110</b>, indicating the type of error and at which line of source file <b>115</b> the error occurred. Types of errors include but are not limited to syntax and mathematical infeasibility. It will be understood that errors may be immediately reported to user <b>110</b>, or the Parser can wait until all the lines of source file <b>115</b> are read and report the total number of errors found and their locations in source file <b>115</b>. If an error message is reported then user <b>110</b> may make corrections and re-execute the Parser program.</p>
<p id="p-0040" num="0041">Alternatively, the Parser may report the error stating that the optimization problem cannot be reduced to a GP in standard form, but that it still meets the mathematical criteria of a SGP. In this case user <b>110</b> will have the option to successfully re-execute the Parser program in order to create CNF file <b>175</b> and have an external SGP solver attempt to find a local solution. However, it would be advantageous for user <b>110</b> to modify source file <b>115</b> such that the optimization problem may be reduced and parsed as a GP instead of SGP. This modification will provide a GP solver the opportunity to find a global solution to the optimization problem.</p>
<p id="p-0041" num="0042">The conversion that occurs at block <b>150</b> is accomplished when the Parser successfully coverts a GP or SGP from its algebraic format to a CNF. The CNF is a format that is specific to the type of solver program that it is being using in conjunction with the Parser. The CNF is comprised of a set of matrices that represent the variables, coefficients, and exponents of the algebraic equations that form a GP or SPG. These matrices are created when the Parser converts each individual algebraic equation, as expressed in the GP or SGP, into a set of numeric values that represent the equations' optimization variables by their types, coefficients, and exponents. These numeric values are further arranged into a group of matrices that are stored in CNF file <b>175</b>. These matrices are stored in such a manner that a solver program will be capable of reading CNF file <b>175</b> and recognizing a specific SGP or GP that it will attempt to solve.</p>
<p id="p-0042" num="0043">Once CNF file <b>175</b> is created, the Parser will route it to solver <b>160</b>. Solver <b>160</b> is capable of globally solving GPs and can process CNF file <b>175</b>. For example, solvers MOSEK™ and COPL_GP are will know in the art and will accept CNF file <b>175</b> and are capable of solving both SGPs and GPs using interior point methods. All GP solvers require that a GP be inputted in a unique format; hence CNF file <b>175</b> produced by the Parser. Currently, without the aid of the Parser, this unique format file must be generated by hand. It can be appreciated that the Parser can automatically generate CNF file <b>175</b> as described earlier.</p>
<p id="p-0043" num="0044"><figref idref="DRAWINGS">FIGS. 2A and 2B</figref> show a more detailed look at the operations included in block <b>130</b> of <figref idref="DRAWINGS">FIG. 1</figref> according to one embodiment of the invention. From block <b>120</b> the Parser begins processing source file <b>115</b> to find the algebraic expressions, as shown is block <b>200</b>. If a line contains a variable declaration, then the Parser stores the variables into memory, or if a line contains an internal variable assignment, then the Parser stores the internal variable and its assigned expression into memory. From block <b>200</b> the Parser will read a new algebraic expression at block <b>205</b>. At block <b>210</b> the Parser recognizes, in the algebraic expression, any internal variables representing a previously assigned expression and, if necessary, makes one or more substitutions. The Parser will then advance to block <b>220</b> where it attempts to convert all the mathematical terms in the algebraic expression to signomial functions, thus creating a signomial expression. This conversion, if successful, allows for the performing of block <b>250</b> with great efficiency as described later.</p>
<p id="p-0044" num="0045">If block <b>220</b> is successful, as determined by block <b>230</b>, then the Parser will advance to block <b>240</b>. Otherwise, if block <b>220</b> is unsuccessful then an error message will be reported to user <b>110</b>, indicating the type of error and at which line of source file <b>115</b> the error occurred. Types of errors include but are not limited to syntax and mathematical infeasibility. It is understood that errors may be immediately reported to user <b>110</b>, or the Parser can wait until all the lines of source file <b>115</b> are read and report the total number of errors found and their locations in the <b>115</b>. If an error message is reported then user <b>110</b> may make corrections and re-execute the Parser program.</p>
<p id="p-0045" num="0046">At block <b>240</b> the Parser will attempt to simplify the signomial expression created in block <b>220</b>. For example, simplification can occur when a combination of two identical signomial functions of opposite signs are mathematically cancelled. The Parser will then advanced to block <b>250</b> where it will attempt to reduce the signomial expression to one of the following: 1) a posynomial objective, 2) a posynomial inequality, or 3) a monomial equality. Specifically, a posynomial inequality shall be a posynomial function being less than or equal to one, and a monomial equality shall be monomial function being equal to one. The fact that block <b>220</b> generated a signomial expression allows the Parser to apply a test that will determine if the reduction of the constraints in block <b>250</b> is successful.</p>
<p id="p-0046" num="0047">Not all signomial constraints can be reduced to either a posynomial or monomial, but after block <b>220</b> it is straightforward to make this determination at block <b>250</b>. At block <b>250</b> the Parser will first rewrite the signomial expression in its posynomial form. This process is shown in Equation Set 3 and can be applied to either an inequality or an equality, for example,
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(<i>a</i><sub>i</sub>(<i>x</i>)−<i>b</i><sub>i</sub>(<i>x</i>))<sub>+</sub>(<i>a</i><sub>i</sub>(<i>x</i>)−<i>b</i><sub>i</sub>(<i>x</i>))<sub>—</sub><i>i=</i>1<i>, . . . ,m, </i><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>or<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(<i>c</i><sub>i</sub>(<i>x</i>)−<i>d</i><sub>i</sub>(<i>x</i>))<sub>+</sub>=(<i>c</i><sub>i</sub>(<i>x</i>)−<i>d</i><sub>i</sub>(<i>x</i>))<sub>—</sub><i>i=</i>1<i>, . . . ,p. </i><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
The Parser will then determine if the right-hand side of the posynomial form constraint, i.e.,
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(a<sub>i</sub>(x)−b<sub>i</sub>(x))_, i=1, . . . ,m or (c<sub>1</sub>(x)−d<sub>1</sub>(x))_, i=1, . . . , m<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
is a monomial. In addition, in the case of the equality the Parser will also determine if the left-hand side is a monomial. Ultimately, if block <b>250</b> is successful a constraint can be expressed as either
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(<i>a</i><sub>1</sub>(<i>x</i>)−<i>b</i><sub>i</sub>(<i>x</i>))+/(<i>a</i><sub>1</sub>(<i>x</i>)−<i>b</i><sub>1</sub>(<i>x</i>))<sub>—</sub>1<i>i=</i>1<i>, . . . ,m, </i><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>or<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>(<i>c</i><sub>i</sub>(<i>x</i>)−<i>d</i><sub>i</sub>(<i>x</i>))+/(<i>c</i><sub>1</sub>(<i>x</i>)−<i>d</i><sub>i</sub>(<i>x</i>))<sub>—</sub>1<i>i=</i>1<i>, . . . , p. </i><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
This notation reflects the notation shown in Equation Set 1, which represents a standard form GP. Therefore, with some abuse of notation, any SGP which can be transformed into a standard form GP in this way can be referred to as a geometric program.
</p>
<p id="p-0047" num="0048">As a simple example, consider the SGP:</p>
<p id="p-0048" num="0049">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="70pt" align="left"/>
<colspec colname="2" colwidth="105pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>minimize</entry>
<entry>x<sub>i</sub>x<sub>3 </sub>+ x<sub>i</sub>x<sub>2</sub>/x<sub>3</sub></entry>
</row>
<row>
<entry/>
<entry>subject to</entry>
<entry>x<sub>i</sub>x<sub>2</sub><sup>−0 3 </sup>+ 1 x<sub>3 </sub>− x<sub>2</sub><sup>1 2</sup>,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>x<sub>2 </sub>≦ 30,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>x<sub>1 </sub>− 4.1 √{square root over (x<sub>2</sub>/x<sub>3 </sub>)} = 0,</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
which evidently is not a standard form GP. Therefore, the SGP is put in posynomial SGP form:
</p>
<p id="p-0049" num="0050">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="35pt" align="left"/>
<colspec colname="1" colwidth="70pt" align="left"/>
<colspec colname="2" colwidth="112pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>minimize</entry>
<entry>x<sub>i</sub>x<sub>3 </sub>+ x<sub>i</sub>x<sub>2</sub>/x<sub>3</sub></entry>
</row>
<row>
<entry/>
<entry>subject to</entry>
<entry>x<sub>1</sub>x<sub>2</sub><sup>−0 3 </sup>+ 1 + x<sub>2</sub><sup>1.2 </sup>≦ x<sub>3</sub>,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>x<sub>2 </sub>30,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>x<sub>1 </sub>= 4.1 √{square root over (x<sub>2</sub>/x<sub>3 </sub>)}.</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
Since each right-hand side is a monomial, we can transform the problem to a standard form GP by dividing by the right-hand sides:
</p>
<p id="p-0050" num="0051">
<tables id="TABLE-US-00003" num="00003">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="14pt" align="left"/>
<colspec colname="1" colwidth="49pt" align="left"/>
<colspec colname="2" colwidth="154pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>minimize</entry>
<entry>x<sub>1</sub>x<sub>3 </sub>+ x<sub>1</sub>x<sub>2</sub>/x<sub>3</sub></entry>
</row>
<row>
<entry/>
<entry>subject to</entry>
<entry>x<sub>1</sub>x<sub>2</sub><sup>−0.3 </sup>x<sub>3</sub><sup>−1 </sup>+ x<sub>3</sub><sup>−1 </sup>+ x<sub>2</sub><sup>1 2</sup>x<sub>3</sub><sup>−1 </sup>+ x<sub>2</sub><sup>1 2</sup>x<sub>3</sub><sup>−1 </sup>1,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>(1/30) x<sub>2 </sub>1,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>(1/4.1) x<sub>1</sub>x<sub>2</sub><sup>−0.5</sup>x<sub>3</sub><sup>0.5 </sup>= 1.</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0051" num="0052">To continue the example, let us consider a closely related problem, with the sign of the constant 1 appearing in the first inequality constraint changed:</p>
<p id="p-0052" num="0053">
<tables id="TABLE-US-00004" num="00004">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="3">
<colspec colname="offset" colwidth="42pt" align="left"/>
<colspec colname="1" colwidth="70pt" align="left"/>
<colspec colname="2" colwidth="105pt" align="left"/>
<thead>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
<entry>minimize</entry>
<entry>x<sub>1</sub>x<sub>3 </sub>+ x<sub>1</sub>x<sub>2</sub>/x<sub>3</sub></entry>
</row>
<row>
<entry/>
<entry>subject to</entry>
<entry>x<sub>1</sub>x<sub>2</sub><sup>−0.3 </sup>−1 x<sub>3 </sub>− x<sub>2</sub><sup>1.2</sup>,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>x<sub>2 </sub>30,</entry>
</row>
<row>
<entry/>
<entry/>
<entry>x<sub>1 </sub>− 4.1 √{square root over (x<sub>2</sub>/x<sub>3</sub>)} = 0.</entry>
</row>
<row>
<entry/>
<entry namest="offset" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
<br/>
This problem cannot be transformed to a standard form GP, since the right-hand side of the first inequality constraint, in posynomial SGP form, now has two monomial terms. The practical consequence is that the ability to solve the problem globally is lost; only a local minimum can be found.
</p>
<p id="p-0053" num="0054">It is also understood that the Parser can parse signomial and geometric programs having objectives that are either minimized or maximized. In most cases and in the examples provided herein, objectives are minimized. However, a user may request that the Parser maximize the objective, and, therefore, the objective may be maximized by the Parser by finding the minimum of it's inverse. For example, the minimum of objective X can be expressed by the Parser as the maximum of the objective 1/X; and similarly, the maximum of objective Y can be expressed by the parser as the minimum of objective 1/Y.</p>
<p id="p-0054" num="0055">Ultimately, if block <b>250</b> is successful, as determined by block <b>260</b>, and all lines of source file <b>115</b> have been read, as determined by block <b>270</b>, then the Parser will advance to block <b>150</b> of <figref idref="DRAWINGS">FIG. 1</figref>. If the last line has not been read, as determined by block <b>270</b>, the Parser will repeat the flows of <figref idref="DRAWINGS">FIGS. 2A and 2B</figref> until all the lines of source file <b>115</b> have been read and no errors have been encountered. Once the Parser has reached block <b>150</b> it is clear that optimization problem inputted in block <b>120</b> is in fact a GP. Subsequently, at block <b>150</b>, the Parser further converts the GP to a CNF, thus converting source file <b>115</b> to CNF file <b>155</b>. CNF file <b>155</b> can be inputted to solver <b>160</b>, as discussed earlier, and solver <b>160</b> will attempt to find a global solution to the GP.</p>
<p id="p-0055" num="0056">If solver <b>160</b> calculates a solution to the GP represented by CNF file <b>155</b>, then it creates solution file <b>165</b>, containing a numeric solution to the objective and corresponding numeric solutions to the optimization variables. Otherwise, an error will be reported in solution file <b>165</b>. Solution file <b>165</b> is routed back to the Parser where it is translated into a user-readable format (block <b>170</b>) and expressed in output file <b>175</b>. An example of output file <b>175</b> is shown in Example 3 which displays the global minimum solution to the objective function and the corresponding values of the optimization variables (x<sub>1</sub>, x<sub>2 </sub>and x<sub>3</sub>), as declared in source file <b>115</b>.</p>
<heading id="h-0010" level="1">Example 3</heading>
<p id="p-0056" num="0057">
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>problem=GP<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>status=optimal<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>obj_value=1606.14<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i>1=29.999680001707<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i>2=37.433796562618<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>x</i>3=0.69919504957707<?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<heading id="h-0011" level="1">Alternate Embodiment of the Invention</heading>
<p id="p-0057" num="0058">One embodiment of the invention exists which implements the identical blocks shown in <figref idref="DRAWINGS">FIG. 1</figref> with the exception of block <b>130</b>. <figref idref="DRAWINGS">FIG. 3</figref> shows a more detailed look at the operations included in block <b>130</b> for an alternate embodiment. From block <b>120</b> the Parser begins processing source file <b>115</b> to locate algebraic expressions, as shown is block <b>300</b>. If a line contains a variable declaration, then the Parser stores the variables into memory, or if a line contains an internal variable assignment, then GBLAB stores the internal variable and its assigned expression into memory. From block <b>300</b> the Parser will read a new algebraic expression at block <b>310</b>. At block <b>320</b> the Parser recognizes, in the algebraic expression, any internal variables representing a previously assigned expression and, if necessary, makes one or more substitutions. The Parser will then advance to block <b>330</b> where it attempts to combine the mathematical terms such that the algebraic expression reduces to one of the following: 1) a posynomial objective, 2) a posynomial inequality, or 3) a monomial equality. Specifically, a posynomial inequality shall be a posynomial function being less than or equal to one, and a monomial equality shall be monomial function being equal to one.</p>
<p id="p-0058" num="0059">Combining the mathematical terms at block <b>330</b> shall first involve the Parser identifying each mathematical term as a signomial, posynomial or monomial. Then the Parser will determine if the operators and functions that relate the mathematical terms allow the algebraic expression to be reduced as described above. This process is more intensive than that of the preferred embodiment because the mathematical terms are not all treated as signomials. Rather, the mathematical terms are treated as separate classes of terms (e.g., posynomials and monomials); therefore, the set of mathematical rules that apply to combining the terms and reducing the algebraic expression is more expansive. Moreover, when compared to the embodiment described with reference to <figref idref="DRAWINGS">FIGS. 2A-B</figref>, the cancellation of mathematical terms will not be as obvious to the Parser since the terms are not all treated as signomials.</p>
<p id="p-0059" num="0060">Ultimately, if block <b>330</b> is successful, as determined by block <b>340</b>, and all lines of source file <b>115</b> have been read, as determined by block <b>350</b>, then the Parser will advance to block <b>150</b> of <figref idref="DRAWINGS">FIG. 1</figref>. If the last line has not been processed, as determined by block <b>350</b>, the Parser will repeat the blocks of <figref idref="DRAWINGS">FIG. 3</figref> until all the lines of source file <b>115</b> have been processed and no errors have been encountered. Once block <b>150</b> is reached, the Parser will proceed through the final blocks of <figref idref="DRAWINGS">FIG. 1</figref> in a manner identical to that of the embodiment of <figref idref="DRAWINGS">FIGS. 2A-B</figref>. Once the Parser has reached block <b>150</b> it is clear that optimization problem inputted in block <b>120</b> is in fact a GP.</p>
<p id="p-0060" num="0061">Otherwise, if block <b>330</b> is unsuccessful then an error message will be reported to user <b>110</b>, indicating the type of error and at which line of source file <b>115</b> the error occurred. Types of errors include but are not limited to syntax and mathematical infeasibility. It will be understood that errors may be immediately reported to user <b>110</b>, or the Parser can wait until all the lines of source file <b>115</b> are read and report the total number of errors found and their locations in the <b>115</b>. If an error message is reported then user <b>110</b> may make corrections and re-execute the Parser program.</p>
<p id="p-0061" num="0062">Alternatively, the Parser may report the error stating that the optimization problem cannot be reduced to a GP in standard form, but that it still meets the mathematical criteria of a SGP. In this case user <b>110</b> will have the option to successfully re-execute the Parser program in order to create CNF file <b>175</b> and have an external SGP solver attempt to find a local solution. However, it would be advantageous for user <b>110</b> to modify source file <b>115</b> such that the optimization problem may be reduced and parsed as a GP instead of SGP. This modification will provide a GP solver the opportunity to find a global solution to the optimization problem.</p>
<p id="p-0062" num="0063">While the invention has been described in terms of several embodiments, those skilled in the art will recognize that the invention is not limited to the embodiments described. The method and apparatus of the invention can be practiced with modification and alteration within the spirit and scope of the appended claims. The description is thus to be regarded as illustrative instead of limiting on the invention.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-math idrefs="MATH-US-00001" nb-file="US07299459-20071120-M00001.NB">
<img id="EMI-M00001" he="8.81mm" wi="76.20mm" file="US07299459-20071120-M00001.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00002" nb-file="US07299459-20071120-M00002.NB">
<img id="EMI-M00002" he="12.70mm" wi="76.20mm" file="US07299459-20071120-M00002.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00003" nb-file="US07299459-20071120-M00003.NB">
<img id="EMI-M00003" he="12.70mm" wi="76.20mm" file="US07299459-20071120-M00003.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00004" nb-file="US07299459-20071120-M00004.NB">
<img id="EMI-M00004" he="20.49mm" wi="76.20mm" file="US07299459-20071120-M00004.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-math idrefs="MATH-US-00005" nb-file="US07299459-20071120-M00005.NB">
<img id="EMI-M00005" he="16.59mm" wi="76.20mm" file="US07299459-20071120-M00005.TIF" alt="embedded image " img-content="math" img-format="tif"/>
</us-math>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A computer-implemented method of parsing a mathematical optimization problem comprising:
<claim-text>reading from a source file a plurality of algebraic expressions that represent a mathematical optimization problem, each algebraic expression in said plurality having one or more mathematical terms;</claim-text>
<claim-text>creating a set of signomial expressions by converting each of said mathematical terms to a signomial, at least one of said signomial expressions having a constraint with a negative coefficient value and an optimization variable with an exponent value that is real and not one; and</claim-text>
<claim-text>converting said set of signomial expressions to a compact numeric format to be accepted by a computer-aided signomial program problem solver and storing said compacted expressions onto a machine readable medium so as to be available for use by said computer-aided signomial program problem solver.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein said algebraic expressions include an objective and a set of one or more constraints.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method in <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein:
<claim-text>said objective includes an expression of one or more mathematical terms; and</claim-text>
<claim-text>each constraint in said set includes either an inequality or equality of one or more mathematical terms.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method in <claim-ref idref="CLM-00003">claim 3</claim-ref>, wherein:
<claim-text>each mathematical term includes one or more optimization variables.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>prior to said converting, determining that all signomial expressions in said set reduce to either a posynomial objective, a posynomial inequality or a monomial inequality;</claim-text>
<claim-text>after said determining, identifying that said mathematical optimization problem is a geometric program.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, further comprising:
<claim-text>prior to said converting, determining that at least one of said signomial expressions in said set cannot be reduced to either a posynomial objective, a posynomial inequality or a monomial inequality;</claim-text>
<claim-text>after said determining, reporting to a user which of said signomial expressions in said set cannot be reduced to either a posynomial objective, a posynomial inequality or a monomial inequality.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00006">claim 6</claim-ref>, further comprising the step of:
<claim-text>simplifying each signomial expression in said set by mathematically canceling a combination of a plurality of said signomials.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. A computer implemented method, comprising:
<claim-text>preparing input expressions for a geometric program problem solver by executing the following in software:</claim-text>
<claim-text>reading from a source file a plurality of algebraic expressions that represent a geometric program;</claim-text>
<claim-text>converting the plurality of algebraic expressions that represent the geometric program and storing a result of said converting onto a machine readable medium so as to be available for use by said geometric program problem solver, said converting Including for an algebraic expression of said plurality of algebraic expressions:</claim-text>
<claim-text>a) converting said algebraic expression into a signomial expression by converting terms of said signomial expression into a signomial function, said signomial expression having a constraint with a negative coefficient value and an optimization variable with an exponent value that is real and not one;</claim-text>
<claim-text>b) reducing said signomial expression to one of the following:
<claim-text>1) a posynomial objective;</claim-text>
<claim-text>2) a posynomial inequality;</claim-text>
<claim-text>3) a monomial equality.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref> wherein said method further comprises making a substitution if said algebraic expression contains an internal variable that represents a previously assigned expression.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref> further comprising simplifying the signomial expression by canceling two identical signomial functions of opposite sign.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref> further comprising finding said algebraic expressions within lines of an input source file.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref> wherein said algebraic expression is one of the following;
<claim-text>1) an objective function;</claim-text>
<claim-text>2) an equality constraint;</claim-text>
<claim-text>3) an inequality constraint.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00008">claim 8</claim-ref> wherein said geometric program is a signomial program.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. Program code embedded on a readable medium which when executed by a computer causes a method to be performed, said method comprising:
<claim-text>preparing input expressions for a geometric program problem solver by executing the following in software:</claim-text>
<claim-text>reading from a source file a plurality of algebraic expressions that represent a geometric program; and</claim-text>
<claim-text>converting the plurality of algebraic expressions that represent the geometric program and storing a result of said converting onto a machine readable medium so as to be available for use by said geometric program problem solver, said converting comprising for an algebraic expression of said plurality of algebraic expressions:</claim-text>
<claim-text>a) converting said algebraic expression into a signomial expression by converting terms of said signomial expression into a signomial function, said signomial expression having a constraint with a negative coefficient value and an optimization variable with an exponent value that is real and not one;</claim-text>
<claim-text>b) reducing said signomial expression to one of the following:
<claim-text>1) a posynomial objective;</claim-text>
<claim-text>2) a posynomial inequality;</claim-text>
<claim-text>3) a monomial equality.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref> wherein said method further comprises making a substitution if said algebraic expression contains an internal variable that represents a previously assigned expression.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref> further comprising simplifying the signomial expression by canceling two identical signomial functions of opposite sign.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref> further comprising finding said algebraic expressions within lines of an input source file.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref> wherein said algebraic expression is one of the following:
<claim-text>1) an objective function;</claim-text>
<claim-text>2) an equality constraint;</claim-text>
<claim-text>3) an inequality constraint.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00014">claim 14</claim-ref> wherein said geometric program is a signomial program.</claim-text>
</claim>
</claims>
</us-patent-grant>
