<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298169-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298169</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11081883</doc-number>
<date>20050315</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<us-term-of-grant>
<us-term-extension>157</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>03</class>
<subclass>K</subclass>
<main-group>19</main-group>
<subgroup>173</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>326 38</main-classification>
<further-classification>326 39</further-classification>
<further-classification>326 41</further-classification>
</classification-national>
<invention-title id="d0e53">Hybrid logic/interconnect circuit in a configurable IC</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>4873459</doc-number>
<kind>A</kind>
<name>El Gamal et al.</name>
<date>19891000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5245575</doc-number>
<kind>A</kind>
<name>Sasaki et al.</name>
<date>19930900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5349250</doc-number>
<kind>A</kind>
<name>New</name>
<date>19940900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5357153</doc-number>
<kind>A</kind>
<name>Chiang et al.</name>
<date>19941000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>5365125</doc-number>
<kind>A</kind>
<name>Goetting et al.</name>
<date>19941100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>5369622</doc-number>
<kind>A</kind>
<name>McLaury</name>
<date>19941100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>5426378</doc-number>
<kind>A</kind>
<name>Ong</name>
<date>19950600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>5521835</doc-number>
<kind>A</kind>
<name>Trimberger</name>
<date>19960500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>5532958</doc-number>
<kind>A</kind>
<name>Jiang et al.</name>
<date>19960700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>5552721</doc-number>
<kind>A</kind>
<name>Gould</name>
<date>19960900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00011">
<document-id>
<country>US</country>
<doc-number>5610829</doc-number>
<kind>A</kind>
<name>Trimberger</name>
<date>19970300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00012">
<document-id>
<country>US</country>
<doc-number>5631578</doc-number>
<kind>A</kind>
<name>Clinton et al.</name>
<date>19970500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00013">
<document-id>
<country>US</country>
<doc-number>5646544</doc-number>
<kind>A</kind>
<name>Iadanza</name>
<date>19970700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00014">
<document-id>
<country>US</country>
<doc-number>5659484</doc-number>
<kind>A</kind>
<name>Bennett et al.</name>
<date>19970800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00015">
<document-id>
<country>US</country>
<doc-number>5682107</doc-number>
<kind>A</kind>
<name>Tavana et al.</name>
<date>19971000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00016">
<document-id>
<country>US</country>
<doc-number>5692147</doc-number>
<kind>A</kind>
<name>Larsen et al.</name>
<date>19971100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00017">
<document-id>
<country>US</country>
<doc-number>5694057</doc-number>
<kind>A</kind>
<name>Gould</name>
<date>19971200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00018">
<document-id>
<country>US</country>
<doc-number>5719889</doc-number>
<kind>A</kind>
<name>Iadanza</name>
<date>19980200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00019">
<document-id>
<country>US</country>
<doc-number>5732246</doc-number>
<kind>A</kind>
<name>Gould et al.</name>
<date>19980300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00020">
<document-id>
<country>US</country>
<doc-number>5737235</doc-number>
<kind>A</kind>
<name>Kean et al.</name>
<date>19980400</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00021">
<document-id>
<country>US</country>
<doc-number>5745422</doc-number>
<kind>A</kind>
<name>Iadanza</name>
<date>19980400</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00022">
<document-id>
<country>US</country>
<doc-number>5745734</doc-number>
<kind>A</kind>
<name>Craft et al.</name>
<date>19980400</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00023">
<document-id>
<country>US</country>
<doc-number>5764954</doc-number>
<kind>A</kind>
<name>Fuller et al.</name>
<date>19980600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00024">
<document-id>
<country>US</country>
<doc-number>5768178</doc-number>
<kind>A</kind>
<name>McLaury</name>
<date>19980600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00025">
<document-id>
<country>US</country>
<doc-number>5777360</doc-number>
<kind>A</kind>
<name>Rostoker et al.</name>
<date>19980700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00026">
<document-id>
<country>US</country>
<doc-number>5802003</doc-number>
<kind>A</kind>
<name>Iadanza et al.</name>
<date>19980900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00027">
<document-id>
<country>US</country>
<doc-number>5815726</doc-number>
<kind>A</kind>
<name>Cliff</name>
<date>19980900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00028">
<document-id>
<country>US</country>
<doc-number>5889411</doc-number>
<kind>A</kind>
<name>Chaudhary</name>
<date>19990300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00029">
<document-id>
<country>US</country>
<doc-number>5914616</doc-number>
<kind>A</kind>
<name>Young et al.</name>
<date>19990600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00030">
<document-id>
<country>US</country>
<doc-number>5914906</doc-number>
<kind>A</kind>
<name>Iadanza et al.</name>
<date>19990600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00031">
<document-id>
<country>US</country>
<doc-number>5973340</doc-number>
<kind>A</kind>
<name>Mohsen</name>
<date>19991000</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>257209</main-classification></classification-national>
</citation>
<citation>
<patcit num="00032">
<document-id>
<country>US</country>
<doc-number>5982655</doc-number>
<kind>A</kind>
<name>Doyle</name>
<date>19991100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00033">
<document-id>
<country>US</country>
<doc-number>6002991</doc-number>
<kind>A</kind>
<name>Conn, Jr.</name>
<date>19991200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00034">
<document-id>
<country>US</country>
<doc-number>6023421</doc-number>
<kind>A</kind>
<name>Clinton et al.</name>
<date>20000200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00035">
<document-id>
<country>US</country>
<doc-number>6038192</doc-number>
<kind>A</kind>
<name>Clinton et al.</name>
<date>20000300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00036">
<document-id>
<country>US</country>
<doc-number>6044031</doc-number>
<kind>A</kind>
<name>Iadanza et al.</name>
<date>20000300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00037">
<document-id>
<country>US</country>
<doc-number>6054873</doc-number>
<kind>A</kind>
<name>Laramie</name>
<date>20000400</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00038">
<document-id>
<country>US</country>
<doc-number>6069490</doc-number>
<kind>A</kind>
<name>Ochotta et al.</name>
<date>20000500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00039">
<document-id>
<country>US</country>
<doc-number>6075745</doc-number>
<kind>A</kind>
<name>Gould et al.</name>
<date>20000600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00040">
<document-id>
<country>US</country>
<doc-number>6086631</doc-number>
<kind>A</kind>
<name>Chaudhary et al.</name>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00041">
<document-id>
<country>US</country>
<doc-number>6091263</doc-number>
<kind>A</kind>
<name>New et al.</name>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00042">
<document-id>
<country>US</country>
<doc-number>6091645</doc-number>
<kind>A</kind>
<name>Iadanza</name>
<date>20000700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00043">
<document-id>
<country>US</country>
<doc-number>6107821</doc-number>
<kind>A</kind>
<name>Kelem et al.</name>
<date>20000800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00044">
<document-id>
<country>US</country>
<doc-number>6110223</doc-number>
<kind>A</kind>
<name>Southgate et al.</name>
<date>20000800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00045">
<document-id>
<country>US</country>
<doc-number>6118707</doc-number>
<kind>A</kind>
<name>Gould et al.</name>
<date>20000900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00046">
<document-id>
<country>US</country>
<doc-number>6130854</doc-number>
<kind>A</kind>
<name>Gould et al.</name>
<date>20001000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00047">
<document-id>
<country>US</country>
<doc-number>6134154</doc-number>
<kind>A</kind>
<name>Iwaki et al.</name>
<date>20001000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00048">
<document-id>
<country>US</country>
<doc-number>6140839</doc-number>
<kind>A</kind>
<name>Kaviani et al.</name>
<date>20001000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00049">
<document-id>
<country>US</country>
<doc-number>6150838</doc-number>
<kind>A</kind>
<name>Wittig et al.</name>
<date>20001100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00050">
<document-id>
<country>US</country>
<doc-number>6163168</doc-number>
<kind>A</kind>
<name>Nguyen et al.</name>
<date>20001200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00051">
<document-id>
<country>US</country>
<doc-number>6173379</doc-number>
<kind>B1</kind>
<name>Poplingher et al.</name>
<date>20010100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00052">
<document-id>
<country>US</country>
<doc-number>6175247</doc-number>
<kind>B1</kind>
<name>Scalera et al.</name>
<date>20010100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00053">
<document-id>
<country>US</country>
<doc-number>6184707</doc-number>
<kind>B1</kind>
<name>Norman et al.</name>
<date>20010200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00054">
<document-id>
<country>US</country>
<doc-number>6205076</doc-number>
<kind>B1</kind>
<name>Wakayama</name>
<date>20010300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00055">
<document-id>
<country>US</country>
<doc-number>6233191</doc-number>
<kind>B1</kind>
<name>Gould et al.</name>
<date>20010500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00056">
<document-id>
<country>US</country>
<doc-number>6275064</doc-number>
<kind>B1</kind>
<name>Agrawal et al.</name>
<date>20010800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00057">
<document-id>
<country>US</country>
<doc-number>6292019</doc-number>
<kind>B1</kind>
<name>New et al.</name>
<date>20010900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>326 41</main-classification></classification-national>
</citation>
<citation>
<patcit num="00058">
<document-id>
<country>US</country>
<doc-number>6326807</doc-number>
<kind>B1</kind>
<name>Veenstra et al.</name>
<date>20011200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00059">
<document-id>
<country>US</country>
<doc-number>6346824</doc-number>
<kind>B1</kind>
<name>New</name>
<date>20020200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00060">
<document-id>
<country>US</country>
<doc-number>6348813</doc-number>
<kind>B1</kind>
<name>Agrawal et al.</name>
<date>20020200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00061">
<document-id>
<country>US</country>
<doc-number>6381732</doc-number>
<kind>B1</kind>
<name>Burnham et al.</name>
<date>20020400</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00062">
<document-id>
<country>US</country>
<doc-number>6469540</doc-number>
<kind>B2</kind>
<name>Nakaya</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00063">
<document-id>
<country>US</country>
<doc-number>6487709</doc-number>
<kind>B1</kind>
<name>Keller et al.</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00064">
<document-id>
<country>US</country>
<doc-number>6490707</doc-number>
<kind>B1</kind>
<name>Baxter</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00065">
<document-id>
<country>US</country>
<doc-number>6496918</doc-number>
<kind>B1</kind>
<name>Dehon et al.</name>
<date>20021200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00066">
<document-id>
<country>US</country>
<doc-number>6515509</doc-number>
<kind>B1</kind>
<name>Baxter</name>
<date>20030200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00067">
<document-id>
<country>US</country>
<doc-number>6526559</doc-number>
<kind>B2</kind>
<name>Schiefele et al.</name>
<date>20030200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00068">
<document-id>
<country>US</country>
<doc-number>6529040</doc-number>
<kind>B1</kind>
<name>Carberry et al.</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00069">
<document-id>
<country>US</country>
<doc-number>6545501</doc-number>
<kind>B1</kind>
<name>Bailis et al.</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00070">
<document-id>
<country>US</country>
<doc-number>6593771</doc-number>
<kind>B2</kind>
<name>Bailis et al.</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00071">
<document-id>
<country>US</country>
<doc-number>6601227</doc-number>
<kind>B1</kind>
<name>Trimberger</name>
<date>20030700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00072">
<document-id>
<country>US</country>
<doc-number>6603330</doc-number>
<kind>B1</kind>
<name>Snyder</name>
<date>20030800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00073">
<document-id>
<country>US</country>
<doc-number>6629308</doc-number>
<kind>B1</kind>
<name>Baxter</name>
<date>20030900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00074">
<document-id>
<country>US</country>
<doc-number>6636070</doc-number>
<kind>B1</kind>
<name>Altaf</name>
<date>20031000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00075">
<document-id>
<country>US</country>
<doc-number>6642744</doc-number>
<kind>B2</kind>
<name>Or-Bach et al.</name>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00076">
<document-id>
<country>US</country>
<doc-number>6667635</doc-number>
<kind>B1</kind>
<name>Pi et al.</name>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00077">
<document-id>
<country>US</country>
<doc-number>6668361</doc-number>
<kind>B2</kind>
<name>Bailis et al.</name>
<date>20031200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00078">
<document-id>
<country>US</country>
<doc-number>6675309</doc-number>
<kind>B1</kind>
<name>Baxter</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00079">
<document-id>
<country>US</country>
<doc-number>6714041</doc-number>
<kind>B1</kind>
<name>Darling et al.</name>
<date>20040300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00080">
<document-id>
<country>US</country>
<doc-number>6732068</doc-number>
<kind>B2</kind>
<name>Bauer et al.</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00081">
<document-id>
<country>US</country>
<doc-number>6806730</doc-number>
<kind>B2</kind>
<name>Bailis et al.</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00082">
<document-id>
<country>US</country>
<doc-number>6809979</doc-number>
<kind>B1</kind>
<name>Tang</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00083">
<document-id>
<country>US</country>
<doc-number>6831479</doc-number>
<kind>B2</kind>
<name>Lo</name>
<date>20041200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00084">
<document-id>
<country>US</country>
<doc-number>6838902</doc-number>
<kind>B1</kind>
<name>Elftmann et al.</name>
<date>20050100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00085">
<document-id>
<country>US</country>
<doc-number>6870395</doc-number>
<kind>B2</kind>
<name>Schadt et al.</name>
<date>20050300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>326 41</main-classification></classification-national>
</citation>
<citation>
<patcit num="00086">
<document-id>
<country>US</country>
<doc-number>6924663</doc-number>
<kind>B2</kind>
<name>Masui et al.</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00087">
<document-id>
<country>US</country>
<doc-number>6937535</doc-number>
<kind>B2</kind>
<name>Ahn et al.</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00088">
<document-id>
<country>US</country>
<doc-number>6956399</doc-number>
<kind>B1</kind>
<name>Bauer</name>
<date>20051000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00089">
<document-id>
<country>US</country>
<doc-number>6991947</doc-number>
<kind>B1</kind>
<name>Gheewala</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>438 15</main-classification></classification-national>
</citation>
<citation>
<patcit num="00090">
<document-id>
<country>US</country>
<doc-number>6992505</doc-number>
<kind>B1</kind>
<name>Zhou</name>
<date>20060100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00091">
<document-id>
<country>US</country>
<doc-number>6998872</doc-number>
<kind>B1</kind>
<name>Chirania et al.</name>
<date>20060200</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00092">
<document-id>
<country>US</country>
<doc-number>7028281</doc-number>
<kind>B1</kind>
<name>Agrawal et al.</name>
<date>20060400</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00093">
<document-id>
<country>US</country>
<doc-number>7075333</doc-number>
<kind>B1</kind>
<name>Chaudhary et al.</name>
<date>20060700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00094">
<document-id>
<country>US</country>
<doc-number>7126372</doc-number>
<kind>B2</kind>
<name>Vadi et al.</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00095">
<document-id>
<country>US</country>
<doc-number>7126856</doc-number>
<kind>B2</kind>
<name>Sun et al.</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00096">
<document-id>
<country>US</country>
<doc-number>7129746</doc-number>
<kind>B1</kind>
<name>Balasubramanian et al.</name>
<date>20061000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00097">
<document-id>
<country>US</country>
<doc-number>7135886</doc-number>
<kind>B2</kind>
<name>Schlacter</name>
<date>20061100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>326 38</main-classification></classification-national>
</citation>
<citation>
<patcit num="00098">
<document-id>
<country>US</country>
<doc-number>2001/0007428</doc-number>
<kind>A1</kind>
<name>Young et al.</name>
<date>20010700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00099">
<document-id>
<country>US</country>
<doc-number>2002/0008541</doc-number>
<kind>A1</kind>
<name>Young et al.</name>
<date>20020100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00100">
<document-id>
<country>US</country>
<doc-number>2002/0113619</doc-number>
<kind>A1</kind>
<name>Wong</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00101">
<document-id>
<country>US</country>
<doc-number>2002/0125914</doc-number>
<kind>A1</kind>
<name>Kim</name>
<date>20020900</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00102">
<document-id>
<country>US</country>
<doc-number>2002/0161568</doc-number>
<kind>A1</kind>
<name>Sample et al.</name>
<date>20021000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00103">
<document-id>
<country>US</country>
<doc-number>2002/0163357</doc-number>
<kind>A1</kind>
<name>Ting</name>
<date>20021100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00104">
<document-id>
<country>US</country>
<doc-number>2003/0042931</doc-number>
<kind>A1</kind>
<name>Ting</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00105">
<document-id>
<country>US</country>
<doc-number>2003/0080777</doc-number>
<kind>A1</kind>
<name>Baxter</name>
<date>20030500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00106">
<document-id>
<country>US</country>
<doc-number>2003/0110430</doc-number>
<kind>A1</kind>
<name>Bailis et al.</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00107">
<document-id>
<country>US</country>
<doc-number>2004/0010767</doc-number>
<kind>A1</kind>
<name>Agrawal et al.</name>
<date>20040100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00108">
<document-id>
<country>US</country>
<doc-number>2004/0103265</doc-number>
<kind>A1</kind>
<name>Smith</name>
<date>20040500</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00109">
<document-id>
<country>US</country>
<doc-number>2004/0196066</doc-number>
<kind>A1</kind>
<name>Ting</name>
<date>20041000</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00110">
<document-id>
<country>US</country>
<doc-number>2004/0233758</doc-number>
<kind>A1</kind>
<name>Kim et al.</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<patcit num="00111">
<document-id>
<country>US</country>
<doc-number>2005/0146352</doc-number>
<kind>A1</kind>
<name>Madurawe</name>
<date>20050700</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00112">
<othercit>A Hybrid ASIC and FPGA Architecture, Paul S. Zuchowski et al., IEEE 2002, pp. 187-194.</othercit>
</nplcit>
<category>cited by examiner</category>
</citation>
<citation>
<nplcit num="00113">
<othercit>U.S. Appl. No. 11/082,221, filed Mar. 15, 2005, Hutchings, Related Application.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00114">
<othercit>U.S. Appl. No. 11/269,141, filed Nov. 7, 2005, Caldwell, Related Application.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00115">
<othercit>U.S. Appl. No. 11/082,199, filed Mar. 15, 2005, Hutchings, Related Application.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00116">
<othercit>U.S. Appl. No. 11/081,850, filed Mar. 15, 2005, Hutchings, Related Application.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00117">
<othercit>U.S. Appl. No. 11/269,168, filed Nov. 7, 2005, Redgrave, Related Application.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00118">
<othercit>“§3 Programmable Logic Devices,” <i>Digital System Design, </i>2001, pp. 3.1-3.28.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00119">
<othercit>“Design for Low Power in Actel Antifuse FPGAs”, Actel Application Note, 2000 Actel Corporation, Sep. 2000, pp. 1-8.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00120">
<othercit>“The Effect of SRAM Table Sharing and Cluster Size on FPGA Area”, pp. 1-10, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00121">
<othercit>“The Xilinx Virtex Series FPGA,” Jan. 22, 2001, slides 1-22.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00122">
<othercit>“Unifying Sequential and Spatial Computing with a Single Instruction Set Architecture,” <i>ISCA '04, </i>2004, ACM, Munchen, Oberbayem, Germany.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00123">
<othercit>Agrawal, O., et al., “An Innovative, Segmented High Performance FPGA Family with Variable-Grain-Architecture and Wide-gating Functions,” <i>FPGA 99, </i>1999, pp. 17-26, ACM, Monterey, CA, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00124">
<othercit>Ahmed, E., et al., “The Effect of LUT and Cluster Size on Deep-Submicron FPGA Performance and Density,” <i>FPGA 2000, </i>2000, ACM, Monterey, CA, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00125">
<othercit>Altera Corp., “6. DSP Blocks in Stratix II Devices,” <i>SII52006-1.0, </i>Feb. 2004, pp. 1-32.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00126">
<othercit>Altera, “Statix II DSP Performance,” <i>White Paper, </i>Feb. 2004, pp. 1-9, ver. 1.0, Altera Corporation, San Jose, CA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00127">
<othercit>Backus, J., “Can Programming be Liberated from the Von Neumann Style? A Functional Style and its Algebra of Programs,” <i>Communications of the ACM, </i>Aug. 1978, pp. 613-641, vol. 21, No. 8, ACM.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00128">
<othercit>Barker, R., “QuickSilver ACM SilverStream Design Methodology with the Inspire SDK Tool Set,” <i>A Technology Application Whitepaper, </i>2004, pp. 1-8, QuickSilver Technology, Inc., San Jose, California.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00129">
<othercit>Brand, D., et al., “Minimization of AND-EXOR Expressions Using Rewrite Rules,” <i>IEEE Transactions on Computers, </i>May 1993, pp. 568-576, IEEE.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00130">
<othercit>Butts, M., “Future Directions of Dynamically Reprogrammable Systems,” <i>IEEE 1995 Custom Integrated Circuits Conference, </i>1995, pp. 487-494, IEEE.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00131">
<othercit>Camposano, R., “The Growing Semiconductor Zoo: ASICs, CSSP, ASSP, ASIP, Structured Arrays, FPGAs, Processor Arrays, Platforms . . . and Other Animalia,” 2003, pp. 1-74, Synopsys, Inc.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00132">
<othercit>Caspi, E., et al., “A Streaming Multi-Threaded Model,” <i>MSP-3, </i>Dec. 2, 2001, pp. 1-23.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00133">
<othercit>Caspi, E., et al., “Stream Computations Organized for Reconfigurable Executiion (SCORE): Introduction and Tutorial,” Aug. 25, 2000, pp. 1-31, Verison 1.0.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00134">
<othercit>Ciemat, J.V., et al., “Annealing Placement by Thermodynamic Combinatorial Optimization,” <i>ACM Transactions on Design Automation of Electronic Systems, </i>Jul. 2004, pp. 310-332, vol. 9, No. 3, ACM, New York, NY.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00135">
<othercit>Compton, K., et al., “An Introduction to Reconfigurable Computing,”.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00136">
<othercit>Compton, K., et al., “Reconfigurable Computing: A Survey of Systems and Software,” <i>ACM Computing Surveys, </i>Jun. 2002, pp. 171-210, vol. 34, No. 2, ACM, New York, NY.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00137">
<othercit>Cong, J., et al., “A Theory on Partially-Dependent Functional Decomposition with Application in LUT-based FPGA,” pp. 1-22, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00138">
<othercit>Cong, J., et al., “Combinational Logic Synthesis for LUT Based Field Programmable Gate Arrays,” <i>ACM Transactions on Design Automation of Electronic Systems, </i>Apr. 1996, pp. 145-204, vol. 1, No. 2, ACM, Inc.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00139">
<othercit>Coudert, O., “Chapter 13: Doing Two-Level Logic Minimization 100 Times Faster,” pp. 112-121, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00140">
<othercit>Damiani, M., et al., “The Disjunctive Decomposition of Logic Functions,” pp. 1-5, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00141">
<othercit>Davare, A., et al., “The Best of Both Worlds: The Efficient Asynchronous Implementation of Synchronous Specifications,” <i>DAC '04, </i>Jun. 7-11, 2004, ACM, San Diego, California, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00142">
<othercit>Dehon, A., Balancing Interconnect and Computation in a Reconfigurable Computing Array (or, why don't you really want 100% LUT utilization). pp. 1-10. (Applicants believe that this article also appears in <i>Proceedings of the International Symposium on Field Programmable Gate Arrays, </i>Feb. 1999, pp. 125-134.).</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00143">
<othercit>Dehon, A., “DPGA Utilization and Application.” no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00144">
<othercit>Dehon, A., “Dynamically Programmable Gate Arrays: A Step Toward Increased Computational Density,” <i>Proceedings of the Fourth Canadian Workshop on Field-Programmable Devices, </i>May 1996, pp. 47-54.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00145">
<othercit>Dehon, A., “Reconfigurable Architectures for General-Purpose Computing,” <i>A.I. Technical Report No. 1586, </i>Oct. 1996, pp. i-353.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00146">
<othercit>Dehon, A., “The Density Advantage of Configurable Computing,” Apr. 2000, pp. 41-49, IEEE.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00147">
<othercit>Dehon, A., “Transit Note #121: Notes on Programmable Interconnect,” <i>M.I.T. Transit Project, </i>Feb. 1995; pp. 1-13.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00148">
<othercit>Dehon, A., et al., “Design Patterns for Reconfigurable Computing,” <i>Proceedings of the IEEE Symposium on Field-Programmable Custom Computing Machines, </i>Apr. 2004.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00149">
<othercit>Dehon, A., et al., “DPGA-Coupled Microprocessors: Commodity ICs for the Early 21<sup>st </sup>Century,” <i>FCCM '94- IEEE Workshop on FPGAs for Custom Computing Machines, </i>Apr. 10-13, 1994.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00150">
<othercit>Dehon, A., et al., “Reconfigurable Computing: What, Why, and Implications for Design Automation,” <i>DAC 99, New Orleans, Louisiana, </i>1999, ACM.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00151">
<othercit>Enzler, R., et al., “Virtualizing Hardware with Multi-Context Reconfigurable Arrays,” pp. 151-160, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00152">
<othercit>Gayasen, A., et al., “Reducing Leakage Energy in FPGAs Using Region-Constrained Placement,” <i>FPGA '04, </i>Feb. 22-24, 2004, pp. 51-58, ACM, Monterey, California, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00153">
<othercit>George, V., “Low Energy Field-Programmable Gate Array,” <i>A Dissertation Submitted in Partial Satisfaction of the Requirments for the Degree of Doctor of Philosophy in Engineering-Electrical Engineering and Computer Sciences in the Graduate Division of the University of California, Berkeley, </i>Fall 2000, pp. 1-190.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00154">
<othercit>Giraud-Carrier, C., “A Reconfigurable Data Flow Machine for Implementing Functional Programming Languages.” no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00155">
<othercit>Goldstein, S.C., et al., “PipeRench: A Coprocessor for Streaming Multimedia Acceleration.” no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00156">
<othercit>Goldstein, S.C., et al., “PipeRench: A Reconfigurable Architecture and Compiler,” 2000, pp. 70-77, IEEE.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00157">
<othercit>Hauck, S., et al., “Montage: An FPGA for Synchronous and Asynchronous Circuits,” pp. 1-4 (Applicants believe that this article also apperars in <i>Field-Programmable Gate Arrays: Architectures and Tools for Rapid Prototyping, </i>1993, pp. 44-51, Springer-Verlag, Berlin.).</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00158">
<othercit>Hauck, S., et al., “Totem: Domain-Specific Reconfigurable Logic,” pp. 1-25, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00159">
<othercit>Heidari, G., et al., “Introducing a Paradigm Shift in the Design and Implementation of Wireless Devices,” <i>A Wireless Devices Whitepaper, </i>Apr. 28, 2004 but © 2003, pp. 1-10, QuickSilver Technology, Inc., San Jose, California.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00160">
<othercit>Hofstee, H.P., “Cell Broadband Engine Architecture from 20,000 Feet,” Aug. 24, 2005, pp. 1-6.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00161">
<othercit>Huang, A.S., “Tao: An Architecturally Balanced Reconfigurable Hardware Processor,” <i>Submitted to the Dept. of Electrical Engineering and Computer Science in Partial Fulfillment of the Requirements for the Degreses of Bachelor of Science in Electrical Science and Engineering and Master of Engineering in Electrical Engineering and Computer Science at the Massachusetts Institute of Technology, </i>May 23, 1997, pp. 1-86, 107-109.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00162">
<othercit>IBM, “Cell Broadband Engine Architecture, Version 1.0,” Aug. 8, 2005, pp. 1-319, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00163">
<othercit>IBM,“SPU Application Binary Interface Specification, Version 1.3,” <i>CBEA JSRE Series, </i>Aug. 1, 2005, pp. iv-26, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00164">
<othercit>IBM, “SPU Assembly Language Specification, Version 1.2,” <i>CBEA JSRE Series, </i>Aug. 1, 2005, pp. iii-22, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00165">
<othercit>IBM, “SPU C/C++ Language Extensions, Version 2.0” <i>CBEA JSRE Series, </i>Aug. 1, 2005, pp. iv-84, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00166">
<othercit>IBM, “Synergistic Processor Unit Instruction Set Architecture, Version 1.0,” Aug. 1, 2005, pp. 1-257, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00167">
<othercit>Kaviani, A., et al., “Computational Field Programmable Architecture.”, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00168">
<othercit>Kaviani, A., et al., “Hybrid FPGA Architecture,” Department of Electrical and Computer Engineering, University of Toronto, Canada, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00169">
<othercit>Keutzer, K., “Overview of *configurable* architectures,” slides 1-29, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00170">
<othercit>Kocan, F., et al., “Logic Modules with Shared SRAM Tables for Field-Programmable Gate Arrays,” <i>FPL 2004, </i>2004, pp. 289-300, Springer-Verlag, Berlin Heidelberg.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00171">
<othercit>Kravets, V.N., et al., “Generalized Symmetries in Boolean Functions”, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00172">
<othercit>Lehn, D.I., et al., “Evaluation of Rapid Context Switching on a CSRC Device,”, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00173">
<othercit>Lemieux, G., et al., “Generating Highly-Routable Sparse Crossbars for PLDs,” <i>FPGA 2000, </i>2000, ACM, Monterey, California, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00174">
<othercit>Lemieux, G., et al., “Using Sparse Crossbars within LUT Clusters,” <i>FPGA 2001, </i>Feb. 11-13, 2001, ACM, Monterey, CA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00175">
<othercit>Lertora, F., et al., “Handling Different Computational Granularity by a Reconfigurable IC Featuring Embedded FPGAs and a Network-On-Chip,”, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00176">
<othercit>Lewis, D., et al., “The Stratiz-II Routing and Logic Architecture,” pp. 1-22, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00177">
<othercit>Ling, A., “The Search for the Optimal FPGA Logic Block,” 2001, ACM.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00178">
<othercit>M2000, “FlexEOS Embedded FPGA Cores,” 2003, M2000.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00179">
<othercit>Markovskiy, Y., et al., “Analysis of Quasi-Static Scheduling Techniques in a Virtualized Reconfigurable Machine,” <i>FPGA '02, </i>Feb. 24-26, 2002, ACM, Monterey, California, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00180">
<othercit>Master, P., “The Next Big Leap in Reconfigurable Systems,” <i>A Technology Vision Whitepaper, </i>Apr. 28, 2004 but © 2003, pp. 1-8, QuickSilver Tecchnology, Inc., San Jose, California.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00181">
<othercit>Mathstar, Inc., “MathStar <i>FPOA Architecture: </i>A New Approach to High Throughput, Scalable, and Reprogrammable Design,” <i>Technology Overview, </i>2003, MathStar, Inc..</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00182">
<othercit>Mirsky, E., et al., “MATRIX: A Reconfigurable Computing Arcitecture with Configurable Instruction Distribution and Deployable Resources,” <i>Proceedings of the IEEE Workshop on FPGAs for Custom Computing Machines, </i>Apr. 1996.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00183">
<othercit>Mirsky, E., et al., “MATRIX: A Reconfigurable Computing Device with Configurable Instruction Distribution and Deployable Resources,” <i>Hot Chips Symposium 1997, </i>1997.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00184">
<othercit>Mishchenko, A., “Fast Computation of Symmetries in Boolean Functions”, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00185">
<othercit>Mishchenko, A., et al., “A New Enhanced Constructive Decomposition and Mapping Algorithm,” DAC 2003, Jun. 2-6, 2003, pp. 143-148, ACM, Anaheim, California, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00186">
<othercit>Morris, K., “Lattice Launches XP: Non-Volatility at the Forefront of FPGA,” <i>FPGA and Programmable Logic Journal, </i>2005, pp. 1-5, Techfocus Media, Inc.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00187">
<othercit>Morris, K., “Rationalizing Reconfigurability: The Importance of Being Programmable,” <i>FPGA and Structured ASIC Journal, </i>Sep. 27, 2005.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00188">
<othercit>Nelson, B.E., “Reconfigurable Computing: An Introduction and Overview,” Sep. 23, 1998, pp. 1-43.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00189">
<othercit>Niedzielski, D., “An Overview of Reconfigurable Computing,”, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00190">
<othercit>Ochotta, E.S., et al., “A Novel Predictable Segmented FPGA Routing Architecture,” <i>FPGA 98, </i>1998, pp. 3-11, ACM, Monterey, CA, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00191">
<othercit>Ohkura, J., et al., “Dataflow in the Adpative Computing Machine (ACM),” <i>A Technology Application Whitepaper, </i>Apr. 28, 2004 but © 2003, pp. 1-9, QuickSilver Technology, Inc., San Jose, California.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00192">
<othercit>Parhami, B., “Part IV: Low-Diameter Architectures,” <i>ECE 254B: Advanced Computer Architecture: Parallel Processing, UCSB, </i>Spring 2005, slides 1-93, Behrooz Parhami, Santa Barbara, CA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00193">
<othercit>Pedram, M., “IEEE Circutis and Systems Society Distinguished Lecturer Program.”, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00194">
<othercit>Perissakis, S., et al., “Embedded DRAM for a Reconfigurable Array,” no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00195">
<othercit>Perissakis, S., et al., “Embedded DRAM for a Reconfigurable Array,” <i>Proceedings of the 1999 Symposium on VLSI Circuits</i>, Jun. 1999.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00196">
<othercit>Perkowski, M.A., “A New Representation of Strongly Unspecified Switching Functions and its Application to Multi-Level AND/OR/EXOR Synthesis.”, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00197">
<othercit>Plunkett, B., “In Search of the SDR Holy Grail,” <i>A Technology Application Whitepaper, </i>Apr. 28, 2004 but © 2003, pp. 1-7, QuickSilver Technology, Inc., San Jose, California.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00198">
<othercit>Plunkett, B., et al., “Adapt2400 ACM Architecture Overview,” <i>A Technology Whitepaper, </i>2004, pp. 1-9, QuickSilver Technology, Inc.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00199">
<othercit>Quicklogic Corp., “Ultra-Low Power FPGA Combining Performance, Density, and Embedded RAM,” <i>Eclipse II Family Data Sheet, </i>2005, pp. 1-92, QuickLogic Corporation, US.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00200">
<othercit>QuickSilver Technology, Inc., “Adapt2000 ACM System Platform,” Apr. 2004, pp. 1-39, QuickSilver Technology, Inc., San Jose, California.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00201">
<othercit>QuickSilver Technology, Inc., “InSpire SDK Tool Set,” <i>Product Brief, </i>2004, QuickSilver Technology, Inc., San Jose, California.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00202">
<othercit>QuickSilver Technology, Inc., “QS2412 Adaptive Computing Machine,” <i>Product Brief, </i>2004, QuickSilver Technology, Inc., San Jose, California.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00203">
<othercit>Rahman, A., et al., “Wiring Requirement and Three-Dimensional Integration Technology for Field Programmable Gate Arrays,” <i>IEEE Transactions on Very Large Scale Integration </i>(<i>VLSI</i>) <i>Systems, </i>Feb. 2003, pp. 44-54, vol. 11, No. 1, IEEE.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00204">
<othercit>Rose, J., “Hard vs. Soft: The Central Question of Pre-Fabricated Silicon,”  pp. 1-4, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00205">
<othercit>Sambhwani, S., et al., “Implementing W-CDMA Transceiver Structure on an Adaptive Computing Platform,” <i>A Technology Application Whitepaper, </i>Apr. 28, 2004 but © 2003, pp. 1-12, QuickSilver Technology, Inc., San Jose, California.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00206">
<othercit>Scalera, S.M., et al., “A Mathematical Benefit Analysis of Context Switching Reconfigurable Computing.”, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00207">
<othercit>Schaumont, P., et al., “A Quick Safari Through the Reconfiguration Jungle,”, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00208">
<othercit>Schmit, H., “Extra-Dimensional Island-Styple FPGAs,” 2003.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00209">
<othercit>Schmit, H., “Extra-dimensional Island-Style FPGAs,” pp. 1-10, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00210">
<othercit>Schmit, H., “Incremental Reconfiguration for Pipelined Applications.”, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00211">
<othercit>Schmit, H., et al., “FPGA Switch Block Layout and Evaluation,” <i>FPGA '02</i>, Feb. 24-26, 2002, ACM, Monterey, California, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00212">
<othercit>Schmit, H., et al., “PipeRench: A Virtualized Programmable Datapath in 0.18 Micron Technology,”,no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00213">
<othercit>Schmit, H., et al., “Queue Machines: Hardware Compilation in Hardware.” no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00214">
<othercit>Scholl, C., “Multi-output Functional Decomposition with Exploitation of Don't Cares,” May 19-21, 1997.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00215">
<othercit>Sharma, A., et al., “Accelerating FPGA Routing Using Architecture-Adaptive A *Techniques”, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00216">
<othercit>Singh, A., et al., “Interconnect Pipelining in a Throughput-Intensive FPGA Architecture,” <i>FPGA 2001, </i>Feb. 11-13, 2001, pp. 153-160, ACM, Monterey, CA, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00217">
<othercit>Singh, A., et al., “PITIA: An FPGA for Throughput-Intensive Applications,” <i>IEEE Transactions on Very Large Scale Integration </i>(<i>VLSI </i>) <i>Systems, </i>Jun. 2003, pp. 354-363, vol. 11, No., 3, IEEE.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00218">
<othercit>Slade, A.L., et al., “Reconfigurable Computing Application Frameworks,”,no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00219">
<othercit>Snider, G., “Performance-Constrained Pipelining of Software Loops onto Reconfigurable Hardware,” <i>FPGA '02, </i>Feb. 24-26, 2002, pp. 177-186, ACM, Monterey, California, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00220">
<othercit>Stankovic, R.S., et al., “Remarks on the Number of Logic Networks with Same Complexity Derived from Spectral Transform Decision Diagrams,” pp. 1-8, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00221">
<othercit>Tau, E., et al., “A First Generation DPGA Implementation,” <i>Proceedings of the Third Canadian Workshop on Field-Programmable Devices, </i>May 1995, pp. 138-143.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00222">
<othercit>Tau, E., et al., “Transit Note #114: A First Generation DPGA Implementation,” <i>M.I.T. Transit Project, </i>Jan. 1995, pp. 1-8.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00223">
<othercit>Teifel, J., et al., “Highly Pipelined Asynchronous FPGAs” <i>FPGA '04, </i>ACM, Monterey, California, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00224">
<othercit>Tessier, R., et al., “Balancing Logic Utilization and Area Efficiency in FPGAs,”,no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00225">
<othercit>Tom, M., et al., “Clustering of Large Designs for Channel-Width Constrained FPGAS,” University of British Columbia, Department of Electrical and Computer Engineering, slides 1-39, Vancouver, BC, Canada, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00226">
<othercit>Tom, M., et al., “Logic Block Clustering of Large Designs for Channel-Width Constrained FPGAs,” <i>DAC 2005, </i>Jun. 13-17, 2005, pp. 726-731, ACM, Anaheim, California, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00227">
<othercit>Trimberger, S., “Effects of FPGA Architecture on FPGA Routing,” 32<sup>nd </sup>ACM/IEEE <i>Design Automation Conference, </i>1995, ACM.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00228">
<othercit>Tsu, W., et al., “HSRA: High-Speed, Hierarchical Synchronous Reconfigurable Array,” pp. 1-10. (Applicants believe that this also appears in <i>Proceedings of the International Symposium on Field Programmable Gate Arrays, </i>Feb. 1999; pp. 69-78.).</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00229">
<othercit>Wawrzynek, J., “EECS150-Digital Design: Lecture 5—Field Programmable Gate Arrays (FPGAs),” Feb. 4, 2002; pp. 1-4, slides 1-20, multiple slides per page.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00230">
<othercit>Weaver, N., et al., “The SFRA: A Corner-Turn FPGA Architecture,” <i>FPGA '04, </i>Feb. 22-24, 2004, ACM, Monterey, California, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00231">
<othercit>Wegener, I., “The Complexity of Boolean Functions,” Wiley-Teubner Series in Computer Science, 1987, John Wiley &amp; Sons Ltd. and B.G. Teubner, Stuttgart, New York.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00232">
<othercit>Wilton, S.J.E., “Memory-to-Memory Connection Structures in FPGAs with Embedded Memory Arrays,” <i>FPGA 97, </i>1997, pp. 10-16, ACM, Monterey, California, USA.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00233">
<othercit>Xilinx, Inc., “Virtex-4 Family Overview,” <i>Advanced Product Specification, </i>Sep. 10, 2004, pp. 21-30, v1.1, Xilinx, Inc.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00234">
<othercit>Zilic, Z. et al., “Using BDDs to Design ULMs for FPGAs,” pp. 1-10, no date.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00235">
<othercit>Zuchowski, P.S., “A Hybrid ASIC and FPGA Architecture,” 2002, IEEE.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
<citation>
<nplcit num="00236">
<othercit>U.S. Appl. No. 11/082,199 (Non-Final Office Action), filed Mar. 15, 2005, Hutchings et al., Non-Final Rejection Mailed Nov. 21, 2006 of Related Application.</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>38</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>326 38</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>326 39</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>326 41</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>36</number-of-drawing-sheets>
<number-of-figures>51</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20070241773</doc-number>
<kind>A1</kind>
<date>20071018</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Hutchings</last-name>
<first-name>Brad</first-name>
<address>
<city>Fremont</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Schmit</last-name>
<first-name>Herman</first-name>
<address>
<city>Palo Alto</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="003" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Redgrave</last-name>
<first-name>Jason</first-name>
<address>
<city>Mountain View</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Adeli Law Group</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Tabula, Inc</orgname>
<role>02</role>
<address>
<city>Santa Clara</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Tan</last-name>
<first-name>Vibol</first-name>
<department>2819</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Some embodiments of the invention provide a configurable integrated circuit (“IC”). This IC includes several configurable circuits for receiving configuration data and configurably performing a set of operations based on the configuration data. It also includes several hybrid circuits. Each particular hybrid circuit can interchangeably perform as either a logic circuit or an interconnect circuit in the configurable IC.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="99.99mm" wi="107.02mm" file="US07298169-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="229.02mm" wi="160.19mm" file="US07298169-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="240.71mm" wi="151.64mm" file="US07298169-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="211.07mm" wi="110.83mm" file="US07298169-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="239.18mm" wi="179.41mm" file="US07298169-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="207.60mm" wi="181.02mm" file="US07298169-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="237.57mm" wi="185.76mm" file="US07298169-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="228.35mm" wi="184.23mm" file="US07298169-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="244.52mm" wi="183.56mm" file="US07298169-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="235.37mm" wi="162.98mm" file="US07298169-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="239.78mm" wi="179.15mm" file="US07298169-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="252.73mm" wi="184.49mm" file="US07298169-20071120-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="238.51mm" wi="184.83mm" file="US07298169-20071120-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00013" num="00013">
<img id="EMI-D00013" he="251.80mm" wi="192.36mm" file="US07298169-20071120-D00013.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00014" num="00014">
<img id="EMI-D00014" he="279.06mm" wi="218.02mm" file="US07298169-20071120-D00014.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00015" num="00015">
<img id="EMI-D00015" he="257.73mm" wi="190.67mm" file="US07298169-20071120-D00015.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00016" num="00016">
<img id="EMI-D00016" he="239.52mm" wi="182.88mm" file="US07298169-20071120-D00016.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00017" num="00017">
<img id="EMI-D00017" he="245.79mm" wi="187.03mm" file="US07298169-20071120-D00017.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00018" num="00018">
<img id="EMI-D00018" he="243.92mm" wi="183.90mm" file="US07298169-20071120-D00018.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00019" num="00019">
<img id="EMI-D00019" he="234.10mm" wi="171.53mm" file="US07298169-20071120-D00019.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00020" num="00020">
<img id="EMI-D00020" he="224.62mm" wi="134.87mm" file="US07298169-20071120-D00020.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00021" num="00021">
<img id="EMI-D00021" he="159.85mm" wi="141.22mm" file="US07298169-20071120-D00021.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00022" num="00022">
<img id="EMI-D00022" he="245.19mm" wi="182.63mm" file="US07298169-20071120-D00022.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00023" num="00023">
<img id="EMI-D00023" he="250.19mm" wi="182.88mm" file="US07298169-20071120-D00023.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00024" num="00024">
<img id="EMI-D00024" he="250.19mm" wi="189.23mm" file="US07298169-20071120-D00024.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00025" num="00025">
<img id="EMI-D00025" he="225.89mm" wi="184.49mm" file="US07298169-20071120-D00025.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00026" num="00026">
<img id="EMI-D00026" he="256.88mm" wi="186.69mm" file="US07298169-20071120-D00026.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00027" num="00027">
<img id="EMI-D00027" he="234.02mm" wi="174.75mm" file="US07298169-20071120-D00027.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00028" num="00028">
<img id="EMI-D00028" he="256.54mm" wi="181.36mm" file="US07298169-20071120-D00028.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00029" num="00029">
<img id="EMI-D00029" he="253.07mm" wi="142.66mm" file="US07298169-20071120-D00029.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00030" num="00030">
<img id="EMI-D00030" he="246.04mm" wi="185.17mm" file="US07298169-20071120-D00030.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00031" num="00031">
<img id="EMI-D00031" he="182.96mm" wi="169.67mm" file="US07298169-20071120-D00031.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00032" num="00032">
<img id="EMI-D00032" he="210.14mm" wi="181.61mm" file="US07298169-20071120-D00032.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00033" num="00033">
<img id="EMI-D00033" he="242.57mm" wi="177.55mm" file="US07298169-20071120-D00033.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00034" num="00034">
<img id="EMI-D00034" he="246.46mm" wi="191.09mm" file="US07298169-20071120-D00034.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00035" num="00035">
<img id="EMI-D00035" he="152.23mm" wi="191.18mm" file="US07298169-20071120-D00035.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00036" num="00036">
<img id="EMI-D00036" he="128.86mm" wi="156.72mm" file="US07298169-20071120-D00036.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">CROSS REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">This Application is related to the following applications: U.S. patent application Ser. No. 11/082,221, filed Mar. 15, 2005; U.S. patent application Ser. No. 11/269,141, filed Nov. 7, 2005; U.S. patent application Ser. No. 11/082,199, filed Mar. 15, 2005; U.S. patent application Ser. No. 11/081,850, filed Mar. 15, 2005; and U.S. patent application Ser. No. 11/269,168, filed Nov. 7, 2005.</p>
<heading id="h-0002" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0003" num="0002">The present invention is directed towards hybrid configurable logic/interconnect circuit in a configurable IC.</p>
<heading id="h-0003" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0004" num="0003">The use of configurable integrated circuits (“IC's”) has dramatically increased in recent years. One example of a configurable IC is a field programmable gate array (“FPGA”). An FPGA is a field programmable IC that has an internal array of logic circuits (also called logic blocks). These logic circuits are connected together through numerous interconnect circuits (also called interconnects). The logic and interconnect circuits are surrounded by input/output blocks.</p>
<p id="p-0005" num="0004">Like some other configurable IC's, the logic circuits and interconnect circuits of an FPGA are configurable. A configurable logic circuit can be configured to perform a number of different functions. Such a logic circuit typically receives input and configuration data. From the set of functions that the logic circuit can perform, the configuration data specifies a particular function that the logic circuit has to perform on the input data. A configurable interconnect circuit connects a set of input data to a set of output data. Such a circuit receives configuration data that specify how the interconnect circuit should connect its input data to its output data.</p>
<p id="p-0006" num="0005">FPGA's have become popular as their configurable logic and interconnect circuits allow the FPGA's to be adaptively configured by system manufacturers for their particular applications. However, existing FPGA's as well as other existing configurable IC's do not provide robust multiplexer functionality. Specifically, the select lines of multiplexers in existing IC's are typically tied to memory cells that store configuration data. Hence, these multiplexers cannot be controlled by signals internally computed by the logic circuits of the IC's. This, in turn, limits the use of multiplexers in configurable IC's to applications that do not need to make the multiplexing choices based on internally computed IC signals.</p>
<p id="p-0007" num="0006">Therefore, there is a need in the art for configurable IC's that use novel multiplexer circuits that can be controlled by signals internally computed by the IC's. There is also a need in the art for configurable IC's that have novel architectures that use such multiplexer circuits. There is further a need for configurable IC's that have devices that can take advantage of such novel multiplexer circuits.</p>
<heading id="h-0004" level="1">SUMMARY OF THE INVENTION</heading>
<p id="p-0008" num="0007">Some embodiments of the invention provide a configurable integrated circuit (“IC”). This IC includes several configurable circuits for receiving configuration data and configurably performing a set of operations based on the configuration data. It also includes several hybrid circuits. Each particular hybrid circuit can interchangeably perform as either a logic circuit or an interconnect circuit in the configurable IC.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0005" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0009" num="0008">The novel features of the invention are set forth in the appended claims. However, for purpose of explanation, several embodiments of the invention are set forth in the following figures.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 1</figref> illustrates a block diagram of an interconnect circuit.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 2</figref> illustrates an example of a multiplexer.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an example of a configurable four-to-one multiplexer that receives configuration data from a set of storage elements.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a configurable logic circuit.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 5</figref> illustrates an example of a configurable node array that includes configurable nodes that are arranged in rows and columns.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 6</figref> illustrates an example of a connection between two circuits.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an example of another connection between two circuits.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 8</figref> illustrates a full UMUX.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 9</figref> illustrates a hybrid UMUX.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 10</figref> illustrates that some embodiments place the UMUX's between the circuits of a circuit arrangement according to no particular pattern.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 11</figref> illustrates that some embodiments place UMUX's between the circuits according to a particular pattern that repeats across the entire circuit arrangement or a portion of the arrangement.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 12</figref> illustrates an example where a number of UMUX's that are dispersed between the circuits of a circuit arrangement, form an arrangement of their own.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 13</figref> illustrates an example of arranging UMUX's in two arrays that are dispersed between the circuits of a circuit arrangement.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 14</figref> illustrates an example of a UMUX that is positioned in an arrangement of circuit elements.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 15</figref> illustrates a circuit arrangement having logic circuits, interconnect circuits, and UMUX's.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 16</figref> illustrates an example of a circuit in a configurable IC's circuit arrangement that includes complex logic circuits that are formed by multiple logic and interconnect circuits.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 17</figref> illustrates an example of “supering” multiple logic circuits that use of UMUX's.</p>
<p id="p-0027" num="0026"><figref idref="DRAWINGS">FIG. 18</figref> illustrates one such prior configurable circuit arrangement.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 19</figref> illustrates a configurable circuit arrangement that includes numerous configurable interconnect circuits, UMUX's, and logic circuits.</p>
<p id="p-0029" num="0028"><figref idref="DRAWINGS">FIG. 20</figref> illustrates an example of using UMUX's to write data to a non-configurable memory array in a configurable circuit arrangement.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 21</figref> illustrates the use of UMUX's to implement circuit arrangements with configurable shift operations.</p>
<p id="p-0031" num="0030"><figref idref="DRAWINGS">FIG. 22</figref> illustrates an example of a circuit arrangement that includes numerous logic circuits, interconnect circuits, and HUMUX'S.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 23</figref> illustrates an example of a circuit arrangement with numerous logic circuits and routing interconnect circuits.</p>
<p id="p-0033" num="0032"><figref idref="DRAWINGS">FIG. 24</figref> illustrates a circuit arrangement that has numerous logic circuits and interconnect circuits arranged in numerous rows and columns.</p>
<p id="p-0034" num="0033"><figref idref="DRAWINGS">FIG. 25</figref> illustrates a two-input multiplexer that receives variables “b” and “c” on its input lines and variable “a” on its select line.</p>
<p id="p-0035" num="0034"><figref idref="DRAWINGS">FIG. 26</figref> illustrates that the multiplexer can perform the AND function by routing a binary 0 to its second input.</p>
<p id="p-0036" num="0035"><figref idref="DRAWINGS">FIG. 27</figref> illustrates that routing a binary 1 to the multiplexer's first input, allows the multiplexer to perform the OR function, which is one of the NPN equivalent functions of the AND function.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 28</figref> illustrates a two-input multiplexer that implements an XOR function.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 29</figref> illustrates an example of an HUMUX that has a core multiplexer that operates like the multiplexer of <figref idref="DRAWINGS">FIGS. 25-27</figref> as it receives the user signal “a” through the select multiplexer.</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 30</figref> illustrates another example of an HUMUX that has a core multiplexer that operates like the multiplexer of <figref idref="DRAWINGS">FIG. 28</figref> as it receives the user signal “a” through the select multiplexer.</p>
<p id="p-0040" num="0039"><figref idref="DRAWINGS">FIG. 31</figref> illustrates a recursive process that a synthesizer can perform to decompose a function.</p>
<p id="p-0041" num="0040"><figref idref="DRAWINGS">FIG. 32</figref> illustrates an eight-to-one HUMUX that is formed by four multiplexers.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 33</figref> illustrates a multiplexer that is used as the multiplexer in <figref idref="DRAWINGS">FIG. 32</figref>.</p>
<p id="p-0043" num="0042"><figref idref="DRAWINGS">FIG. 34</figref> illustrates a CPL implementation of a two-tier multiplexer structure for generating the second signal S<b>1</b> and its complement.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 35</figref> illustrates an example of the signals CLK, ST<b>0</b>, and ST<b>1</b>.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 36</figref> illustrates a circuit implementation of the combined multiplexer structure.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 37</figref> illustrates another implementation of an HUMUX, which can operate based on a configuration-derived select signal S<b>0</b>, a first user signal US<b>0</b>, or a second user signal US<b>1</b>.</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 38</figref> illustrates a circuit implementation of the combined multiplexer structure of <figref idref="DRAWINGS">FIG. 37</figref>.</p>
<p id="p-0048" num="0047"><figref idref="DRAWINGS">FIG. 39</figref> illustrates another alternative circuit structure for one set of multiplexers in a two-tiered multiplexer structure of some embodiments.</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 40</figref> illustrates an architecture that is formed by numerous configurable tiles that are arranged in an arrangement with multiple rows and columns.</p>
<p id="p-0050" num="0049"><figref idref="DRAWINGS">FIGS. 41-45</figref> illustrate the connection scheme used to connect the multiplexers of one tile with the LUT's and multiplexers of other tiles.</p>
<p id="p-0051" num="0050"><figref idref="DRAWINGS">FIG. 46</figref> illustrates a possible physical architecture of the configurable IC illustrated in <figref idref="DRAWINGS">FIG. 40</figref>.</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 47</figref> illustrates a portion of a configurable IC of some embodiments of the invention.</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 48</figref> illustrates a detailed example of configuration data that configure the circuits to perform particular operations.</p>
<p id="p-0054" num="0053"><figref idref="DRAWINGS">FIG. 49</figref> illustrates a system on chip (“SoC”) implementation of a configurable IC.</p>
<p id="p-0055" num="0054"><figref idref="DRAWINGS">FIG. 50</figref> illustrates a system in package (“SiP”) implementation for a configurable IC.</p>
<p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. 51</figref> conceptually illustrates a more detailed example of a computing system that has an IC, which includes one of the invention's configurable circuit arrangements that were described above.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0006" level="1">DETAILED DESCRIPTION OF THE INVENTION</heading>
<p id="p-0057" num="0056">In the following description, numerous details are set forth for purpose of explanation. However, one of ordinary skill in the art will realize that the invention may be practiced without the use of these specific details. For instance, not all embodiments of the invention need to be practiced with the specific number of bits and/or specific devices (e.g., multiplexers) referred to below. In other instances, well-known structures and devices are shown in block diagram form in order not to obscure the description of the invention with unnecessary detail.</p>
<p id="h-0007" num="0000">I. Terms and Concepts</p>
<p id="p-0058" num="0057">A configurable IC is an IC that has configurable circuits. In some embodiments, a configurable IC includes configurable computational units (e.g., configurable logic circuits) and configurable routing circuits for routing the signals to and from the configurable computation units. In addition to configurable circuits, a configurable IC also typically includes non-configurable circuits (e.g., non-configurable logic circuits, interconnect circuits, memories, etc.).</p>
<p id="p-0059" num="0058">A configurable circuit is a circuit that can “configurably” perform a set of operations. Specifically, a configurable circuit receives “configuration data” that specifies the operation that the configurable circuit has to perform in the set of operations that it can perform. In some embodiments, configuration data is generated outside of the configurable IC. In these embodiments, a set of software tools typically converts a high-level IC design (e.g., a circuit representation or a hardware description language design) into a set of configuration data that can configure the configurable IC (or more accurately, the configurable IC's configurable circuits) to implement the IC design.</p>
<p id="p-0060" num="0059">Examples of configurable circuits include configurable interconnect circuits and configurable logic circuits. An interconnect circuit is a circuit that can connect an input set to an output set in a variety of manners. <figref idref="DRAWINGS">FIG. 1</figref> presents a block diagram of a controllable interconnect circuit. This circuit <b>100</b> has a set of input terminals <b>105</b>, a set of output terminals <b>110</b>, and a set of control terminals <b>115</b>. The interconnect circuit <b>100</b> receives control data along its control terminals <b>115</b> that causes the interconnect circuit to connect its input terminal set <b>105</b> to its output terminal set <b>110</b> in a particular manner.</p>
<p id="p-0061" num="0060">An interconnect circuit can connect two terminals or pass a signal from one terminal to another by establishing an electrical path between the terminals. Alternatively, an interconnect circuit can establish a connection or pass a signal between two terminals by having the value of a signal that appears at one terminal appear at the other terminal. In connecting two terminals or passing a signal between two terminals, an interconnect circuit in some embodiments might invert the signal (i.e., might have the signal appearing at one terminal inverted by the time it appears at the other terminal). In other words, the interconnect circuit of some embodiments implements a logic inversion operation in conjunction to its connection operation. Other embodiments, however, do not build such an inversion operation in some or all of their interconnect circuits.</p>
<p id="p-0062" num="0061">A multiplexer is one example of an interconnect circuit. A multiplexer is a device that has k inputs, n outputs, and s select lines. The select lines typically direct the multiplexer to output n of its k inputs along its n outputs. <figref idref="DRAWINGS">FIG. 2</figref> illustrates an example of a multiplexer. This example is a four-to-one multiplexer <b>200</b> that connects one of its four input lines <b>105</b> to its output line <b>205</b> based on the control signals <b>115</b> that it receives along its two select lines.</p>
<p id="p-0063" num="0062">A configurable interconnect circuit is an interconnect circuit that can configurably perform a set of connection operations. In some embodiments, a configurable interconnect circuit only receives configuration data along its set of control lines. Also, in some embodiments, all of the configurable interconnect circuit's control lines are permanently tied to configuration data. Specifically, in these embodiments, the configurable interconnect circuit's control lines receive configuration data either directly from the storage elements that store the configuration data, or through an indirect connection to these storage elements via one or more interconnect circuits that do not receive configuration data along their control terminals.</p>
<p id="p-0064" num="0063"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an example of a configurable four-to-one multiplexer <b>300</b> that receives configuration data from a set of storage elements <b>320</b> (e.g., a set of memory cells, such as SRAM cells). This multiplexer <b>300</b> connects one of its four input terminals <b>105</b> to its output terminal <b>205</b> based on the configuration data <b>115</b> that is output from the storage elements <b>320</b>. In other words, the configuration data specify how the interconnect circuit <b>300</b> should connect the input terminal set <b>105</b> to the output terminal <b>205</b>.</p>
<p id="p-0065" num="0064">The multiplexer <b>300</b> is said to be configurable, as the configuration data set “configures” this multiplexer to use a particular connection scheme that connects its input and output terminal sets in a desired manner. Examples of configurable interconnect circuits can be found in Architecture and CAD for Deep-Submicron FPGAs, Betz, et al., ISBN 0792384601, 1999; and Design of Interconnection Networks for Programmable Logic, Lemieux, et al., ISBN 1-4020-7700-9, 2003. Other examples of configurable interconnect circuits can be found in U.S. patent application Ser. No. 10/882,583, entitled “Configurable Circuits, IC's, and Systems,” filed on Jun. 30, 2004. This application is incorporated in the present application by reference.</p>
<p id="p-0066" num="0065">A logic circuit is a circuit that can perform a function on a set of input data that it receives. A configurable logic circuit is a logic circuit that can configurably perform a set of functions. In some embodiments, a configurable logic circuit only receives configuration data along its set of control lines. In some embodiments, all of the configurable logic circuit's control lines are permanently tied to configuration data. Specifically, in these embodiments, the configurable logic circuit's control lines receive configuration data either directly from the storage elements that store the configuration data, or through an indirect connection to these storage elements via one or more interconnect circuits that do not receive configuration data along their control lines.</p>
<p id="p-0067" num="0066"><figref idref="DRAWINGS">FIG. 4</figref> illustrates a configurable logic circuit. As shown in this figure, a configurable logic circuit <b>400</b> is a logic circuit that receives configuration data along its set of control lines <b>410</b>. In this example, the configurable logic circuit receives configuration data from a set of storage elements (e.g., SRAM's) <b>415</b>. The logic circuit <b>400</b> is said to be configurable, as the configuration data set “configures” the logic circuit to perform a particular function (from its set of functions) on the input data received along its input terminals <b>405</b> to produce its output data (that is provided along its output terminal set <b>420</b>). The logic circuit <b>400</b> can be reconfigured by writing new data in the storage elements <b>415</b>.</p>
<p id="p-0068" num="0067">Some examples of logic circuits include look-up tables (LUT's), universal logic modules (ULM's), sub-ULM's, multiplexers, and PAL's/PLA's. In addition, logic circuits can be complex logic circuits formed by multiple logic and interconnect circuits. Examples of simple and complex logic circuits can be found in Architecture and CAD for Deep-Submicron FPGAs, Betz, et al., ISBN 0792384601, 1999; and Design of Interconnection Networks for Programmable Logic, Lemieux, et al., ISBN 1-4020-7700-9, 2003. Other examples of configurable logic circuits are provided in the above-incorporated U.S. patent application Ser. No. 10/882,583.</p>
<p id="p-0069" num="0068">As further described below, multiplexers can be used as the logic circuits of some embodiments of the invention. Also, some embodiments use non-configurable logic circuits (i.e., logic circuits that do not receive configuration data or any other control signals). These logic circuits are simple computation circuits that perform a particular computation on an input data set.</p>
<p id="p-0070" num="0069">A volatile configurable circuit is a configurable circuit that directly or indirectly receives its configuration data from a volatile memory storage. The volatile storage is typically part of the configurable circuit or it is placed adjacent to the configurable circuit within a circuit array that contains the configurable circuit. For instance, the multiplexer <b>300</b> is a volatile configurable multiplexer as its configuration data is stored in two volatile storage elements <b>320</b> of the multiplexer. Similarly, the logic circuit <b>400</b> is a volatile circuit as its configuration data is stored in its four storage elements <b>415</b>. However, the volatile storage does not need to be part of or adjacent to the configurable circuit.</p>
<p id="p-0071" num="0070">A user-design signal within a configurable IC is a signal that is generated by a circuit (e.g., logic circuit) of the configurable IC. The word “user” in the term “user-design signal” connotes that the signal is a signal that the configurable IC generates for a particular application that a user has configured the IC to perform. User-design signal is abbreviated to user signal in some of the discussion below.</p>
<p id="p-0072" num="0071">In some embodiments, a user signal is not a configuration or clock signal that is generated by or supplied to the configurable IC. In some embodiments, a user signal is a signal that is a function of at least a portion of the configuration data received by the configurable IC and at least a portion of the inputs to the configurable IC. In these embodiments, the user signal can also be dependent on (i.e., can also be a function of) the state of the configurable IC. The initial state of a configurable IC is a function of the configuration data received by the configurable IC and the inputs to the configurable IC. Subsequent states of the configurable IC are functions of the configuration data received by the configurable IC, the inputs to the configurable IC, and the prior states of the configurable IC.</p>
<p id="p-0073" num="0072">A circuit array is an array with several circuit elements that are arranged in several rows and columns. One example of a circuit array is a configurable node array, which is an array formed by several configurable circuits (e.g., configurable logic and/or interconnect circuits) arranged in rows and columns. In some cases, all the circuit elements in a configurable node array are configurable circuit elements. For instance, <figref idref="DRAWINGS">FIG. 5</figref> illustrates an example of a configurable node array <b>500</b> that includes 208 configurable nodes <b>505</b> that are arranged in 13 rows and 16 columns. Each configurable node in such a configurable node array is a configurable circuit that includes one or more configurable sub-circuits. In other cases, the circuit elements in a configurable node array also include non-configurable circuit elements.</p>
<p id="p-0074" num="0073">In some embodiments, each configurable node in a configurable node array is a simple or complex configurable logic circuit. In some embodiments, each configurable node in a configurable node array is a configurable interconnect circuit. In such an array, a configurable node (i.e., a configurable interconnect circuit) can connect to one or more logic circuits. In turn, such logic circuits in some embodiments might be arranged in terms of another configurable logic-circuit array that is interspersed among the configurable interconnect-circuit array.</p>
<p id="p-0075" num="0074">Some embodiments might organize the configurable circuits in an arrangement that does not have all the circuits organized in an array with several aligned rows and columns. Accordingly, instead of referring to configurable circuit arrays, the discussion below refers to configurable circuit arrangements. Some arrangements may have configurable circuits arranged in one or more arrays, while other arrangements may not have the configurable circuits arranged in an array.</p>
<p id="p-0076" num="0075">In some embodiments, some or all configurable circuits in a circuit arrangement have the same or similar circuit structure. For instance, in some embodiments, some or all the circuits have the exact same circuit elements (e.g., have the same set of logic gates and circuit blocks and/or same interconnect circuits), where one or more of these identical elements are configurable elements. One such example would be a set of circuits positioned in an arrangement, where each circuit is formed by a particular set of logic and interconnect circuits. Having circuits with the same circuit elements simplifies the process for designing and fabricating the IC, as it allows the same circuit designs and mask patterns to be repetitively used to design and fabricate the IC.</p>
<p id="p-0077" num="0076">In some embodiments, the similar configurable circuits not only have the same circuit elements but also have the same exact internal wiring between their circuit elements. For instance, in some embodiments, a particular set of logic and interconnect circuits that are wired in a particular manner forms each circuit in a set of configurable circuits that are in a configurable circuit arrangement. Having such circuits further simplifies the design and fabrication processes as it further simplifies the design and mask making processes.</p>
<p id="p-0078" num="0077">Also, some embodiments use a circuit arrangement that includes numerous configurable and non-configurable circuits that are placed in multiple rows and columns. In addition, within the above described circuit arrangements (e.g., arrays), some embodiments disperse other circuits (e.g., memory blocks, macro blocks, etc.).</p>
<p id="p-0079" num="0078">Several figures below illustrate several direct connections between circuits in a circuit arrangement. A direct connection between two circuits in an circuit arrangement is an electrical connection between the two circuits that is achieved by (1) a set of wire segments that traverse through a set of the wiring layers of the IC, and (2) a set of vias when two or more wiring layers are involved.</p>
<p id="p-0080" num="0079">In some embodiments, a connection between two circuits in a circuit arrangement might also include a set of buffer circuits in some cases. In other words, two circuits are connected in some embodiments by a set of wire segments that possibly traverse through a set of buffer circuits and a set of vias. Buffer circuits are not interconnect circuits or configurable logic circuits. In some embodiments, buffer circuits are part of some or all connections. Buffer circuits might be used to achieve one or more objectives (e.g., maintain the signal strength, reduce noise, alter signal delay, etc.) along the wire segments that establish the direct connections. Inverting buffer circuits may also allow an IC design to reconfigure logic circuits less frequently and/or use fewer types of logic circuits. In some embodiments, buffer circuits are formed by one or more inverters (e.g., two or more inverters that are connected in series).</p>
<p id="p-0081" num="0080"><figref idref="DRAWINGS">FIGS. 6 and 7</figref> illustrate examples of two connections, each between two circuits in an arrangement. Each of these connections has one or more intervening buffer circuits. Specifically, <figref idref="DRAWINGS">FIG. 6</figref> illustrates an example of a connection <b>615</b> between two circuits <b>605</b> and <b>610</b>. As shown in this figure, this connection has an intervening buffer circuit <b>620</b>. In some embodiments, the buffer circuit <b>620</b> is an inverter. Accordingly, in these embodiments, the connection <b>615</b> inverts a signal supplied by one circuit <b>605</b> to the other circuit <b>610</b>.</p>
<p id="p-0082" num="0081"><figref idref="DRAWINGS">FIG. 7</figref> illustrates an example of a connection <b>715</b> between two circuits <b>705</b> and <b>710</b>. As shown in this figure, this connection <b>715</b> has two intervening buffer circuits <b>720</b> and <b>725</b>. In some embodiments, the buffer circuits <b>720</b> and <b>725</b> are inverters. Hence, in these embodiments, the connection <b>715</b> does not invert a signal supplied by circuit <b>705</b> to the other circuit <b>710</b>.</p>
<p id="p-0083" num="0082">Alternatively, the intermediate buffer circuits between the logic and/or interconnect circuits can be viewed as a part of the devices illustrated in these figures. For instance, the inverters that can be placed after the devices <b>705</b> and <b>710</b> can be viewed as being part of these devices. Some embodiments use such inverters in order to allow an IC design to reconfigure logic circuits less frequently and/or use fewer types of logic circuits.</p>
<p id="p-0084" num="0083">Several figures below “topologically” illustrate several direct connections between circuits in an arrangement. A topological illustration is an illustration that is only meant to show a direct connection between two circuits without specifying a particular geometric layout for the wire segments that establish the direct connection.</p>
<p id="h-0008" num="0000">II. UMUX</p>
<p id="p-0085" num="0084">Some embodiments are configurable IC's that have “UMUX's”. A UMUX is a multiplexer that receives user-design signals for at least one of its data inputs and one of its select inputs. A UMUX might receive a user-design signal directly from a configurable logic circuit or indirectly through one or more intermediate configurable interconnect circuits.</p>
<p id="p-0086" num="0085">Two kinds of UMUX's are full UMUX's and hybrid UMUX's. A full UMUX (or FUMUX) is a UMUX that receives user-design signals for all of its select signals. <figref idref="DRAWINGS">FIG. 8</figref> illustrates a full UMUX <b>800</b>. This UMUX has a set of input terminals <b>805</b>, an output terminal <b>810</b>, and a set of select terminals <b>815</b>. The UMUX <b>800</b> is a four-to-one multiplexer that connects one of its four data inputs <b>805</b> to its data output <b>810</b> based on the value of the two user-signals that it receives along its select terminals <b>815</b>.</p>
<p id="p-0087" num="0086">A hybrid UMUX (or HUMUX) is a UMUX that can receive user-design signals, configuration data, or both user-design signals and configuration data for its select signals. <figref idref="DRAWINGS">FIG. 9</figref> illustrates an HUMUX <b>900</b>. This HUMUX includes two two-to-one multiplexers <b>920</b>, a four-to-one multiplexer <b>925</b>, a set of input terminals <b>905</b>, an output terminal <b>910</b>, and a set of select terminals <b>915</b>. From the outside, the HUMUX looks like a four-to-one multiplexer that has four data inputs <b>905</b>, one data output <b>910</b>, and four select terminals <b>915</b>. Also, from the outside, the HUMUX looks like it passes one of its four data inputs <b>905</b> to its one data output <b>910</b> based on the value of two of the four signals that it receives along its four select lines <b>915</b>.</p>
<p id="p-0088" num="0087">Internally, the two two-to-one multiplexers <b>920</b> pass two of the signals from the four select lines <b>915</b> to the two select terminals <b>940</b> of the four-to-one multiplexer <b>925</b>. As shown in <figref idref="DRAWINGS">FIG. 9</figref>, each two-to-one multiplexer <b>920</b> receives two input signals, which include one user-design signal and one stored configuration signal stored in a storage element <b>945</b>. Each of the two-to-one multiplexers <b>920</b> outputs one of the two input signals that it receives based on the configuration bit that it receives along its select line <b>950</b>. Although <figref idref="DRAWINGS">FIG. 9</figref> illustrates two configuration bits stored in two storage elements, other embodiments might drive both multiplexers <b>920</b> off one configuration bit that is stored in one storage element.</p>
<p id="p-0089" num="0088">The two signals output by the two multiplexers <b>920</b> then serve as the select signals of the multiplexer <b>925</b>, and thereby direct this multiplexer to output on line <b>910</b> one of the four input signals that it receives on lines <b>905</b>. The two multiplexers <b>920</b> can output on lines <b>940</b> either two user-design signals, two configuration signals, or one user-design signal and one configuration signal. Accordingly, through the two multiplexers <b>920</b>, the operation of the multiplexer <b>925</b> can be controlled by two user-design signals, two configuration signals, or a mix of user/configuration signals.</p>
<p id="p-0090" num="0089">References to UMUX's in the description below should be construed to cover either a FUMUX or an HUMUX.</p>
<p id="h-0009" num="0000">III. UMUX Architectures</p>
<p id="p-0091" num="0090">Different embodiments of the invention use UMUX's differently in different configurable IC architectures. Some embodiments have a number of UMUX's dispersed between the circuits of a circuit arrangement. <figref idref="DRAWINGS">FIGS. 10 and 11</figref> illustrate two such embodiments. <figref idref="DRAWINGS">FIG. 10</figref> illustrates that some embodiments place the UMUX's <b>1005</b> between the circuits <b>1010</b> of a circuit arrangement <b>1000</b> according to no particular pattern. <figref idref="DRAWINGS">FIG. 11</figref>, on the other hand, illustrates that some embodiments place UMUX's <b>1105</b> between the circuits <b>1110</b> according to a particular pattern that repeats across the entire circuit arrangement <b>1100</b> or a portion of the arrangement. In <figref idref="DRAWINGS">FIG. 11</figref>, the pattern that is repeated is one that is formed by five UMUX's <b>1105</b><i>a</i>-<b>1105</b><i>e. </i></p>
<p id="p-0092" num="0091">The circuits (e.g., <b>1110</b> or <b>1010</b>) in such circuit arrangements are all logic circuits in some embodiments, while they are interconnect circuits in other embodiments. In yet other embodiments, the circuits (e.g., <b>1110</b> or <b>1010</b>) in the circuit arrangement are both logic and interconnect circuits. Also, in some embodiments, the circuit arrangement is a configurable circuit arrangement. Thus, in these embodiments, all the circuits in the circuit arrangement are configurable circuits (i.e., all the circuits are configurable logic circuits, configurable interconnect circuits, or a mixture of configurable logic and interconnect circuits). In some of these embodiments, all or some of the configurable circuits are configurable volatile circuits (i.e., they are configurable volatile logic and/or interconnect circuits).</p>
<p id="p-0093" num="0092">In the embodiments that disperse UMUX's between the circuits of a circuit arrangement, the UMUX's can be arranged in one or more arrangements. <figref idref="DRAWINGS">FIG. 12</figref> illustrates an example where a number of UMUX's <b>1205</b>, that are dispersed between the circuits <b>1210</b> of a circuit arrangement, form an arrangement of their own. <figref idref="DRAWINGS">FIG. 13</figref> illustrates an example of arranging UMUX's <b>1305</b> and <b>1315</b> in two arrays that are dispersed between the circuits <b>1310</b> of a circuit arrangement. Specifically, the UMUX's <b>1305</b> form one array, while the UMUX's <b>1315</b> form another array.</p>
<p id="p-0094" num="0093">Some embodiments position the UMUX's in a circuit arrangement with other types of circuits. <figref idref="DRAWINGS">FIG. 14</figref> illustrates an example of a UMUX <b>1405</b> that is positioned in an arrangement of circuit elements <b>1410</b>. This UMUX receives input signals from two circuit elements <b>1410</b><i>a </i>and <b>1410</b><i>b</i>, and receives select signals from two circuits elements <b>1410</b><i>c </i>and <b>1410</b><i>d</i>. The UMUX <b>1405</b> then outputs a signal to circuit element <b>1410</b><i>e</i>. All the circuit elements <b>1410</b> are configurable circuits (e.g., configurable logic and/or interconnect circuits) in some embodiments. Also, in some embodiments, all these configurable elements are volatile elements. In other embodiments, only some of the circuit elements <b>1410</b> are volatile configurable circuit elements, while other circuit elements are non-volatile configurable circuit elements or non-configurable circuit elements.</p>
<p id="p-0095" num="0094">UMUX's can receive user-design signals directly from logic circuits, or indirectly from logic circuits through intervening interconnect circuits. <figref idref="DRAWINGS">FIG. 15</figref> illustrates a circuit arrangement having logic circuits <b>1510</b>, interconnect circuits <b>1505</b>, and UMUX's <b>1515</b>. In this example, a UMUX <b>1515</b><i>a </i>receives a user-design signal, as a select signal, directly from logic circuit <b>1510</b><i>a</i>, and receives a user-design signal, as an input signal, directly from the logic circuit <b>1510</b><i>b</i>. This figure also illustrates a UMUX <b>1515</b><i>b </i>that receives a user-design signal as an input signal from logic circuit <b>1510</b><i>d </i>through intervening interconnect circuits <b>1505</b><i>b </i>and <b>1505</b><i>c</i>. It also illustrates this UMUX <b>1515</b><i>b </i>receiving a user-design signal as a select signal from logic circuit <b>1510</b><i>c </i>through interconnect circuit <b>1505</b><i>a</i>. Finally, this figure illustrates a UMUX <b>1515</b><i>c </i>that receives a first user-design signal directly from a logic circuit <b>1510</b><i>d</i>, and a second user-design signal indirectly from the logic circuit <b>1510</b><i>b </i>through the interconnect circuit <b>1505</b><i>d</i>. In some embodiments, the intervening interconnect circuits <b>1505</b><i>a</i>, <b>1505</b><i>b</i>, <b>1505</b><i>c</i>, and <b>1505</b><i>d </i>are volatile configurable interconnect circuits.</p>
<p id="p-0096" num="0095">In the examples illustrated in <figref idref="DRAWINGS">FIGS. 10-15</figref>, UMUX's are part of or are dispersed within a large circuit arrangement that has numerous circuits (e.g., tens, hundreds, thousands, etc. of circuits). In other words, these examples illustrate the use of UMUX's at a macrolevel in configurable IC's. However, in some embodiments, UMUX's are used at the microlevel in a circuit arrangement (e.g., within a circuit or circuits of a large circuit or circuit arrangement) of a configurable IC. For instance, in some embodiments, the circuits in a configurable IC's circuit arrangement include complex logic circuits that are formed by multiple logic and interconnect circuits. In such embodiments, complex logic circuits can be formed by one or more UMUX's.</p>
<p id="p-0097" num="0096"><figref idref="DRAWINGS">FIG. 16</figref> illustrates an example of such an embodiment. Specifically, this figure illustrates a circuit arrangement <b>1600</b> that includes a number of logic circuits <b>1605</b> arranged in a number of rows and columns. This figure further illustrates an exploded view <b>1610</b> of one of the logic circuits <b>1605</b><i>a</i>. As shown in this view, the logic circuit <b>1605</b><i>a </i>is formed by four UMUX's <b>1615</b> and one interconnect circuit <b>1620</b>. Each of the UMUX's receives input signals and user-design signals, which direct the UMUX to output one of its input signals. The UMUX output signals are provided to the configurable interconnect circuit <b>1620</b>, which then outputs one or more of these output signals as the output of the logic circuit <b>1605</b><i>a. </i></p>
<p id="p-0098" num="0097">In some embodiments, all the logic circuits <b>1605</b> in the array <b>1600</b> have the structure of the logic circuit <b>1605</b><i>a</i>. In other embodiments, only some of the logic circuits <b>1605</b> have this structure, while other logic circuits have a different structure. For instance, some embodiments use configurable logic circuits in combination with the UMUX-based logic circuits (i.e., with logic circuits that are similar to the circuit <b>1605</b><i>a</i>). Other embodiments use non-configurable logic circuits with the UMUX-based logic circuits. Yet other embodiments use a combination of configurable logic circuits, non-configurable logic circuits, and UMUX-based logic circuits.</p>
<p id="h-0010" num="0000">IV. Applications</p>
<p id="p-0099" num="0098">A. Supering</p>
<p id="p-0100" num="0099">Some embodiments use UMUX's for “supering” multiple logic circuits. Supering refers to combining the outputs of multiple logic circuits to form a more complex logic circuit. <figref idref="DRAWINGS">FIG. 17</figref> illustrates one such embodiment. This figure illustrates a macro-level view of a configurable circuit arrangement <b>1700</b> with numerous (e.g., hundreds, thousands, etc.) circuits arranged in rows and columns. This array includes numerous configurable volatile logic circuits <b>1705</b>, configurable volatile interconnect circuits <b>1710</b>, and UMUX's <b>1715</b>.</p>
<p id="p-0101" num="0100">As shown in <figref idref="DRAWINGS">FIG. 17</figref>, one UMUX <b>1715</b><i>a </i>receives as input signals the outputs of two logic circuits <b>1705</b><i>a </i>and <b>1705</b><i>b </i>through two intervening configurable interconnect circuits <b>1710</b><i>a </i>and <b>1710</b><i>b</i>. This UMUX <b>1715</b><i>a </i>also receives as a select signal the output of a logic circuit <b>1705</b><i>c </i>through an intervening configurable interconnect circuit <b>1710</b><i>c</i>, which is a volatile configurable circuit in some embodiments. Based on the received select signal, the UMUX <b>1715</b><i>a </i>performs a function on its received input signals. The UMUX performs this function by outputting one of its input signals along its output line based on the value of the received select signal.</p>
<p id="p-0102" num="0101">The circuit structure illustrated in <figref idref="DRAWINGS">FIG. 17</figref> can be used to implement a four-input LUT with two three-input LUT's and a UMUX. In other words, if the logic circuits <b>1705</b><i>a </i>and <b>1705</b><i>b </i>are three-input LUT's, the UMUX <b>1715</b><i>a </i>can be used to create a “super” four-input LUT by combining the outputs of three-input LUT's <b>1705</b><i>a </i>and <b>1705</b><i>b </i>based on the output of the logic circuit <b>1705</b><i>c</i>. In this case, the supered four-input LUT is the circuit formed by LUT's <b>1705</b><i>a </i>and <b>1705</b><i>b</i>, the interconnect circuit <b>1710</b><i>a</i>, and the UMUX <b>1715</b><i>a. </i></p>
<p id="p-0103" num="0102">B. Memory</p>
<p id="p-0104" num="0103">Some embodiments of the invention use UMUX's to implement configurable circuit arrangements with configurable memory read and write operations. Some configurable IC's today have configurable circuit arrangements with configurable memory structures. <figref idref="DRAWINGS">FIG. 18</figref> illustrates one such prior configurable circuit arrangement <b>1800</b>. This circuit arrangement includes numerous configurable circuits <b>1805</b> that are arranged in rows and columns. It also includes two configurable memories <b>1810</b>. Each of these two memories includes a memory array <b>1820</b>, i/o circuitry <b>1825</b>, and configuration-storing storage elements <b>1830</b>.</p>
<p id="p-0105" num="0104">The configuration-storing storage elements <b>1830</b> store configuration data. This data configures each memory to input and/or output a certain number of bits. Specifically, the memory array <b>1820</b> receives an address along its address line <b>1835</b>. During a write operation, the address identifies a location in the memory to which the i/o circuitry needs to write a fixed number of bits. Alternatively, during a read operation, this address identifies a location in the memory from which the i/o circuitry needs to read a fixed number of bits (e.g., 8 bits).</p>
<p id="p-0106" num="0105">The i/o circuitry <b>1825</b> receives configuration data from the storage elements <b>1830</b>. Based on the received configuration data, the i/o circuitry then outputs a sub-set of the data bits (e.g., outputs 4 bits) that it receives from the memory array <b>1820</b> during a read operation. In other words, the number of bits that the i/o circuitry might output from a location in the memory array depends on the configuration data stored in the configuration-storing storage elements <b>1830</b>.</p>
<p id="p-0107" num="0106">Requiring the memories <b>1810</b> to have configuration storage elements <b>1830</b> and/or circuitry responsive to these storage elements complicates the structure of these memories, and thereby increases their size. Accordingly, to use simpler memory structures in a configurable circuit arrangement of a configurable IC, some embodiments use UMUX's to implement configurable circuit arrangements with configurable memory read operations.</p>
<p id="p-0108" num="0107"><figref idref="DRAWINGS">FIG. 19</figref> illustrates one such embodiment. This figure illustrates a configurable circuit arrangement <b>1900</b> that includes numerous configurable interconnect circuits <b>1905</b>, UMUX's <b>1910</b>, and logic circuits <b>1920</b>. The interconnect circuits <b>1905</b> are arranged in an arrangement with several rows and columns. Dispersed within this arrangement of interconnect circuits are the logic circuits, which are also arranged in an arrangement with multiple rows and columns. The UMUX's are dispersed within these arrangements. Several memories <b>1915</b> are also dispersed within these arrangements. In some embodiments, these memories all have the same width. For instance, in some cases, these memories are 256 byte memories that output eight-bit words.</p>
<p id="p-0109" num="0108"><figref idref="DRAWINGS">FIG. 19</figref> illustrates two examples for reading out data from a non-configurable memory <b>1915</b><i>a</i>. The output of each of these memories is always eight-bits wide. To read out a byte of data (i.e., to read out eight bits of data), each memory (e.g., <b>1915</b><i>a</i>) receives an eight-bit address that identifies one of 256 locations in the memory.</p>
<p id="p-0110" num="0109">As shown in <figref idref="DRAWINGS">FIG. 19</figref>, the eight-bit wide output of the memory <b>1915</b><i>a </i>can be supplied directly to a logic circuit <b>1920</b><i>a </i>through an interconnect circuit <b>1905</b><i>a</i>. Alternatively, as shown in this figure, a four-bit wide output of the memory <b>1915</b><i>a </i>can be supplied to the logic circuit <b>1920</b><i>b </i>through a UMUX <b>1910</b><i>a</i>. Specifically, through the interconnect circuit <b>1905</b><i>a</i>, the eight-bit wide output can be supplied to the UMUX <b>1910</b><i>a</i>. The UMUX <b>1910</b><i>a </i>is an 8×4 multiplexer that outputs either its bottom four input signals or its top four input signals to a logic circuit <b>1920</b><i>b</i>. Specifically, the UMUX <b>1910</b><i>a </i>receives a signal <b>1925</b> on its select line. Based on the value of this signal, the UMUX then selects its bottom four input signals or its top four input signals to output.</p>
<p id="p-0111" num="0110">The bit <b>1925</b> that the UMUX <b>1910</b><i>a </i>receives can be viewed as a ninth address bit that helps identify and output a 4-bit word from the memory <b>1915</b><i>a</i>. In other words, the UMUX <b>1910</b><i>a </i>allows the 256×8 memory, which is accessed with an eight-bit address, to be treated as a 512×4 memory that is accessible with a nine-bit address.</p>
<p id="p-0112" num="0111"><figref idref="DRAWINGS">FIG. 20</figref> illustrates an example of using UMUX's to write data to a non-configurable memory array <b>2015</b> in a configurable circuit arrangement <b>2000</b>. In this figure, the memory array has a set <b>2005</b> of four UMUX's to the right of the memory array. In the example illustrated in <figref idref="DRAWINGS">FIG. 20</figref>, the UMUX set <b>2005</b> is used for writing data to the memory array. The output of the UMUX set <b>2005</b> connects to the memory array through a set of configurable interconnects <b>2025</b>, while the input of the UMUX set <b>2005</b> connects to the memory array through a set of configurable interconnects <b>2020</b>.</p>
<p id="p-0113" num="0112">During a write operation, an address is supplied to the memory array <b>2015</b> that identifies a four-bit location in this array. This four-bit location is a location to which the memory array will write four bits that are supplied through the UMUX set <b>2005</b> via the interconnect set <b>2025</b>. Each UMUX in the UMUX set <b>2005</b> receives two bits. During a write operation, one bit comes from the user design, while the other bit comes from the memory. Specifically, during a write operation, the memory array <b>2015</b> provides the four bits currently stored in the location identified by the received address to the UMUX set <b>2005</b> through the interconnect set <b>2020</b>.</p>
<p id="p-0114" num="0113">During the write operation, each of the UMUX's <b>2005</b> receives a user signal on its select line that specifies, which of its two inputs (the user design input or the feedback, memory input) it should output. Through configurable interconnect set <b>2025</b>, the outputs of the UMUX's are then provided to the memory array <b>2015</b> as data to write to the identified four-bit location.</p>
<p id="p-0115" num="0114">The advantage of the UMUX-driven approach for accessing memories is that it allows all the memories in a configurable circuit arrangement to have the adjustable widths without requiring the use of configuration data. For instance, in the example illustrated in <figref idref="DRAWINGS">FIG. 20</figref>, the UMUX set <b>2005</b> allows two bits to be written in a memory that always reads and writes on a four-bit basis. Specifically, by providing one additional address bit that is decoded to provide two UMUX select signals, two UMUX provide two new bits to the memory while the other two UMUX write back to the memory two bits that it currently stores.</p>
<p id="p-0116" num="0115">The UMUX-driven approach also allows the memories to have a relatively simple structure as these memories no longer need to store configuration data or circuitry responsive to configuration data. Moreover, the UMUX-driven approach allows the user to effectively have different memory operations with simpler memory structures simply through the programmable operation of the IC.</p>
<p id="p-0117" num="0116">C. Shifter</p>
<p id="p-0118" num="0117">Some embodiments of the invention use UMUX's to implement circuit arrangements with configurable shift operations. <figref idref="DRAWINGS">FIG. 21</figref> illustrates one such embodiment. Specifically, this figure illustrates a circuit arrangement <b>2100</b> that has numerous circuits arranged in numerous rows and columns. These circuits include volatile configurable interconnect circuits <b>2105</b>, <b>2110</b>, and <b>2115</b>, and logic circuits <b>2120</b>, <b>2125</b> and <b>2130</b>.</p>
<p id="p-0119" num="0118">The logic circuit <b>2120</b> includes four four-to-one UMUX's <b>2135</b>. Each of these UMUX's serves as a shifter. These UMUX's can be used to seamlessly perform a variable shift operation whenever the output of a logic circuit in the arrangement <b>2100</b> needs to be shifted by a certain number of bits that is to be determined by the output of another logic circuit. All that needs to be done is to supply to the UMUX's through configurable interconnect circuits (1) the bits that need to be shifted, and (2) the bits that need to specify the amount of the shift.</p>
<p id="p-0120" num="0119"><figref idref="DRAWINGS">FIG. 21</figref> illustrates one example of configurably connecting the UMUX's <b>2135</b> to logic circuits in the circuit arrangement <b>2100</b>. Specifically, this figure illustrates the supplying of the output of logic circuit <b>2125</b> to the UMUX's <b>2135</b> through the configurable interconnect circuit <b>2105</b>. In this example, the output of the logic circuit <b>2125</b> is four bits wide. Also, in this example, each UMUX <b>2135</b> receives the four-bit output of the logic circuit <b>2125</b> in a different order, as shown in <figref idref="DRAWINGS">FIG. 21</figref>.</p>
<p id="p-0121" num="0120"><figref idref="DRAWINGS">FIG. 21</figref> also illustrates the supplying of the output of the logic circuit <b>2130</b> to the UMUX's <b>2135</b> through the configurable interconnect circuit <b>2110</b>. In this example, the output of the logic circuit <b>2130</b> is two-bits wide. The value of these two bits cause each of the UMUX's <b>2135</b> to output a particular one of their four input bits. This output operation of the UMUX's <b>2135</b> can result in a shift of the output of the logic circuit <b>2125</b>. For instance, lets assume that the logic circuit <b>2130</b> output is a binary value of 10. For the order of the inputs of the UMUX's <b>2135</b> illustrated in <figref idref="DRAWINGS">FIG. 21</figref>, this output from logic circuit <b>2130</b> causes the UMUX's <b>2135</b> to output <b>2301</b> (where 0, 1, 2, 3 refer to bits in the four bit output from the logic circuit <b>2125</b> and the order of that these bits are received is 0123).</p>
<p id="p-0122" num="0121">D. Interconnect Circuits</p>
<p id="p-0123" num="0122">An HUMUX blurs the line between a communication circuit and a computation circuit. In a configurable IC that can be reconfigured in real time (i.e., in a reconfigurable IC), an HUMUX can serve as a logic circuit during some clock cycles, while serving as an interconnect circuit during other clock cycles. This ability is advantageous in a variety of contexts.</p>
<p id="p-0124" num="0123">1. Hybrid Routing Mux and Logic Circuit</p>
<p id="p-0125" num="0124">An HUMUX can be used as a hybrid routing multiplexer and logic circuit in a circuit arrangement of a configurable IC. In a circuit arrangement, a routing multiplexer is an interconnect circuit that connects other logic and/or interconnect circuits in the arrangement. In some embodiments, a routing multiplexer either provides its output to several logic and/or interconnect circuits (i.e., has a fan out greater than 1), or provides its output to other interconnect circuits. An HUMUX acts as a routing mux (i.e., does not perform any computation and only serves to relay signals from other circuits) when its operation is completely controlled by configuration data. On the other hand, an HUMUX serves as a logic circuit when its operation is not completely controlled by configuration data.</p>
<p id="p-0126" num="0125"><figref idref="DRAWINGS">FIG. 22</figref> illustrates an example of a circuit arrangement <b>2200</b> that includes numerous logic circuits <b>2205</b>, interconnect circuits <b>2210</b>, and HUMUX's <b>2215</b>. In some embodiments, some or all of the logic circuits and/or interconnect circuits are configurable circuits. The above-described HUMUX <b>900</b> of <figref idref="DRAWINGS">FIG. 9</figref> is an example of an HUMUX that can be used as the HUMUX's <b>2215</b>. The HUMUX <b>900</b> acts as a four-to-one multiplexer that passes one of its four data inputs <b>905</b> to its one data output <b>910</b> based on the value of two of the four signals that it receives along its four select lines <b>915</b>. The HUMUX <b>900</b> receives two user-design signals and two configuration data bits on its four select lines. The four-to-two multiplexer <b>920</b> of this HUMUX passes two of these four signals to the two select terminals <b>940</b> of the four-to-one multiplexer <b>925</b> of the HUMUX, which, in turn, identify one of the four input signals <b>905</b> for the multiplexer <b>925</b> to output.</p>
<p id="p-0127" num="0126">Accordingly, the HUMUX's operation (1) is completely controlled by the configuration data bits when the two signals supplied to the select terminals <b>940</b> are the configuration data bits, (2) is completely controlled by the user-design signals when the two signals supplied to the select terminals <b>940</b> are users signals, and (3) is partially controlled by the user-design signals when the two signals supplied to the select terminals <b>940</b> include one user-design signal and one configuration data bit.</p>
<p id="p-0128" num="0127">As mentioned above, an HUMUX acts as a routing multiplexer when its operation is completely controlled by configuration data; otherwise, the HUMUX serves as a logic circuit. Hence, when the HUMUX <b>900</b> is used as an HUMUX <b>2215</b>, the HUMUX <b>2215</b>/<b>900</b> acts as a routing multiplexer when the two signals supplied to the select terminals <b>940</b> are the configuration data bits stored in the configuration data elements <b>945</b>. Otherwise, when at least one of the two signals supplied to the select terminals <b>940</b> is a user-design signal, the HUMUX <b>900</b> acts as a logic circuit.</p>
<p id="p-0129" num="0128">It is advantageous to use HUMUX's in a circuit arrangement of a configurable IC, because they can be used to augment the routing resources in some cycles, while augmenting the computational resources in other cycles. Having such dual-use devices not only increases the flexibility of the design of the configurable IC, but also reduces the size of the IC by requiring fewer overall number of logic and interconnect circuits.</p>
<p id="p-0130" num="0129">2. Hybrid Input-Select Multiplexer and Logic Circuit</p>
<p id="p-0131" num="0130">An HUMUX can also be used as a hybrid input-select multiplexer and logic circuit in a circuit arrangement of a configurable IC. In a circuit arrangement, an input-select multiplexer is an interconnect circuit associated with a particular logic circuit in the arrangement. This interconnect circuit receives several input signals and passes a sub-set (e.g., one) of these input signals to its corresponding logic circuit. Accordingly, in some embodiments, an input-select multiplexer provides its output to only one logic circuit (i.e., has a fan out of 1), although this is not the case in all embodiments, as further discussed below.</p>
<p id="p-0132" num="0131">One example of input-select multiplexers is presented in <figref idref="DRAWINGS">FIG. 23</figref>. This figure illustrates an example of a circuit arrangement <b>2300</b> with numerous logic circuits <b>2305</b> and routing interconnect circuits <b>2310</b>. The interconnect circuits <b>2310</b> are responsible for relaying signals between logic circuits and/or other interconnect circuits. The logic circuits, on the other hand, are responsible for performing computations on their respective input signals. In some embodiments, some or all the interconnect and/or logic are configurable circuits.</p>
<p id="p-0133" num="0132">As shown in <figref idref="DRAWINGS">FIG. 23</figref>, a logic circuit <b>2305</b><i>a </i>includes three input-select multiplexers <b>2315</b> and a core logic circuit <b>2320</b>. The three input-select multiplexers <b>2315</b> receive input signals for the core logic circuit <b>2320</b>. When operating as input-select multiplexers, these multiplexers pass a sub-set of the received input signals to the core logic circuit <b>2320</b>, which performs a function on these input signals.</p>
<p id="p-0134" num="0133">HUMUX's can be used for one or more of the input-select multiplexers <b>2315</b>. Some embodiments have an HUMUX for only one of the input-select multiplexers <b>2315</b>. An HUMUX acts as an input-select multiplexer (i.e., does not perform any computation and only serves to relay a signal to its associated logic circuit) when its operation is completely controlled by configuration data. For instance, when the HUMUX <b>900</b> of <figref idref="DRAWINGS">FIG. 9</figref> is used as the HUMUX <b>2315</b><i>a</i>, the HUMUX <b>900</b> acts as an input-select multiplexer when the two signals supplied to the select terminals <b>940</b> are the configuration data bits stored in the configuration storage elements <b>945</b>.</p>
<p id="p-0135" num="0134">Otherwise, when the operation of the HUMUX is not completely controlled by configuration data, the HUMUX <b>2315</b><i>a </i>acts as a logic circuit. For instance, when the HUMUX <b>900</b> is used as an HUMUX <b>2315</b><i>a</i>, the HUMUX <b>900</b> acts as a logic circuit when at least one of the two signals supplied to the select terminals <b>940</b> is a user-design signal.</p>
<p id="p-0136" num="0135">When such an HUMUX (i.e., an HUMUX at the input of a logic circuit) acts as a logic circuit, the HUMUX augments the computational abilities of the logic circuit. For instance, in the example illustrated in <figref idref="DRAWINGS">FIG. 23</figref>, lets assume that the core logic circuit <b>2320</b> is a three-input LUT that receives three inputs from three multiplexers <b>2315</b>. Lets further assume that the four-to-one HUMUX <b>900</b> is used as the HUMUX <b>2315</b><i>a </i>at the input of the core logic circuit <b>2320</b>. This HUMUX receives two user-signal bits <b>2330</b> and <b>2335</b> that would select one of the four inputs <b>2340</b> for output to the three-input LUT <b>2320</b>.</p>
<p id="p-0137" num="0136">The combination of the logic circuit formed by the three-input LUT <b>2320</b> and the HUMUX <b>2315</b><i>a </i>(acting as a logic circuit) serves as a four-input logic circuit. It is expected that such a four-input logic circuit would be capable of implementing as many as 50 of the 220 most prevalent four-input functions that a configurable logic circuit can perform. Such added functionality comes relatively inexpensively, as it only comes at the expense of the slightly larger size of the HUMUX as the input select multiplexer <b>2315</b>. Also, such added functionality not only increases the flexibility of the design of the configurable IC, but also might reduce the overall size of the IC by requiring fewer overall number of logic circuits.</p>
<p id="p-0138" num="0137">In some embodiments, an input-select multiplexer can have a fan out of greater than 1. In these embodiments, the input-select multiplexer still connects directly to one logic circuit so that it can select an input of this logic circuit. However, in these embodiments, the input-select multiplexer also can provide its output to other circuits in the circuit arrangement.</p>
<p id="p-0139" num="0138">3. HUMUX's as Input-Select Multiplexers, Routing Muxes, and Logic Circuits</p>
<p id="p-0140" num="0139">The IC's of some embodiments have circuit arrangements that use HUMUX's as both input-select multiplexers and routing multiplexers. <figref idref="DRAWINGS">FIG. 24</figref> illustrates one such embodiment. Specifically, this figure illustrates a circuit arrangement <b>2400</b> that has numerous logic circuits <b>2405</b> and interconnect circuits <b>2407</b> arranged in numerous rows and columns. This circuit arrangement <b>2400</b> also includes several HUMUX's as routing interconnect circuits <b>2410</b> and several HUMUX's <b>2415</b><i>a </i>as input select multiplexers <b>2415</b> of some logic circuits <b>2405</b><i>a. </i></p>
<p id="p-0141" num="0140">It is advantageous to use in a configurable IC HUMUX's as both input select multiplexers and routing interconnect multiplexers. This is because such HUMUX's allow the configurable IC to form very complex logic circuit structures relatively easily by supering logic and HUMUX circuits. Some embodiments, however, use HUMUX's only for input select multiplexers.</p>
<p id="h-0011" num="0000">V. HUMUX Useful for Decomposing all Functions</p>
<p id="p-0142" num="0141">HUMUX's are hybrid interconnect/logic circuits. In other words, as mentioned above, HUMUX's can serve as logic and interconnect circuits in a configurable IC. This hybrid quality is especially advantageous since, as logic circuits, HUMUX's can be used to decompose and implement functions. In order to decompose and implement functions with HUMUX's, some embodiments define one input of some or all HUMUX's to be a permanently inverting input.</p>
<p id="p-0143" num="0142">More specifically, some embodiments use Shannon and Davio decomposition to decompose functions. Some embodiments use the multiplexer function of the HUMUX to implement the “if-then-else” (ITE) expression needed for a Shannon decomposition. Through this ITE expression, these embodiments implement the AND function and its NPN equivalents, where NPN stands for negate input, permute input, and negate output.</p>
<p id="p-0144" num="0143"><figref idref="DRAWINGS">FIGS. 25-30</figref> illustrate how the multiplexer functionality of an HUMUX allows the HUMUX to implement the AND function and its NPN equivalents. Specifically, <figref idref="DRAWINGS">FIG. 25</figref> illustrates a two-input multiplexer <b>2500</b> that receives variables “b” and “c” on its input lines and variable “a” on its select line. As shown in this figure, this multiplexer <b>2500</b> has an output (i.e., performs a function) that can be expressed as [(a·b)+(ā·c)].</p>
<p id="p-0145" num="0144">The multiplexer <b>2500</b> can be used to generate the AND function and its NPN equivalents by routing constants to one of the multiplexer inputs and/or performing NPN operations. For instance, <figref idref="DRAWINGS">FIG. 26</figref> illustrates that the multiplexer can perform the AND function by routing a binary 0 to its second input. Similarly, <figref idref="DRAWINGS">FIG. 27</figref> illustrates that routing a binary 1 to the multiplexer's first input, allows the multiplexer to perform the OR function, which is one of the NPN equivalent functions of the AND function.</p>
<p id="p-0146" num="0145">Like Shannon decomposition, Davio decomposition relies on the multiplexer functionality. However, unlike Shannon decomposition, Davio decomposition uses the XOR function to decompose a function. <figref idref="DRAWINGS">FIG. 28</figref> illustrates a two-input multiplexer <b>2800</b> that implements an XOR function. As shown in this figure, the multiplexer <b>2800</b> has two inputs, one of which is permanently inverting. Both inputs of the multiplexer <b>2800</b> receives the same input signal “b”, while this multiplexer's select line receives the input signal “a”. Because of these input signals and the permanently inverting input, the multiplexer computes [(a· <o ostyle="single">b</o>)+(ā·c)], which is another representation of (a⊕b), i.e., of “a” XOR “b”. The multiplexer <b>2800</b> can also compute NPN equivalents of the XOR function through NPN operations (i.e., through negating its inputs, permuting its inputs, and/or negating its output).</p>
<p id="p-0147" num="0146">The multiplexers illustrated in <figref idref="DRAWINGS">FIGS. 25-28</figref> can all be the core multiplexer of an HUMUX (e.g., a multiplexer like the four-to-one multiplexer <b>925</b> of the HUMUX <b>900</b> of <figref idref="DRAWINGS">FIG. 9</figref>). When the HUMUX acts as a logic circuit, this core multiplexer receives a user signal. For instance, <figref idref="DRAWINGS">FIG. 29</figref> illustrates an example of an HUMUX <b>2900</b> that has a core multiplexer <b>2905</b> that operates like the multiplexer <b>2500</b> of <figref idref="DRAWINGS">FIGS. 25-27</figref> as it receives the user signal “a” through the select multiplexer <b>2910</b>.</p>
<p id="p-0148" num="0147"><figref idref="DRAWINGS">FIG. 30</figref> illustrates another example of an HUMUX <b>3000</b> that has a core multiplexer <b>3005</b> that operates like the multiplexer <b>2800</b> of <figref idref="DRAWINGS">FIG. 28</figref> as it receives the user signal “a” through the select multiplexer <b>3010</b>. Like the multiplexer <b>2800</b>, the core multiplexer <b>3005</b> has one permanently inverting input. One of ordinary skill will realize that other embodiments might obviate the need for a permanently inverting input in the core multiplexer of an HUMUX by routing inverted inputs to such a multiplexer.</p>
<p id="p-0149" num="0148"><figref idref="DRAWINGS">FIG. 31</figref> illustrates a recursive process <b>3100</b> that a synthesizer can perform to decompose a function. This process uses a series of Shannon and/or Davio decompositions to decompose a function with more than two inputs into one or more functions with two inputs. The synthesizer can then implement each two-input function by the multiplexers illustrated in <figref idref="DRAWINGS">FIGS. 25-28</figref> and their NPN equivalents.</p>
<p id="p-0150" num="0149">As shown in <figref idref="DRAWINGS">FIG. 31</figref>, the process <b>3100</b> initially receives (at <b>3105</b>) a function with more than two inputs. It then determines (at <b>3110</b>) whether it should use Shannon or Davio decomposition to remove one variable from the received function, in order to decompose the function. In some embodiments, the process makes this determination by using commonly known techniques, such as sifting on ordered Kronecker Decision Diagrams. For instance, some of these techniques determine whether the received function is highly dependent on a variable that the process can determine (at <b>3110</b>) to remove. If so, the process determines (at <b>3110</b>) to use the Shannon decomposition to remove the variable. Otherwise, the process determines (at <b>3110</b>) to use the Davio decomposition to remove the variable.</p>
<p id="p-0151" num="0150">When the process determines (at <b>3110</b>) to use the Shannon decomposition to remove the variable, the process transitions to <b>3115</b>. At <b>3115</b>, the process performs Shannon decomposition on the received function. The decomposition operation results in a new expression of the received function that is dependent on the removed variable and two functions that are not dependent on the removed variable. Equation (A) illustrates an example of a Shannon decomposition for a five variable function F(a,b,c,d,e).
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>F</i>(<i>a,b,c,d,e</i>)=[{<i>a·F</i><sub>1</sub>(<i>b,c,d,e</i>)}+{<i>ā·F</i><sub>0</sub>(<i>b,c,d,e</i>)}].  (A)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
As expressed in Equation (A), the Shannon decomposition can decompose the five-variable function F(a,b,c,d,e) into two four-variable functions F<sub>1 </sub>and F<sub>0</sub>, which are individually AND'ed with the removed variable “a” and its complement, where the result of the AND operations are OR'ed together. After performing the Shannon decomposition at <b>3115</b>, the process <b>3100</b> transitions to <b>3120</b>, which will be described further below.
</p>
<p id="p-0152" num="0151">When the process determines (at <b>3110</b>) to use the Davio decomposition to remove the variable, the process transitions to <b>3125</b>. At <b>3125</b>, the process performs Davio decomposition on the received function. This decomposition operation results in a new expression of the received function that is dependent on the removed variable and two functions that are not dependent on the removed variable.</p>
<p id="p-0153" num="0152">There are two variations of Davio decomposition, a positive Davio decomposition and a negative Davio decomposition. Equation (B) illustrates an example of a positive Davio decomposition for the five variable function F(a,b,c,d,e).
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>F</i>(<i>a,b,c,d,e</i>)=[{<i>a·F</i><sub>1</sub>(<i>b,c,d,e</i>)}⊕{<i>F</i><sub>2</sub>(<i>b,c,d,e</i>)}].  (B)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>F</i><sub>2</sub>(<i>b,c,d,e</i>)=<i>F</i><sub>1</sub>(<i>b,c,d,e</i>)⊕<i>F</i><sub>0</sub>(<i>b,c,d,e</i>),  (C)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where F<sub>0 </sub>and F<sub>1 </sub>are identical in Equations (A), (B), and (C). As expressed in Equation (B), the positive Davio decomposition can decompose the five-variable function F(a,b,c,d,e) into two four-variable functions F<sub>1 </sub>and F<sub>2</sub>, with the first function F<sub>1 </sub>AND'ed with the removed variable “a” and the result XOR'ed with the second function F<sub>2</sub>.
</p>
<p id="p-0154" num="0153">Equation (D) illustrates an example of a negative Davio decomposition for the five variable function F(a,b,c,d,e).
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?><i>F</i>(<i>a,b,c,d,e</i>)=[{<i>a·F</i><sub>0</sub>(<i>b,c,d,e</i>)}⊕{<i>F</i><sub>2</sub>(<i>b,c,d,e</i>)}].  (D)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where F<sub>0 </sub>and F<sub>2 </sub>are identical in Equations (A), (B), (C), and (D). As expressed in Equation (D), the negative Davio decomposition can decompose the five-variable function F(a,b,c,d,e) into two four-variable functions F<sub>0 </sub>and F<sub>2</sub>, with the first function F<sub>0 </sub>AND'ed with the removed variable “a” and the result XOR'ed with the second function F<sub>2</sub>.
</p>
<p id="p-0155" num="0154">After performing the Davio decomposition at <b>3125</b>, the process <b>3100</b> transitions to <b>3120</b>. At <b>3120</b>, the process determines whether any of the functions that resulted from the decomposition (e.g., whether functions F<sub>0</sub>, F<sub>1</sub>, or F<sub>2</sub>) has more than two variables. When the process determines (at <b>3120</b>) that none of the resulting functions have more than two variables, the process returns (at <b>3135</b>) the two-input functions that the process identified itself or identified through its recursive calls, and then ends. On the other hand, if the process determines (at <b>3120</b>) that one or more of the resulting functions has more than two variables, the process recursively calls itself (at <b>3130</b>) once for each of these functions. Once the process has received the result of its recursive call, it returns (at <b>3135</b>) the two-input functions that the process identified itself or identified through its recursive calls, and then ends.</p>
<p id="p-0156" num="0155">When the original function has been broken down into a series of two-input functions, the original function can be implemented by a series of HUMUX's that perform two-input function AND and/or XOR operations and their NPN equivalents. When an HUMUX has more than two input lines and more than one select line, the HUMUX can be reduced into a two input HUMUX by setting all the select lines except one to default values, which, in turn, renders all the inputs of the HUMUX irrelevant except two of its inputs.</p>
<p id="p-0157" num="0156">The process <b>3100</b> decomposes a function into a series of two-input functions. It is not necessary, however, for the decomposition operation to decompose the function into a series of two-input functions. The end result of other decomposition processes might include functions with three or more variables. These more complex functions, in turn, can be implemented by using other logic circuits (e.g., three or four input LUT's) or using HUMUX's with more than two inputs. Accordingly, the above-described process <b>3100</b> presents only one manner of decomposing a function. This process <b>3100</b> serves as an example of how a function with more than two variables can be decomposed through Shannon and/or Davio decomposition into a series of two input functions that can be implemented by HUMUX's.</p>
<p id="p-0158" num="0157">Also, the discussion above focuses on using HUMUX's to decompose and implement complex functions. FUMUX's, however, can also be used to decompose and implement complex functions, by having some FUMUX's with at least one input that is a permanently inverting input or that receives an inverted version of another of its inputs. The advantage of using HUMUX's in an IC, however, is that HUMUX's can serve not only as logic circuits (that can decompose and implement complex functions) but can also server as interconnect circuits.</p>
<p id="h-0012" num="0000">VI. Sub-Cycle Reconfigurable HUMUX</p>
<p id="p-0159" num="0158">Reconfigurable IC's are one type of configurable IC's. Reconfigurable IC's are configurable IC's that can reconfigure during runtime. In other words, a reconfigurable IC is an IC that has reconfigurable logic circuits and/or reconfigurable interconnect circuits, where the reconfigurable logic and/or interconnect circuits are configurable logic and/or interconnect circuits that can “reconfigure” more than once at runtime. A configurable logic or interconnect circuit reconfigures when it receives a different set of configuration data. Some embodiments of the invention are implemented in reconfigurable IC's that are sub-cycle reconfigurable (i.e., can reconfigure circuits on a sub-cycle basis).</p>
<p id="p-0160" num="0159"><figref idref="DRAWINGS">FIGS. 32-36</figref> illustrate a more detailed example of an HUMUX <b>3200</b> of some embodiments of the invention. This example is a sub-cycle reconfigurable HUMUX that is implemented in complementary pass logic (CPL) for a sub-cycle reconfigurable IC. In a CPL implementation of a circuit, a complementary pair of signals represents each logic signal, where an empty circle at the input or output of a circuit denotes the complementary input or output of the circuit in the figures. In other words, the circuit receives true and complement sets of input signals and provides true and complement sets of output signals. A sub-cycle reconfigurable IC is an IC that has reconfigurable circuits that can receive configuration data sets on a sub-cycle basis and therefore can reconfigure on a sub-cycle basis. Examples of sub-cycle reconfigurable circuits are disclosed in U.S. patent application entitled “Configurable IC with Interconnect Circuits that also Perform Storage Operations”, which is filed concurrently with the present application, with the Ser. No. 11/081,859. This application is incorporated herein by reference.</p>
<p id="p-0161" num="0160">As shown in <figref idref="DRAWINGS">FIG. 32</figref>, the HUMUX <b>3200</b> is an eight-to-one HUMUX that is formed by four multiplexers <b>3205</b>, <b>3210</b>, <b>3215</b>, and <b>3220</b>. The inputs and outputs of these multiplexers are shown as thick lines to indicate that each of these lines represents a CPL true/complement pair of lines.</p>
<p id="p-0162" num="0161">As shown in <figref idref="DRAWINGS">FIG. 32</figref>, the multiplexer <b>3205</b> is an eight-to-one multiplexer that, on a sub-cycle basis, connects one of its input lines to its output line based on the values of the signals S<b>2</b>, S<b>1</b>, and S<b>0</b>′, which it receives along its three select lines. In response to three signals ST<b>0</b>, ST<b>1</b>, and CLK (which is not illustrated in <figref idref="DRAWINGS">FIG. 32</figref>), the multiplexer <b>3210</b> supplies two of the select signals S<b>2</b> and S<b>1</b> to the multiplexer <b>3205</b> on a sub-cycle basis. Specifically, based on the signals ST<b>0</b> and ST<b>1</b> that it receives on its select lines, the multiplexer <b>3210</b> connects one of its four three-bit input lines (each of which connects to a storage element <b>3225</b> that stores configuration data) to its three output lines. Hence, the three output lines of multiplexer <b>3210</b> provide three configuration select signals S<b>2</b>, S<b>1</b>, and S<b>0</b>. Two of these output lines connect to the third and second select lines of the multiplexer <b>3205</b>, in order to provide the select signals S<b>2</b> and S<b>1</b>.</p>
<p id="p-0163" num="0162">The first output line of the multiplexer <b>3210</b> carries the first select signal S<b>0</b>. This output line connects to one of the two input lines of the multiplexer <b>3220</b>. The other input line of the multiplexer <b>3220</b> receives a user signal. Through its two input lines, the multiplexer <b>3220</b> receives two inputs on a sub-cycle basis. Based on the signal that it receives on a sub-cycle basis on its select line from the multiplexer <b>3215</b>, the multiplexer <b>3220</b> supplies one of its two inputs to its output line. This output line connects to the first select line of the multiplexer <b>3205</b> to provide the select signal S<b>0</b>′. Hence, the signal S<b>0</b>′ is a signal that in each sub-cycle might be either a user signal or configuration-driven select signal S<b>0</b>.</p>
<p id="p-0164" num="0163">Which of these signals gets routed to the multiplexer <b>3205</b> as the select signal S<b>0</b>′ depends on the value of the configuration data output from the multiplexer <b>3215</b> on a sub-cycle basis. The multiplexer <b>3215</b> is a four-to-one multiplexer that (1) has its four inputs connected to four storage elements storing four configuration data bits, and (2) has one output that receives one of the four configuration data bits in each sub-cycle based on the signals ST<b>0</b> and ST<b>1</b> supplied to the select lines of the multiplexer <b>3215</b>.</p>
<p id="p-0165" num="0164"><figref idref="DRAWINGS">FIG. 33</figref> illustrates a multiplexer <b>3300</b> that in some embodiments is used as the multiplexer <b>3205</b>. As shown in <figref idref="DRAWINGS">FIG. 33</figref>, the multiplexer <b>3300</b> includes one set of input buffers <b>3305</b>, three sets of pass transistors <b>3310</b>, <b>3315</b>, and <b>3320</b>, two pull-up PMOS transistors <b>3325</b> and <b>3330</b>, and two output buffers <b>3335</b> and <b>3340</b>. One subset of the input buffers <b>3305</b> receives eight input bits (<b>0</b>-<b>7</b>), while another subset of the input buffers <b>3305</b> receives the complement of the eight input bits (i.e., receives <o ostyle="single">0</o>- <o ostyle="single">7</o>). These input buffers serve to buffer the first set <b>3310</b> of pass transistors.</p>
<p id="p-0166" num="0165">The first set <b>3310</b> of pass transistors receive the third select bit S<b>2</b> or the complement of this bit, while the second set <b>3315</b> of pass transistors receive the second select bit S<b>1</b> or the complement of this bit. The third set <b>3320</b> of pass transistors receive the first select bit S<b>0</b>′ or its complement. The three select bits S<b>2</b>, S<b>1</b>, and S<b>0</b> cause the pass transistors to pass one of the input bits and the complement of this input bit to two intermediate output nodes <b>3355</b> and <b>3360</b> of the circuit <b>3300</b>. For instance, when the enable signal is low, and the select bits are 011, the pass transistors <b>3365</b><i>a</i>, <b>3370</b><i>a</i>, <b>3375</b><i>a</i>, and <b>3365</b><i>b</i>, <b>3370</b><i>b</i>, and <b>3375</b><i>b </i>turn on to pass the 6 and <o ostyle="single">6</o> input signals to the intermediate output nodes <b>3355</b> and <b>3360</b>.</p>
<p id="p-0167" num="0166">The pull-up PMOS transistors <b>3325</b> and <b>3330</b> are used to pull-up quickly the intermediate output nodes <b>3355</b> and <b>3360</b>, and to regenerate the voltage levels at the nodes that have been degenerated by the NMOS threshold drops, when these nodes need to be at a high voltage. In other words, these pull-up transistors are used because the NMOS pass transistors are slower than PMOS transistors in pulling a node to a high voltage. Thus, for instance, when the 6<sup>th </sup>input signal is high, the enable signal is low, and the select bits are 011, the pass transistors <b>3365</b>-<b>3375</b> start to pull node <b>3355</b> high and to push node <b>3360</b> low. The low voltage on node <b>3360</b> turns on the pull-up transistor <b>3325</b>, which, in turn, accelerates the pull-up of node <b>3355</b>.</p>
<p id="p-0168" num="0167">The output buffer inverters <b>3335</b> and <b>3340</b> are used to allow the circuit <b>3300</b> to drive a load. These buffers are formed by more than one inverter in some embodiments. The outputs of these buffers are the final output <b>3380</b> and <b>3385</b> of the multiplexer <b>3300</b>. It should be noted that, in some embodiments, the output buffers <b>3335</b> and <b>3340</b> are followed by multiple inverters.</p>
<p id="p-0169" num="0168">Although <figref idref="DRAWINGS">FIG. 32</figref> conceptually illustrates the multiplexer <b>3220</b> as a separate multiplexer that is after the multiplexer <b>3210</b>, some embodiments implement the multiplexer <b>3220</b> as part of a multiplexer structure that is used to define the multiplexer <b>3210</b>. In some embodiments, the multiplexer <b>3210</b> of <figref idref="DRAWINGS">FIG. 32</figref> is formed by three multiplexer structures. One structure is used to generate the third select signal S<b>2</b>, the other structure is used to generate the second select signal S<b>1</b>, and the last structure is used to generate the first select signal S<b>0</b>′.</p>
<p id="p-0170" num="0169"><figref idref="DRAWINGS">FIG. 34</figref> illustrates a CPL implementation of a two-tier multiplexer structure <b>3400</b> for generating the second signal S<b>1</b> and its complement. The multiplexer structure for generating the third select signal S<b>2</b> is identical to the structure <b>3400</b>. In addition, an identical circuit can be used to implement the multiplexer <b>3215</b> of <figref idref="DRAWINGS">FIG. 32</figref>. The multiplexer structure <b>3400</b> is a two-tiered multiplexer structure, where one tier of multiplexers is driven by the signals ST<b>0</b> and ST<b>1</b>, while the other tier of multiplexers are driven by the clock signal CLK that operates at twice the rate of the signals ST<b>0</b> and ST<b>1</b>, as further described below.</p>
<p id="p-0171" num="0170">As illustrated in <figref idref="DRAWINGS">FIG. 34</figref>, the select signal generation circuit <b>3400</b> can be divided into four sections, which are (1) storage cell section <b>3405</b>, (2) first two-to-one multiplexer section <b>3410</b>, (3) second two-to-one multiplexer section <b>3415</b>, and (4) pull-up PMOS transistor sections <b>3420</b>. The first section <b>3405</b> includes four storage cells <b>3425</b><i>a</i>-<b>3425</b><i>d </i>that store four configuration bits for four sub-cycles. In other words, each storage cell provides a configuration bit <b>3430</b> and the complement of this bit <b>3435</b>, where each such pair of bits provides the select bit signal S<b>1</b> and its complement during a particular sub-cycle.</p>
<p id="p-0172" num="0171">The second section includes two multiplexers <b>3440</b> and <b>3445</b> that are driven by two signals ST<b>0</b> and ST<b>1</b> that are offset by 90°, and the differential complement <o ostyle="single">ST<b>0</b></o> and <o ostyle="single">ST<b>1</b></o> of these signals. The third section is one two-to-one multiplexer <b>3415</b> that is driven by the clock signal CLK and its differential complement <o ostyle="single">CLK</o>.</p>
<p id="p-0173" num="0172"><figref idref="DRAWINGS">FIG. 35</figref> illustrates an example of the signals CLK, ST<b>0</b>, and ST<b>1</b>. Some embodiments use the multiplexer/storage circuit <b>3300</b> and the select-signal generator <b>3400</b> in a configurable IC that implements a design that has a primary clock rate of X MHZ (e.g., 200 MHZ) through a four sub-cycle implementation that effectively operates at 4X MHZ. In some of these embodiments, the two signals ST<b>0</b> and ST<b>1</b> would operate at X MHZ, while the clock signal CLK would operate at 2X MHZ.</p>
<p id="p-0174" num="0173">The fourth section <b>3420</b> includes two pull-up PMOS transistors <b>3485</b> and <b>3490</b>, which are used to quickly pull-up the output of the multiplexer <b>3415</b> that is high. The two complementary outputs of the multiplexer <b>3415</b> provide the select signal S<b>1</b> and its complement. The S<b>1</b> select signal and its complement drive the pass transistor set <b>3315</b> in <figref idref="DRAWINGS">FIG. 33</figref>.</p>
<p id="p-0175" num="0174"><figref idref="DRAWINGS">FIG. 34</figref> illustrates one possible implementation <b>3450</b> of the multiplexer <b>3445</b> and the connections of this multiplexer <b>3445</b> and the storage cells <b>3425</b><i>c </i>and <b>3425</b><i>d</i>. As shown in this figure, the multiplexer <b>3445</b> can be implemented by four pass transistors, where two transistors <b>3455</b> and <b>3460</b> receive the true configuration bits <b>3430</b><i>c </i>and <b>3430</b><i>d </i>from the third and fourth storage cells <b>3425</b><i>c </i>and <b>3425</b><i>d</i>, while the other two transistors <b>3465</b> and <b>3470</b> receive the complement configuration bits <b>3435</b><i>c </i>and <b>3435</b><i>d </i>from the third and fourth storage cells. As further shown, transistors <b>3455</b> and <b>3465</b> are driven by signal ST<b>1</b>, while transistors <b>3460</b> and <b>3470</b> are driven by the complement <o ostyle="single">ST<b>1</b></o> of signal ST<b>1</b>. A similar implementation can be used for multiplexer <b>3440</b>. However, the pass transistors <b>3455</b>-<b>3470</b> of the multiplexer <b>3440</b> would be driven by the signal ST<b>0</b> and its complement <o ostyle="single">ST<b>0</b></o>.</p>
<p id="p-0176" num="0175"><figref idref="DRAWINGS">FIG. 34</figref> also illustrates one possible implementation of the two-to-one multiplexer <b>3415</b>. This implementation is similar to the implementation <b>3450</b> of the multiplexer <b>3445</b>. However, instead of the signal ST<b>1</b>, the pass transistors <b>3455</b>-<b>3470</b> of the multiplexer <b>3415</b> are driven by the CLK and <o ostyle="single">CLK</o> signals. Also, these transistors receive a different set of signals. Specifically, the transistors <b>3455</b> and <b>3465</b> of the multiplexer <b>3415</b> receive the true and complement outputs of the multiplexer <b>3440</b>, while the transistors <b>3460</b> and <b>3470</b> of the multiplexer <b>3415</b> receive the true and complement outputs of the multiplexer <b>3445</b>.</p>
<p id="p-0177" num="0176">The transistors <b>3455</b> and <b>3465</b> of the multiplexer <b>3445</b> (1) output the true and complement configuration bits stored in the storage cells <b>3425</b><i>c </i>when the signal ST<b>1</b> is high, and (2) output the true and complement configuration bits stored in the storage cells <b>3425</b><i>d </i>when the signal ST<b>1</b> is low. Similarly, the transistors <b>3455</b> and <b>3465</b> of the multiplexer <b>3440</b> (1) output the true and complement configuration bits stored in the storage cells <b>3425</b><i>a </i>when the signal ST<b>0</b> is high, and (2) output the true and complement configuration bits stored in the storage cells <b>3425</b><i>b </i>when the signal ST<b>0</b> is low. Finally, the transistors <b>3455</b> and <b>3465</b> of the multiplexer <b>3415</b> (1) output the true and complement output bits of the multiplexer <b>3440</b> when the clock CLK is high, and (2) output the true and complement output bits of the multiplexer <b>3445</b> when the clock signal CLK is low.</p>
<p id="p-0178" num="0177">Given the above-described operations of multiplexers <b>3440</b>, <b>3445</b>, and <b>3415</b>, and given the 90° offset between signals ST<b>0</b> and ST<b>1</b> and the faster frequency of the clock signal CLK, <figref idref="DRAWINGS">FIG. 35</figref> illustrates the value of the select signal S<b>1</b> and its complement that the circuit <b>3400</b> generates during each half-cycle of the clock signal CLK. This clocking scheme hides all the timing of the selection of the configuration bits from the storage cells <b>3425</b> behind the two-to-one multiplexer <b>3415</b>. For instance, while the multiplexer <b>3440</b> is switching between outputting the configuration bits stored in cell <b>3425</b><i>a </i>and the bits stored in cell <b>3425</b><i>b</i>, the clocking scheme directs the multiplexer <b>3415</b> to output the configuration bits previously selected by the multiplexer <b>3445</b> (i.e., the configuration bits stored in cell <b>3425</b><i>c</i>). Similarly, while the multiplexer <b>3445</b> is switching between outputting the configuration bits stored in cell <b>3425</b><i>c </i>and the bits stored in cell <b>3425</b><i>d</i>, the clocking scheme directs the multiplexer <b>3415</b> to output the configuration bits previously selected by the multiplexer <b>3440</b> (i.e., the configuration bits stored in cell <b>3425</b><i>b</i>).</p>
<p id="p-0179" num="0178">When implementing a design that has a primary clock rate of X MHZ through a four sub-cycle implementation that effectively operates at 4X MHZ, this clocking scheme allows the configuration bits to be read from the storage cells at an effective rate of 4×MHZ without the need for a 4X MHZ clock. Some embodiments globally distribute the differential pair of CLK and <o ostyle="single">CLK</o> signals, while locally generating the differential signals ST<b>0</b>, <o ostyle="single">ST<b>0</b></o>, ST<b>1</b>, and <o ostyle="single">ST<b>1</b></o>. Examples of such distribution and generation are further described in U.S. patent application entitled “Configurable IC with Interconnect Circuits that also Perform Storage Operations”, which was incorporated above.</p>
<p id="p-0180" num="0179">As mentioned above, <figref idref="DRAWINGS">FIG. 32</figref> conceptually illustrates the multiplexer <b>3220</b> as a separate multiplexer that is after the multiplexer <b>3210</b>. However, some embodiments implement the multiplexer <b>3220</b> in conjunction with the multiplexer structure of the multiplexer <b>3210</b> that is used to generate the signal S<b>0</b> and its complement. <figref idref="DRAWINGS">FIG. 36</figref> illustrates a CPL implementation of this combined multiplexer structure <b>3600</b> of some embodiments.</p>
<p id="p-0181" num="0180">This multiplexer structure <b>3600</b> outputs the select signal S<b>0</b>′, which is provided to the first select line of the multiplexer <b>3205</b>. The circuit <b>3600</b> illustrated in <figref idref="DRAWINGS">FIG. 36</figref> can be divided into five sections, which are (1) storage cell section <b>3605</b>, (2) first two-to-one multiplexer stage <b>3610</b>, (3) a second two-to-one multiplexer stage <b>3620</b>, (4) a third two-to-one multiplexer section <b>3625</b>, and (5) a second pull-up transistor stage <b>3630</b>.</p>
<p id="p-0182" num="0181">The storage cell section <b>3605</b> is identical to the storage cell section <b>3405</b> of the circuit <b>3400</b> of <figref idref="DRAWINGS">FIG. 34</figref>, with the exception that the storage cells in <figref idref="DRAWINGS">FIG. 36</figref> store configuration bits for the first select signal S<b>0</b>, instead of storing configuration bits for the second select signal S<b>1</b>. In other words, each storage cell <b>3425</b> provides a configuration bit <b>3430</b> and the complement of this bit <b>3435</b>, where each such pair of bits provides the select bit signal S<b>0</b> and its complement during a particular sub-cycle.</p>
<p id="p-0183" num="0182">The second section <b>3610</b> includes two multiplexers <b>3440</b> and <b>3445</b> that are identical to the two multiplexers <b>3440</b> and <b>3445</b> of the circuit <b>3400</b> of <figref idref="DRAWINGS">FIG. 34</figref>. As in circuit <b>3400</b>, the multiplexers <b>3440</b> and <b>3445</b> are for outputting the configuration bits from cells <b>3425</b><i>a</i>, <b>3425</b><i>b</i>, <b>3425</b><i>c</i>, and <b>3425</b><i>d</i>. The outputs of the second section <b>3610</b> can be tied to four pull-up PMOS transistors, which can quickly pull-up the outputs of the multiplexers <b>3440</b> and <b>3445</b> that are high. Some embodiments, on the other hand, might not include such pull-up PMOS transistors.</p>
<p id="p-0184" num="0183">The third section <b>3620</b> includes two two-to-one multiplexers <b>3640</b> and <b>3645</b> that select respectively between the output of the multiplexer <b>3440</b> and the user signal US, and between the output of the multiplexer <b>3445</b> and the user signal US, based on the output UM and <o ostyle="single">UM</o> of the multiplexer <b>3215</b>. As mentioned above, the output of the multiplexer <b>3215</b> specifies whether the select signal S<b>0</b>′ should be the user signal or the select signal S<b>0</b> stored in the configuration data cell for the current sub-cycle.</p>
<p id="p-0185" num="0184">The fourth section <b>3625</b> is one two-to-one multiplexer <b>3415</b> that is driven by a clock signal CLK, which operates at twice the frequency of the signals ST<b>0</b> and ST<b>1</b>. The signals ST<b>0</b>, ST<b>1</b>, and CLK are illustrated in <figref idref="DRAWINGS">FIG. 35</figref>, as described above. Also, as mentioned above, the use of the two-to-one multiplexer <b>3415</b> and the signals CLK, ST<b>0</b>, and ST<b>1</b> and their differential complements, hides all the timing of the selection of the configuration bits from the storage cells <b>3425</b> behind the two-to-one multiplexer <b>3415</b>.</p>
<p id="p-0186" num="0185">The fifth section <b>3630</b> includes two pull-up transistors <b>3665</b> and <b>3670</b> that are used to pull-up quickly the output nodes <b>3655</b> and <b>3660</b> of the fourth section <b>3625</b>, and to regenerate the voltage levels at the nodes that have been degenerated by the NMOS threshold drops, when these nodes need to be at a high voltage. The nodes <b>3655</b> and <b>3660</b> provide the first select signal S<b>0</b>′ and its complement for the first select line of the multiplexer <b>3205</b>.</p>
<p id="h-0013" num="0000">VII. Alternate Implementation of an HUMUX</p>
<p id="p-0187" num="0186">In the HUMUX <b>3200</b>, the first select line of the multiplexer <b>3205</b> can configurably receive either a configuration-derived select signal S<b>0</b> or a user signal. Hence, the operation of the HUMUX <b>3200</b> can be based either on the configuration-derived select signal S<b>0</b> or on the user signal. <figref idref="DRAWINGS">FIG. 37</figref> illustrates another implementation of an HUMUX, which can operate based on a configuration-derived select signal S<b>0</b>, a first user signal US<b>0</b>, or a second user signal US<b>1</b>. Specifically, in the HUMUX <b>3700</b> of this figure, the first select line of the multiplexer <b>3205</b> can configurably receive either the configuration-derived select signal S<b>0</b>, the first user signal US<b>0</b>, or the second user signal US<b>1</b>.</p>
<p id="p-0188" num="0187">The HUMUX <b>3700</b> is identical to the HUMUX <b>3200</b> except that the HUMUX <b>3700</b> also includes a multiplexer <b>3705</b>. This multiplexer <b>3705</b> provides the HUMUX <b>3700</b> with the ability to supply the first select line of the multiplexer <b>3205</b> with one of two user signals US<b>0</b> and US<b>1</b>, in addition to the select signal S<b>0</b> output from the multiplexer <b>3210</b>. In particular, the multiplexer <b>3705</b> receives the two user signals US<b>0</b> and US<b>1</b> as input signals. It also receives the select signal S<b>0</b> along its select line. Based on the value of the select signal S<b>0</b>, the multiplexer <b>3705</b> routes one of the two user signals US<b>0</b> and US<b>1</b> to the multiplexer <b>3220</b>, which also receives the select signal S<b>0</b> as one of its input signals. Based on the value that the multiplexer <b>3220</b> receives on its select line, the multiplexer <b>3220</b> then outputs as select signal S<b>0</b>′ either the select signal S<b>0</b> or the user signal that it receives. The select signal S<b>0</b>′ then drives the first select line of the multiplexer <b>3205</b> as described above.</p>
<p id="p-0189" num="0188"><figref idref="DRAWINGS">FIG. 37</figref> conceptually illustrates the multiplexer <b>3705</b>, <b>3220</b>, and <b>3210</b> as separate multiplexers. However, some embodiments implement the two multiplexers <b>3705</b> and <b>3220</b> in conjunction with the multiplexer structure of the multiplexer <b>3210</b> that is used to generate the signal S<b>0</b> and its complement.</p>
<p id="p-0190" num="0189"><figref idref="DRAWINGS">FIG. 38</figref> illustrates a CPL implementation of this combined multiplexer structure <b>3600</b> of some embodiments. This combined multiplexer structure is identical to the combined multiplexer structure <b>3600</b> of <figref idref="DRAWINGS">FIG. 36</figref>, except that the multiplexer structure <b>3600</b> also includes 2 two-to-one multiplexers <b>3805</b> and <b>3810</b>.</p>
<p id="p-0191" num="0190">The multiplexer <b>3805</b> selects between the user signals US<b>0</b> and US<b>1</b> based on the output of the multiplexer <b>3440</b>, while the multiplexer <b>3810</b> selects between the user signals US<b>0</b> and US<b>1</b> based on the output of the multiplexer <b>3445</b>. Each multiplexer includes two transistors (<b>3815</b> and <b>3825</b>, or <b>3835</b> and <b>3845</b>) that receive the user signals US<b>0</b> and its complement, and two transistors (<b>3820</b> and <b>3830</b>, or <b>3840</b> and <b>3850</b>) that receive the user signals US<b>1</b> and its complement. The transistors that receive the user signal US<b>0</b> and its complement are driven by the true output of the multiplexer <b>3440</b> or <b>3445</b>, while the transistors that receive the user signal US<b>1</b> and its complement are driven by the complement output of the multiplexer <b>3440</b> or <b>3445</b>.</p>
<p id="p-0192" num="0191">The true and complement outputs of each two-to-one multiplexer <b>3805</b> and <b>3810</b> is supplied to the two-to-one multiplexers <b>3640</b> and <b>3645</b> of the third section <b>3620</b>. These multiplexers then select respectively between the output of the multiplexer <b>3440</b> and the user signal (US<b>0</b> or US<b>1</b>) supplied by the multiplexer <b>3805</b>, and between the output of the multiplexer <b>3445</b> and the user signal (US<b>0</b> or US<b>1</b>) supplied by the multiplexer <b>3810</b>. The selection of these multiplexers <b>3640</b> and <b>3645</b> are based on the output UM and <o ostyle="single">UM</o> of the multiplexer <b>3215</b>, which specifies whether the select signal S<b>0</b>′ should be the user signal or the select signal S<b>0</b> stored in the configuration data cell for the current sub-cycle.</p>
<p id="p-0193" num="0192">Several embodiments were described above by reference to examples of sub-cycle reconfigurable circuits that operate based on four different sets of configuration data. In some of these examples, a reconfigurable circuit receives its four different configuration data sets sequentially in an order that loops from the last configuration data set to the first configuration data set. Such a sequential reconfiguration scheme is referred to as a 4 “loopered” scheme.</p>
<p id="p-0194" num="0193">Other embodiments, however, might be implemented as six or eight loopered sub-cycle reconfigurable circuits. In a six or eight loopered reconfigurable circuit, a reconfigurable circuit receives six or eight configuration data sets in an order that loops from the last configuration data set to the first configuration data set. Several examples of how make a four loopered circuit into a six and eight loopered circuit and the clocking scheme for such circuits are described in the above mentioned U.S. patent application entitled “Configurable IC with Interconnect Circuits that also Perform Storage Operations”, which is filed concurrently with the present application, with the Ser. No. 11/081,859.</p>
<p id="h-0014" num="0000">VIII. Alternative Two Tiered Structure for Retrieving Data</p>
<p id="p-0195" num="0194">Several circuits described above utilize a two-tiered structure for retrieving data (e.g., configuration data, etc.) on a sub-cycle basis. Examples of such circuits are the circuits illustrated in <figref idref="DRAWINGS">FIGS. 34</figref>, <b>36</b>, and <b>38</b>. These circuits employ multiple storage elements <b>3425</b> that store multiple sets of data for multiple sub-cycles. They also include two tiers of multiplexers, where two two-to-one multiplexers (e.g., <b>3440</b> and <b>3445</b>) form the first tier and one two-to-one multiplexer (e.g., <b>3415</b>) forms the second tier. In some circuits, the two tiers of multiplexers have intervening circuits between them, such as AND'ing transistors or gates, etc. The second-tier multiplexer runs at the clock rate CLK, while the first-tier multiplexers runs at half that rate. From the storage elements, these multiplexers together output data at a sub-cycle rate that is twice the clock rate CLK.</p>
<p id="p-0196" num="0195">Some embodiments that use this two-tiered structure, build the first tier of multiplexers into the sensing circuitry of the storage elements <b>3425</b>. <figref idref="DRAWINGS">FIG. 39</figref> illustrates an example of such an approach. Specifically, this figure illustrates four storage elements <b>3425</b><i>a</i>-<b>3425</b><i>d </i>that are arranged in two columns <b>3950</b> and <b>3955</b>. Each storage element stores one logical bit of data in a complementary format. This data might be configuration data, enable data, or any other data that needs to be provided to the reconfigurable IC on a sub-cycle basis.</p>
<p id="p-0197" num="0196">Each of the two complementary outputs of each storage element <b>3425</b> connects to a pair of stacked NMOS transistors <b>3920</b> and <b>3925</b>. One transistor <b>3925</b> in each stacked pair of NMOS transistors is part of a first tier multiplexer structure. Specifically, in the two-tiered circuit structure <b>3900</b> illustrated in <figref idref="DRAWINGS">FIG. 39</figref>, the first tier multiplexer structure is formed by the eight transistors <b>3925</b>, which receive the sub-cycle signals ST<b>0</b>, ST<b>1</b>, or the complements of these signals.</p>
<p id="p-0198" num="0197">Through the sub-cycle signals ST<b>0</b>, ST<b>1</b>, <o ostyle="single">ST<b>0</b></o>, and <o ostyle="single">ST<b>1</b></o>, the multiplexer transistors <b>3925</b> selectively connect the NMOS transistors <b>3920</b> to the cross-coupled PMOS transistors <b>3905</b> and <b>3910</b>. One pair of PMOS transistors <b>3905</b> and <b>3910</b> exists in each column and form part of the sensing amplifier for the storage elements in that column.</p>
<p id="p-0199" num="0198">Specifically, when NMOS transistors <b>3920</b> associated with one storage element <b>3425</b> connect to the PMOS transistors <b>3905</b> and <b>3910</b>, they form a level-converting sense amplifier. This amplifier then translates the signals stored in the storage element to the bit lines <b>3935</b> or <b>3940</b>. The circuit <b>3900</b> provides the content of the storage elements through level-converting sense amplifiers, because, in some embodiments, the storage elements are storage cells that use a reduced voltage to store their data in order to conserve power. One such example of a reduced power storage cell is provided in United States Application entitled “Method and Apparatus for Reduced Power Cell,” filed concurrently with the present application, with the Ser. No. 11/081,874.</p>
<p id="p-0200" num="0199">The bit lines <b>3935</b> and <b>3940</b> connect to the next stage in the circuit that they are used. Specifically, the bit lines <b>3935</b> and <b>3940</b> are provided to the two-to-one multiplexer <b>3415</b> in the circuit <b>3400</b>, while they are provided to transistor stages <b>3640</b> and <b>3645</b> in the circuits <b>3600</b> and <b>3800</b>, which, in turn, connect to the multiplexer <b>3415</b>. As described above, the multiplexer <b>3415</b> is controlled through the clock signal CLK and its complement. Accordingly, when the clock signals CLK and <o ostyle="single">CLK</o>, and the sub-cycle signals ST<b>0</b>, ST<b>1</b>, <o ostyle="single">ST<b>0</b></o>, and <o ostyle="single">ST<b>1</b></o>, have the timing relationship illustrated in <figref idref="DRAWINGS">FIG. 35</figref>, the first tier multiplexer (formed by the transistors <b>3925</b>) and the second tier multiplexer <b>3415</b> operate to output data from the storage elements <b>3425</b> at a rate that is twice the rate of the clock signal CLK. This outputting is analogous to how the circuit <b>3400</b> outputs the S<b>1</b> select signal on the sub-cycle basis that is illustrated in <figref idref="DRAWINGS">FIG. 35</figref>.</p>
<p id="p-0201" num="0200">By building the first multiplexer stage into the sense amplifier section of the storage elements, this circuit reduces signal path delay from the storage elements. Also, it operates with storage elements that have less power consumption. Furthermore, it reduces power consumption by using NMOS transistors <b>3920</b> that are not driven by full voltage levels, and sharing the PMOS transistors <b>3905</b> and <b>3910</b> that are necessary for level conversion between two storage elements.</p>
<p id="p-0202" num="0201">The two-tiered structure of the circuit <b>3900</b> of <figref idref="DRAWINGS">FIG. 39</figref> can be easily extended to six and eight loopered structures. For a six loopered structure, all that needs to be done is to stack another pair of storage elements above elements <b>3425</b><i>c </i>and <b>3425</b><i>d</i>, and to drive the transistors <b>3925</b> with two sets of three one-hot signals. Similarly, for an eight loopered structure, all that needs to be done is to stack two pairs of storage elements on top of elements <b>3425</b><i>c </i>and <b>3425</b><i>d</i>, and to drive the transistors <b>3925</b> with the two sets of four one-hot signals. These sets of one-hot signals are further described in the U.S. patent application entitled “Configurable IC with Interconnect Circuits that also Perform Storage Operations”, which is filed concurrently with the present application, with the Ser. No. 11/081,859.</p>
<p id="h-0015" num="0000">IX. Configurable IC Architectures</p>
<p id="p-0203" num="0202">Different embodiments of the invention are implemented in different configurable IC's with different architectures. <figref idref="DRAWINGS">FIGS. 40-45</figref> illustrate the architecture of some embodiments of the invention. As shown in <figref idref="DRAWINGS">FIG. 40</figref>, this architecture is formed by numerous configurable tiles <b>4005</b> that are arranged in an array with multiple rows and columns. In <figref idref="DRAWINGS">FIGS. 40-45</figref>, each configurable tile includes a sub-cycle reconfigurable three-input LUT <b>4010</b>, three sub-cycle reconfigurable input-select multiplexers <b>4015</b>, <b>4020</b>, and <b>4025</b>, and two sub-cycle reconfigurable routing multiplexers <b>4030</b> and <b>4035</b>. Other configurable tiles can include other types of circuits, such as memory arrays instead of logic circuits.</p>
<p id="p-0204" num="0203">In <figref idref="DRAWINGS">FIGS. 40-45</figref>, an input-select multiplexer is an interconnect circuit associated with the LUT <b>4010</b> that is in the same tile as the input select multiplexer. One such input select multiplexer receives several input signals for its associated LUT and passes one of these input signals to its associated LUT.</p>
<p id="p-0205" num="0204">In <figref idref="DRAWINGS">FIGS. 40-45</figref>, a routing multiplexer is an interconnect circuit that at a macro level connects other logic and/or interconnect circuits. In other words, unlike an input select multiplexer in these figures that only provides its output to a single logic circuit (i.e., that only has a fan out of 1), a routing multiplexer in some embodiments either provides its output to several logic and/or interconnect circuits (i.e., has a fan out greater than 1), or provides its output to other interconnect circuits.</p>
<p id="p-0206" num="0205"><figref idref="DRAWINGS">FIGS. 41-45</figref> illustrate the connection scheme used to connect the multiplexers of one tile with the LUT's and multiplexers of other tiles. This connection scheme is further described in U.S. Application entitled “Configurable IC with Routing Circuits with Offset Connections”, filed concurrently with this application with the Ser. No. 11/082,193. This application is incorporated herein by reference.</p>
<p id="p-0207" num="0206">In the architecture illustrated in <figref idref="DRAWINGS">FIGS. 40-45</figref>, each tile includes one three-input LUT, three input-select multiplexers, and two routing multiplexers. Other embodiments, however, might have a different number of LUT's in each tile, a different number of inputs for each LUT, a different number of input-select multiplexers, and/or a different number of routing multiplexers. For instance, some embodiments might employ an architecture that has in each tile: one three-input LUT, three input-select multiplexers, and eight routing multiplexers. Several such architectures are further described in the above-incorporated patent application.</p>
<p id="p-0208" num="0207">In some embodiments, the examples illustrated in <figref idref="DRAWINGS">FIGS. 40-45</figref> represent the actual physical architecture of a configurable IC. However, in other embodiments, the examples illustrated in <figref idref="DRAWINGS">FIGS. 40-45</figref> topologically illustrate the architecture of a configurable IC (i.e., they show connections between circuits in the configurable IC, without specifying (1) a particular geometric layout for the wire segments that establish the connection, or even (2) a particular position of the circuits). In some embodiments, the position and orientation of the circuits in the actual physical architecture of a configurable IC is different than the position and orientation of the circuits in the topological architecture of the configurable IC. Accordingly, in these embodiments, the IC's physical architecture appears quite different than its topological architecture. For example, <figref idref="DRAWINGS">FIG. 46</figref> provides one possible physical architecture of the configurable IC <b>4000</b> illustrated in <figref idref="DRAWINGS">FIG. 40</figref>. This and other architectures are further described in the above-incorporated patent application.</p>
<p id="h-0016" num="0000">X. Configurable IC and System</p>
<p id="p-0209" num="0208">Some embodiments described above are implemented in configurable IC's that can compute configurable combinational digital logic functions on signals that are presented on the inputs of the configurable IC's. In some embodiments, such computations are state-less computations (i.e., do not depend on a previous state of a value).</p>
<p id="p-0210" num="0209">Some embodiments described above are implemented in configurable IC's that can perform a continuous function. In these embodiments, the configurable IC can receive a continuous function at its input, and in response, provide a continuous output at one of its outputs.</p>
<p id="p-0211" num="0210"><figref idref="DRAWINGS">FIG. 47</figref> illustrates a portion of a configurable IC <b>4700</b> of some embodiments of the invention. As shown in this figure, this IC has a configurable circuit arrangement <b>4705</b> and I/O circuitry <b>4710</b>. The configurable circuit arrangement <b>4705</b> can be any of the invention's configurable circuit arrangements that were described above. The I/O circuitry <b>4710</b> is responsible for routing data between the configurable circuits <b>4715</b> of the arrangement <b>4705</b> and circuits outside of the arrangement (i.e., circuits outside of the IC, or within the IC but outside of the arrangement <b>4705</b>). As further described below, such data includes data that needs to be processed or passed along by the configurable circuits.</p>
<p id="p-0212" num="0211">The data also includes in some embodiments configuration data that configure the circuits to perform particular operations. <figref idref="DRAWINGS">FIG. 48</figref> illustrates a more detailed example of this. Specifically, this figure illustrates a configuration data pool <b>4805</b> for the configurable IC <b>4700</b>. This pool includes N configuration data sets (CDS). As shown in <figref idref="DRAWINGS">FIG. 48</figref>, the input/output circuitry <b>4710</b> of the configurable IC <b>4700</b> routes different configuration data sets to different configurable circuits of the IC <b>4700</b>. For instance, <figref idref="DRAWINGS">FIG. 48</figref> illustrates configurable circuit <b>4845</b> receiving configuration data sets <b>1</b>, <b>3</b>, and J through the I/O circuitry, while configurable circuit <b>4850</b> receives configuration data sets <b>3</b>, K, and N−<b>1</b> through the I/O circuitry. In some embodiments, the configuration data sets are stored within each configurable circuit. Also, in some embodiments, a configurable circuit can store multiple configuration data sets so that it can reconfigure quickly by changing to another configuration data set. In some embodiments, some configurable circuits store only one configuration data set, while other configurable circuits store multiple such data sets.</p>
<p id="p-0213" num="0212">A configurable IC of the invention can also include circuits other than a configurable circuit arrangement and I/O circuitry. For instance, <figref idref="DRAWINGS">FIG. 49</figref> illustrates a system on chip (“SoC”) implementation of a configurable IC <b>4900</b>. This IC has a configurable block <b>4950</b>, which includes a configurable circuit arrangement <b>4705</b> and I/O circuitry <b>4710</b> for this arrangement. It also includes a processor <b>4915</b> outside of the configurable circuit arrangement, a memory <b>4920</b>, and a bus <b>4910</b>, which conceptually represents all conductive paths between the processor <b>4915</b>, memory <b>4920</b>, and the configurable block <b>4950</b>. As shown in <figref idref="DRAWINGS">FIG. 49</figref>, the IC <b>4900</b> couples to a bus <b>4930</b>, which communicatively couples the IC to other circuits, such as an off-chip memory <b>4925</b>. Bus <b>4930</b> conceptually represents all conductive paths between the components of the IC <b>4900</b>.</p>
<p id="p-0214" num="0213">This processor <b>4915</b> can read and write instructions and/or data from an on-chip memory <b>4920</b> or an off chip memory <b>4925</b>. The processor <b>4915</b> can also communicate with the configurable block <b>4950</b> through memory <b>4920</b> and/or <b>4925</b> through buses <b>4910</b> and/or <b>4930</b>. Similarly, the configurable block can retrieve data from and supply data to memories <b>4920</b> and <b>4925</b> through buses <b>4910</b> and <b>4930</b>.</p>
<p id="p-0215" num="0214">Instead of, or in conjunction with, the system on chip (“SoC”) implementation for a configurable IC, some embodiments might employ a system in package (“SiP”) implementation for a configurable IC. <figref idref="DRAWINGS">FIG. 50</figref> illustrates one such SiP <b>5000</b>. As shown in this figure, SiP <b>5000</b> includes four IC's <b>5020</b>, <b>5025</b>, <b>5030</b>, and <b>5035</b> that are stacked on top of each other on a substrate <b>5005</b>. At least one of these IC's is a configurable IC that includes a configurable block, such as the configurable block <b>4950</b> of <figref idref="DRAWINGS">FIG. 49</figref>. Other IC's might be other circuits, such as processors, memory, etc.</p>
<p id="p-0216" num="0215">As shown in <figref idref="DRAWINGS">FIG. 50</figref>, the IC communicatively connects to the substrate <b>5005</b> (e.g., through wire bondings <b>5060</b>). These wire bondings allow the IC's <b>5020</b>-<b>5035</b> to communicate with each other without having to go outside of the SiP <b>5000</b>. In some embodiments, the IC's <b>5020</b>-<b>5035</b> might be directly wire-bonded to each other in order to facilitate communication between these IC's. Instead of, or in conjunction with the wire bondings, some embodiments might use other mechanisms to communicatively couple the IC's <b>5020</b>-<b>5035</b> to each other.</p>
<p id="p-0217" num="0216">As further shown in <figref idref="DRAWINGS">FIG. 50</figref>, the SiP includes a ball grid array (“BGA”) <b>5010</b> and a set of vias <b>5015</b>. The BGA <b>5010</b> is a set of solder balls that allows the SiP <b>5000</b> to be attached to a printed circuit board (“PCB”). Each via connects a solder ball in the BGA <b>5010</b> on the bottom of the substrate <b>5005</b>, to a conductor on the top of the substrate <b>5005</b>.</p>
<p id="p-0218" num="0217">The conductors on the top of the substrate <b>5005</b> are electrically coupled to the IC's <b>5020</b>-<b>5035</b> through the wire bondings. Accordingly, the IC's <b>5020</b>-<b>5035</b> can send and receive signals to and from circuits outside of the SiP <b>5000</b> through the wire bondings, the conductors on the top of the substrate <b>5005</b>, the set of vias <b>5015</b>, and the BGA <b>5010</b>. Instead of a BGA, other embodiments might employ other structures (e.g., a pin grid array) to connect a SiP to circuits outside of the SiP. As shown in <figref idref="DRAWINGS">FIG. 50</figref>, a housing <b>5080</b> encapsulates the substrate <b>5005</b>, the BGA <b>5010</b>, the set of vias <b>5015</b>, the IC's <b>5020</b>-<b>5035</b>, the wire bondings to form the SiP <b>5000</b>. This and other SiP structures are further described in United States Patent Application entitled “Method for Manufacturing a Programmable System in Package”, filed concurrently herewith the Ser. No. 11/081,820.</p>
<p id="p-0219" num="0218"><figref idref="DRAWINGS">FIG. 51</figref> conceptually illustrates a more detailed example of a computing system <b>5100</b> that has an IC <b>5105</b>, which includes one of the invention's configurable circuit arrangements that were described above. The system <b>5100</b> can be a stand-alone computing or communication device, or it can be part of another electronic device. As shown in <figref idref="DRAWINGS">FIG. 51</figref>, the system <b>5100</b> not only includes the IC <b>5105</b>, but also includes a bus <b>5110</b>, a system memory <b>5115</b>, a read-only memory <b>5120</b>, a storage device <b>5125</b>, input devices <b>5130</b>, output devices <b>5135</b>, and communication interface <b>5140</b>.</p>
<p id="p-0220" num="0219">The bus <b>5110</b> collectively represents all system, peripheral, and chipset interconnects (including bus and non-bus interconnect structures) that communicatively connect the numerous internal devices of the system <b>5100</b>. For instance, the bus <b>5110</b> communicatively connects the IC <b>5110</b> with the read-only memory <b>5120</b>, the system memory <b>5115</b>, and the permanent storage device <b>5125</b>.</p>
<p id="p-0221" num="0220">From these various memory units, the IC <b>5105</b> receives data for processing and configuration data for configuring the IC's configurable logic and/or interconnect circuits. When the IC <b>5105</b> has a processor, the IC also retrieves from the various memory units instructions to execute. The read-only-memory (ROM) <b>5120</b> stores static data and instructions that are needed by the IC <b>5110</b> and other modules of the system <b>5100</b>. The storage device <b>5125</b>, on the other hand, is read-and-write memory device. This device is a non-volatile memory unit that stores instruction and/or data even when the system <b>5100</b> is off. Like the storage device <b>5125</b>, the system memory <b>5115</b> is a read-and-write memory device. However, unlike storage device <b>5125</b>, the system memory is a volatile read-and-write memory, such as a random access memory. The system memory stores some of the instructions and/or data that the IC needs at runtime.</p>
<p id="p-0222" num="0221">The bus <b>5110</b> also connects to the input and output devices <b>5130</b> and <b>5135</b>. The input devices enable the user to enter information into the system <b>5100</b>. The input devices <b>5130</b> can include touch-sensitive screens, keys, buttons, keyboards, cursor-controllers, microphone, etc. The output devices <b>5135</b> display the output of the system <b>5100</b>.</p>
<p id="p-0223" num="0222">Finally, as shown in <figref idref="DRAWINGS">FIG. 51</figref>, bus <b>5110</b> also couples system <b>5100</b> to other devices through a communication interface <b>5140</b>. Examples of the communication interface include network adapters that connect to a network of computers, or wired or wireless transceivers for communicating with other devices. One of ordinary skill in the art would appreciate that any other system configuration may also be used in conjunction with the invention, and these system configurations might have fewer or additional components.</p>
<p id="p-0224" num="0223">While the invention has been described with reference to numerous specific details, one of ordinary skill in the art will recognize that the invention can be embodied in other specific forms without departing from the spirit of the invention. Thus, one of ordinary skill in the art would understand that the invention is not to be limited by the foregoing illustrative details, but rather is to be defined by the appended claims.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>We claim:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A configurable integrated circuit (“IC”) comprising:
<claim-text>a) a plurality of configurable circuits for receiving configuration data and configurably performing a set of operations based on the configuration data; and</claim-text>
<claim-text>b) a plurality of hybrid circuits, each particular hybrid circuit for interchangeably performing as one of a logic circuit and an interconnect circuit in the configurable IC, wherein each particular hybrid circuit comprises:
<claim-text>i) a first interconnect circuit having a select terminal set, and</claim-text>
<claim-text>ii) a second interconnect circuit for (1) receiving the configuration data, (2) receiving output data from the configurable circuits, and (3) supplying part of the received data to the select terminal set.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The configurable IC of <claim-ref idref="CLM-00001">claim 1</claim-ref>,
<claim-text>wherein a particular hybrid circuit performs an interconnect operation when the particular hybrid circuit acts as an interconnect circuit; and</claim-text>
<claim-text>wherein the particular hybrid circuit performs a computation when the particular hybrid circuit acts as a logic circuit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The configurable IC of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the hybrid circuits are hybrid multiplexers.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The configurable IC of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the plurality of hybrid circuits includes at least fifty hybrid circuits.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The configurable IC of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the plurality of hybrid circuits includes at least one hundred hybrid circuits.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The configurable IC of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the configurable circuits are arranged in an array and the hybrid circuits are part of the array.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The configurable IC of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the configurable circuits are arranged in an array and the hybrid circuits are interspersed in the array.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The configurable IC of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the supplied part of the received data includes only configuration data or only output data.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The configurable IC of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the supplied part of the received data includes configuration and output data.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The configurable IC of <claim-ref idref="CLM-00001">claim 1</claim-ref>,
<claim-text>wherein the configuration data received by the second interconnect circuit is a first set of configuration data,</claim-text>
<claim-text>wherein the second interconnect circuit receives at least a second set of configuration data for directing the second interconnect circuit to supply part of the received data to the select terminal set.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The configurable IC of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the plurality of configurable circuits include a plurality of configurable logic circuits and a plurality of configurable interconnect circuits.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The configurable IC of <claim-ref idref="CLM-00011">claim 11</claim-ref>, wherein output data is the output data of the configurable logic circuits.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The configurable IC of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein at least a plurality of output data are supplied to a plurality of hybrid configurable interconnect circuits through a plurality of configurable interconnect circuits.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The configurable IC of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the configurable circuits include at least fifty configurable circuits.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The configurable IC of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the configurable circuits include at least three hundred configurable circuits.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The configurable IC of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the hybrid circuits are hybrid multiplexers that are controllable either by configuration data for configuring the configurable IC or by signals generated by the IC.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The configurable IC of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein the configuration data is supplied from the outside of the IC.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The configurable IC of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the configuration data is data generated by a compiler to configure the configurable IC to implement a particular design.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. An electronic device comprising:
<claim-text>a) a memory for storing data;</claim-text>
<claim-text>b) a configurable integrated circuit (“IC”) for receiving data from the memory, the IC comprising:
<claim-text>a plurality of configurable circuits for receiving configuration data and configurably performing a set of operations based on the configuration data; and</claim-text>
<claim-text>a plurality of hybrid circuits, each particular hybrid circuit for interchangeably performing as one of a logic circuit and an interconnect circuit in the configurable IC, wherein each particular hybrid circuit comprises:
<claim-text>i) a first interconnect circuit having a select terminal set, and</claim-text>
<claim-text>ii) a second interconnect circuit for (1) receiving the configuration data, (2) receiving output data from the configurable circuits, and (3) supplying part of the received data to the select terminal set.</claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The electronic device of <claim-ref idref="CLM-00019">claim 19</claim-ref>,
<claim-text>wherein a particular hybrid circuit performs an interconnect operation when the particular hybrid circuit acts as an interconnect circuit; and</claim-text>
<claim-text>wherein the particular hybrid circuit performs a computation when the particular hybrid circuit acts as a logic circuit.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The electronic device of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the hybrid circuits are hybrid multiplexers.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The electronic device of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the supplied part of the received data includes only configuration data or only output data.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The electronic device of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the supplied part of the received data includes configuration and output data.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The electronic device of <claim-ref idref="CLM-00019">claim 19</claim-ref>,
<claim-text>wherein the configuration data received by the second interconnect circuit is a first set of configuration data,</claim-text>
<claim-text>wherein the second interconnect circuit receives at least a second set of configuration data for directing the second interconnect circuit to supply part of the received data to the select terminal set.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The electronic device of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the plurality of configurable circuits include a plurality of configurable logic circuits and a plurality of configurable interconnect circuits.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The electronic device of <claim-ref idref="CLM-00025">claim 25</claim-ref>, wherein output data is the output data of the configurable logic circuits.</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The electronic device of <claim-ref idref="CLM-00026">claim 26</claim-ref>, wherein at least a plurality of output data are supplied to a plurality of hybrid configurable interconnect circuits through a plurality of configurable interconnect circuits.</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. The electronic device of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the hybrid circuits are hybrid multiplexers that are controllable either by configuration data for configuring the configurable IC or by signals generated by the IC.</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. The electronic device of <claim-ref idref="CLM-00028">claim 28</claim-ref>, wherein the configuration data is supplied from the outside of the IC.</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. The electronic device of <claim-ref idref="CLM-00029">claim 29</claim-ref>, wherein the configuration data is data generated by a compiler to configure the configurable IC to implement a particular design.</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. The configurable IC of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the select terminal set also receives at least one other signal from a circuit other than the second interconnect circuit.</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. The configurable IC of <claim-ref idref="CLM-00031">claim 31</claim-ref>, wherein the at least one other signal is configuration data and the circuit that supplies the at least one other signal is a storage circuit storing the configuration data.</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. The electronic device of <claim-ref idref="CLM-00019">claim 19</claim-ref>, wherein the select terminal set also receives at least one other signal from a circuit other than the second interconnect circuit.</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. The electronic device of <claim-ref idref="CLM-00033">claim 33</claim-ref>, wherein the at least one other signal is configuration data and the circuit that supplies the at least one other signal is a storage circuit storing the configuration data.</claim-text>
</claim>
<claim id="CLM-00035" num="00035">
<claim-text>35. A configurable integrated circuit (“IC”) comprising:
<claim-text>a) a plurality of configurable circuits for receiving configuration data and configurably performing a set of operations based on the configuration data; and</claim-text>
<claim-text>b) a plurality of hybrid circuits, each particular hybrid circuit for interchangeably performing as one of a logic circuit and an interconnect circuit in the configurable IC, each particular hybrid circuit comprising:</claim-text>
<claim-text>a set of input terminals for receiving a set of input signals,</claim-text>
<claim-text>a set of output terminals for providing a set of output signals, and</claim-text>
<claim-text>a set of select terminals for receiving select signals,</claim-text>
<claim-text>wherein when performing as a logic circuit, the particular hybrid circuit performs a function that is based on signals received on the input and select terminals,</claim-text>
<claim-text>wherein when performing as an interconnect circuit, the particular hybrid circuit's interconnect operation connects the input and output terminal set based on the select signals.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00036" num="00036">
<claim-text>36. A configurable integrated circuit (“IC”) comprising:
<claim-text>a) a plurality of configurable logic and interconnect circuits for receiving configuration data, wherein the configurable logic circuits perform functions producing output data and the configurable interconnect circuits perform interconnect operations based on the configuration data; and</claim-text>
<claim-text>b) a plurality of hybrid circuits, each particular hybrid circuit for interchangeably performing as one of a logic circuit and an interconnect circuit in the configurable IC, wherein at least a plurality of output data are supplied to a plurality of hybrid circuits through a plurality of configurable interconnect circuits.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00037" num="00037">
<claim-text>37. An electronic device comprising:
<claim-text>a) a memory for storing data;</claim-text>
<claim-text>b) a configurable integrated circuit (“IC”) for receiving data from the memory, the IC comprising:
<claim-text>i) a plurality of configurable circuits for receiving configuration data and configurably performing a set of operations based on the configuration data; and</claim-text>
<claim-text>ii) a plurality of hybrid circuits, each particular hybrid circuit for interchangeably performing as one of a logic circuit and an interconnect circuit in the configurable IC, each particular hybrid circuit comprising:
<claim-text>a set of input terminals for receiving a set of input signals,</claim-text>
<claim-text>a set of output terminals for providing a set of output signals, and</claim-text>
<claim-text>a set of select terminals for receiving select signals,</claim-text>
<claim-text>wherein when performing as a logic circuit, the particular hybrid circuit performs a function that is based on signals received on the input and select terminals,</claim-text>
<claim-text>wherein when performing as an interconnect circuit, the particular hybrid circuit's interconnect operation connects the input and output terminal set based on the select signals.</claim-text>
</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00038" num="00038">
<claim-text>38. An electronic device comprising:
<claim-text>a) a memory for storing data;</claim-text>
<claim-text>b) a configurable integrated circuit (“IC”) for receiving data from the memory, the IC comprising:
<claim-text>i) a plurality of configurable logic and interconnect circuits for receiving configuration data, wherein the configurable logic circuits perform functions producing output data and the configurable interconnect circuits perform interconnect operations based on the configuration data; and</claim-text>
<claim-text>ii) a plurality of hybrid circuits, each particular hybrid circuit for interchangeably performing as one of a logic circuit and an interconnect circuit in the configurable IC, wherein at least a plurality of output data are supplied to a plurality of hybrid circuits through a plurality of configurable interconnect circuits.</claim-text>
</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
