<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298777-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298777</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10455020</doc-number>
<date>20030606</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>680</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>B</subclass>
<main-group>1</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>375148</main-classification>
<further-classification>375147</further-classification>
<further-classification>375150</further-classification>
<further-classification>375142</further-classification>
<further-classification>375144</further-classification>
<further-classification>370335</further-classification>
<further-classification>370336</further-classification>
<further-classification>370342</further-classification>
<further-classification>370441</further-classification>
</classification-national>
<invention-title id="d0e53">Searching in a spread spectrum communications</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5440597</doc-number>
<kind>A</kind>
<name>Chung et al.</name>
<date>19950800</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>375200</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5577022</doc-number>
<kind>A</kind>
<name>Padovani et al.</name>
<date>19961100</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>370 13</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>5642377</doc-number>
<kind>A</kind>
<name>Chung et al.</name>
<date>19970600</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>375200</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>5710768</doc-number>
<kind>A</kind>
<name>Ziv et al.</name>
<date>19980100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370342</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6363108</doc-number>
<kind>B1</kind>
<name>Agrawal et al.</name>
<date>20020300</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375152</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>US</country>
<doc-number>6542478</doc-number>
<kind>B1</kind>
<name>Park</name>
<date>20030400</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>370308</main-classification></classification-national>
</citation>
<citation>
<patcit num="00007">
<document-id>
<country>US</country>
<doc-number>6944149</doc-number>
<kind>B1</kind>
<name>Kim et al.</name>
<date>20050900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370349</main-classification></classification-national>
</citation>
<citation>
<patcit num="00008">
<document-id>
<country>US</country>
<doc-number>7085246</doc-number>
<kind>B1</kind>
<name>LaRosa et al.</name>
<date>20060800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370311</main-classification></classification-national>
</citation>
<citation>
<patcit num="00009">
<document-id>
<country>US</country>
<doc-number>2003/0002566</doc-number>
<kind>A1</kind>
<name>McDonough et al.</name>
<date>20030100</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>375147</main-classification></classification-national>
</citation>
<citation>
<patcit num="00010">
<document-id>
<country>US</country>
<doc-number>2003/0053518</doc-number>
<kind>A1</kind>
<name>McDonough</name>
<date>20030300</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>375130</main-classification></classification-national>
</citation>
<citation>
<nplcit num="00011">
<othercit>Yi Sun, <i>A Generalized Search Rule Of Likelihood Ascent Search Detectors For CDMA Multiuser Detection, </i>(6p.).</othercit>
</nplcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>19</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>375148</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375316</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375147</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375150</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375142</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>375144</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370310</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370342</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370335</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370336</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370441</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>11</number-of-figures>
</figures>
<us-related-documents>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20040247019</doc-number>
<kind>A1</kind>
<date>20041209</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>McDonough</last-name>
<first-name>John G.</first-name>
<address>
<city>La Jolla</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Jeong</last-name>
<first-name>Gibong</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="003" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Abdulla</last-name>
<first-name>Karim</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="004" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Nambiar</last-name>
<first-name>Rajiv R.</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="005" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Clark, Jr.</last-name>
<first-name>William S.</first-name>
<address>
<city>Escondido</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Wu</last-name>
<first-name>Dolly Y.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Brady</last-name>
<first-name>W. James</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="03" rep-type="attorney">
<addressbook>
<last-name>Telecky, Jr.</last-name>
<first-name>Frederick J.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Texas Instruments Incorporated</orgname>
<role>02</role>
<address>
<city>Dallas</city>
<state>TX</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Ghayour</last-name>
<first-name>Mohammed</first-name>
<department>2611</department>
</primary-examiner>
<assistant-examiner>
<last-name>Malek</last-name>
<first-name>Leila</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">This disclosure is generally directed to communication systems, devices used in communication systems and associated methods which may implement parallel hypothesis search techniques. The disclosed parallel hypothesis search techniques may permit a hypothesis to be dismissed early (i.e., before hypotheses in other searchers have completed their evaluation). Early hypothesis dismissal permits a new hypothesis to be loaded into the searcher while other searchers advantageously continue to evaluate their hypotheses.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="101.43mm" wi="170.18mm" file="US07298777-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="249.85mm" wi="182.88mm" file="US07298777-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="254.00mm" wi="172.47mm" file="US07298777-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="261.37mm" wi="183.64mm" file="US07298777-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="251.88mm" wi="183.30mm" file="US07298777-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="236.22mm" wi="165.86mm" file="US07298777-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="253.58mm" wi="181.10mm" file="US07298777-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0002" num="0001">1. Field of the Invention</p>
<p id="p-0003" num="0002">The present invention generally relates to communication systems. More particularly, the invention generally relates to an improved synchronization search technique and more particularly to using a random access sequence generator during the synchronization search process.</p>
<p id="p-0004" num="0003">2. Background Information</p>
<p id="p-0005" num="0004">In some cellular networks, information (e.g., voice signals) are encoded with a scrambling code, transmitted to a receiving device, and decoded by the receiving device. In CDMA cellular networks like W-CDMA and CDMA2000 systems, each cell or base station sector uses a different time offset of the scrambling code. To establish a communication link, the mobile station searches for a cell and determines the frame synchronization associated with that cell.</p>
<p id="p-0006" num="0005">To achieve this synchronization, the mobile station uses a “searcher” to perform initial cell acquisition, cell measurement and delay profile estimation. The mobile station may acquire the scrambling code, code offset, and carrier frequency of the strongest base station when it has no radio link established to any particular base station. The mobile station then may measure the radio link quality of the neighboring cells to support various types of handover procedures. The mobile station then may estimate the delay profile to decide on allocation of Rake fingers or demodulator elements. In general, the searcher tests the hypothesis that a spread spectrum signal exists at a particular code offset and/or at a certain carrier frequency and/or with a certain scrambling code, and so on.</p>
<p id="p-0007" num="0006">All of these requirements benefit from a high “search throughput” from the mobile station. The “search time” may also greatly impact performance during power up of the mobile device. A method for reducing the search time and increasing the search throughput is desirable.</p>
<heading id="h-0002" level="1">BRIEF SUMMARY</heading>
<p id="p-0008" num="0007">The present disclosure is directed to communication systems, devices used in communication systems and associated methods that are generally directed to parallel hypothesis search techniques. The disclosed parallel hypothesis search techniques may permit a hypothesis to be dismissed early (i.e., before hypotheses in other searchers have completed their evaluation). Early hypothesis dismissal permits a new hypothesis to be loaded into the searcher while other searchers advantageously continue to evaluate their hypotheses.</p>
<p id="p-0009" num="0008">In accordance with some embodiments, a communication device may include a receiver that receives a plurality of signals and a plurality of searchers coupled to the receiver. The searchers may receive a signal from the receiver and may decode the received signal. The device may also include a random access sequence generator coupled to the searchers. The random access sequence generator may cause each searcher to decode the received signal provided to the searcher using a code having a particular time offset. The time offset provided to a searcher may be independent of the time offsets of the codes provided to other searchers.</p>
<p id="p-0010" num="0009">An exemplary method may include loading a hypothesis that has an associated code offset, accumulating an energy value based on a signal that has been decoded using the hypothesis to produce an accumulated energy value, comparing the accumulated energy value to a dump threshold, and if the accumulated energy value falls below the dump threshold, dismissing the hypothesis and loading a new hypothesis while other searchers continue to evaluate their hypotheses.</p>
<p id="p-0011" num="0010">These and other embodiments are discussed below.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0012" num="0011">For a detailed description of the preferred embodiments of the invention, reference will now be made to the accompanying drawings in which:</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 1</figref> shows a communication system in accordance with a preferred embodiment of the invention;</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 2</figref> shows a preferred embodiment of a communication device usable in the system of <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 3</figref> shows a preferred embodiment of a searcher used in the communication device of <figref idref="DRAWINGS">FIG. 2</figref>;</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 4</figref> depicts an exemplary process implemented in the searcher of <figref idref="DRAWINGS">FIG. 3</figref>;</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 5</figref> shows another preferred embodiment of the searcher used in the communication device of <figref idref="DRAWINGS">FIG. 2</figref>;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIGS. 6A and 6B</figref> show exemplary frame structures;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 7</figref> illustrates the operation of the pipeline architecture of the searcher of <figref idref="DRAWINGS">FIG. 5</figref>; and</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 8</figref> shows an example associated with the pipeline architecture of <figref idref="DRAWINGS">FIG. 5</figref>.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">NOTATION AND NOMENCLATURE</heading>
<p id="p-0021" num="0020">Certain terms are used throughout the following description and claims to refer to particular system components. As one skilled in the art will appreciate, different companies may refer to a component and sub-components by different names. This document does not intend to distinguish between components that differ in name but not function. In the following discussion and in the claims, the terms “including” and “comprising” are used in an open-ended fashion, and thus should be interpreted to mean “including, but not limited to . . . ”. Also, the term “couple” or “couples” is intended to mean either a direct or indirect connection. Thus, if a first device couples to a second device, that connection may be through a direct connection, or through an indirect connection via other devices and connections. As used herein, the terms “code offset” and “time offset” are synonymous. To the extent that any term is not specially defined in this specification, the intent is that the term is to be given its plain and ordinary meaning.</p>
<heading id="h-0005" level="1">DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS OF THE INVENTION</heading>
<p id="p-0022" num="0021">The following discussion is directed to various embodiments of the invention. Although one or more of these embodiments may be preferred, the embodiments disclosed should not be interpreted, or otherwise used, as limiting the scope of the disclosure, including the claims, unless otherwise specified. In addition, one skilled in the art will understand that the following description has broad application, and the discussion of any embodiment is meant only to be exemplary of that embodiment, and not intended to intimate that the scope of the disclosure, including the claims, is limited to that embodiment.</p>
<p id="p-0023" num="0022">The preferred embodiments of the invention may be implemented in a wide variety of data transmission applications and <figref idref="DRAWINGS">FIG. 1</figref> shows one possible application. In <figref idref="DRAWINGS">FIG. 1</figref>, system <b>10</b> may be useable for voice and/or data transmission. As shown, base station controller and switch <b>42</b> may perform interface and control functions to permit communications between remote units <b>50</b>, base stations <b>40</b> and the public switched telephone network (“PSTN”) <b>44</b>. The remote units <b>50</b> may comprise mobile units such as cellular telephones and the like. In general, the base station controller and switch <b>42</b> controls the routing of calls between the PSTN <b>44</b> and base stations <b>40</b> for transmission to and from mobile units <b>50</b>.</p>
<p id="p-0024" num="0023"><figref idref="DRAWINGS">FIG. 2</figref> shows a block diagram of at least a portion of mobile unit <b>50</b>, although some or all of the components shown in <figref idref="DRAWINGS">FIG. 2</figref> may also be included in the base stations <b>40</b>. Thus, the principles described herein are applicable to either the mobile units <b>50</b> or the base stations <b>40</b>. As shown in <figref idref="DRAWINGS">FIG. 2</figref>, mobile unit <b>50</b> may include an antenna <b>54</b>, an analog receiver <b>52</b>, a modem <b>53</b>, processing logic <b>58</b>, control logic <b>62</b>, and a random access sequence generator <b>80</b>.</p>
<p id="p-0025" num="0024">The signals transmitted back and forth between the base stations <b>50</b> and the mobile units <b>40</b> may be encoded according to any of a variety of standards. In accordance with some embodiments, the applicable standard may be code division multiple access (“CDMA”). Reference may be made to any of a variety of documents for information pertaining to CDMA such as U.S. Pat. Nos. 6,542,478; 5,710,768; 5,642,377; 5,577,022; 5,440,597; U.S. Patent Application Publication Nos. US2003/00053518; US/2003002566, as well as various articles such as “A Generalized Search Rule Of Likelihood Ascent Search Detectors For CDMA Multiuser Detection” by Yi Sun, all of which are incorporated herein by reference.</p>
<p id="p-0026" num="0025">In a CDMA network, information to be transmitted between a base station <b>50</b> and a mobile unit <b>40</b> is encoded with a scrambling code. The scrambling code may also be referred to as a pseudo noise (“PN”) code. Signals transmitted by a base station <b>50</b> and detected by the antenna <b>54</b> may be received by the analog receiver <b>52</b>. The analog receiver preferably down-converts the detected signal to a baseband equivalent signal, quantizes the received “I” and “Q” channels, and provides these digital signals to modem <b>53</b>. In <figref idref="DRAWINGS">FIG. 2</figref>, the modem <b>53</b> may comprise one or more demodulation elements <b>54</b> and one or more searchers <b>60</b>. Although any number of demodulation elements <b>54</b> and searchers <b>60</b> may be included, in accordance with the preferred embodiments of the invention, a plurality of demodulation elements <b>54</b> and a plurality of searchers <b>60</b> are included in the modem <b>53</b>. Each modem <b>53</b> may support a single user and thus a base station <b>50</b> may include a plurality of modems <b>53</b> to support a plurality of simultaneous users if desired.</p>
<p id="p-0027" num="0026">Each demodulation element <b>54</b> is responsible for decoding an incoming signal in accordance with a scrambling code offset that closely tracks the offset used to encode the data in the first place. In general, each searcher <b>60</b> decodes a test pilot signal transmitted by the base station <b>50</b> in accordance with a scrambling code offset as controlled by the control logic <b>62</b>. The control logic <b>62</b> causes each searcher <b>60</b> to decode the pilot signal with a particular code offset value. The searcher <b>60</b> decodes the signal with the code offset and computes an energy level associated with the decode operation. The energy generally will be maximum when the code offset used in the decode process matches the code offset used in the encoding process. Each searcher <b>60</b> reports the energy that it determines with the designated offset to the control logic <b>62</b>. The control logic <b>62</b> examines the energy results reported to it by the searchers <b>60</b> and determines which offset is most likely to be the offset used by the device that encoded and transmitted the pilot signal (e.g., the base stations). This process will be explained in more detail below. Once a suitable offset is determined by the coordinated effort of the searchers <b>60</b> and control logic <b>62</b>, the control logic <b>62</b> then causes one or more demodulation elements <b>54</b> to be assigned using the determined offset to decode future signals from the transmitting device. Once a demodulation element <b>54</b> has locked onto the signal at its determined offset, the demodulation element then may track the signal on its own without supervision from control logic <b>62</b>, until the signal fades away or until the demodulation element <b>54</b> is assigned to a new offset by control logic <b>62</b>.</p>
<p id="p-0028" num="0027"><figref idref="DRAWINGS">FIG. 3</figref> shows an exemplary embodiment of a searcher <b>60</b> coupled to the control logic <b>62</b> and random access generator <b>80</b>. As shown in <figref idref="DRAWINGS">FIG. 3</figref>, the exemplary searcher <b>60</b> may include a sample buffer <b>70</b>, despread <b>72</b>, a coherent accumulator <b>74</b>, a squarer <b>76</b>, and a non-coherent accumulator <b>78</b>. Other components may be included as well such as adder <b>77</b> which adds in a BIAS value. Input I/Q signals from the analog receiver <b>52</b> (<figref idref="DRAWINGS">FIG. 2</figref>) may be stored in sample buffer <b>70</b>. From the sample buffer <b>70</b>, the samples are processed by despread <b>72</b> which may comprise a quadrature or other suitable type of despread. The despread <b>72</b> generally correlates the sampled I/Q samples with a PN code provided by the random access sequence generator <b>80</b>. The determination of the code offset associated with the PN code provided by the random access sequence generator <b>80</b> will be explained in more detail below.</p>
<p id="p-0029" num="0028">The output from despread <b>72</b> is provided to the coherent accumulator <b>74</b> which accumulates the signal as is well known. The accumulator <b>74</b> output is squared by squarer <b>76</b> to compute an energy value which is then shifted by a BIAS value. This BIAS value is used in conjunction with the dump threshold (D) to determine the miss probability and average dwell time based on the target signal-to-noise (SNR) ratio. The energy value is then processed by non-coherent accumulator <b>78</b> which further accumulates the signal. The output values from the non-coherent accumulator <b>78</b> generally indicate an energy level and such energy values are analyzed by the control logic <b>62</b>. In general, the correct PN code to use by a demodulation element <b>54</b> is the code that results in maximum energy. As explained previously, maximum energy results when the timing between the PN code and the I/Q sample is just right so as to be able to accurately decode the incoming signal.</p>
<p id="p-0030" num="0029">In accordance with the preferred embodiments of the invention, the random access sequence generator <b>80</b> generally provides PN codes to be used in the despread operation in a searcher and are associated with time offsets that have little, if any, dependency to PN code time offsets provided to other searchers <b>60</b>. That being the case, an offset hypothesis can be aborted if the hypothesis proves to be incorrect and a new hypothesis can be loaded in that searcher without having to wait on other searchers <b>60</b> in the modem <b>53</b> to determine the outcome of their hypotheses. That is, modem <b>53</b> includes a plurality of parallel searchers whose operation is not necessarily synchronized.</p>
<p id="p-0031" num="0030">In accordance with at least some embodiments, the control logic <b>62</b> may generate a plurality of possible code offsets and load such code offsets into the random access sequence generator <b>80</b>. The offsets may be loaded in a random order in a memory buffer in the random access sequence generator <b>80</b>. “Random” includes pseudo-random and the like. As such, the random access sequence generator <b>80</b> may include a random access memory buffer and a controller (not specifically shown) that selects one of the code offsets to be loaded into a searcher <b>60</b>. The selection of code offsets may be in a random order using a random number generator (not shown) or other suitable technique. The PN code(s) loaded in the random access sequence generator <b>80</b> may be computed or otherwise determined by the control logic <b>62</b>. The PN code may be predetermined or determined in accordance with any of a variety of suitable techniques depending on the applicable communication standard. If stored in random order, the code offsets may be stored at various memory addressed in the random access sequence generator's buffer and retrieved in memory address to be provided to the searchers. Alternatively, the code offsets may be stored in offset order in the buffer and retrieved in a random order.</p>
<p id="p-0032" num="0031"><figref idref="DRAWINGS">FIG. 4</figref> shows an exemplary process <b>100</b> for generating, testing and rejecting code offset hypotheses. Process <b>100</b> may start at <b>102</b> and initialize at <b>104</b>. The initialization process <b>104</b> may include initializing one or more variables such as a dwell count and an accumulated energy value. Such variables may be initialized to a suitable starting value such as 0. At <b>106</b>, a new hypothesis may be loaded into a searcher <b>60</b> by the random access sequence generator <b>80</b>. The accumulation process begins in block <b>108</b> in which a present energy result from non-coherent accumulator <b>78</b> is added to a previous energy total. The dwell count comprises a value that indicates the number of accumulation steps that have been performed. The dwell count also is generally indicative of the amount of time for which the current hypothesis has been tested. If the dwell count has not yet reached a maximum threshold, designated as MAX_L, as determined by decision block <b>110</b>, then decision block <b>112</b> may be performed. In accordance with decision block <b>112</b>, the accumulated energy value is compared to a dump threshold (D). If the accumulated value is less than or equal to D, then the hypothesis loaded in block <b>106</b> is dismissed in accordance with block <b>122</b>. Dismissing a hypothesis refers to rejecting the hypothesis as invalid. If, however, the accumulated energy value is not less than or equal to D, then process control may loop back to block <b>108</b> in which the accumulation process continues. Dump threshold D permits a new hypothesis to be tried while other hypotheses are still being tested.</p>
<p id="p-0033" num="0032">If in decision block <b>110</b> it is determined that the dwell count equals MAX_L, control passes to decision block <b>114</b>. In decision block <b>114</b> it is determined whether the accumulated value is greater than an acceptance threshold M. The acceptance threshold M in decision block <b>114</b> generally is a value that indicates whether the hypothesis should be dismissed or accepted. In accordance with at least some embodiments, the acceptance threshold M used in decision block <b>114</b> may be equal to, or a function of, (M-BIAS+1)*MAX_L. If the current accumulated value is greater than the acceptance threshold, the hypothesis is accepted in block <b>118</b> with the energy results being further processed in block <b>120</b>. Processing in block <b>120</b> may include storing an ordered list per record of the eight strongest accepted hypotheses, sorted by earliest arriving time and by energy value. Other processing may include computing a pilot strength for each record by summing up the individual energy values of the eight strongest accepted hypotheses and reporting this pilot strength in both linear and dB form. If, however, in block <b>114</b> the current accumulated value is not greater than the acceptance threshold, the hypothesis is dismissed in block <b>116</b>. The acceptance threshold thus may reduce the frequency of false positives. From blocks <b>116</b>, <b>120</b> or <b>122</b>, control may pass to block <b>124</b> in which it is determined whether the searching process is completed. This decision is made by checking to see if all eight hypothesis counters (1 per record) have all been decremented to zero. Each counter is decremented when a hypothesis completes its processing, either by being “dumped” or by being passed onto the result processor. If searching is finished, the process completes at <b>126</b>. If not, control passes back to block <b>106</b>.</p>
<p id="p-0034" num="0033">As noted above, by implementing the threshold D, a hypothesis may be dismissed early on in the search process when it is determined that the hypothesis is likely not to be valid. Once dismissed, the random access sequence generator <b>80</b> can reload the searcher that dismissed its hypothesis while other searchers still may be processing their hypotheses. In being able to dismiss a hypothesis early, the searching processing can be made more efficient and thus faster.</p>
<p id="p-0035" num="0034">The following includes an example of the preceding embodiments. <figref idref="DRAWINGS">FIG. 5</figref> shows a searcher <b>120</b> in accordance with a preferred embodiment of the invention. The following discussion of <figref idref="DRAWINGS">FIG. 5</figref> is exemplary of the embodiment of the <figref idref="DRAWINGS">FIG. 5</figref>. Many aspects of <figref idref="DRAWINGS">FIG. 5</figref> (e.g. numerical limitations on buffer sizes, chip numbers, etc.) may be varied as desired in other embodiments. The searcher <b>120</b> couples to an antenna <b>54</b> via a radio control interface (“RCI”) <b>55</b>. RCI <b>55</b> receives the antenna's signal and generates I/Q signals as explained previously. The searcher depicted in <figref idref="DRAWINGS">FIG. 5</figref> may include a sample buffer unit <b>106</b>, an I/O calculation unit <b>130</b>, a vector quadrature despread (“VQDS”) unit <b>140</b>, a coherent accumulator <b>144</b>, a non-coherent accumulator <b>160</b>, a results processor <b>170</b>, a hypothesis generator <b>180</b>, and a sequence generator (“SEQ”) <b>190</b>.</p>
<p id="p-0036" num="0035">By way of an overview, a system controller (“SC”) <b>57</b> may provide a global chip count (“GCC”) to the hypothesis generator <b>180</b>. The GCC may serve as a timestamp for the I/Q samples stored in the sample buffer unit <b>106</b>. The sample buffer unit <b>106</b> may store 32 “chips” of I/Q data and may be refreshed every 16 chips worth of time. In CDMA, the information data is a low-speed signal with a small bandwith in the range of 10-100 kbits/sec. The energy of this low-speed signal is spread over a much larger bandwith by multiplying it by a known wideband spreading code. The bandwith of the resulting signal is approximately equal to the rate of the spreading code called the chip rate. Therefore a single chip refers to a portion or “chip” of the low-speed information data. The hypothesis generator <b>180</b> may generate test PN indices, which the SEQ <b>190</b> may use to generate sequences of PN_I, PN_Q and Orthogonal Variable Spreading Factor (OVSF) or Walsh codes which are well known. The I/Q samples from the sample buffer unit <b>106</b> along with the PN sequences from the SEQ <b>190</b> may be provided to the VQDS unit <b>140</b>. The VQDS unit <b>140</b> generally performs two functions. One function is to recover a pilot channel from the incoming I/Q data stream using the OVSF/Walsh bits provided by the SEQ <b>190</b>. The other function is to correlate the resulting data stream with PN_I and PN_Q values. In the coherent accumulator <b>144</b>, the correlation results for I and Q may be maintained as two distinct data streams and may be accumulated independently for N chips, where N is the coherent dwell time. Upon expiration of this coherent dwell time N, the data stream for I and Q each may be squared and combined together into one data stream and accumulated in the non-coherent accumulator <b>160</b> for L chips, where L is a non-coherent dwell time. At the completion of the non-coherent dwell time L, correlation peaks (defined as those meeting a threshold criterion) are sent to the results processor <b>170</b>. The results processor <b>170</b> preferably maintains a sorted list of peaks in terms of both strength and earliest arriving multipaths. The results processor <b>170</b> also may compute the pilot channel strength by summing the individual multipath peaks together. The computed pilot channel strength may be reported in absolute strength and in units of decibels (“dB”).</p>
<p id="p-0037" num="0036">The following discusses the embodiment of <figref idref="DRAWINGS">FIG. 5</figref> in more detail. The function of the sample buffer unit <b>106</b> preferably is to store I/Q samples to be used in the correlation process. The sample buffer unit <b>106</b> depicted in <figref idref="DRAWINGS">FIG. 5</figref> may include three sample buffer register files <b>112</b>, <b>114</b><i>a</i>, and <b>114</b><i>b</i>, multiplexers <b>110</b>, <b>116</b>, <b>118</b>, and memory <b>108</b>. Register files <b>114</b><i>a,b </i>combined may provide 32 chips worth of I/Q data storage at ¼ chip resolution. Each I and Q sample may be 5 bits wide. These 32 chips of I/Q data in register files <b>114</b><i>a,b </i>may be provided in a parallel fashion to the I/O calculation unit <b>130</b> and VQDS <b>140</b> through multiplexers <b>116</b> and <b>118</b>, respectively. The I/O calculation unit <b>130</b> and VQDS <b>140</b> may select 16 out of the possible 2 chips of I/Q data to use in the correlation process. Sample buffer register file <b>112</b> may be filled with the next 16 chips of I/Q data in a serial fashion while the correlations are being performed on the data from register files <b>114</b><i>a,b</i>. When register file <b>112</b> becomes full, I/Q data may be transferred from register file <b>114</b><i>a </i>to register file <b>114</b><i>b </i>and from register file <b>112</b> to register file <b>114</b><i>a</i>, preferably in one clock cycle. In this way, register files <b>114</b><i>a,b </i>preferably always contain the current 32 chips worth of I/Q data while register file <b>112</b> collects the next 16 chips of data from the RCI <b>55</b>. The sample buffer unit <b>106</b> may also include memory <b>108</b> which may comprise a 16 k×10 random access memory (“RAM”) in which sample capture I/Q samples can be stored. The memory <b>108</b> may used in a low power offline search mode in which 3.2 slots worth of I/Q samples at ½ chip resolution may be stored. Correlations then may be performed on this data in memory <b>108</b> with the analog and RF front end turned off.</p>
<p id="p-0038" num="0037">The hypothesis generator <b>180</b> may include hypothesis generation logic <b>181</b>, external RAM <b>182</b>, symbol alignment check <b>183</b>, register files <b>184</b> and <b>186</b>, hypothesis RAM <b>185</b>, multiplexer <b>187</b> and PN_index calculation unit <b>188</b>. Other components may be included as well. The hypothesis generator <b>180</b> may generate test PN indices that the SEQ <b>190</b> may use to generate PN sequences against which to correlate. The locations of the PN indices may be specified in “PN space.” Preferably, the PN space is periodic (e.g., every 10 ms for WCDMA and every 26.67 ms for CDMA2000). Each PN index may be computed according to a suitable formula such as PN_INDEX=GCC−(window_start+hypothesis), where GCC is the timestamp from the SC <b>57</b> of each I/Q sample. The window_start value is explained below. Alternatively stated, each PN_INDEX may be a location in the PN space relative to the timestamp of each IQ sample that is used in the correlation process.</p>
<p id="p-0039" num="0038">In some embodiments, the hypothesis generator <b>180</b> may compute a new hypothesis according to the following: hypothesis=previous_hypoth+search_resolution. In this way, two consecutive hypotheses may only differ by the search resolution value. The search resolution may be set to any suitable value such as 1 chip, ½ chip or ¼ chip.</p>
<p id="p-0040" num="0039">A window_start value may point to any location in the PN space, while each hypothesis may only point to locations within a “slot”. At, for example, a 3.84 Mchips/sec chip rate, a 10 ms frame corresponds to 38,400 chips. Each 10 ms frame is comprised of 15 equal slots or 2560 chips. The number of hypotheses and the resolution between adjacent hypotheses may define the search window size. Each hypothesis may be of any suitable width. In some embodiments, the hypothesis may be 14 bits wide—12 bits to indicate the chip within a slot and 2 bits to indicate the sub-chip (either 0, ½, ¼, or ¾) within a chip over which to correlate.</p>
<p id="p-0041" num="0040">The searcher <b>120</b> may include 128 independent correlation resources. Each hypothesis may consume one correlation resource. For this reason, a 128×14 hypothesis memory <b>185</b> may store each of the 128 active hypotheses in the searcher <b>120</b>. If the number of hypotheses exceeds 128 for a given search, the hypothesis generator <b>180</b> may generate the first 128 hypotheses and may wait for the searcher to complete its correlations against this first set of 128 hypotheses. As correlations complete and resources become available, the hypothesis generator <b>180</b> may generate the remaining hypotheses. This process may continue until all hypotheses are searched or correlated.</p>
<p id="p-0042" num="0041">The searcher hypothesis generator <b>180</b> may support hypothesis and PN_INDEX generation for, for example, WCDMA and CDMA2000. PN indices for WCDMA and CDMA2000 may wrap around at different points because of the differing frame structures of WCDMA versus CDMA2000. The frame structure for each such standard is shown in <figref idref="DRAWINGS">FIGS. 6A and 6B</figref>. <figref idref="DRAWINGS">FIG. 6A</figref> shows the frame structure for WCDMA and <figref idref="DRAWINGS">FIG. 6B</figref> shows the frame structure for CDMA2000. For WCDMA (<figref idref="DRAWINGS">FIG. 6A</figref>), each frame preferably comprises 15 slots at 2560 chips per slot. At a transmission rate of 3.84 Mchips/sec, each frame may be transmitted in 10 ms. For CDMA200 (<figref idref="DRAWINGS">FIG. 6B</figref>), each frame preferably comprises 32768 chips. At a transmission rate of 1.2288 Mchips/sec, each frame may be transmitted in 26.67 ms. A software controlled configuration register (not specifically shown) may be used to specify in which mode the searcher functions. Preferably, the PN indices generated by the hypothesis generator <b>180</b> and provided to the SEQ <b>190</b> are between 0 and 38399 for WCDMA and between 0 and 32767 for CDMA2000, although in other embodiments these numbers may vary.</p>
<p id="p-0043" num="0042">As explained previously, any two hypotheses generated by the hypothesis generator <b>180</b> may differ by the amount of the search resolution. In other embodiments, the difference between two hypotheses may not be a constant and thus may bear no particular pattern. The external RAM <b>182</b> is thus used to permit discontinuous hypotheses to be programmed and searched.</p>
<p id="p-0044" num="0043">In a symbol alignment mode, the hypothesis generator <b>180</b> may perform an additional check after generating a hypothesis and computing the associated PN_INDEX. Specifically, the hypothesis generator may check to see if the PN_INDEX generated with the current hypothesis is on a symbol boundary. This may help to ensure that correlations begin on a symbol boundary as opposed to spanning a symbol, resulting in increased correlation performance.</p>
<p id="p-0045" num="0044">To check for symbol alignment, the hypothesis generator <b>180</b> may test the calculated PN_INDEX to see if it is a multiple of N, the coherent dwell time. When a PN_INDEX is a multiple of the coherent dwell time N, it is also a multiple of the symbol length. If this conditional check is true, then the hypothesis is assigned to that cell as normal. If, however, the conditional check fails, then the hypothesis generator <b>180</b> may stall and wait for this condition to become true for a future cell, at which point the hypothesis may be assigned to that cell. This condition will become true as the timestamp (i.e. GCC relative to which each PN_INDEX is calculated) progresses in time.</p>
<p id="p-0046" num="0045">The SEQ <b>190</b> may receive a PN index from the hypothesis generator <b>180</b> and a request pair generated by the hypothesis generator. The SEQ <b>190</b> preferably computes the PN sequences that correspond to each PN index. In at least some embodiments a 1:1 mapping (defined by the 3GPP2 Specification) may exist between each PN index and the corresponding PN_I, PN_Q, and OVSF/Walsh sequences.</p>
<p id="p-0047" num="0046">For every PN index that the hypothesis generator <b>180</b> sends to the SEQ <b>190</b>, the SEQ may return 16 consecutive chips worth of PN_I, 16 consecutive chips worth of PN_Q, 16 consecutive chips worth of OVSF bits and 16 consecutive chips worth of Secondary OVSF bits. In some embodiments, the hypothesis generator <b>180</b> may send as many as 8 PN index/request pairs to the SEQ <b>190</b> per chip time yielding up to 128 bits each of PN_I, PN_Q, OVSF and Secondary OVSF per chip from the SEQ.</p>
<p id="p-0048" num="0047">The searcher <b>120</b> may use the 16 chips of PN from the SEQ <b>190</b> and the 16 chips of I/Q samples from the sample buffer unit <b>106</b> to perform a 16-bit vector despread/correlation every clock cycle. This 16-bit vector processing offers the advantage (over traditional 1-bit per clock cycle despread/correlation operations) of lower hardware latency (i.e. faster search times). The following outlines the 16-bit vectorized quadrature despread performed by VQDS <b>140</b> between I/Q samples and PN_I and PN_Q:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>I Stream: (I×PN_I+Q×PN_Q)<sub>chip0</sub>+(I×PN_I+QXPN_Q)<sub>chip1</sub>+ . . . +(I×PN_I+Q×PN_Q)<sub>chip15 </sub><?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>Q Stream: (Q×PN_I−I×PN_Q)<sub>chip0</sub>+(Q×PN_I−I×PN_Q)<sub>chip1</sub>+ . . . +(Q×PN_I−I×PN_Q)<sub>chip15 </sub><?in-line-formulae description="In-line Formulae" end="tail"?>
</p>
<p id="p-0049" num="0048">The searcher <b>120</b> may also be capable of performing the above 16-bit vectorized quadrature despread on two different phases of I/Q samples. This is possible because the sample buffer unit may store I/Q samples down to ¼ chip resolution (i.e. four I/Q samples per chip). In this mode, the searcher can perform up to 256 PN correlations per chip. When using just one phase of I/Q samples, the searcher may perform up to 128 PN correlations per chip.</p>
<p id="p-0050" num="0049">As is generally known, the samples comprises phases “X” and “Y.” At least one use of the second phase (or phase “Y”) is for “subchip_combining.” In this mode, two different phases of the same I/Q data may be used to perform correlations. For example, if the search resolution is programmed to 1 chip, phase X may correlate using I/Q samples at chip <b>0</b>, chip <b>1</b>, chip <b>2</b>, etc. Phase Y, however, may correlate using I/Q samples at ½ chip, 1½ chip, 2½ chip, and so on. The searcher <b>120</b> accumulates the despread data for phase Y of I and Q independently in the coherent accumulation RAM <b>150</b> preferably much like it does for phase X. For this reason, the coherent accumulation RAM preferably is 256×32, as opposed to 128×32, so that each cell may obtain two address locations in the RAM—one for phase X and one for phase Y.</p>
<p id="p-0051" num="0050">Phase Y preferably is a function of phase X. More specifically, phase Y may be one-half of phase X or the search resolution. This may be true for search resolutions of 1 chip and ½ chip, where phase Y would be at ½ chip and ¼ chip resolution, respectively. However, for search resolutions of ¼ chip, subchip combining may not be usable because this would require phase Y to be at ⅛ chip resolution, which is beyond the above noted resolution with which the searcher captures I/Q samples. Of course, the chip resolution may be varied as desired in various embodiments.</p>
<p id="p-0052" num="0051">Another usage of the phase Y VQDS result is for space time transmit diversity (“STTD”) mode. In STTD mode, the same I/Q sample is used for both phase X and phase Y (unlike the subchip combining mode described above). In the STTD mode, the VQDS module decodes phase Y using the Secondary OVSF/Walsh bits from the SEQ <b>190</b>. All search resolutions (e.g., 1 chip, ½ chip and ¼ chip) preferably are supported in the STTD mode.</p>
<p id="p-0053" num="0052">Correlation results from the VQDS <b>140</b> for both I and Q data and for both phases X and Y may be accumulated in the coherent accumulation module <b>144</b>. This module may include adders <b>148</b>, <b>154</b> coherent RAM <b>150</b>, squarer <b>152</b>, divider <b>156</b> and multiplexer <b>158</b>. Coherent RAM <b>150</b> preferably comprises a memory buffer organized as 256×32 as explained previously. RAM <b>150</b> may be used to store accumulation results for each of the 128 active hypotheses for both phases X and Y. The term ‘coherent’ is used since the datapaths for I and Q data are accumulated as independent streams.</p>
<p id="p-0054" num="0053">The coherent accumulation time may be designated as “N” and generally comprises the number of chips over which the accumulation occurs). The accumulation time N may be specified via software or other suitable mechanisms. At the completion of the coherent accumulation, the accumulation result for each hypothesis may scaled by N by right shifting. When phase Y is enabled, the energy values from phases X and Y preferably are summed together.</p>
<p id="p-0055" num="0054">Referring still to <figref idref="DRAWINGS">FIG. 5</figref>, the non-coherent accumulator <b>160</b> may include a summer <b>162</b>, non-coherent RAM <b>164</b> and an additional buffer <b>166</b> as shown. In general, the non-coherent accumulator <b>160</b> may combine the I and Q data streams into a single stream and accumulate such a stream for a period of time. Preferably, the I and Q data streams are combined non-coherently by computing the sum I<sup>2</sup>+Q<sup>2 </sup>which may be accumulated for L times (the non-coherent accumulation time). RAM buffer <b>166</b> may be organized as 128×23 and may serve as the non-coherent accumulator for each of the 128 active hypotheses.</p>
<p id="p-0056" num="0055">At the completion of the non-coherent accumulation time, the resulting non-coherent accumulation energy is compared to a predetermined threshold to determine the validity of the correlation peak. If the correlation energy for a given hypothesis meets the multipath threshold criterion, the correlation resource number (a number between 0 and 127) for that hypothesis preferably is provided to the results processor <b>170</b>. Because the results processor processes asynchronously to the coherent and non-coherent accumulators <b>144</b> and <b>160</b>, a buffer <b>168</b> serves as the communication interface between the non-coherent accumulator <b>160</b> and the results processor <b>170</b>. The buffer <b>168</b> may be organized in any suitable manner such as a 128×7 first in-first out (“FIFO”) buffer. The data into the FIFO buffer <b>168</b> from the non-coherent accumulator <b>160</b> may be the 7-bit correlation resource number of the hypothesis that meets the multipath threshold criterion. If the correlation energy for a given hypothesis does not meet the multipath threshold criterion, that correlation resource is freed up for additional hypotheses that are waiting to be processed.</p>
<p id="p-0057" num="0056">The total accumulation time for each hypothesis may be N*L chips as each hypothesis is coherently accumulated for N chips and then non-coherently accumulated L times. Thus, N*L chips of time may elapse before the correlation energy for a given hypothesis is compared to the multipath threshold criterion. This may be true regardless of whether or not a hypothesis turns out to be a valid or not.</p>
<p id="p-0058" num="0057">Variable dwell is a feature that allows hypotheses that are “not on track” to meeting the multipath threshold criterion to be discarded early in the hypothesis testing process. As such and as explained previously, correlation resources may be reallocated for new hypotheses to begin processing earlier than such hypotheses otherwise would have been processed. This is achieved by comparing the intermediate correlation energy to a dump threshold for each hypothesis after every coherent accumulation is completed. For example, if N=16 (i.e., 256 chips) and L=16, then the correlation energy for each hypothesis is compared to the multipath threshold after N*L or 256*16 (4096) chips of time. In variable dwell mode however, the intermediate correlation energy for each hypothesis is compared to a dump threshold and possibly dumped after every 256 chips of time (i.e. when L=1, L=2 . . . L=16).</p>
<p id="p-0059" num="0058">Referring still to <figref idref="DRAWINGS">FIG. 5</figref>, results processor <b>170</b> may include a sorting process <b>172</b>, a dB conversion process <b>174</b>, a minimum separation process <b>176</b>, and memory <b>178</b>. The processes <b>172</b>, <b>174</b>, and <b>176</b> may implemented as firmware stored in memory and executed by a processor (not specifically shows). When a correlation resource number is put into the FIFO <b>168</b> by the non-coherent accumulator <b>160</b>, the results processor may read the resource number from the FIFO <b>168</b> and use the resource number as an address into the hypothesis memory <b>185</b> and the non-coherent accumulation memory <b>164</b>. Once the results processor <b>170</b> has read the hypothesis and the correlation energy from the hypothesis memory <b>185</b> and non-coherent accumulation memory <b>164</b>, respectively, the correlation resource may be released for a new hypothesis to begin processing.</p>
<p id="p-0060" num="0059">The purpose of the results processor <b>170</b> generally is to report correlation results back to the host system (i.e. the communication device in which the searcher resides) in a useful format. This may eliminate the need of having the host system's processor expend processing resources to manipulate or translate the correlation results in software. As such, the results processor <b>170</b> may maintain a list of a predetermined number (e.g., eight) strongest hypotheses sorted by both strength and earliest arriving time (i.e. smallest to largest hypotheses).</p>
<p id="p-0061" num="0060">A composite Pilot Channel signal strength also may be computed by the results processor <b>170</b> summing up the eight (or different number) strongest hypotheses. This composite Pilot Channel strength may be reported in both magnitude and dB.</p>
<p id="p-0062" num="0061">Since the hypotheses may have resolution down to ¼ chip resolution, the list of eight hypotheses in the results processor may also be in accordance with ¼ chip resolution. However, a minimum_multipath_separation feature may be enabled in the results processor <b>170</b>. The minimum_multipath_separation feature ensures, or helps to ensure, that each of the eight hypotheses reported by the results processor <b>170</b> to the host system will be separated by at least a predetermined amount. For example, assume hypothesis (or correlation peak) ‘A’ is at 5½ chips, hypothesis (or correlation peak) ‘B’ is at 5¾ chips and the minimum_multipath_separation specified by is ½ chips. In this case, only correlation peak ‘A’ would be stored in the results processor <b>170</b> and reported to the host system because peak ‘B’ is only ¼ chips away from peak ‘A’ while the software specified minimum distance between two adjacent correlation peaks is ½ chips. This provides a mechanism for reporting only distinct correlation peaks from the searcher <b>120</b> to the host system in which the searcher resides.</p>
<p id="p-0063" num="0062">The searcher <b>120</b> may have the capability to compute the raw total energy of I/Q samples stored in the sample buffer unit <b>106</b>. This allows the searcher <b>120</b> to measure its correlation peaks relative to the total signal energy received by the antenna <b>54</b>. The total energy, designated as “I0,” may be computed in I0 calculation <b>130</b> by calculating I<sup>2</sup>+Q<sup>2 </sup>using I/Q samples from the sample buffer unit <b>106</b>. Since the I/Q samples in the sample buffer unit may be refreshed every 16 chips, I0 may be re-computed every 16 chips and accumulated over the coherent dwell time (i.e., N chips). This may permit the correlation results from the VQDS <b>140</b> and coherent accumulator <b>144</b> to be normalized by I0 at the completion of each coherent dwell time.</p>
<p id="p-0064" num="0063">The searcher <b>120</b> may perform correlations between PN sequences from the SEQ <b>190</b> and IQ samples stored internally in the sample buffer unit <b>106</b> over a search window. The search window may be determined by specifying a window_start position, the number of hypotheses over which to search and the search resolution. The correlation results may be accumulated over a period of time and only those accumulation results adhering to a multipath threshold are provided to the results processor <b>170</b>. After all correlations over the specified search window are complete, the results processor <b>170</b> may return the eight strongest hypotheses or multipaths to the host system's process via an interrupt or other suitable mechanism.</p>
<p id="p-0065" num="0064">Batch processing enables the searcher <b>120</b> to perform correlations over eight different search windows, terminating in a single interrupt to the host system's processor. Each search window may be specified through the use of search records stored in the searcher <b>120</b>. There may be eight search records (or other number) in the searcher <b>120</b>. Any one of the possible 64 combinations of search records may be specified via a search record mask. To program different search windows, eight different window_start positions, eight different numbers of hypotheses and eight different search resolutions may be specified. In this example, the results processor <b>170</b> may store the eight strongest hypotheses or multipaths per search record. Without limitation, the benefit of such batch processing is to effectively allow eight different searches to proceed autonomously with minimal host system intervention.</p>
<p id="p-0066" num="0065">As explained above, in at least one embodiment the searcher <b>120</b> may perform up to 128 PN correlations per chips (although that number may be varied) using one phase of I/Q samples or 256 PN correlations per chip using two phases of I/Q samples. There may be 128 correlation resources (also called “cells”). Each cell may include 16 parallel PN correlators in the searcher performed in one clock cycle. Each of the 16 PN correlators may be of the form:
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>I Stream: (I×PN_I+Q×PN_Q)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
<?in-line-formulae description="In-line Formulae" end="lead"?>Q Stream: (Q×PN_I−I×PN_Q)<?in-line-formulae description="In-line Formulae" end="tail"?>
<br/>
where I and Q are each 5-bits and PN_I and PN_Q are each 1-bit wide.
</p>
<p id="p-0067" num="0066">Each of the 16 parallel PN correlators may be time-shared eight times per chip, (i.e., eight cells may be processed per chip) yielding 128 PN correlations per chip using one phase of I/Q samples. In the case in which two phases of I/Q samples are used, each of the eight cells may be processed over two clock cycles (one for each I/Q phase), resulting in 256 PN correlations per chip. Accordingly, the searcher <b>120</b> may require 16 clock cycles per chip time which means the searcher is run at 16 times the chip rate). For UMTS-compliant systems, this equates to 16*3.84 MHz or 61.44 MHz, while for CDMA2000 systems, this equates to 16*1.2288 MHz or 19.6608 MHz.</p>
<p id="p-0068" num="0067">The correlation hardware in the searcher may be pipelined over a suitable number of pipe stages. In the example discussed herein, there are four pipe states and each stage is 16 clock cycles (or 1 chip) long. A different number of stages may be implemented as well as the length of each stage. This 64-cycle latency excludes the processing performed by the results processor <b>170</b>. Because there are eight cells being processed per 16 clock cycles as discussed above, 32 cells may be present in the pipeline at any given time. A 7-bit binary counter (i.e. sequentially counts from 0 to 127) may be used to determine which cell enters the 4-stage pipeline. Therefore, when cell numbers <b>0</b> through <b>7</b> are in pipe stage <b>3</b>, cell numbers <b>24</b> through <b>31</b> are being processed in pipe stage <b>0</b>.</p>
<p id="p-0069" num="0068"><figref idref="DRAWINGS">FIG. 7</figref> illustrates the operation of the pipeline architecture. <figref idref="DRAWINGS">FIG. 7</figref> shows the four pipe stages which are designated as pipe stage <b>0</b> through <b>3</b>. Cells generally flow through the pipeline from pipe stage <b>0</b> to pipe stage <b>3</b>. The function of each pipe stage is described below.</p>
<p id="p-0070" num="0069">In pipe <b>0</b> hypotheses may be generated for all search records and assigned to the various cells. This assignment takes place via writes to the hypothesis memory <b>185</b> (which preferably comprises dual port memory) and writes to the record number register file <b>186</b>. All hypotheses (newly assigned and previously assigned) may also read in pipe <b>0</b> for the purposes of calculating a PN index. These PN indices also may be sent to the SEQ <b>190</b> in this pipe stage.</p>
<p id="p-0071" num="0070">Because the 32 cells in the 64-cycle pipeline are operating on up to eight independent search records, the record number register file <b>186</b> may store the mapping between cells and search record number. This mapping may allow cells downstream from pipe <b>0</b> to use the correct set of input search parameters.</p>
<p id="p-0072" num="0071">As many as eight parallel requests (1 per cell) may be made in pipe <b>1</b> to the SEQ <b>190</b>. The SEQ <b>190</b> may process these requests at a rate of 1 request per clock cycle plus 3 overhead cycles for a total of 11 cycles for all eight requests to be processed.</p>
<p id="p-0073" num="0072">In pipe <b>2</b> the PN bits that are received from the SEQ <b>190</b> may be registered in the searcher <b>120</b> and used by the VQDS <b>140</b> as described previously. The 32-chips of I/Q data and the PN_I/PN_Q values from the SEQ <b>190</b> may be used in the despread process. The accumulation into the coherent accumulator memory <b>150</b> (which preferably comprises dual port memory) also may be performed in this pipe stage. Because two phases of I/Q samples can be correlated using the same PN bits from the SEQ <b>190</b>, there may be two correlation results per cell. Accordingly, coherent accumulator memory <b>150</b> may be sized accordingly and may be comprise dual port memory. The 16 most significant bits of the 32-bit datapath may be used to store the coherent accumulation results for the I-stream, while the 16 least significant bits may be used to store the coherent accumulation results for the Q-stream.</p>
<p id="p-0074" num="0073">At the completion of a coherent accumulation cycle, the two I/Q data streams for a given cell both may be scaled by N, the coherent dwell time. The value N may be common to all search records and may be implemented via a suitable counter. The two I/Q streams may each be squared and summed together and provided to the con-coherent accumulator in pipe stage <b>3</b>. In variable dwell mode (which is a function of the search record), the combined data stream preferably meets a dump_threshold before advancing to the non-coherent accumulation process in pipe stage <b>3</b>.</p>
<p id="p-0075" num="0074">If the I0 calculation unit <b>130</b> has been enabled, the combined data stream may be divided by the I0 result before advancing to the non-coherent accumulation process. The division by I0 is implemented via a look-up table (not specifically shown).</p>
<p id="p-0076" num="0075">In pipe <b>3</b> the accumulation into the two-port non-coherent accumulation memory <b>164</b> may be performed. The non-coherent accumulation process may continue for L times, the non-coherent dwell time. The value L may be a function of a search record, allowing each of the eight search records to perform searches of eight independent total dwell times. The total dwell time for a cell may be N*L chips of time. At the completion of the non-coherent dwell time, the correlation energy for a given cell may be scaled by L and compared to a multipath_threshold. If the multipath_threshold criterion is met, the cell number of this cell may be written to the FIFO <b>168</b>.</p>
<p id="p-0077" num="0076">In the example of <figref idref="DRAWINGS">FIG. 8</figref>, N is 2 and L is 3. With N equal to 2, there are 16×2 or 32 chips. Therefore, the total search or dwell time is 32×3 or 96 chips long. The four overlapping entities represent each of the four pipe stages while the numbers represent which cell is being processed in each pipe stage. In the example of <figref idref="DRAWINGS">FIG. 8</figref>, the non-coherent accumulation memory <b>164</b> may be written three times for each of the 128 correlation cells. Further, the coherent accumulation memory <b>150</b> may be written six times for each of the 128 correlation cells, where, for N=2), every two writes may begin a new coherent accumulation cycle.</p>
<p id="p-0078" num="0077">The correlation hardware (i.e., coherent accumulator <b>144</b> and non-coherent accumulator <b>160</b>) and the results processor <b>170</b> preferably run independently from each other and communicate via FIFO <b>168</b> as explained previously. Any time FIFO <b>168</b> is not empty, the results processor <b>170</b> may perform a read from the FIFO to establish which of the 128 cells has just completed its correlations. The results processor <b>170</b> may use that cell number as an address into the hypothesis memory <b>185</b>, the non-coherent accumulation memory <b>164</b> and the record number register file <b>186</b> to simultaneously read the hypothesis, the correlation energy and the search record number, respectively, of the cell whose number was stored in the FIFO <b>168</b>. Once each of these three quantities have been read by the results processor <b>170</b>, if more hypotheses exist to be processed, the hypothesis generator <b>180</b> preferably overwrites the hypothesis memory <b>185</b> with a new hypothesis at the address corresponding to this cell.</p>
<p id="p-0079" num="0078">The results processor <b>170</b> may take the hypothesis, correlation energy, and search record number and preferably tracks the eight strongest correlation energies per search record for all eight search records. This list of eight peaks may be sorted by correlation energy as well as by increasing hypothesis. If enabled, the results processor also may ensure that the hypotheses corresponding to the eight strongest correlation energies are separated by a predetermined minimum amount. The result processor <b>170</b> also may compute a pilot channel strength by summing the eight strongest correlation energies on a per record basis. The pilot channel strength also may be converted to units of dB by the results processor's dB conversion process <b>174</b>. The dB calculation is implemented via look-up tables or other suitable techniques. The results processor <b>170</b> may reports its results via results memory <b>178</b>. Results memory <b>178</b> preferably comprise a suitably sized dual port memory such as a 80×32 dual port RAM. One port of the dual port memory <b>178</b> may be used for writing the results and the other port may be dedicated to a host processor (not shown) for read accesses.</p>
<p id="p-0080" num="0079">Each cell implemented in the searcher <b>120</b> may have an assigned state. In accordance with the preferred embodiments, the possible states of the cells may include “idle,” “accum” or “in_fifo.” The “idle” state preferably means that no hypothesis has been assigned to that cell. A cell in the idle state also means that the cell is a correlation resource available for use. A cell may be in the idle state at various times such as at the beginning of a search or as particular cells complete their coherent and non-coherent accumulations.</p>
<p id="p-0081" num="0080">The “accum” state preferably means that a hypothesis has been assigned to that cell and that PN correlations are currently in progress for that cell's hypothesis. When the hypothesis generator <b>180</b> determines that a cell is in the “accum” state in pipe <b>0</b>, the hypothesis generator generally cannot write to the hypothesis memory <b>185</b> at that cell's address location because an active hypothesis already exists for that cell. However, when a cell is in “accum” state, the hypothesis generator <b>180</b> may read from the hypothesis memory <b>185</b> at that cell's address location, compute a PN index and provide that index to the SEQ <b>190</b>.</p>
<p id="p-0082" num="0081">The length of time a cell remains in the “accum” state may be a function of the values of N and L. N may be implemented via, for example, an 8-bit counter and may be decremented every 16 chips of time. L may be implemented via a 128×7 dual-port RAM since L is a function of the search record and each of the 128 cells may be operating on any one of the eight search records. L may be decremented for a given cell when N is zero. When both N and L are zero for a particular cell, the accumulation time for that cell is complete.</p>
<p id="p-0083" num="0082">The “in_FIFO” state means that the PN correlations for that cell are complete, the final correlation energy has met the multipath threshold criterion and the cell or resource number has been written into the results processor interface FIFO <b>168</b>. As explained previously, once the results processor <b>170</b> reads the hypothesis, correlation energy and record number of the completed cell, the cell is released for processing a new hypothesis by changing that cell's state from “in_FIFO” to “idle.”</p>
<p id="p-0084" num="0083">Typically, the progression of cell states is from “idle” to “accum” in pipe <b>0</b>, from “accum” to “in_FIFO” in pipe <b>3</b> and from “in_FIFO” to “idle” in any pipe stage, since this is a function of the results processor, which runs asynchronously to the correlation units. In variable dwell mode, however, cell states may transition from the “accum” state to the “idle” in pipe <b>2</b>. Further, each cell's correlation result may be compared to a dump threshold at the end of each coherent dwell time. A given batch search may be considered complete when all cells transition back to the “idle” state.</p>
<p id="p-0085" num="0084">The above discussion is meant to be illustrative of the principles and various embodiments of the present invention. Numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A communication device, comprising:
<claim-text>a receiver that receives a plurality of signals;</claim-text>
<claim-text>a plurality of searchers coupled to said receiver, said searchers receive a signal from said receiver and decode said received signal;</claim-text>
<claim-text>a random access sequence generator coupled to said searchers, said random access sequence generator providing a hypothesis for each searcher to test against the received signal;</claim-text>
<claim-text>wherein the hypothesis provided to a searcher is independent of the hypothesis provided to other searchers; and</claim-text>
<claim-text>wherein at the searchers an energy accumulation of the received signal is repeatedly compared against a first threshold prior to a maximum limit; and the energy accumulation of the received signal is compared against a second threshold after the maximum limit is reached; whereby a dwell count (duration) of a test varies by increments up to a maximum limit of increments; and</claim-text>
<claim-text>wherein the energy accumulation of the received signal plus a BIAS based on a target SNR (signal-to-noise), together, are repeatedly compared against the first threshold.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The communication device of <claim-ref idref="CLM-00001">claim 1</claim-ref> further including control logic coupled to said searchers, said control logic dismisses a hypothesis where an accumulation of the received signal is below a threshold and provides a different hypothesis to the searcher independent of the operation of the other searchers.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The communication device of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein said random access sequence generator includes a memory buffer in which a plurality of hypotheses are stored.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The communication device of <claim-ref idref="CLM-00003">claim 3</claim-ref> wherein said hypotheses are selected at random from said memory buffer to provide to said searchers.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The communication device of <claim-ref idref="CLM-00003">claim 3</claim-ref> wherein said hypotheses are stored in a random order in said memory buffer at various memory addresses and selected in memory address order to provide to said searchers.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The communication device of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the communication device comprises a wireless device.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. A communication device, comprising:
<claim-text>a receiver that receives a plurality of signals;</claim-text>
<claim-text>a plurality of searchers coupled to said receiver, said searchers receive a signal from said receiver and decode said received signal; and</claim-text>
<claim-text>wherein each searcher is loaded with a hypothesis to test against the received signal and wherein an accumulated energy of the received signal is repeatedly compared against a first threshold up until a maximum of a dwell count (duration), so that the dwell count varies; and the accumulated energy is compared against a second threshold after the maximum of the dwell count is reached; and</claim-text>
<claim-text>wherein the energy accumulation of the received signal plus a BIAS based on a target SNR (signal-to-noise), together, are repeatedly compared against the first threshold.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The communication device of <claim-ref idref="CLM-00007">claim 7</claim-ref> further including control logic coupled to said searchers, said control logic dismisses a hypothesis where an accumulated energy is below a threshold and provides a different hypothesis to the searcher independent of the operation of the other searchers.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The communication device of <claim-ref idref="CLM-00007">claim 7</claim-ref> further includes a means for selecting random hypotheses to provide to said searchers.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The communication device of <claim-ref idref="CLM-00007">claim 7</claim-ref> further includes a means for storing said hypotheses in a random order and for selecting said hypotheses so stored in an order different from that in which the hypotheses were stored.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. A system, comprising:
<claim-text>a device that wirelessly communicates, said device including:
<claim-text>a receiver that receives a plurality of signals;</claim-text>
<claim-text>a plurality of searchers coupled to said receiver, said searchers receive a signal from said receiver and decode said received signal; and</claim-text>
<claim-text>a random access sequence generator coupled to said searchers, said random access sequence generator providing a hypothesis to each searcher to test against the received signal;</claim-text>
<claim-text>wherein at the searchers a dwell count (duration) of a test varies by increments up to a maximum limit of increments; and</claim-text>
<claim-text>an energy accumulation of the received signal is repeatedly compared against a first threshold prior to the maximum limit and the energy accumulation of the received signal is compared against a second threshold after the maximum limit is reached; and</claim-text>
<claim-text>wherein the energy accumulation of the received signal plus a BIAS based on a target SNR (signal-to-noise), together, are repeatedly compared against the first threshold.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The system of <claim-ref idref="CLM-00011">claim 11</claim-ref> wherein said device includes control logic coupled to said searchers, said control logic dismisses a hypothesis where an accumulation of the received signal is below a threshold and provides a different hypothesis to the searcher independent of the operation of the other searchers.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The communication device of <claim-ref idref="CLM-00011">claim 11</claim-ref> further comprising a memory buffer wherein said hypotheses are stored in a random order in said memory buffer at various memory addresses and selected in memory address order to provide to said searchers.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. A modem usable in a communication device, comprising:
<claim-text>a receiver;</claim-text>
<claim-text>a plurality of demodulation elements coupled to said receiver;</claim-text>
<claim-text>a plurality of parallel searchers also coupled to said receiver;</claim-text>
<claim-text>a random access sequence generator coupled to said searchers, said random access sequence generator provides hypotheses for each of said searchers; and</claim-text>
<claim-text>control logic coupled to said searchers; wherein each searcher accumulates an energy value based on a received signal and repeatedly compares said accumulated energy value to a dump threshold up to a maximum limit of a dwell count (duration) so that the dwell count varies; and said accumulated energy value is compared to a second threshold after the maximum limit is reached; and
<claim-text>if said accumulated energy value falls below the dump threshold, said control logic dismisses said hypothesis and another a new hypothesis is loaded into the searcher while other searchers continue to evaluate their hypotheses; and</claim-text>
<claim-text>wherein the energy accumulation of the received signal plus a BIAS based on a target SNR (signal-to-noise), together, are repeatedly compared against the dump threshold.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The modem of <claim-ref idref="CLM-00014">claim 14</claim-ref> wherein said random access sequence generator provides a hypothesis for a searcher that is independent of the hypotheses loaded in other searchers.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The modem of <claim-ref idref="CLM-00014">claim 14</claim-ref> wherein said hypothesis includes a code offset usable to decode the signal.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. A method of determining a scrambling code to use in a wireless communication system having a plurality of parallel searchers, comprising:
<claim-text>loading a hypothesis;</claim-text>
<claim-text>accumulating an energy value based on a signal that has been decoded based on said hypothesis to produce an accumulated energy value; and</claim-text>
<claim-text>repeatedly comparing said accumulated energy value to a dump threshold up until a maximum of a dwell count (duration) so that the dwell count varies and said accumulated energy value is compared to a second threshold when the maximum is reached;</claim-text>
<claim-text>and wherein the accumulated energy value is summed with a BIAS based on a target SNR (signal-to-noise), together, are repeatedly compared against the dump threshold;</claim-text>
<claim-text>and wherein if said accumulated energy value falls below the dump threshold, dismissing said hypothesis and loading a new hypothesis while other searchers continue to evaluate their hypotheses.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref> wherein loading a hypothesis includes loading a hypothesis that is independent of other hypotheses.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref> wherein said hypothesis comprises a code offset usable to decode a wirelessly received signal.</claim-text>
</claim>
</claims>
</us-patent-grant>
