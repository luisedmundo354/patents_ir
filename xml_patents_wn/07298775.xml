<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298775-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298775</doc-number>
<kind>B1</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10651827</doc-number>
<date>20030829</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>805</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>B</subclass>
<main-group>1</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>375147</main-classification>
</classification-national>
<invention-title id="d0e53">Processor-implemented RAKE receiver</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5764687</doc-number>
<kind>A</kind>
<name>Easton</name>
<date>19980600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375147</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6650694</doc-number>
<kind>B1</kind>
<name>Brown et al.</name>
<date>20031100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375150</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6788731</doc-number>
<kind>B2</kind>
<name>Kim et al.</name>
<date>20040900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375142</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>7065128</doc-number>
<kind>B2</kind>
<name>Medlock et al.</name>
<date>20060600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375147</main-classification></classification-national>
</citation>
</references-cited>
<number-of-claims>19</number-of-claims>
<us-exemplary-claim>16</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>375147</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>712 22</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>6</number-of-drawing-sheets>
<number-of-figures>7</number-of-figures>
</figures>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Shah</last-name>
<first-name>Tushar</first-name>
<address>
<city>Milpitas</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Rafie</last-name>
<first-name>Manouchehr</first-name>
<address>
<city>Sunnyvale</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<orgname>Merchant &amp; Gould PC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>National Semiconductor Corporation</orgname>
<role>02</role>
<address>
<city>Santa Clara</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Ghebretinsae</last-name>
<first-name>Temesghen</first-name>
<department>2611</department>
</primary-examiner>
<assistant-examiner>
<last-name>Torres</last-name>
<first-name>Juan Alberto</first-name>
</assistant-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A SWP- (Sub-Word Parallelism-) based RAKE receiver for a Wideband Code-Division Multiple Access (WCDMA) mobile station is optimized to perform channel de-rotation and data combining. The RAKE receiver comprises SIMD (Single Instruction, Multiple Data) instructions, which can perform a complex multiplication for a channel de-rotation in a single cycle. The SIMD instructions can also perform a complex addition for data combining in a single cycle. Optimization of the RAKE receiver reduces power consumption and costs, enhances performance, and provides extensibility for next-generation architectures.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="161.80mm" wi="219.63mm" file="US07298775-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="184.57mm" wi="159.34mm" orientation="landscape" file="US07298775-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="252.39mm" wi="167.39mm" orientation="landscape" file="US07298775-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="177.38mm" wi="170.01mm" orientation="landscape" file="US07298775-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="230.97mm" wi="159.26mm" orientation="landscape" file="US07298775-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="225.13mm" wi="171.28mm" orientation="landscape" file="US07298775-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="138.85mm" wi="167.39mm" orientation="landscape" file="US07298775-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0002" num="0001">The present invention relates to wideband code-division multiple access (WCDMA) systems, and more particularly to a communication signal processor (CSP) architecture that is optimized for WCDMA systems.</p>
<heading id="h-0002" level="1">BACKGROUND OF THE INVENTION</heading>
<p id="p-0003" num="0002">Code division multiple access (CDMA) is used in communications systems to accommodate large numbers of system users. CDMA uses a spread spectrum modulation technique, where the signal energy of each channel is spread over a wide frequency band.</p>
<p id="p-0004" num="0003">WCDMA is a third-generation mobile wireless technology that is based on an ITU standard derived from CDMA technology. WCDMA can support mobile/portable voice, images, data, and video communications at up to 2 Mbps (local area access) or 384 kbps (wide area access). The supported data is converted into a digital signal that is spread spectrum coded for transmission and reception over multiple frequencies.</p>
<p id="p-0005" num="0004">An appreciation of the present invention and its improvements can be obtained by reference to the accompanying drawings that are briefly summarized below, to the following detailed description of illustrated embodiments of the invention, and to the appended claims.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0003" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0006" num="0005">Non-limiting and non-exhaustive embodiments of the present invention are described with reference to the following drawings.</p>
<p id="p-0007" num="0006"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an example system having a communication signal processor architecture in accordance with aspects of the present invention.</p>
<p id="p-0008" num="0007"><figref idref="DRAWINGS">FIG. 2</figref> illustrates a WCDMA baseband system in accordance with aspects of the present invention.</p>
<p id="p-0009" num="0008"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an example instruction word for a CSP in accordance with aspects of the present invention.</p>
<p id="p-0010" num="0009"><figref idref="DRAWINGS">FIG. 4</figref> illustrates examples of instructions used in example CSPs in accordance with aspects of the present invention.</p>
<p id="p-0011" num="0010"><figref idref="DRAWINGS">FIG. 5</figref> is a block diagram of a RAKE receiver in accordance with an aspect of the present invention.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 6</figref> is a block diagram of an example RAKE finger of a RAKE receiver in accordance with an aspect of the present invention.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 7</figref> is a flow diagram illustrating a method for implementing a rake receiver.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0004" level="1">DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT</heading>
<p id="p-0014" num="0013">Various embodiments of the present invention will be described in detail with reference to the drawings, where like reference numerals represent like parts and assemblies throughout the several views. Reference to various embodiments does not limit the scope of the invention, which is limited only by the scope of the claims attached hereto. Additionally, any examples set forth in this specification are not intended to be limiting and merely set forth some of the many possible embodiments for the claimed invention.</p>
<p id="p-0015" num="0014">Throughout the specification and claims, the following terms take at least the meanings explicitly associated herein, unless the context clearly dictates otherwise. The meanings identified below are not intended to limit the terms, but merely provide illustrative examples for the terms. The meaning of “a,” “an,” and “the” includes plural reference, the meaning of “in” includes “in” and “on.” The term “connected” means a direct electrical connection between the items connected, without any intermediate devices. The term “coupled” means either a direct electrical connection between the items connected, or an indirect connection through one or more passive or active intermediary devices. The term “circuit” means either a single component or a multiplicity of components, either active and/or passive, that are coupled together to provide a desired function. The term “signal” means at least one current, voltage, charge, temperature, data, or other signal.</p>
<p id="p-0016" num="0015">Briefly stated, the invention is related to an SWP- (Sub-Word Parallelism-) based RAKE receiver for a WCDMA mobile station that is optimized to perform channel de-rotation and data combining. The RAKE receiver comprises SIMD (Single Instruction, Multiple Data) instructions, which can perform a complex multiplication for a channel de-rotation in a single cycle. The SIMD instructions can also perform a complex addition for data combining in a single cycle. Optimization of the RAKE receiver reduces power consumption and costs, enhances performance, and provides extensibility for next-generation architectures.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 1</figref> illustrates an example system (<b>100</b>) having a CSP architecture that is arranged in accordance with aspects of the present invention. System <b>100</b> includes a first processing block (<b>102</b>), a second processing block (<b>104</b>) and a configuration processor block (<b>110</b>). Processing block <b>102</b> includes a first wired logic block (<b>120</b>), a first CSP engine (<b>140</b>), a first memory circuit (<b>130</b>), and a second memory circuit (<b>132</b>). Processing block <b>104</b> includes a second wired logic block (<b>122</b>), a second CSP engine (<b>142</b>), a third memory circuit (<b>134</b>), and a fourth memory circuit (<b>136</b>). CSP engine <b>140</b> includes a first control block (<b>150</b>) and a first signal processing block (<b>160</b>). CSP engine <b>142</b> includes a second control block (<b>152</b>) and a second signal processing block (<b>162</b>).</p>
<p id="p-0018" num="0017">System <b>100</b> is configured to perform a system function comprising a first function and a second function. The first and second function each comprise modular functions. According to one example embodiment, the system function is related to WCDMA, where the first function corresponds to a RAKE receiver function, and the second function corresponds to a cell search function. Processing block <b>102</b> is configured to perform the first function. Wired logic block <b>120</b> is arranged to perform fixed modular functions for which algorithmic changes of the first function are not contemplated. For example, the despreading modular function is typically fixed and can be implemented as “wired” logic, which usually does not provide flexibility for programmable changes.</p>
<p id="p-0019" num="0018">Control block <b>150</b> comprises control hardware and an associated datapath. For example, control block <b>150</b> typically includes a sequencer, an instruction decoder, and other configuration and control logic. Control block <b>150</b> is typically similar to other control blocks (e.g. <b>152</b>). Signal processing block <b>160</b> comprises signal processing hardware and an associated data path. Signal processing block <b>160</b> is configured to perform the modular functions of the first function that might require flexibility for algorithmic changes. For example, the channel estimation modular function typically requires flexibility for changing the algorithm. According to one example, CSP engine <b>140</b> is structured such that control block <b>150</b> and signal processing block <b>160</b> are separate.</p>
<p id="p-0020" num="0019">The design of CSP engine <b>140</b> is optimized for accomplishing the first function. According to one example, CSP engine <b>140</b> is based on a customizable signal processor. Signal processing block <b>160</b> is arranged to perform a first algorithm for the first function (which is associated with the RAKE receiver function). The first algorithm is optimized for performing the first function. Signal processing block <b>160</b> includes standard modules (such as arithmetic logic units, multiply-accumulate modules, and the like) and custom modules. The custom modules for signal processing block <b>160</b> are configured for substantially optimizing the first function. The hardware of signal processing block <b>160</b> can be optimized for performing operations of the first algorithm. For example, the hardware of signal processing block <b>160</b> typically includes hardware that is configured to perform, in parallel, multiple operations of the first algorithm.</p>
<p id="p-0021" num="0020">The memory architecture of processing block <b>102</b> is optimized for performance of the first function. Memory <b>130</b> and memory <b>132</b> are independently addressable such that parallel read/write operations are supported.</p>
<p id="p-0022" num="0021">Processing block <b>102</b> operates in accordance with a set of instruction words that is usually independent of any other element of system <b>100</b>. The set of instructions words for processing block <b>102</b> includes at least one instruction word that is optimized for performing the first functions. For example, one or more instruction words can be configured to support the simultaneous execution of multiple instructions. According to one example, one or more instructions are arranged for sub-word parallelism (SWP) and single instruction, multiple data (SIMD) instructions. The substantial optimization of instruction words is described in greater detail with reference to <figref idref="DRAWINGS">FIG. 3</figref> below.</p>
<p id="p-0023" num="0022">The instruction set for processing block <b>102</b> is optimized for performing the first function. The instructions for the instruction set for processing block <b>102</b> are selected such that the first algorithm can be efficiently performed.</p>
<p id="p-0024" num="0023">Processing block <b>104</b> is substantially similar to processing block <b>102</b>, except that processing block <b>104</b> can be optimized for performance of the second function. Control block <b>152</b> can be substantially identical in form to block <b>150</b>. Signal processing block <b>162</b> is generally optimized to perform the second function. The memory architecture, instruction set, and instructions words for processing block <b>104</b> are each typically optimized for performance of the second function.</p>
<p id="p-0025" num="0024">Configuration processor block <b>110</b> is arranged for configuration and maintenance of each of the processing blocks (e.g. <b>102</b> and <b>104</b>). According to one example, configuration processor block <b>110</b> is an ARM (Advanced Reduced instruction-set computer Machine) CPU (central processing unit). Configuration processing block <b>110</b> can perform other tasks as well.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 2</figref> is an illustration an example embodiment of a WCDMA baseband system (<b>200</b>) that is arranged in accordance with aspects of the present invention. System <b>200</b> comprises a cell search block (<b>202</b>), a RAKE receiver block (<b>204</b>), a transmitter block (<b>206</b>), an error correction block (<b>208</b>), a global system for mobile communications (GSM)/voice functions block (<b>210</b>), a configuration processor block (<b>212</b>), and a configuration processor memory (<b>214</b>). Cell search block <b>202</b> comprises memories (<b>220</b>-<b>222</b>), a cell search CSP engine (<b>240</b>), and a wired logic circuit (<b>250</b>). RAKE receiver block <b>204</b> comprises memories (<b>223</b>-<b>225</b>), a RAKE CSP engine (<b>242</b>), and a wired logic circuit (<b>252</b>). Transmitter block <b>206</b> comprises memories (<b>226</b>-<b>228</b>) and a wired logic circuit (<b>254</b>). Error correction block <b>208</b> comprises memories (<b>229</b>-<b>231</b>), a codec CSP engine (<b>244</b>), and a wired logic circuit (<b>256</b>). GSM/voice functions block <b>210</b> comprises a memory (<b>232</b>), a programmable memory block (<b>233</b>), a digital signal processing (DSP) core (<b>260</b>), and a GSM block (<b>270</b>). (More than one engine can be used for a particular block, which allows enhanced performance and extensibility to next-generation architectures.) RAKE receiver block <b>204</b> is configured to perform a RAKE receiver function. The RAKE receiver function comprises several modular functions such as a despreading function, a delay-lock loop (DLL) function, a channel estimation function, a de-rotation function, an automatic frequency control (AFC) function, a signal-to-interference (SIR) function, and a combining function. Wired logic block <b>252</b> is typically configured to perform the despreading function. RAKE CSP engine <b>242</b> is typically configured to perform the DLL function, the channel estimation function, the de-rotation function, the AFC function, the SIR function, Doppler estimation, and the combining function.</p>
<p id="p-0027" num="0026">The memory architecture of the RAKE receiver block (<b>204</b>) is optimized for the RAKE receiver function. According to one example, the memory architecture for RAKE receiver processing block <b>204</b> comprises distributed memory banks for each of a plurality of fingers, odd and even banks for each finger, multiple address pointers for different types of data, and multiple memory banks that are configured for multiple channel estimations. Different data types include pilot symbols, power control symbols, transport format indicators, and user data.</p>
<p id="p-0028" num="0027">RAKE CSP engine <b>242</b> is configured to perform a RAKE receiver signal processing algorithm. The RAKE receiver signal processing algorithm is optimized for performing the RAKE receiver function. The hardware of RAKE CSP engine <b>242</b> is optimized for performing the RAKE receiver signal processing algorithm. The algorithm is implemented with a set of instruction words that is optimized for the RAKE receiver function. The set of instruction words includes instructions that are optimized for the RAKE receiver function.</p>
<p id="p-0029" num="0028">RAKE CSP engine <b>242</b> includes instruction words that allow the parallel execution of multiple operations of the RAKE receiver signal processing algorithm. The hardware architecture of RAKE CSP engine <b>242</b> comprises hardware blocks that can operate simultaneously to support the multiple parallel operations. Instruction words and hardware architecture support multiple parallel operations, which reduces instruction fetching, instruction decoding, and memory accesses such that power consumption is reduced. According to one example, the architecture of RAKE CSP engine <b>242</b> is arranged to support two multiplication-accumulators (MACs) with SWP and SIMD instructions. An example of an instruction word (<b>300</b>) for RAKE CSP engine <b>242</b> is illustrated in <figref idref="DRAWINGS">FIG. 3</figref>.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 3</figref> illustrates an example instruction word (<b>300</b>) for an example CSP. Instruction <b>300</b> includes three fields (<b>302</b>, <b>304</b>, and <b>306</b>). Field <b>302</b> corresponds to ALU/MAC, field <b>304</b> corresponds to Load, and field <b>306</b> corresponds to Load/Store. Instruction <b>300</b> is an example of an instruction word that is arranged to support multiple operations in parallel. Instruction <b>300</b> is arranged to support parallel execution of ALU/MAC, Load, and Load/Store instructions. RAKE receiver algorithms require frequent use of multiplication, load, and load/store instructions. Instruction <b>300</b> and the supporting architecture allow functions such as multiplication, multiply-accumulate, addition, load, and load/store to be performed simultaneously.</p>
<p id="p-0031" num="0030">Different modular functions can be implemented with different levels of precision. According to one example, the channel estimation function uses 16 bits per operand, and the de-rotation function uses 8 bits per operand. A 16-bit multiplier can be configured as four 8-bit multipliers such that a SIMD instruction comprising four 8-bit operands can perform a complex multiplication in 1-2 cycles. A 16-bit multiplier can take 8-10 cycles total to complete complex multiply instructions for the four 8-bit operands. Data is loaded in parallel such that all four multiplications are done in parallel. Power consumption is also significantly reduced using a SIMD instruction (and four 8-bit multipliers) to implement the de-rotation function.</p>
<p id="p-0032" num="0031">Each of the CSP engines (<b>240</b>, <b>242</b>, and <b>244</b>) have an instruction set that is optimized for the signal processing function that it is configured to perform. <figref idref="DRAWINGS">FIG. 4</figref> illustrates a few examples of instructions used in instructions sets of example CSPs, in accordance with aspects of the present invention. The instruction set of RAKE CSP engine <b>242</b> comprises instructions such as SWP and SIMD instructions to complex multiply, parallel multiply, parallel add, and parallel subtract. Codec CSP <b>206</b> includes instructions such as “add-compare-select” (ACS), “traceback” for a Viterbi decoding, and T<sub>max </sub>for a Turbo decoder. Each of the CSP engines comprises approximately 10,000 logic gates, which provides a substantial reduction in the number of logic gates required for conventional DSP cores.</p>
<p id="p-0033" num="0032">Each of the other processing blocks (e.g. <b>202</b>, <b>206</b>, <b>208</b>, and <b>210</b>) are also optimized for the function that the block is configured to perform. The control hardware and associated datapath of each of the processing blocks is similar. For example, cell search CSP engine <b>202</b> has an architecture and instruction words that are optimized for a cell search algorithm. Cell search processing block <b>202</b> includes a memory architecture that is optimized for the cell search algorithm. Cell search processing block <b>202</b> includes data memory <b>220</b>, which is independently addressable from data memory <b>221</b> such that read and write operations of these memories can be performed simultaneously.</p>
<p id="p-0034" num="0033">Each of the CSP engines (e.g. <b>240</b>, <b>242</b>, and <b>244</b>) provides flexibility for changes in the algorithm. For example, the algorithm for a CSP algorithm can be changed based on experimentation or changes to the 3GPP standards. Additionally, the algorithm can be modified to support future generations of high data rate systems.</p>
<p id="p-0035" num="0034">Each of the processing blocks (e.g. <b>202</b>, <b>204</b>, <b>206</b>, <b>208</b>, and <b>210</b>) is typically configured to run independently. Each of the processing blocks is responsive to interrupt signals, where the interrupt signal can be provided by another processing block or configuration processor <b>212</b>. Data can be sent to another processing block or to configuration process <b>212</b> when the processing block has received an interrupt. Alternatively, date can be received from the other processing block or configuration processor <b>212</b> when the processing block has received an interrupt.</p>
<p id="p-0036" num="0035">Configuration processor <b>212</b> is arranged for configuration and maintenance of the processing blocks (<b>202</b>, <b>204</b>, <b>206</b>, <b>208</b>, and <b>210</b>). For example, configuration processor <b>212</b> is arranged to provide configuration with regard to slot formats that define the services. Configuration processor memory <b>214</b> is arranged as the memory for configuration processor <b>212</b>.</p>
<p id="p-0037" num="0036"><figref idref="DRAWINGS">FIG. 5</figref> is a block diagram of a RAKE receiver in accordance with an aspect of the present invention. RAKE receiver <b>500</b> comprises RAKE fingers <b>510</b>, frequency combiner <b>520</b>, and data combiner <b>530</b>. RAKE fingers <b>510</b> provide data across a 16-bit wide datapath, frequency combiner <b>520</b> provides data across a 10-bit wide datapath, and data combiner <b>530</b> provides data across a 6-bit wide datapath. RAKE receiver <b>500</b> typically comprises six RAKE fingers <b>510</b>, although more or less can be used.</p>
<p id="p-0038" num="0037">RAKE receiver <b>500</b> can be optimized by matching the widths of the datapaths and by tailoring instructions to efficiently implement the RAKE receiver <b>500</b> functionality. For example, the instructions used to implement data combiner <b>530</b> can be optimized by using 8-bit wide operands to handle data where 6-bit precision is desired.</p>
<p id="p-0039" num="0038"><figref idref="DRAWINGS">FIG. 6</figref> is a block diagram of an example RAKE finger of a RAKE receiver in accordance with an aspect of the present invention. Some of the blocks within the RAKE receiver (such as DLL <b>605</b>, channel estimator <b>610</b>, automatic frequency control <b>615</b>, and Doppler estimator <b>620</b>) often require 16-bit precision, which is already optimal for a 16-bit wide datapath.</p>
<p id="p-0040" num="0039">Simulation of an example RAKE receiver <b>500</b> has shown that around 70 percent of the required processing power (at a data rate of 384 kbps) is consumed on the channel de-rotation and data combination functions. Channel de-rotation block (see RAKE receiver <b>242</b>) comprises a complex multiply operation and data combiner <b>530</b> comprises a complex addition. Accordingly, large gains in efficiency can be realized by optimizing the channel de-rotation and data combination functions.</p>
<p id="p-0041" num="0040">As an example of sub-word parallelism, a 16-bit datapath can be partitioned into two 8-bit datapaths in order to implement the channel de-rotation and data combination functions. An 8-bit data path is used for I-channel and Q-channel data, respectively, such that an I-channel symbol and a Q-channel symbol are packed into a 16-bit word and an I-channel estimate and a Q-channel estimate are packed into a second 16-bit word. This packing of 8-bit I- and Q-channel symbols and channel estimates reduces the amount of memory that would otherwise be required in RAKE receiver <b>500</b>. The packing also reduces the number of memory accesses that would otherwise be required. Accordingly, the packing reduces power consumption and costs, and increases speed.</p>
<p id="p-0042" num="0041">As described above with reference to <figref idref="DRAWINGS">FIG. 3</figref>, SIMD instructions can be used to optimize the RAKE receiver. A SIMD instruction word can be load two 16-bit packed data words in a single cycle. The loading of data symbols and channel estimate can be done in a single cycle if the data symbols and channel estimates are stored in separate memory banks (as in, for example, memory <b>130</b> and memory <b>132</b>).</p>
<p id="p-0043" num="0042">Additionally, an instruction word that supports ALU/MAC instructions in parallel to a load instruction such that the ALU/MAC hardware is working on a complex multiply for the channel de-rotation while the Address Generation Unit (AGU) is simultaneously working on loading data for the next complex multiply (of the ALU/MAC) from the data symbol and channel estimate memory banks.</p>
<p id="p-0044" num="0043">Accordingly, a complete channel de-rotation operation of RAKE receiver <b>500</b> using a SWP-based CSP architecture can use one or two clock cycles to perform the entire de-rotation. (The entire de-rotation involves loading data from memory, executing a complex multiply instruction, and storing the results back in memory.) In contrast, a conventional processor requires 8-10 clock cycles due to inefficient use of the data paths (e.g., by using only a portion of the available bandwidth) and due to having to execute individual “load,” “multiply,” and “store” instructions sequentially.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 7</figref> is a flow diagram illustrating a method for implementing a rake receiver. Flow <b>700</b> can begin with operation <b>710</b>. Operation <b>710</b> comprises packing a first I-channel estimate, a first I-channel symbol, a first Q-channel estimate, and a first Q-channel symbol into a first data word stored in memory. Operation <b>720</b> comprises packing a second I-channel estimate, a second I-channel symbol, a second Q-channel estimate, and a second Q-channel symbol into a second data word stored in memory. Operation <b>730</b> comprises loading the first data word from memory during a first instruction cycle of a processor. Operation <b>740</b> comprises arithmetically processing the loaded first data word during a second instruction cycle that immediately follows the first instruction cycle. Operation <b>750</b> comprises storing the processed first data word in memory during the second instruction cycle. Operation <b>760</b> comprises calculating the address of the second data word in the second instruction cycle. Operation <b>770</b> comprises loading the second data word from memory during the second instruction cycle. Operation <b>780</b> comprises arithmetically processing the loaded second data word during a third instruction cycle that immediately follows the second instruction cycle.</p>
<p id="p-0046" num="0045">Various embodiments of the invention are possible without departing from the spirit and scope of the invention. For example, SWP SIMD instructions can be used in data combiner <b>530</b>. Data combiner <b>530</b> can be implemented using instructions having packed data operands and a simultaneous complex add and address calculation as described above. The above specification, examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention, the invention resides in the claims hereinafter appended.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method for implementing a RAKE receiver, comprising:
<claim-text>packing a first I-channel estimate, a first I-channel symbol, a first Q-channel estimate, and a first Q-channel symbol into a first data word stored in memory;</claim-text>
<claim-text>packing a second I-channel estimate, a second I-channel symbol, a second Q-channel estimate, and a second Q-channel symbol into a second data word stored in memory;</claim-text>
<claim-text>loading the first data word from memory during a first instruction cycle of a processor;</claim-text>
<claim-text>arithmetically processing the loaded first data word during a second instruction cycle that immediately follows the first instruction cycle;</claim-text>
<claim-text>storing the processed first data word in memory during the second instruction cycle;</claim-text>
<claim-text>calculating the address of the second data word in the second instruction cycle;</claim-text>
<claim-text>loading the second data word from memory during the second instruction cycle; and</claim-text>
<claim-text>arithmetically processing the loaded second data word during a third instruction cycle that immediately follows the second instruction cycle.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the arithmetically processing comprises a complex multiplication.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref>, wherein the complex multiplication performs a channel de-rotation.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the arithmetically processing comprises a complex addition.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00004">claim 4</claim-ref>, wherein the complex addition combines data from a plurality of fingers of the RAKE receiver.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref>, wherein the complex addition is produced with a precision of 6-bit accuracy.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the estimates and symbols are stored in different memories.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the packing, loading, arithmetically processing, storing, and calculating are performed using distributed processing engines.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A RAKE receiver, comprising:
<claim-text>means for in memory a first data word comprising a first 1-channel estimate, a first I-channel symbol, a first Q-channel estimate, and a first Q-channel symbol;</claim-text>
<claim-text>means for storing in memory a second data word comprising a second I-channel estimate, a second I-channel symbol, a second Q-channel estimate, and a second Q-channel symbol into a second data word stored in memory;</claim-text>
<claim-text>means for loading the first data word from memory during a first instruction cycle of a processor;</claim-text>
<claim-text>means for arithmetically processing the loaded first data word during a second instruction cycle that immediately follows the first instruction cycle;</claim-text>
<claim-text>means for storing the processed first data word in memory during the second instruction cycle;</claim-text>
<claim-text>means for calculating the address of the second data word in the second instruction cycle;</claim-text>
<claim-text>means for loading the second data word from memory during the second instruction cycle; and</claim-text>
<claim-text>means for arithmetically processing the loaded second data word during a third instruction cycle that immediately follows the second instruction cycle.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The receiver of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the arithmetically processing comprises a complex multiplication.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The receiver of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the complex multiplication performs a channel de-rotation.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The receiver of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the arithmetically processing comprises a complex addition.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The receiver of <claim-ref idref="CLM-00012">claim 12</claim-ref>, wherein the complex addition combines data from a plurality of fingers of the RAKE receiver.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The receiver of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the complex addition is produced with a precision of 6-bit accuracy.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The receiver of <claim-ref idref="CLM-00014">claim 14</claim-ref>, wherein the estimates and symbols are stored in different memory banks.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. A RAKE receiver, comprising:
<claim-text>a despreader, and</claim-text>
<claim-text>plurality of processing multiply-accumulators (MACs) that comprise SWP (sub-word parallelism) and SIMD (single instruction-multiple data) instructions, wherein the MACs collectively perform:
<claim-text>packing a first I-channel estimate, a first I-channel symbol, a first Q-channel estimate, and a first Q-channel symbol into a first data word stored in memory;</claim-text>
<claim-text>packing a second I-channel estimate, a second I-channel symbol, a second Q-channel estimate, and a second Q-channel symbol into a second data word stored in memory;</claim-text>
<claim-text>loading the first data word from memory during a first instruction cycle of a processor;</claim-text>
<claim-text>arithmetically processing the loaded first data word during a second instruction cycle that immediately follows the first instruction cycle;</claim-text>
<claim-text>storing the processed first data word in memory during the second instruction cycle;</claim-text>
<claim-text>calculating the address of the second data word in the second instruction cycle;</claim-text>
<claim-text>loading the second data word from memory during the second instruction cycle; and</claim-text>
<claim-text>arithmetically processing the loaded second data word during a third instruction cycle that immediately follows the second instruction cycle.</claim-text>
</claim-text>
</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The receiver of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein at least one of the MACs further configured to perform a cell search function.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The receiver of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the estimates and symbols are stored in different memories.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The receiver of <claim-ref idref="CLM-00016">claim 16</claim-ref>, wherein one of the MACs comprises an instruction set containing at least one instruction word that when executed initiates:
<claim-text>arithmetically processing the loaded first data word during the second instruction cycle that immediately follows the first instruction cycle;</claim-text>
<claim-text>storing the processed first data word in memory during the second instruction cycle;</claim-text>
<claim-text>calculating the address of the second data word in the second instruction cycle; and</claim-text>
<claim-text>loading the second data word from memory during the second instruction cycle.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
