<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07298718-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07298718</doc-number>
<kind>B2</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>10106945</doc-number>
<date>20020325</date>
</document-id>
</application-reference>
<us-application-series-code>10</us-application-series-code>
<us-term-of-grant>
<us-term-extension>831</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>H</section>
<class>04</class>
<subclass>Q</subclass>
<main-group>7</main-group>
<subgroup>00</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>370329</main-classification>
<further-classification>370341</further-classification>
<further-classification>370335</further-classification>
<further-classification>370342</further-classification>
</classification-national>
<invention-title id="d0e53">Channel allocations in a communications system</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5473612</doc-number>
<kind>A</kind>
<name>Dehner, Jr. et al.</name>
<date>19951200</date>
</document-id>
</patcit>
<category>cited by other</category>
<classification-national><country>US</country><main-classification>3701054</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>6289037</doc-number>
<kind>B1</kind>
<name>Gibbons et al.</name>
<date>20010900</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>375130</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>6434717</doc-number>
<kind>B1</kind>
<name>Fujii</name>
<date>20020800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714758</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>6820228</doc-number>
<kind>B1</kind>
<name>Keller</name>
<date>20041100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>714757</main-classification></classification-national>
</citation>
<citation>
<patcit num="00005">
<document-id>
<country>US</country>
<doc-number>6928066</doc-number>
<kind>B1</kind>
<name>Moon et al.</name>
<date>20050800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370342</main-classification></classification-national>
</citation>
<citation>
<patcit num="00006">
<document-id>
<country>GB</country>
<doc-number>2069799</doc-number>
<date>19810800</date>
</document-id>
</patcit>
<category>cited by other</category>
</citation>
</references-cited>
<number-of-claims>50</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>370329</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370335</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370337</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370341</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370342</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370347</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370431</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370441</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>370442</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>5</number-of-drawing-sheets>
<number-of-figures>5</number-of-figures>
</figures>
<us-related-documents>
<us-provisional-application>
<document-id>
<country>US</country>
<doc-number>60289450</doc-number>
<kind>00</kind>
<date>20010507</date>
</document-id>
</us-provisional-application>
<related-publication>
<document-id>
<country>US</country>
<doc-number>20030031149</doc-number>
<kind>A1</kind>
<date>20030213</date>
</document-id>
</related-publication>
</us-related-documents>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Odenwalder</last-name>
<first-name>Joseph P.</first-name>
<address>
<city>Rancho Santa Fe</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Wei</last-name>
<first-name>Yongbin</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="003" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Tiedemann, Jr.</last-name>
<first-name>Edward G.</first-name>
<address>
<city>Concord</city>
<state>MA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="004" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Lundby</last-name>
<first-name>Stein A.</first-name>
<address>
<city>Solana Beach</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="005" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Puig-Oses</last-name>
<first-name>David</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="006" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Sarkar</last-name>
<first-name>Sandip</first-name>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Baker</last-name>
<first-name>Kent D.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Velasco</last-name>
<first-name>Jonathan T.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="03" rep-type="attorney">
<addressbook>
<last-name>Rouse</last-name>
<first-name>Thomas R.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>QUALCOMM Incorporated</orgname>
<role>02</role>
<address>
<city>San Diego</city>
<state>CA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Patel</last-name>
<first-name>Ajit</first-name>
<department>2616</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">Systems and techniques for communications include calculating a value from data, transmitting the value and data over at least one time slot, receiving the transmission, recalculating the value from the received data, and determining the number of time slots of the transmission from the calculated and recalculated values. It is emphasized that this abstract is provided to comply with the rules requiring an abstract which will allow a searcher or other reader to quickly ascertain the subject matter of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or the meaning of the claims.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="110.57mm" wi="247.57mm" file="US07298718-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="224.37mm" wi="138.01mm" orientation="landscape" file="US07298718-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="264.08mm" wi="129.62mm" orientation="landscape" file="US07298718-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="240.71mm" wi="164.17mm" orientation="landscape" file="US07298718-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="235.46mm" wi="167.64mm" orientation="landscape" file="US07298718-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="261.37mm" wi="164.17mm" orientation="landscape" file="US07298718-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?RELAPP description="Other Patent Relations" end="lead"?>
<heading id="h-0001" level="1">CROSS-REFERENCE TO RELATED APPLICATIONS</heading>
<p id="p-0002" num="0001">The present application claims priority under 35 U.S.C. § 119(e) to provisional Application 60/289,450, filed May 7, 2001, the contents of which is incorporated herein by reference.</p>
<?RELAPP description="Other Patent Relations" end="tail"?>
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">1. Field</p>
<p id="p-0004" num="0003">The present invention relates generally to communications systems, and more specifically, to systems and techniques to optimize channel allocations in a communications systems.</p>
<p id="p-0005" num="0004">2. Background</p>
<p id="p-0006" num="0005">Modern communications systems are designed to allow multiple users to access a common communications medium. Numerous multiple-access techniques are known in the art, such as time division multiple-access (TDMA), frequency division multiple-access (FDMA), space division multiple-access, polarization division multiple-access, code division multiple-access (CDMA), and other similar multi-access techniques. The multiple-access concept is a channel allocation methodology which allows multiple user access to a common communications medium. The channel allocations can take on various forms depending on the specific multi-access technique. By way of example, in FDMA systems, the total frequency spectrum is divided into a number of smaller sub-bands and each user is given its own sub-band to access the communications medium. Alternatively, in TDMA systems, each user is given the entire frequency spectrum during periodically recurring time slots. In CDMA systems, each user is given the entire frequency spectrum for all of the time but distinguishes its transmission through the use of a unique code.</p>
<p id="p-0007" num="0006">CDMA is a modulation and multiple access technique based on spread-spectrum communications. In a CDMA communications system, a large number of signals share the same frequency spectrum. This is achieved by transmitting each signal with a different code that modulates a carrier, and thereby, spreads the spectrum of the signal waveform. The transmitted signals are separated in the receiver by a correlator that uses a corresponding code to despread the desired signal's spectrum. The undesired signals, whose codes do not match, are not despread in bandwidth and contribute only to noise.</p>
<p id="p-0008" num="0007">The use of CDMA techniques for multiple access communications generally provides increased user capacity over traditional TDMA and FDMA techniques. As a result, more users can access a network, or communicate with one another, through one or more base stations. In CDMA communications systems, the channel allocations are based on orthogonal sequences known as Walsh codes. Theoretically, maximum capacity of the CDMA communications system can be achieved when each available Walsh code is used to spread the traffic channels between multiple users. However, as a practical matter, numerous Walsh code channels may be required to support various control channels such as the pilot channel and other commonly used control channels. These control channels can generally be thought of as overhead which tends to consume bandwidth and decrease user capacity by reducing the number of Walsh channels available for traffic. With the tremendous increase in wireless applications over the past years, there is a need for a more efficient and robust data format which reduces overhead and increases throughput. This need is not limited to CDMA communications, but applies to various other communications systems.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0009" num="0008">In one aspect of the present invention, a method of communications includes calculating a value from data, transmitting the value and data over at least one time slot, receiving the transmission, recalculating the value from the received data, and determining the number of time slots of the transmission from the calculated and recalculated values.</p>
<p id="p-0010" num="0009">In another aspect of the present invention, a communications system includes a base station having a channel element configured to calculate a value from data, and a transmitter configured to transmit the value and data over at least one time slot, and a subscriber station having a receiver configured to receive the transmission, and a processor configured to recalculate the value from the received data, and determine the number of time slots of the transmission from the calculated and recalculated values.</p>
<p id="p-0011" num="0010">In yet another aspect of the present invention, a receiving device includes a receiver configured to receive a transmission over at least one time slot, the transmission comprising data and a value calculated from the data, and a processor configured to recalculate the value from the received data, and determine the number of time slots of the transmission from the calculated and recalculated values.</p>
<p id="p-0012" num="0011">In a further aspect of the present invention, a computer-readable media embodying a program of instructions executable by a computer program performs a method of communications, the method includes receiving a transmission over at least one time slot, the transmission comprising data and a value calculated from the data, recalculating the value from the received data, and determining the number of time slots of the transmission from the calculated and recalculated values.</p>
<p id="p-0013" num="0012">In yet a further aspect of the present invention, a communications system includes a base station having means for calculating a value from data, and transmission means for transmitting the value and data over at least one time slot, and a subscriber station having means for receiving the transmission, recalculation means for recalculating the value from the received data, and determination means for determining the number of time slots of the transmission from the calculated and recalculated values.</p>
<p id="p-0014" num="0013">In yet another aspect of the present invention, a receiving device includes means for receiving a transmission over at least one time slot, the transmission comprising data and a value calculated from the data, recalculation means for recalculating the value from the received data, and determination means for determining the number of time slots of the transmission from the calculated and recalculated values.</p>
<p id="p-0015" num="0014">It is understood that other aspects of the present invention will become readily apparent to those skilled in the art from the following detailed description, wherein is shown and described only exemplary embodiments of the invention, simply by way of illustration. As will be realized, the invention is capable of other and different embodiments, and its several details are capable of modifications in various respects, all without departing from the invention. Accordingly, the drawings and description are to be regarded as illustrative in nature, and not as restrictive.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0016" num="0015">Aspects of the present invention are illustrated by way of example, and not by way of limitation, in the accompanying drawings in which like reference numerals refer to similar elements wherein:</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 1</figref> is a functional block diagram of an exemplary CDMA communications system;</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 2</figref> is a functional block diagram illustrating the basic subsystems of the exemplary CDMA communications system of <figref idref="DRAWINGS">FIG. 1</figref>;</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 3</figref> is a functional block diagram illustrating an exemplary channel element configured to generate information subpackets having a one time slot format;</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 4</figref> is a functional block diagram illustrating an exemplary channel element configured to generate information subpackets having a two time slot format; and</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 5</figref> is a functional block diagram illustrating an exemplary channel element configured to generate information subpackets having a four-time slot format.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0022" num="0021">The detailed description set forth below in connection with the appended drawings is intended as a description of exemplary embodiments of the present invention and is not intended to represent the only embodiments in which the present invention can be practiced. The term “exemplary” used throughout this description means “serving as an example, instance, or illustration,” and should not necessarily be construed as preferred or advantageous over other embodiments. The detailed description includes specific details for the purpose of providing a thorough understanding of the present invention. However, it will be apparent to those skilled in the art that the present invention may be practiced without these specific details. In some instances, well-known structures and devices are shown in block diagram form in order to avoid obscuring the concepts of the present invention.</p>
<p id="p-0023" num="0022">In an exemplary embodiment of a communications system, data can be transmitted between two communications devices over one or more time slots. A value can be calculated from the data and included in the transmission. At the receiving end, the value can be recalculated from the data, and the number of time slots of the transmission can be determined from the recalculated value and the value embedded in the transmission. This approach tends to reduce overhead by eliminating a secondary channel often used in communications systems to identify the number of time slots occupied by the transmission.</p>
<p id="p-0024" num="0023">Various aspects of the present invention will be described in the context of a CDMA communications system supporting circuit-switch voice and high speed packet data applications. However, those skilled in the art will appreciate that these inventive aspects are likewise suitable for use in various other communications environments. Accordingly, any reference to a CDMA communications system is intended only to illustrate the inventive aspects of the present invention, with the understanding that such inventive aspects have a wide range of applications.</p>
<p id="p-0025" num="0024"><figref idref="DRAWINGS">FIG. 1</figref> is a simplified functional block diagram of an exemplary CDMA communications system supporting circuit-switched voice and high speed packet data applications. A base station controller <b>102</b> can be used to provide an interface between a network <b>104</b> and all base stations dispersed throughout a geographic region. The geographic region may be divided into subregions known as cells or sectors. A base station is generally assigned to serve all subscriber stations in a subregion. For ease of explanation, only one base station <b>106</b> is shown. A subscriber station <b>108</b> may access the network <b>104</b>, or communicate with other subscriber stations (not shown), through one or base stations under control of the base station controller <b>102</b>.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 2</figref> is an exemplary functional block diagram illustrating the basic subsystems of the exemplary CDMA communications system of <figref idref="DRAWINGS">FIG. 1</figref>. The base station controller <b>102</b> contains many selector elements, although only one selector element <b>204</b> is shown for simplicity. One selector element is used to control the transmissions between one or more base stations in communication with a single subscriber station <b>108</b>. When a call is initiated, a call control processor <b>202</b> can be used to establish the connection between the selector element <b>204</b> and the base station <b>106</b>. The base station <b>106</b> can then assign a MAC (Media Access Controller) ID to identify communications intended for the subscriber station <b>108</b> over that connection. The assigned MAC ID can be transmitted from the base station <b>106</b> to the subscriber station <b>108</b> with the exchange of signaling messages during call set up.</p>
<p id="p-0027" num="0026">The selector element <b>204</b> can be configured to receive circuit-switched voice and data from the network <b>104</b>. The selector element <b>204</b> sends the circuit-switched voice and data to each base station in communication with the intended subscriber station <b>108</b>. The base station <b>106</b> generates a forward link transmission that includes a forward packet data channel for high speed delivery of the data from the base station <b>106</b> to one or more subscriber stations. The forward link refers to the transmission from the base station <b>106</b> to the subscriber station <b>108</b>. The forward packet data channel can be composed of any number of Walsh code subchannels depending on the demands of the circuit-switched voice and data users The forward packet data channel generally serves one subscriber station at a time in a time-division multiplexed fashion.</p>
<p id="p-0028" num="0027">The base station <b>106</b> may include a data queue <b>206</b> which buffers the data from the selector element <b>204</b> before transmission to the subscriber station <b>108</b>. The data from the data queue <b>206</b> can be provided to a channel element <b>208</b>. The channel element <b>208</b> partitions the data into multiple data packets. Depending on the number of data packets needed to support the communications from the selector element <b>204</b>, any number of Walsh code subcbannels may be used. The channel element <b>208</b> then encodes the data packets using a coding process such as Turbo coding, scrambles the encoded symbols using a long pseudo-random noise (PN) sequence, and interleaves the scrambled symbols. Some or all of the interleaved symbols can then be selected to fonn data subpackets for the initial forward link transmission or retransmission. The data subpacker symbols can then be modulated by the channel element <b>208</b> using QPSK (Quadrature Phase Shift Keying), 8-PSK, 16-QAM (Quadrature Amplitude Modulation), or any other modulation scheme known in the art, demultiplexed into in-phase (I) and quadrature (Q) components and covered with distinct Walsh codes. The modulated symbols for each Walsh code subchannel can then be combined by the channel element <b>208</b> and quadrature spread using short PN code&amp; The short PN codes are a second layer of coding that is used to isolate one subregion from another. This approach allows the re-use of Walsh codes in every subregion. The quadrature spread channel can then provided to a transmitter <b>210</b> for filtering, upconvertion, and amplification before transmission over the forward link from the base station <b>106</b> to the subscriber station <b>108</b> via an antenna <b>212</b>.</p>
<p id="p-0029" num="0028">The control and scheduling functions can be provided by a channel scheduler <b>214</b>. The channel scheduler <b>214</b> receives the queue size from the data queue <b>206</b> and an indication of the channel quality from the subscriber station <b>108</b>. With this information, the channel scheduler schedules the data subpacket size and data rate for the forward link transmission to maximize throughput and minimize transmission delay. The data packet or subpacket size is defined by the number of bits contained therein. Depending on the data packet size and the scheduled data rate, the data subpackets can be transmitted over one or more time slots. In one exemplary embodiment of a CDMA communications system, the data subpackets can be transmitted over one, two, four or eight 1.25 millisecond (ms) time slots.</p>
<p id="p-0030" num="0029">The channel scheduler <b>214</b> may also schedule the modulation format of the data subpacket based on the quality of the communications channel between the base station <b>106</b> and the subscriber station <b>108</b>. By way of example, in a relatively distortion free environment with little or no interference, the channel scheduler <b>214</b> may schedule a high data rate to transmit each data subpacket over one time slot with a 16-QAM modulation format. Conversely, for subscriber stations with poor channel conditions, the channel scheduler <b>214</b> may schedule a low data rate to transmit each data subpacket over eight time slots with a QPSK modulation format. The optimal combination of data rate and modulation format to maximize the throughput of the system can be readily determined by those skilled in the art.</p>
<p id="p-0031" num="0030">The forward link transmission generated by the base station <b>106</b> may also include one or more forward packet data control channels associated with the forward packet data channel. Conventional high speed packet data systems with multiple time slot arrangements often utilize two forward packet data control channels: a forward primary packet data control channel and a forward secondary packet data control channel. The forward secondary packet data control channel carries information subpackets which can be used by the subscriber station to receive or decode corresponding data subpackets on the forward packet data channel. Specifically, the information subpacket includes a 6-bit MAC ID which identifies the intended subscriber station for the corresponding data subpacket, a 2-bit subpacket ID which identifies the corresponding data subpacket, a 2-bit ARQ channel ID which identifies the data packet from which the corresponding data subpacket was derived, and a 2-bit length field which indicates the corresponding data subpacket size. In a manner similar to the forward packet data channel, the information subpackets carried by the forward secondary packet data control channel can be transmitted over one or more slots to optimize communications with various subscriber stations having different channel conditions. In one exemplary embodiment of a CDMA communications system, the information subpacket can be transmitted over the forward secondary packet data control channel in one, two or four 1.25 ms time slots depending on the number of time slots occupied by the corresponding data subpacket. By way of example, the information subpacket on the forward secondary packet data control channel can be transmitted over one time slot for a one time slot data subpacket, two time slots for a two time slot data subpacket, or four time slots for a four or eight time slot data subpacket. The forward primary packet data control channel carries a subpacket which includes information that indicates the number of time slots occupied by the corresponding information subpacket carried on the forward secondary packet data control channel.</p>
<p id="p-0032" num="0031">In at least one embodiment of a CDMA communications system employing multiple slot transmissions, the primary and secondary packet data control channels can be consolidated into one forward packet data control channel. In this embodiment, the number of time slots occupied by the information subpacket carried on the forward packet data control channel can be determined from subpacket itself. This can be achieved in a variety of fashions. By way of example, a cyclic redundancy check (CRC) value can be included in the information subpacket carried on the forward packet data control channel. The CRC can be calculated by performing a known algorithm on the bit sequence forming the information subpacket. At the subscriber station, a CRC check function can be performed on information subpackets addressed to the subscriber station via the MAC ID. Specifically, the CRC can be recalculated over various time slot arrangements, and the recalculated CRC values can be compared to the CRC value included in the information subpacket. The length of the information subpacket, i.e., the number of time slots occupied by the information subpacket, can then be determined from the recalculated CRC value that matches the CRC value from the information subpacket. If none of the CRC values recalculated by the subscriber station match the CRC value from the information subpacket, then the subscriber station assumes that the corresponding data subpacket was intended for another subscriber station.</p>
<p id="p-0033" num="0032">Once the number of times slots occupied by the information subpacket is determined, it can be used to decode the corresponding data packet. If the subscriber station can successfully decode the data packet, which includes the current data subpacket and any previously received data subpackets for the data packet, then the subscriber station sends an acknowledgement (ACK) response to the base station. If the data packet cannot be successfully decoded, the subscriber station then sends a negative acknowledgement (NACK) response requesting additional data subpackets. The data packet may be deemed successfully decoded if the data packet CRC checks.</p>
<p id="p-0034" num="0033">The CRC protected subpacket may also provide additional benefits. By way of example, increased system throughput may be realized by decreasing the false-alarm probability of the forward packet data control channel. The false-alarm probability is the probability that a subscriber station will attempt to erroneously decode a data subpacket intended for another subscriber station.</p>
<p id="p-0035" num="0034">Further increases in user capacity and throughput may be achieved by expanding the length of the MAC ID from 6-bits to 8-bits to increase the number of users that can access the CDMA communications system. The exact number of bits used for the MAC ID is a matter of design and may vary depending on the overall design criteria of the communications system and the performance requirements. Regardless of the number of bits ultimately selected by the skilled artisan, an expanded MAC ID can reduce the delay and signaling overhead associated with frequent changes in active users. The expanded MAC ID length may also minimize the false-alarm probability by requiring more bits to be matched with the subscriber station MAC ID before the information subpacket is declared valid. By minimizing the false-alarm probability, the throughput of the CDMA communications system may be increased. Those skilled in the art will readily be able to assess performance tradeoffs of the system to ascertain the optimal bit length for the MAC ID to maximize user capacity and throughput.</p>
<p id="p-0036" num="0035">In at least one exemplary embodiment of a CDMA communications system, a data compression algorithm can be used to minimize the overhead required to transmit the information needed for decoding the forward packet data channel. This can be achieved by establishing various forward link transmission formats and assigning a binary code to each transmission format. By way of illustration, the channel element <b>208</b> can partition the data into data packets having one of two possible sizes. Depending on the data rate scheduled by the channel scheduler <b>214</b>, the data packets can be transmitted over a fixed number of Walsh subchannels with a one, two, four or eight slot format. Assuming four possible data rates that can be scheduled, one for each multiple time slot format, eight binary codes would be needed to indicate the data packet size, the data rate, and the number of time slots for the data subpacket transmission. Eight binary codes can be represented by three bits. The number of forward link transmission formats and the overhead to support it can be varied depending on the overall design parameters, and those skilled in the art will be readily be able to assess system tradeoffs to optimize performance. By way of example, the channel element <b>208</b> may be configured to support more data subpacket sizes. This approach may improve system throughput by providing an increase in the data subpacket size for higher data rates that can be supported by the subscriber station <b>108</b>.</p>
<p id="p-0037" num="0036">Table 1 illustrates one possible approach for transmitting the data subpackets over the forward link using twenty-eight 32-chip Walsh subchannels. In this embodiment, there are twenty-four possible forward link transmission formats with six different data packet sizes, fifteen different data rates, and three different modulation formats for transmission over one, two, four or eight time slots.</p>
<p id="p-0038" num="0037">
<tables id="TABLE-US-00001" num="00001">
<table frame="none" colsep="0" rowsep="0" pgwide="1">
<tgroup align="left" colsep="0" rowsep="0" cols="9">
<colspec colname="1" colwidth="28pt" align="center"/>
<colspec colname="2" colwidth="35pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="center"/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="35pt" align="center"/>
<colspec colname="6" colwidth="35pt" align="center"/>
<colspec colname="7" colwidth="35pt" align="center"/>
<colspec colname="8" colwidth="42pt" align="center"/>
<colspec colname="9" colwidth="35pt" align="center"/>
<thead>
<row>
<entry namest="1" nameend="9" align="center" rowsep="1"/>
</row>
<row>
<entry/>
<entry/>
<entry/>
<entry/>
<entry/>
<entry/>
<entry>Number</entry>
<entry>Number of</entry>
<entry>Number</entry>
</row>
<row>
<entry/>
<entry/>
<entry>Sub-</entry>
<entry>Number</entry>
<entry/>
<entry/>
<entry>of</entry>
<entry>Payload</entry>
<entry>of</entry>
</row>
<row>
<entry>Number</entry>
<entry>Number of</entry>
<entry>packet</entry>
<entry>of Slots</entry>
<entry/>
<entry/>
<entry>Payload</entry>
<entry>Modulation</entry>
<entry>Payload</entry>
</row>
<row>
<entry>of Bits</entry>
<entry>32-Chip</entry>
<entry>Data</entry>
<entry>per</entry>
<entry>Modula-</entry>
<entry>Effective</entry>
<entry>Modula-</entry>
<entry>Symbols</entry>
<entry>Binary</entry>
</row>
<row>
<entry>per</entry>
<entry>Walsh</entry>
<entry>Rate</entry>
<entry>Sub-</entry>
<entry>tion</entry>
<entry>Code</entry>
<entry>tion</entry>
<entry>per Walsh</entry>
<entry>Code</entry>
</row>
<row>
<entry>Packet</entry>
<entry>Channels</entry>
<entry>(kbps)</entry>
<entry>packet</entry>
<entry>Order</entry>
<entry>Rate</entry>
<entry>Symbols</entry>
<entry>Channel</entry>
<entry>Symbols</entry>
</row>
<row>
<entry namest="1" nameend="9" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry/>
</row>
</tbody>
</tgroup>
<tgroup align="left" colsep="0" rowsep="0" cols="9">
<colspec colname="1" colwidth="28pt" align="char" char="."/>
<colspec colname="2" colwidth="35pt" align="center"/>
<colspec colname="3" colwidth="28pt" align="char" char="."/>
<colspec colname="4" colwidth="28pt" align="center"/>
<colspec colname="5" colwidth="35pt" align="center"/>
<colspec colname="6" colwidth="35pt" align="char" char="."/>
<colspec colname="7" colwidth="35pt" align="char" char="."/>
<colspec colname="8" colwidth="42pt" align="char" char="."/>
<colspec colname="9" colwidth="35pt" align="char" char="."/>
<tbody valign="top">
<row>
<entry>384</entry>
<entry>28</entry>
<entry>38.4</entry>
<entry>8</entry>
<entry>2</entry>
<entry>0.017857</entry>
<entry>10,752</entry>
<entry>384</entry>
<entry>21,504</entry>
</row>
<row>
<entry>384</entry>
<entry>28</entry>
<entry>76.8</entry>
<entry>4</entry>
<entry>2</entry>
<entry>0.035714</entry>
<entry>5,376</entry>
<entry>192</entry>
<entry>10,752</entry>
</row>
<row>
<entry>768</entry>
<entry>28</entry>
<entry>76.8</entry>
<entry>8</entry>
<entry>2</entry>
<entry>0.035714</entry>
<entry>10,752</entry>
<entry>384</entry>
<entry>21,504</entry>
</row>
<row>
<entry>384</entry>
<entry>28</entry>
<entry>153.6</entry>
<entry>2</entry>
<entry>2</entry>
<entry>0.071429</entry>
<entry>2,688</entry>
<entry>96</entry>
<entry>5,376</entry>
</row>
<row>
<entry>768</entry>
<entry>28</entry>
<entry>153.6</entry>
<entry>4</entry>
<entry>2</entry>
<entry>0.071429</entry>
<entry>5,376</entry>
<entry>192</entry>
<entry>10,752</entry>
</row>
<row>
<entry>1,536</entry>
<entry>28</entry>
<entry>153.6</entry>
<entry>8</entry>
<entry>2</entry>
<entry>0.071429</entry>
<entry>10,752</entry>
<entry>384</entry>
<entry>21,504</entry>
</row>
<row>
<entry>2,304</entry>
<entry>28</entry>
<entry>230.4</entry>
<entry>8</entry>
<entry>2</entry>
<entry>0.107143</entry>
<entry>10,752</entry>
<entry>384</entry>
<entry>21,504</entry>
</row>
<row>
<entry>384</entry>
<entry>28</entry>
<entry>307.2</entry>
<entry>1</entry>
<entry>2</entry>
<entry>0.142857</entry>
<entry>1,344</entry>
<entry>48</entry>
<entry>2,688</entry>
</row>
<row>
<entry>768</entry>
<entry>28</entry>
<entry>307.2</entry>
<entry>2</entry>
<entry>2</entry>
<entry>0.142857</entry>
<entry>2,688</entry>
<entry>96</entry>
<entry>5,376</entry>
</row>
<row>
<entry>1,536</entry>
<entry>28</entry>
<entry>307.2</entry>
<entry>4</entry>
<entry>2</entry>
<entry>0.142857</entry>
<entry>5,376</entry>
<entry>192</entry>
<entry>10,752</entry>
</row>
<row>
<entry>3,072</entry>
<entry>28</entry>
<entry>307.2</entry>
<entry>8</entry>
<entry>2</entry>
<entry>0.142857</entry>
<entry>10,752</entry>
<entry>384</entry>
<entry>21,504</entry>
</row>
<row>
<entry>4,224</entry>
<entry>28</entry>
<entry>422.4</entry>
<entry>8</entry>
<entry>2</entry>
<entry>0.196429</entry>
<entry>10,752</entry>
<entry>384</entry>
<entry>21,504</entry>
</row>
<row>
<entry>2,304</entry>
<entry>28</entry>
<entry>460.8</entry>
<entry>4</entry>
<entry>2</entry>
<entry>0.214286</entry>
<entry>5,376</entry>
<entry>192</entry>
<entry>10,752</entry>
</row>
<row>
<entry>768</entry>
<entry>28</entry>
<entry>614.4</entry>
<entry>1</entry>
<entry>2</entry>
<entry>0.285714</entry>
<entry>1,344</entry>
<entry>48</entry>
<entry>2,688</entry>
</row>
<row>
<entry>1,536</entry>
<entry>28</entry>
<entry>614.4</entry>
<entry>2</entry>
<entry>2</entry>
<entry>0.285714</entry>
<entry>2,688</entry>
<entry>96</entry>
<entry>5,376</entry>
</row>
<row>
<entry>3,072</entry>
<entry>28</entry>
<entry>614.4</entry>
<entry>4</entry>
<entry>2</entry>
<entry>0.285714</entry>
<entry>5,376</entry>
<entry>192</entry>
<entry>10,752</entry>
</row>
<row>
<entry>4,224</entry>
<entry>28</entry>
<entry>844.8</entry>
<entry>4</entry>
<entry>2</entry>
<entry>0.392857</entry>
<entry>5,376</entry>
<entry>192</entry>
<entry>10,752</entry>
</row>
<row>
<entry>2,304</entry>
<entry>28</entry>
<entry>921.6</entry>
<entry>2</entry>
<entry>2</entry>
<entry>0.428571</entry>
<entry>2,688</entry>
<entry>96</entry>
<entry>5,376</entry>
</row>
<row>
<entry>1,536</entry>
<entry>28</entry>
<entry>1,228.8</entry>
<entry>1</entry>
<entry>2</entry>
<entry>0.571429</entry>
<entry>1,344</entry>
<entry>48</entry>
<entry>2,688</entry>
</row>
<row>
<entry>3,072</entry>
<entry>28</entry>
<entry>1,228.8</entry>
<entry>2</entry>
<entry>2</entry>
<entry>0.571429</entry>
<entry>2,688</entry>
<entry>96</entry>
<entry>5,376</entry>
</row>
<row>
<entry>4,224</entry>
<entry>28</entry>
<entry>1,689.6</entry>
<entry>2</entry>
<entry>2</entry>
<entry>0.785714</entry>
<entry>2,688</entry>
<entry>96</entry>
<entry>5,376</entry>
</row>
<row>
<entry>2,304</entry>
<entry>28</entry>
<entry>1,843.2</entry>
<entry>1</entry>
<entry>3</entry>
<entry>0.571429</entry>
<entry>1,344</entry>
<entry>48</entry>
<entry>4,032</entry>
</row>
<row>
<entry>3,072</entry>
<entry>28</entry>
<entry>2,457.6</entry>
<entry>1</entry>
<entry>4</entry>
<entry>0.571429</entry>
<entry>1,344</entry>
<entry>48</entry>
<entry>5,376</entry>
</row>
<row>
<entry>4,244</entry>
<entry>28</entry>
<entry>3,379.2</entry>
<entry>1</entry>
<entry>4</entry>
<entry>0.785714</entry>
<entry>1,344</entry>
<entry>48</entry>
<entry>5,376</entry>
</row>
<row>
<entry namest="1" nameend="9" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0039" num="0038">Table 2 illustrates an exemplary compression algorithm for specifying the data subpacket format and ID of Table 1. The data subpacket format specifies one of the forward link transmission formats for a fixed number of available Walsh subchannels and the data subpacket ID identifies the data subpackets. The described exemplary data subpacket format and ID is 6-bits in length, and therefore, has sixty-four values. The first twenty-four values, i.e., 00<sub>HEX </sub>to 17<sub>HEX</sub>, are reserved for the initial data subpacket transmission and provides various information for all data subpackets derived from the same data packet such as the data packet size, the data rate, the modulation scheme, and the number of slots occupied by each data subpacket. The initial data subpacket is transmitted repeatedly until the subscriber station acknowledges that it has been received. The next thirty-six values, i.e., 18<sub>HEX </sub>to 3C<sub>Hex</sub>, are unused. The last three values, i.e., 3D<sub>HEX </sub>to 3F<sub>HEX</sub>, provide a data subpacket ID for data subpackets following the initial data subpacket transmission. Since the forward link transmission format has been sent with the initial data subpacket transmission, the only information required to decode subsequent data subpackets is the data subpacket ID.</p>
<p id="p-0040" num="0039">
<tables id="TABLE-US-00002" num="00002">
<table frame="none" colsep="0" rowsep="0">
<tgroup align="left" colsep="0" rowsep="0" cols="2">
<colspec colname="1" colwidth="56pt" align="center"/>
<colspec colname="2" colwidth="161pt" align="left"/>
<thead>
<row>
<entry namest="1" nameend="2" rowsep="1">TABLE 2</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
<row>
<entry>Value</entry>
<entry>Meaning</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</thead>
<tbody valign="top">
<row>
<entry>00<sub>HEX </sub>to 17<sub>HEX</sub></entry>
<entry>Initial Subpacket (Subpacket ID = 0)</entry>
</row>
<row>
<entry/>
<entry>with a Format of 0 to 23</entry>
</row>
<row>
<entry>18<sub>HEX </sub>to 3C<sub>HEX</sub></entry>
<entry>Reserved</entry>
</row>
<row>
<entry>3D<sub>HEX </sub>to 3F<sub>HEX</sub></entry>
<entry>Noninitial Subpacket with a Subpacket ID of 1 to 3</entry>
</row>
<row>
<entry namest="1" nameend="2" align="center" rowsep="1"/>
</row>
</tbody>
</tgroup>
</table>
</tables>
</p>
<p id="p-0041" num="0040">The exemplary compression algorithm described in connection with Table 2 may also reduce the false-alarm probability, and thereby, increase system throughput. Since more than one-half of the binary codes for the data subpacket format and ID are not used, the probability that this 6-bit sequence, if corrupted by the communications channel, will match a valid sequence is less than one-half. Those skilled in the art will be readily able to ascertain system tradeoffs to determine the optimal compression algorithm to enhance system performance. By way of example, the bit sequence can be expanded to increase the number of transmission formats available and/or the throughput of the system at the cost of additional overhead. Alternatively, the compression algorithm can be fixed at 6-bits with additional transmission formats being assigned to the unused values at the risk of a higher false-alarm rate. Conversely, the number of transmission formats can be reduced resulting in more unused values which tends to decrease the false-alarm probability.</p>
<p id="p-0042" num="0041">The compression algorithm for specifying the data subpacket format and ID of Table 1 can be reduced twofold by using the slot duration of the information subpacket to specify the slot duration of the corresponding data subpacket. By way of example, the information subpacket on the forward packet data control channel can be transmitted over one time slot for a one time slot data subpacket, two time slots for a two time slot data subpacket, or four time slots for a four or eight time slot data subpacket. This approach reduces the number of possible subpacket formats from twenty-four to twelve. As a result, only the first twelve values, i.e., 00<sub>HEX </sub>to 0C<sub>HEX</sub>, are required for the initial data subpacket transmission leaving the next forty-eight values, i.e., 0D<sub>HEX </sub>to 3C<sub>HEX</sub>, unused. With more unused values in the compression algorithm, the false-alarm probability tends to decrease. Alternatively, the bit length of the compression algorithm can be reduced to save overhead.</p>
<p id="p-0043" num="0042">The channel element <b>208</b> can be used to generate the information for the forward packet data control channel. Based on the number of Walsh subchannels available for the forward packet data channel, the channel element <b>208</b> generates a 6-bit subpacket format and ID for the initial information subpacket transmission as a function of the data subpacket size, the scheduled data rate, and the scheduled modulation format. This information can be obtained from the channel scheduler <b>214</b>. The channel element <b>208</b> also generates the 6-bit subpacket format and ID for the information subpackets that follow the initial transmission. The channel element <b>208</b> generates an information subpacket payload by packaging the 6-bit subpacket format and ID with a 2-bit ARQ ID identifying the data packet from which the corresponding data subpacket was derived, and an 8-bit MAC ID identifying the intended subscriber station of the information subpacket.</p>
<p id="p-0044" num="0043">The channel element <b>208</b> can be implemented in electronic hardware, in computer software, or in a combination of the two. The channel element <b>208</b> may be implemented with a general or special purpose processor, a digital signal processor (DSP), an application specific integrated circuit (ASIC), a field programmable gate array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform one or more of the functions described herein. In one exemplary embodiment of the channel element <b>208</b>, the channel element functions can be performed with a general purpose processor such as a microprocessor, or a special purpose processor such as a programmable DSP having an embedded communications software layer to implement the channel element functions. In this embodiment, the communications software layer can be used to invoke various encoders, modulators and supporting functions to accommodate various multiple slot transmissions.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 3</figref> is a functional block diagram of a channel element configuration for generating an exemplary forward packet data control channel for a one slot transmission. In this configuration, the 16-bit payload is provided to a CRC generator <b>302</b>. The CRC generator <b>302</b> can be used to calculate the CRC value over the entire payload or any portion thereof. By calculating the CRC value over only a portion of the payload, a reduction in computational complexity may be achieved. The CRC value can be any number of bits depending on the design parameters. In the described exemplary embodiment, the CRC generator <b>302</b> appends 8-bits to the payload.</p>
<p id="p-0046" num="0045">The 24-bit CRC protected payload can be provided to an encoder tail generator <b>304</b>. The encoder tail generator <b>304</b> generates a sequence of bits that is appended to the end of the payload. The bit sequence that makes up the tail is used to ensure that decoder at the subscriber station is provided with a sequence that ends at a known state, thus facilitating accurate decoding. An 8-bit tail can be generated by the tail generator, however, as those skilled in the art will readily recognize, the tail can be any length.</p>
<p id="p-0047" num="0046">The 32-bit CRC protected payload with the encoder tail can be provided to a convolutional encoder <b>306</b>. The convolutional encoder <b>306</b> provides forward error correction capability at the subscriber station and can be implemented with any code rate and constraint length depending on the particular design parameters and the overall system constraints. In the exemplary embodiment shown in <figref idref="DRAWINGS">FIG. 3</figref>, the convolutional coding is performed at a ⅓ rate with a constraint length of 9. As a result, the 32-bit sequence input to the convolutional encoder <b>306</b> is encoded into a 96-symbol sequence. Convolutional encoding is well known, and those skilled in the art will readily be ascertained performance tradeoffs to determine the appropriate rate and constraint length to optimize performance.</p>
<p id="p-0048" num="0047">The 96-symbol sequence generated by the convolutional encoder <b>306</b> can be coupled to a demultiplexer <b>308</b> which demultiplexes the symbols into two 48-symbol sequences. The 48-symbol sequence results in a 38.4 ksps (kilo-symbols per second) rate for a one slot transmission having a duration of 1.25 ms.</p>
<p id="p-0049" num="0048">Various processing techniques can be applied to the two 48-symbol sequences to minimize the affect of burst errors on the ability of the decoder at the subscriber station to decode the symbol sequence. By way of example, the two 48-symbol sequences from the demultiplexer <b>308</b> can be provided to respective block interleavers <b>310</b><i>a </i>and <b>310</b><i>b </i>which alters the sequence of the symbols. The two interleaved 48-symbol sequences can then be shifted in time with respect to one another by a half-slot. This can be achieved with a cyclic shifter <b>312</b> that shifts the 48-symbol sequence from one of the block interleavers <b>310</b><i>b </i>in time by 24 symbols.</p>
<p id="p-0050" num="0049">The symbol sequence from the block interleaver <b>310</b><i>a </i>and the symbol sequence from the cyclic shifter <b>312</b> can be provided to respective modulators which may support various modulation schemes such as QPSK, 8-PSK, 16-QAM, or any other modulation scheme known in the art. In the described exemplary embodiment, two QPSK modulators <b>314</b><i>a </i>and <b>314</b><i>b, </i>one for each 48-symbol sequence, are used. The modulated symbols from each of the modulators <b>314</b><i>a </i>and <b>314</b><i>b </i>can then be separated into their respective I and Q components and covered with a distinct Walsh code by multipliers <b>316</b><i>a </i>and <b>316</b><i>b </i>before being combined with the forward packet data channel and other Walsh subchannels. The combined Walsh subchannels can then be quadrature spread using the short PN codes and coupled to the transmitter <b>210</b> for filtering, upconvertion, and amplification before transmission over the forward link from the base station <b>106</b> to the subscriber station <b>108</b> (see <figref idref="DRAWINGS">FIG. 2</figref>).</p>
<p id="p-0051" num="0050">Alternatively, the forward packet data control channel can be transmitted over a single Walsh subchannel to conserve resources during periods of high demand among the packet data users. With this approach, the demultiplexer <b>308</b> can be configured to puncture 48 symbols from the 96-symbol sequence generated by the convolution encoder <b>306</b>. The nonpunctured or remaining 48 symbols can be interleaved, modulated, separating into their respective I and Q components, and spread with a distinct Walsh code as shown in the upper demultiplexed symbol sequence of <figref idref="DRAWINGS">FIG. 3</figref>. With this approach, the block interleaver <b>310</b><i>b, </i>the cyclic shifter <b>312</b>, the modulator <b>314</b><i>b, </i>and the multiplier <b>316</b><i>b </i>are not used.</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 4</figref> is a functional block diagram of a channel element configuration for generating an exemplary forward packet data control channel for a two slot transmission. In a manner similar to the one slot transmission format, the 16-bit payload can be appended with an 8-bit CRC value produced by the CRC generator <b>302</b> and an 8-bit encoder tail produced by the encoder tail generator <b>304</b>. The resultant 32-bit sequence can be encoded with the convolutional encoder <b>306</b> at a ⅓ rate with a constraint length of 9 to produce a 96-symbol sequence.</p>
<p id="p-0053" num="0052">The main difference between the one and two slot transmission formats is the addition of a sequence repeater <b>402</b> following the convolutional encoder <b>306</b> to produce the two slot transmission format. In the described exemplary embodiment, the sequence repeater <b>402</b> is positioned at the output of the convolutional encoder <b>306</b>, however, the sequence repeater <b>402</b> could alternatively be positioned downstream. The sequence repeater <b>402</b> can be configured to repeat the symbol sequence as many times as desired depending on the system requirements. By way of example, the 96-symbol sequence from the convolutional encoder <b>306</b> can be repeated twice to produce a 192-symbol sequence for a two slot transmission. Alternatively, the 96-symbol sequence from the convolutional encoder <b>306</b> could be repeated four times to produce a 384-symbol sequence for a four slot transmission. The repetition number can be preset by the designer, or alternatively programmed either manually or on the fly in an automated fashion. In the described exemplary embodiment of <figref idref="DRAWINGS">FIG. 4</figref>, the repetition number is set at two resulting in a 192-symbol sequence.</p>
<p id="p-0054" num="0053">The 192-symbol sequence can be coupled to the demultiplexer <b>308</b> which demultiplexes the symbols into two 96-symbol sequences to support a 38.4 ksps symbol rate for a two slot transmission having a 1.25 ms duration. The two 96-symbol sequences can then be provided to their respective block interleavers <b>310</b><i>a </i>and <b>310</b><i>b </i>with one interleaved symbol sequence being shifted one time slot with respect to the other interleaved symbol sequence by the cyclic shifter <b>312</b>. This can be achieved by configuring the cyclic shifter <b>312</b> to shift the 96-symbol sequence from one of the block interleavers <b>310</b><i>b </i>in time by 48 symbols.</p>
<p id="p-0055" num="0054">The symbol sequence from the block interleaver <b>310</b><i>a </i>and the symbol sequence from the cyclic shifter <b>312</b> can be provided to their respective modulators <b>314</b><i>a </i>and <b>314</b><i>b. </i>The modulated symbols from each modulator <b>314</b><i>a </i>and <b>314</b><i>b </i>can then be separated into their I and Q components and covered with a distinct Walsh code with the multipliers <b>316</b><i>a </i>and <b>316</b><i>b </i>before being combined with the forward packet data channel and other Walsh subchannels. The combined Walsh subchannels can then be quadrature spread using the short PN codes, and provided to the transmitter for filtering, upconvertion, and amplification before transmission over the forward link from the base station <b>106</b> to the subscriber station <b>108</b> (see <figref idref="DRAWINGS">FIG. 2</figref>).</p>
<p id="p-0056" num="0055">Alternatively, the forward packet data control channel can be transmitted over a single Walsh subchannel. This can be accomplished in a variety of fashions. By way of example, the demultiplexer <b>308</b> can be configured to puncture 96 symbols of the 192-symbol sequence from the sequence repeater <b>402</b>. The nonpunctured or remaining 96 symbols can then be interleaved, modulated, separated into their I and Q components, and spread with a distinct Walsh code. With this approach, the block interleaver <b>310</b><i>b, </i>the cyclic shifter <b>312</b>, the modulator <b>314</b><i>b, </i>and the multiplier <b>316</b><i>b </i>are not used.</p>
<p id="p-0057" num="0056">Further reductions in computational complexity for a single Walsh subchannel transmission can be achieved by simply eliminating the sequence repeater <b>402</b>. With this approach, the 96-symbol sequence from the convolutional encoder <b>306</b> can be provided directly to the block interleaver <b>310</b><i>a. </i>As a consequence, more encoder functions can be eliminated than with the previous approach discussed earlier including the sequence repeater <b>402</b>, the block interleaver <b>310</b><i>b, </i>the cyclic shifter <b>312</b>, the modulator <b>314</b><i>b, </i>and the multiplier <b>216</b><i>b. </i></p>
<p id="p-0058" num="0057"><figref idref="DRAWINGS">FIG. 5</figref> is a functional block diagram of a channel element configuration for generating an exemplary forward packet data control channel for a four slot transmission. In a manner similar to the one and two slot transmission formats, the 16-bit payload can be appended with an 8-bit CRC value produced by the CRC generator <b>302</b> and an 8-bit tail produced by the encoder tail generator <b>304</b>. The resultant 32-bit sequence can be encoded with the convolutional encoder <b>306</b> at a ⅓ rate with a constraint length of 9 to produce a 96-symbol sequence.</p>
<p id="p-0059" num="0058">The 96-symbol sequence can be provided to the sequence repeater <b>402</b>. The repetition number of the sequence repeater <b>402</b> can be set at four to produce a 384-symbol sequence for a four slot transmission. Alternatively, as illustrated in the exemplary embodiment of <figref idref="DRAWINGS">FIG. 5</figref>, the repetition number of the sequence repeater <b>402</b> can be set at two to produce a 192-symbol sequence with a pair of sequence repeaters <b>502</b><i>a </i>and <b>502</b><i>b </i>downstream of the demultiplexer <b>308</b>.</p>
<p id="p-0060" num="0059">The demultiplexer <b>308</b> demultiplexes the 192-symbol sequence into two 96-symbol sequences. The two 96-symbol sequences can be provided to their respective block interleavers <b>310</b><i>a </i>and <b>310</b><i>b </i>with one interleaved symbol sequence being shifted in time with respect to the other interleaved symbol sequence by one time slot with the cyclic shifter <b>312</b>. This can be achieved by shifting the 96-symbol sequence from one of the block interleavers <b>310</b><i>b </i>in time by 48 symbols.</p>
<p id="p-0061" num="0060">The symbol sequence from the block interleaver <b>310</b><i>a </i>and the symbol sequence from the cyclic shifter <b>312</b> can be provided to their respective sequence repeaters <b>502</b><i>a </i>and <b>502</b><i>b. </i>The sequence repeaters <b>502</b><i>a </i>and <b>502</b><i>b </i>can be configured to repeat their respective symbol sequences twice to produce two 192-symbol sequences to support a 38.4 ksps symbol rate for a four slot transmission having a 1.25 ms duration.</p>
<p id="p-0062" num="0061">The symbol sequences from the sequence repeaters <b>502</b><i>a </i>and <b>502</b><i>b </i>can be provided to their respective modulators <b>314</b><i>a </i>and <b>314</b><i>b. </i>The modulated symbols from each modulator <b>314</b><i>a </i>and <b>314</b><i>b </i>can then be separated into their I and Q components and covered with a distinct Walsh code with the multipliers <b>316</b><i>a </i>and <b>316</b><i>b </i>before being combined with the forward packet data channel and other Walsh subchannels. The combined Walsh subchannels can then be quadrature spread using the short PN codes, and provided to the transmitter <b>210</b> for filtering, upconvertion, and amplification before transmission over the forward link from the base station <b>106</b> to the subscriber station <b>108</b> (see <figref idref="DRAWINGS">FIG. 2</figref>).</p>
<p id="p-0063" num="0062">The configuration of the channel element <b>208</b> can further be arranged to accommodate a four slot transmission using a single Walsh subchannel by eliminating the sequence repeater <b>402</b> and providing the 192-symbol sequence from the convolutional encoder <b>306</b> directly to the block interleaver <b>310</b><i>a </i>before being repeated, modulated, separated into its I and Q components, and spread with a distinct Walsh code. The sequence repeaters <b>402</b> and <b>502</b><i>b, </i>the demultiplexer <b>308</b>, the block interleaver <b>310</b><i>b, </i>the cyclic shifter <b>312</b>, the modulator <b>314</b><i>b, </i>and the multiplier <b>316</b><i>b </i>are not used with this approach. Alternatively, the sequence repeater <b>502</b><i>a </i>following the block interleaver <b>310</b><i>a </i>can be eliminated instead of the sequence repeater <b>402</b> following the convolutional encoder <b>306</b>.</p>
<p id="p-0064" num="0063">In yet another approach for a single Walsh subchannel transmission having a four slot format, the demultiplexer <b>308</b> can be configured to puncture 96 symbols from the 192-symbol sequence from the sequence repeater <b>402</b>. The nonpunctured or remaining 96 symbols can then be interleaved, repeated twice to generate a 192-symbol sequence, modulated, separated in its I and Q components, and spread with a distinct Walsh code. Those skilled in the art will readily be able to ascertain the optimal configuration of the channel element <b>208</b> to maximize throughput and minimize the false-alarm probability.</p>
<p id="p-0065" num="0064">Returning to <figref idref="DRAWINGS">FIG. 2</figref>, the forward link transmission from the base station <b>106</b> is received by an antenna <b>215</b> at the subscriber station <b>108</b>. The received signal may be routed from the antenna <b>215</b> to a receiver <b>216</b>. The receiver filters and amplifies the signal, down converts the signal to baseband, and quadrature demodulates the baseband signal. The baseband signal can then be sampled and stored in memory <b>218</b>. The memory <b>218</b> should be sufficiently sized to store enough samples, or chips, to cover the maximum allowable number of time slots for a forward link subpacket transmission.</p>
<p id="p-0066" num="0065">In an exemplary CDMA communications system, the chips are released from the memory <b>218</b> to a processor <b>220</b> in one, two, or four time slot formats. The processor <b>220</b> can be configured to perform numerous functions some of which are illustrated in <figref idref="DRAWINGS">FIG. 2</figref> by a demodulator <b>222</b>, an decoder <b>224</b>, a CRC generator <b>226</b>, and a comparator <b>228</b>. These functions may be implemented directly in hardware, in software executed by the processor, or in a combination of the two. The processor may be implemented with a general or special purpose processor, a DSP, an ASIC, a FPGA or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform one or more of the aforesaid functions. As those skilled in the art will appreciate, a separate processor can be used to perform each function, or alternatively, multiple functions can be partitioned among any number of processors.</p>
<p id="p-0067" num="0066">To reduce computation complexity and conserve processor resources, one time slot worth of chips are initially released from the memory <b>218</b> to the demodulator <b>222</b> where they are quadrature demodulated with the short PN codes and despread into symbols using Walsh codes. The symbol sequences for the forward packet data control channel can then be demodulated using QPSK, 8-PSK, 16-QAM, or any other modulation scheme employed by the base station <b>106</b>. The demodulated symbol sequences can be provided to the decoder <b>224</b> which performs the inverse of the signal processing functions done at the base station, specifically the de-interleaving and decoding.</p>
<p id="p-0068" num="0067">Assuming that the decoded bit sequence includes the MAC ID for the subscriber station, the decoded bit sequence can then be provided to a CRC generator <b>226</b>. The CRC generator <b>226</b> generates a CRC value and compares the locally generated CRC value with the decoded CRC value embedded in the forward link transmission with the comparator <b>228</b>. The results of the comparison are used to determine whether the information subpacket carried on the forward packet data control channel is one time slot. If the locally generated CRC value matches the decoded CRC value embedded in the forward link transmission, the information subpacket is determined to be one time slot in length and the payload can be used by the processor <b>220</b> to decode the corresponding data subpacket. Conversely, if the locally generated CRC value does not match the decoded CRC value embedded in the forward link transmission, then the processor <b>220</b> releases two time slots worth of chips from the memory <b>218</b> for demodulation, decoding and CRC check functions. This process continues until the processor <b>220</b> finds a set of chips spanning over one, two, or four time slots in which the locally generated CRC value matches the decoded CRC value embedded in the forward link transmission. If none of the locally generated CRC values match the decoded CRC value embedded in the forward link transmission, the corresponding data packet is assumed to be intended for another subscriber station.</p>
<p id="p-0069" num="0068">Those skilled in the art will appreciate that the various illustrative logical blocks, modules, circuits, and algorithms described in connection with the embodiments disclosed herein may be implemented as electronic hardware, computer software, or combinations of both. To clearly illustrate this interchangeability of hardware and software, various illustrative components, blocks, modules, circuits, and algorithms have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application, but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.</p>
<p id="p-0070" num="0069">The various illustrative logical blocks, modules, and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor, a DSP, an ASIC, a FPGA or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor, but in the alternative, the processor may be any conventional processor, controller, micro controller, or state machine. A processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration.</p>
<p id="p-0071" num="0070">The methods or algorithms described in connection with the embodiments disclosed herein may be embodied directly in hardware, in a software module executed by a processor, or in a combination of the two. A software module may reside in RAM memory, flash memory, ROM memory, EPROM memory, EEPROM memory, registers, hard disk, a removable disk, a CD-ROM, or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such the processor can read information from, and write information to, the storage medium. In the alternative, the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a user terminal. In the alternative, the processor and the storage medium may reside as discrete components in a user terminal.</p>
<p id="p-0072" num="0071">The previous description of the disclosed embodiments is provided to enable any person skilled in the art to make or use the present invention. Various modifications to these embodiments will be readily apparent to those skilled in the art, and the generic principles defined herein may be applied to other embodiments without departing from the spirit or scope of the invention: Thus, the present invention is not intended to be limited to the embodiments shown herein but is to be accorded the widest scope consistent with the principles and novel features disclosed herein.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. A method of communicating, comprising:
<claim-text>consolidating a primary and a secondary packet control channel into one packet control channel comprising:</claim-text>
<claim-text>calculating a value from data, wherein said data comprises information subpackets addressed to a subscriber station via MAC ID;</claim-text>
<claim-text>transmitting the value and data over at least one time slot;</claim-text>
<claim-text>receiving a transmission;</claim-text>
<claim-text>recalculating the value from the received data; and</claim-text>
<claim-text>determining the number of time slots of the transmission from the calculated and recalculated values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the determination of the number of time slots of the transmission comprises comparing the calculated and recalculated values.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The method of <claim-ref idref="CLM-00002">claim 2</claim-ref> wherein the step of recalculating the value comprises recalculating over a plurality of different numbers of time slots until the calculated and recalculated values compare.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> wherein the value comprises a cyclic redundancy check.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising encoding the value and data before the transmission.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref> further comprising adding an encoder tail to the value and the data, and encoding the value, data and encoder tail before the transmission, wherein said encoder tail is 8 bits, said value is 8 bits and said data is 16 bits.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The method of <claim-ref idref="CLM-00005">claim 5</claim-ref> further comprising demultiplexing the encoded value and data into first and second sequences, and spreading each of the first and second sequences with a different code before the transmission.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The method of <claim-ref idref="CLM-00007">claim 7</claim-ref> further comprising shifting the one of the first and second sequences in time before the transmission.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising repeating the value and data twice before the transmission, wherein the transmission comprises transmitting the repeated value and data over two time slots.</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising repeating the value and data four times before the transmission, wherein the transmission comprises transmitting the repeated value and data over four time slots.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00001">claim 1</claim-ref> further comprising repeating the value and data twice, demultiplexing the repeated value and data into a first sequence on a first channel and a second sequence on a second channel, and repeating each of the first and second sequences twice, wherein the transmission comprises transmitting each of the repeated first and second sequences on their respective first and second channels over four time slots.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. A communications system, comprising:
<claim-text>a base station having a channel element configured to calculate a value from data, and a transmitter configured to transmit the value and data over at least one time slot; and</claim-text>
<claim-text>a subscriber station having a receiver configured to receive a transmission, and a processor configured to consolidate a primary and a secondary packet control channel into one packet control channel comprising recalculation of the value from the received data, and determination of the number of time slots of the transmission from the calculated and recalculated values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The communications system of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the processor is further configured to determine the number of time slots of the transmission by comparing the calculated and recalculated values.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The communications system of <claim-ref idref="CLM-00013">claim 13</claim-ref> wherein the processor is further configured to recalculate the value of the received data by performing the recalculation over a plurality of different numbers of time slots until the calculated and recalculated values compare.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The communications system of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the value comprises a cyclic redundancy check.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The communications system of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the channel element further comprises an encoder configured to encode the value and data before the transmission.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The communications system of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein the channel element further comprises an encoder tail generator configured to add an 8-bit encoder tail to the 8-bit CRC value and 16-bit data, the encoder being further configured to encode the 8-bit value, 16-bit data and 8-bit encoder tail before the transmission wherein said data comprises information subpackets addressed to a subscriber station via MAC ID.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The communications system of <claim-ref idref="CLM-00016">claim 16</claim-ref> wherein the channel element further comprises a demultiplexer configured to demultiplex the encoded value and data into first and second sequences, and a multiplier configured to spread each of the first and second sequences with a different code before the transmission.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The communications system of <claim-ref idref="CLM-00018">claim 18</claim-ref> wherein the channel element further comprises a shifter configured to shift one of the first and second sequences in time before the transmission.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The communications system of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the channel element further comprises a repeater configured to repeat the value and data twice before the transmission, and wherein the transmitter is further configured to transmit the repeated value and data over two time slots.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The communications system of <claim-ref idref="CLM-00012">claim 12</claim-ref> wherein the channel element further comprises a first repeater configured to repeat the value and data twice, a demultiplexer configured to demultiplex the repeated value and data into a first sequence on a first channel and a second sequence on a second channel, a second repeater configured to repeat the first sequence twice, and a third repeater configured to repeat the second sequence twice, and wherein the transmitter is further configured to transmit each of the repeated first and second sequences on their respective first and second channels over four time slots.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. A receiving device, comprising:
<claim-text>a receiver configured to receive a transmission over at least one time slot, the transmission comprising data and a value calculated from the data; and</claim-text>
<claim-text>a processor configured to consolidate a primary and a secondary packet control channel into one packet control channel comprising recalculation of the value from the received data, and determination of the number of time slots of the transmission from the calculated and recalculated values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. The receiving device of <claim-ref idref="CLM-00022">claim 22</claim-ref> wherein the processor is further configured to determine the number of time slots of the transmission by comparing the calculated and recalculated values.</claim-text>
</claim>
<claim id="CLM-00024" num="00024">
<claim-text>24. The receiving device of <claim-ref idref="CLM-00023">claim 23</claim-ref> wherein the processor is further configured to recalculate the value of the received data by performing the recalculation over a plurality of different numbers of time slots until the calculated and recalculated values compare.</claim-text>
</claim>
<claim id="CLM-00025" num="00025">
<claim-text>25. The receiving device of <claim-ref idref="CLM-00023">claim 23</claim-ref> further comprising memory configured to store the received value and data, a demodulator configured to demodulate the value and data released from the memory, a decoder configured to decode the demodulated value and data, the demodulated value and data being coupled to the processor to recalculate the value from the demodulated data and compare the demodulated value with the recalculated value.</claim-text>
</claim>
<claim id="CLM-00026" num="00026">
<claim-text>26. The receiving device of <claim-ref idref="CLM-00025">claim 25</claim-ref> wherein the processor is further configured to control the release of the received value and data from memory as a function of the comparison.</claim-text>
</claim>
<claim id="CLM-00027" num="00027">
<claim-text>27. The receiving device of <claim-ref idref="CLM-00022">claim 22</claim-ref> wherein the value comprises a cyclic redundancy check.</claim-text>
</claim>
<claim id="CLM-00028" num="00028">
<claim-text>28. Computer-readable media embodying a program of instructions executable by a computer to perform a method of communications, the method comprising:
<claim-text>consolidating a primary and a secondary packet control channel into one packet control channel comprising:</claim-text>
<claim-text>receiving a transmission over at least one time slot, the transmission comprising data and a value calculated from the data;</claim-text>
<claim-text>recalculating the value from the received data; and</claim-text>
<claim-text>determining the number of time slots of the transmission from the calculated and recalculated values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00029" num="00029">
<claim-text>29. The computer-readable media of <claim-ref idref="CLM-00028">claim 28</claim-ref> wherein the determination of the number of time slots of the transmission comprises comparing the calculated and recalculated values.</claim-text>
</claim>
<claim id="CLM-00030" num="00030">
<claim-text>30. The computer-readable media of <claim-ref idref="CLM-00029">claim 29</claim-ref> wherein the recalculation of the value comprises performing the recalculation over a plurality of different numbers of time slots until the calculated and recalculated values compare.</claim-text>
</claim>
<claim id="CLM-00031" num="00031">
<claim-text>31. The computer-readable media of <claim-ref idref="CLM-00028">claim 28</claim-ref> wherein the value comprises a cyclic redundancy check.</claim-text>
</claim>
<claim id="CLM-00032" num="00032">
<claim-text>32. A communications system, comprising:
<claim-text>a base station having means for calculating a value from data, and transmission means for transmitting the value and data over at least one time slot; and</claim-text>
<claim-text>a subscriber station having means for consolidating a primary and a secondary packet control channel into one packet control channel, reception means for receiving the transmission, recalculation means for recalculating the value from the received data, and determination means for determining the number of time slots of the transmission from the calculated and recalculated values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00033" num="00033">
<claim-text>33. The communications system of <claim-ref idref="CLM-00032">claim 32</claim-ref> wherein the determination means determines the number of time slots of the transmission by comparing the calculated and recalculated values.</claim-text>
</claim>
<claim id="CLM-00034" num="00034">
<claim-text>34. The communications system of <claim-ref idref="CLM-00033">claim 33</claim-ref> wherein the recalculation means recalculates the value of the received data by performing the recalculation over a plurality of different numbers of time slots until the calculated and recalculated values compare.</claim-text>
</claim>
<claim id="CLM-00035" num="00035">
<claim-text>35. The communications system of <claim-ref idref="CLM-00032">claim 32</claim-ref> wherein the value comprises a cyclic redundancy check.</claim-text>
</claim>
<claim id="CLM-00036" num="00036">
<claim-text>36. The communications system of <claim-ref idref="CLM-00032">claim 32</claim-ref> further comprising encoder means for encoding the value and data before the transmission.</claim-text>
</claim>
<claim id="CLM-00037" num="00037">
<claim-text>37. The communications system of <claim-ref idref="CLM-00036">claim 36</claim-ref> further comprising means for adding an 8-bit encoder tail to the 8-bit value and 16-bit data, wherein the encoder means encodes the 8-bit value, 16-bit data and 8-bit encoder tail before the transmission, wherein said data comprises information subpackets addressed to a subscriber station via MAC ID.</claim-text>
</claim>
<claim id="CLM-00038" num="00038">
<claim-text>38. The communications system of <claim-ref idref="CLM-00036">claim 36</claim-ref> further comprising means for demultiplexing the encoded value and data into first and second sequences, and means for spreading each of the first and second sequences with a different code before the transmission.</claim-text>
</claim>
<claim id="CLM-00039" num="00039">
<claim-text>39. The communications system of <claim-ref idref="CLM-00038">claim 38</claim-ref> further comprising means for shifting one of the first and second sequences in time before the transmission.</claim-text>
</claim>
<claim id="CLM-00040" num="00040">
<claim-text>40. The communications system of <claim-ref idref="CLM-00032">claim 32</claim-ref> further comprising means for repeating the value and data twice before the transmission, and wherein the transmission means transmits the repeated value and data over two time slots.</claim-text>
</claim>
<claim id="CLM-00041" num="00041">
<claim-text>41. The communications system of <claim-ref idref="CLM-00032">claim 32</claim-ref> further comprising means for repeating the value and data twice, means for demultiplexing the repeated value and data into a first sequence on a first channel and a second sequence on a second channel, means for repeating the first sequence twice, and means for repeating the second sequence twice, and wherein the transmission means transmits each of the repeated first and second sequences on their respective first and second channels over four time slots.</claim-text>
</claim>
<claim id="CLM-00042" num="00042">
<claim-text>42. A receiving device, comprising:
<claim-text>consolidating a primary and a secondary packet control channel into one packet control channel comprising:</claim-text>
<claim-text>means for receiving a transmission over at least one time slot, the transmission comprising data and a value calculated from the data;</claim-text>
<claim-text>recalculation means for recalculating the value from the received data; and</claim-text>
<claim-text>determination means for determining the number of time slots of the transmission from the calculated and recalculated values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00043" num="00043">
<claim-text>43. The receiving device of <claim-ref idref="CLM-00042">claim 42</claim-ref> wherein the determination means determines the number of time slots of the transmission by comparing the calculated and recalculated values.</claim-text>
</claim>
<claim id="CLM-00044" num="00044">
<claim-text>44. The receiving device of <claim-ref idref="CLM-00043">claim 43</claim-ref> wherein the recalculation means recalculates the value of the received data by performing the recalculation over a plurality of different numbers of time slots until the calculated and recalculated values compare.</claim-text>
</claim>
<claim id="CLM-00045" num="00045">
<claim-text>45. The receiving device of <claim-ref idref="CLM-00042">claim 42</claim-ref> further comprising means for storing the received value and data, means for demodulating the value and data released from the memory, and means for decoding the demodulated value and data, wherein the recalculating means recalculates the value from the demodulated data and the determination means compares the demodulated value with the recalculated value.</claim-text>
</claim>
<claim id="CLM-00046" num="00046">
<claim-text>46. The receiving device of <claim-ref idref="CLM-00045">claim 45</claim-ref> further comprising means for releasing the received value and data from memory as a function of the comparison.</claim-text>
</claim>
<claim id="CLM-00047" num="00047">
<claim-text>47. The receiving device of <claim-ref idref="CLM-00042">claim 42</claim-ref> wherein the value comprises a cyclic redundancy check.</claim-text>
</claim>
<claim id="CLM-00048" num="00048">
<claim-text>48. A method of communicating, comprising:
<claim-text>consolidating a primary and a secondary packet control channel into one packet control channel comprising:</claim-text>
<claim-text>receiving a transmission over at least one time slot, the transmission comprising data and a value calculated from the data;</claim-text>
<claim-text>recalculating the value from the received data; and</claim-text>
<claim-text>determining the number of time slots of the transmission from the calculated and recalculated values.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00049" num="00049">
<claim-text>49. The method of <claim-ref idref="CLM-00048">claim 48</claim-ref> wherein determining the number of time slots of the transmission comprises comparing the calculated and recalculated values.</claim-text>
</claim>
<claim id="CLM-00050" num="00050">
<claim-text>50. The method of <claim-ref idref="CLM-00003">claim 3</claim-ref> further comprising the step of repeating a symbol sequence comprising:
<claim-text>puncturing symbols from a symbol sequence,</claim-text>
<claim-text>interleaving non-punctured of said symbols; and</claim-text>
<claim-text>repeating said non-punctured symbols, whereby a multi-slot transmission is generated.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
