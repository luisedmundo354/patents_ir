<us-patent-grant lang="EN" dtd-version="v4.2 2006-08-23" file="US07299311-20071120.XML" status="PRODUCTION" id="us-patent-grant" country="US" date-produced="20071106" date-publ="20071120">
<us-bibliographic-data-grant>
<publication-reference>
<document-id>
<country>US</country>
<doc-number>07299311</doc-number>
<kind>B1</kind>
<date>20071120</date>
</document-id>
</publication-reference>
<application-reference appl-type="utility">
<document-id>
<country>US</country>
<doc-number>11321508</doc-number>
<date>20051229</date>
</document-id>
</application-reference>
<us-application-series-code>11</us-application-series-code>
<us-term-of-grant>
<us-term-extension>120</us-term-extension>
</us-term-of-grant>
<classifications-ipcr>
<classification-ipcr>
<ipc-version-indicator><date>20060101</date></ipc-version-indicator>
<classification-level>A</classification-level>
<section>G</section>
<class>06</class>
<subclass>F</subclass>
<main-group>13</main-group>
<subgroup>18</subgroup>
<symbol-position>F</symbol-position>
<classification-value>I</classification-value>
<action-date><date>20071120</date></action-date>
<generating-office><country>US</country></generating-office>
<classification-status>B</classification-status>
<classification-data-source>H</classification-data-source>
</classification-ipcr>
</classifications-ipcr>
<classification-national>
<country>US</country>
<main-classification>710116</main-classification>
<further-classification>710243</further-classification>
<further-classification>710244</further-classification>
<further-classification>710113</further-classification>
</classification-national>
<invention-title id="d0e53">Apparatus and method for arbitrating for a resource group with programmable weights</invention-title>
<references-cited>
<citation>
<patcit num="00001">
<document-id>
<country>US</country>
<doc-number>5440698</doc-number>
<kind>A</kind>
<name>Sindhu et al.</name>
<date>19950800</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>709225</main-classification></classification-national>
</citation>
<citation>
<patcit num="00002">
<document-id>
<country>US</country>
<doc-number>5640519</doc-number>
<kind>A</kind>
<name>Langendorf et al.</name>
<date>19970600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710111</main-classification></classification-national>
</citation>
<citation>
<patcit num="00003">
<document-id>
<country>US</country>
<doc-number>2001/0043612</doc-number>
<kind>A1</kind>
<name>Johnson et al.</name>
<date>20011100</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>370462</main-classification></classification-national>
</citation>
<citation>
<patcit num="00004">
<document-id>
<country>US</country>
<doc-number>2003/0115393</doc-number>
<kind>A1</kind>
<name>Kim</name>
<date>20030600</date>
</document-id>
</patcit>
<category>cited by examiner</category>
<classification-national><country>US</country><main-classification>710240</main-classification></classification-national>
</citation>
</references-cited>
<number-of-claims>23</number-of-claims>
<us-exemplary-claim>1</us-exemplary-claim>
<us-field-of-classification-search>
<classification-national>
<country>US</country>
<main-classification>710113</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>710116</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>710243</main-classification>
</classification-national>
<classification-national>
<country>US</country>
<main-classification>710244</main-classification>
</classification-national>
</us-field-of-classification-search>
<figures>
<number-of-drawing-sheets>12</number-of-drawing-sheets>
<number-of-figures>12</number-of-figures>
</figures>
<parties>
<applicants>
<applicant sequence="001" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Sepeda</last-name>
<first-name>Chad M.</first-name>
<address>
<city>Savage</city>
<state>MN</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="002" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Vartti</last-name>
<first-name>Kelvin S.</first-name>
<address>
<city>Hugo</city>
<state>MN</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
<applicant sequence="003" app-type="applicant-inventor" designation="us-only">
<addressbook>
<last-name>Weber</last-name>
<first-name>Ross M.</first-name>
<address>
<city>Coon Rapids</city>
<state>MN</state>
<country>US</country>
</address>
</addressbook>
<nationality>
<country>omitted</country>
</nationality>
<residence>
<country>US</country>
</residence>
</applicant>
</applicants>
<agents>
<agent sequence="01" rep-type="attorney">
<addressbook>
<last-name>Johnson</last-name>
<first-name>Charles A.</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="02" rep-type="attorney">
<addressbook>
<last-name>Marley</last-name>
<first-name>Robert</first-name>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
<agent sequence="03" rep-type="attorney">
<addressbook>
<orgname>Crawford Maunu PLLC</orgname>
<address>
<country>unknown</country>
</address>
</addressbook>
</agent>
</agents>
</parties>
<assignees>
<assignee>
<addressbook>
<orgname>Unisys Corporation</orgname>
<role>02</role>
<address>
<city>Blue Bell</city>
<state>PA</state>
<country>US</country>
</address>
</addressbook>
</assignee>
</assignees>
<examiners>
<primary-examiner>
<last-name>Auve</last-name>
<first-name>Glenn A.</first-name>
<department>2111</department>
</primary-examiner>
</examiners>
</us-bibliographic-data-grant>
<abstract id="abstract">
<p id="p-0001" num="0000">A system and method for arbitrating for access to a resource group between agents according to a respective programmable weight for each agent. For each agent, a programmable mapping module selectively couples a respective arbitration handshake signal of the agent to one or more arbitration ports, and the number of the coupled arbitration ports for the agent is the respective programmable weight. A selection module selects one of the arbitration ports in response to a priority ranking of the arbitration ports, and access to the resource group is granted to the agent that has the respective arbitration handshake signal that is selectively coupled by the programmable mapping module to the selected arbitration port. A ranking module provides the priority ranking of the arbitration ports and updates the priority ranking in response to the selection module selecting the selected arbitration port.</p>
</abstract>
<drawings id="DRAWINGS">
<figure id="Fig-EMI-D00000" num="00000">
<img id="EMI-D00000" he="174.58mm" wi="238.00mm" file="US07299311-20071120-D00000.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00001" num="00001">
<img id="EMI-D00001" he="224.62mm" wi="161.71mm" orientation="landscape" file="US07299311-20071120-D00001.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00002" num="00002">
<img id="EMI-D00002" he="238.17mm" wi="174.75mm" orientation="landscape" file="US07299311-20071120-D00002.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00003" num="00003">
<img id="EMI-D00003" he="213.78mm" wi="172.13mm" orientation="landscape" file="US07299311-20071120-D00003.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00004" num="00004">
<img id="EMI-D00004" he="191.18mm" wi="172.80mm" orientation="landscape" file="US07299311-20071120-D00004.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00005" num="00005">
<img id="EMI-D00005" he="247.06mm" wi="188.98mm" orientation="landscape" file="US07299311-20071120-D00005.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00006" num="00006">
<img id="EMI-D00006" he="159.77mm" wi="184.91mm" orientation="landscape" file="US07299311-20071120-D00006.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00007" num="00007">
<img id="EMI-D00007" he="250.19mm" wi="114.47mm" orientation="landscape" file="US07299311-20071120-D00007.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00008" num="00008">
<img id="EMI-D00008" he="224.54mm" wi="159.51mm" orientation="landscape" file="US07299311-20071120-D00008.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00009" num="00009">
<img id="EMI-D00009" he="229.36mm" wi="181.69mm" orientation="landscape" file="US07299311-20071120-D00009.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00010" num="00010">
<img id="EMI-D00010" he="234.78mm" wi="181.36mm" orientation="landscape" file="US07299311-20071120-D00010.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00011" num="00011">
<img id="EMI-D00011" he="252.48mm" wi="199.81mm" orientation="landscape" file="US07299311-20071120-D00011.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
<figure id="Fig-EMI-D00012" num="00012">
<img id="EMI-D00012" he="247.31mm" wi="181.95mm" orientation="landscape" file="US07299311-20071120-D00012.TIF" alt="embedded image" img-content="drawing" img-format="tif"/>
</figure>
</drawings>
<description id="description">
<?BRFSUM description="Brief Summary" end="lead"?>
<heading id="h-0001" level="1">FIELD OF THE INVENTION</heading>
<p id="p-0002" num="0001">This invention relates in general to computing systems, and more particularly to an apparatus and method for arbitrating for resources in a computing system.</p>
<heading id="h-0002" level="1">BACKGROUND</heading>
<p id="p-0003" num="0002">In the field of computing systems there is often the need to share access to a resource between multiple agents. An agent needing access to a resource may be referred to as a “requester” for the resource. When there is more than one requester requesting access to a resource, a selection must be made to determine which requester is currently allowed access the resource. Therefore, arbitration for a resource is generally the selection of agents to be allowed access to the resource. For example, there may be several agents needing to perform a transaction requiring access to the resource of a shared computer bus. Arbitration for the computer bus is the selection of the agent that is allowed to issue the next transaction request onto the computer bus.</p>
<p id="p-0004" num="0003">Arbitration schemes generally attempt to provide some level of fairness in the allocation of resources. However, many prior arbitration schemes are vulnerable to arbitration problems such as “lock out” and/or “deadlock.” More particularly, a competing interest in arbitration schemes is the fact that some requests for a resource may be of a higher priority than others, yet lock out or deadlock may be an undesirable byproduct of placing a heavy emphasis on higher priority requests. For example, if one or more agents can monopolize access to the resource, then the remaining agents may be “locked out” from accessing the resource. Lock out of any agent may cause the computing system to cease making progress on some of the computations being performed by the computing system. Lock out may also cause the entire computing system to cease making any progress at all, a condition denoted system “deadlock.” Lock out and especially deadlock must generally be avoided. Prior arbitration schemes are vulnerable to lock out and deadlock.</p>
<p id="p-0005" num="0004">In prior art arbitration systems, it is often the case that an emphasis is placed on either a fairness to the requesters or deference to high priority requests. Systems placing an emphasis on fairness may not, however, adequately process higher priority requests. For example, a round robin arbitration scheme would grant access to a resource equally between low and high priority requests, which may be undesirable. On the other hand, complete deference to high priority requests may cause lock out and in some cases deadlock for lower priority requests, which may be equally undesirable.</p>
<p id="p-0006" num="0005">Accordingly, there is a need in the computing systems industry for an improved arbitration scheme that addresses the aforementioned and other shortcomings of the prior art. The present invention fulfills these and other needs, and offers other advantages over prior art arbitration approaches.</p>
<heading id="h-0003" level="1">SUMMARY</heading>
<p id="p-0007" num="0006">To overcome limitations in the prior art described above, and to overcome other limitations that will become apparent upon reading and understanding the present specification, the present invention discloses a system, apparatus, and method for programmable allocation of accesses to a resource group among multiple agents. The present invention allows allocation of access according to a respective programmable weight for each agent. In this manner, high priority requesters can be allocated a greater share of the access to the resource group than low priority requesters while maintaining fairness that prevents lockout and deadlock.</p>
<p id="p-0008" num="0007">In accordance with one embodiment of the invention, an apparatus is provided for arbitrating for access to a resource group between agents according to a respective programmable weight for each agent. For each agent, a programmable mapping module selectively couples a respective arbitration handshake signal of the agent to one or more arbitration ports, and the number of the coupled arbitration ports for the agent is the respective programmable weight. A selection module selects one of the arbitration ports in response to a priority ranking of the arbitration ports, and access to the resource group is granted to the agent that has the respective arbitration handshake signal that is selectively coupled by the programmable mapping module to the selected arbitration port. A ranking module provides the priority ranking of the arbitration ports and updates the priority ranking in response to the selection module selecting the selected arbitration port.</p>
<p id="p-0009" num="0008">In accordance with another embodiment of the invention, a method is provided for programmable allocation of a sequence of accesses to a resource group among a plurality of agents. Each agent is mapped to one or more arbitration ports according to a programmable map, with the number of the arbitration ports for each agent being a respective weight for the agent. The number of the arbitration ports is generally greater than a number of the agents. An allocation of the sequence of the accesses to the resource group among the arbitration ports is fairly determined using a priority ranking of the arbitration ports. The priority ranking of the arbitration ports is dynamically determined by updating the priority ranking for each of access to the resource group of the sequence. The allocation of the sequence of accesses is reverse mapped from the arbitration ports to the agents according to the programmable map.</p>
<p id="p-0010" num="0009">These and various other advantages and features of novelty which characterize the invention are pointed out with particularity in the claims annexed hereto and form a part hereof. However, for a better understanding of the invention, its advantages, and the objects obtained by its use, reference should be made to the drawings which form a further part hereof, and to accompanying descriptive matter, in which there are illustrated and described specific examples of a apparatus and method in accordance with the invention.</p>
<?BRFSUM description="Brief Summary" end="tail"?>
<?brief-description-of-drawings description="Brief Description of Drawings" end="lead"?>
<description-of-drawings>
<heading id="h-0004" level="1">BRIEF DESCRIPTION OF THE DRAWINGS</heading>
<p id="p-0011" num="0010">The invention is described in connection with the embodiments illustrated in the following diagrams.</p>
<p id="p-0012" num="0011"><figref idref="DRAWINGS">FIG. 1</figref> is a system diagram of an exemplary embodiment of the present invention.</p>
<p id="p-0013" num="0012"><figref idref="DRAWINGS">FIG. 2</figref> is a system diagram illustrating arbitration with requesting and non-requesting agents in accordance with various embodiments of the invention.</p>
<p id="p-0014" num="0013"><figref idref="DRAWINGS">FIG. 3</figref> is a block diagram of an arbitration module with the selected agent being mapped to more than one port in accordance with various embodiments of the invention.</p>
<p id="p-0015" num="0014"><figref idref="DRAWINGS">FIG. 4</figref> is a block diagram of an arbitration module with a null agent in accordance with various embodiments of the invention.</p>
<p id="p-0016" num="0015"><figref idref="DRAWINGS">FIG. 5</figref> is a flow chart of a process for allocating a sequence of accesses to a resource group in accordance with various embodiments of the invention.</p>
<p id="p-0017" num="0016"><figref idref="DRAWINGS">FIG. 6</figref> is a flow chart illustrating mapping and prioritization in accordance with various embodiments of the invention.</p>
<p id="p-0018" num="0017"><figref idref="DRAWINGS">FIG. 7</figref> is a block diagram of an arbitration module in accordance with various embodiments of the invention.</p>
<p id="p-0019" num="0018"><figref idref="DRAWINGS">FIG. 8</figref> is a block diagram of request mapping logic of an arbitration module in accordance with various embodiments of the invention.</p>
<p id="p-0020" num="0019"><figref idref="DRAWINGS">FIG. 9</figref> is a block diagram of priority selection logic of an arbitration module in accordance with various embodiments of the invention.</p>
<p id="p-0021" num="0020"><figref idref="DRAWINGS">FIG. 10</figref> is a schematic diagram of acknowledgement mapping logic of an arbitration module in accordance with various embodiments of the invention.</p>
<p id="p-0022" num="0021"><figref idref="DRAWINGS">FIG. 11</figref> is a schematic diagram of an alternative arbitration module merging the logic for mapping and priority selection in accordance with various embodiments of the invention.</p>
<p id="p-0023" num="0022"><figref idref="DRAWINGS">FIG. 12</figref> is a schematic diagram showing programming paths for the request mapping logic in accordance with various embodiments of the invention.</p>
</description-of-drawings>
<?brief-description-of-drawings description="Brief Description of Drawings" end="tail"?>
<?DETDESC description="Detailed Description" end="lead"?>
<heading id="h-0005" level="1">DETAILED DESCRIPTION</heading>
<p id="p-0024" num="0023">In the following description of various exemplary embodiments, reference is made to the accompanying drawings which form a part hereof, and in which is shown by way of illustration various embodiments in which the invention may be practiced. It is to be understood that other embodiments may be utilized, as structural and operational changes may be made without departing from the scope of the present invention.</p>
<p id="p-0025" num="0024">Generally, the present invention provides methods and modules for arbitrating among agents for access to a shared resource group, with an arbitration weight accorded to each agent and access apportioned to each agent according to the respective agent's weight. The arbitration weights correspond to values that may be programmable in certain embodiments of the invention. Overall system performance may be improved through appropriate selection of the arbitration weight for each agent. Arbitration is guaranteed to avoid lock out and deadlock for any programmed combination of arbitration weights, while still allowing a desired level of priority differentiation based on the relative arbitration weights.</p>
<p id="p-0026" num="0025"><figref idref="DRAWINGS">FIG. 1</figref> is a system diagram illustrating an exemplary embodiment of an arbitration scheme in accordance with the principles of the present invention. A number of agents <b>102</b> are vying for access to a resource group <b>104</b>. The resource group <b>104</b> represents any one or more resources to which the agents <b>102</b> are seeking access, such as a bus(es), memory(s), execution pipelines, etc. The arbitration module <b>106</b> according to one embodiment of the present invention is used to apportion access to the resource group <b>104</b> among the agents <b>102</b>. A programmable mapping module <b>108</b> is used to map the agents <b>102</b> to a particular one or more of the arbitration ports <b>110</b>. The port selection module <b>112</b> allocates access to the resource group <b>104</b> to one of the arbitration ports <b>110</b> at a time, according to the priority ranking of the arbitration ports provided by the priority ranking module <b>114</b>. The port allocated access is mapped back to one of the agents <b>102</b> by the mapping module <b>108</b>, whereby that agent is allocated access to the resource group <b>104</b>.</p>
<p id="p-0027" num="0026">As indicated above, the mapping module <b>108</b> is used to map between agents <b>102</b> and arbitration ports <b>110</b>, such that agents <b>102</b> are mapped to arbitration ports <b>110</b>, and arbitration ports <b>110</b> are correspondingly mapped to agents <b>102</b>. In accordance with one embodiment of the invention, there are more ports <b>110</b> than agents <b>102</b>, such that the mapping module <b>108</b> maps each of the agents <b>102</b> to at least one, and in some cases more than one of the ports <b>110</b>. The arbitration weight of each of the agents <b>102</b> corresponds to the number of the ports <b>110</b> to which the agent is mapped. Often the mapping module <b>108</b> correspondingly maps each of the ports <b>110</b> back to exactly one of the agents <b>102</b>. In general the mapping module <b>108</b> corresponding maps each of the ports <b>110</b> back to one or none of the agents <b>102</b>. As is discussed more fully below, any of the ports <b>110</b> that is not mapped to an agent <b>102</b> may be mapped to an internal agent of the arbitration module <b>106</b> denoted the null requester.</p>
<p id="p-0028" num="0027">In one embodiment the port selector <b>112</b> allocates access to the port <b>110</b> that has the highest priority ranking as assigned by the priority ranking module <b>114</b>. After the port allocated access is mapped back to one of the agents <b>102</b> by the mapping module <b>108</b>, the ranks for the ports <b>110</b> are modified in the priority ranking module <b>114</b> by moving the port allocated access to the lowest priority in one embodiment of the invention. The modification of port ranking in this manner is discussed more fully below.</p>
<p id="p-0029" num="0028">The exemplary embodiment of <figref idref="DRAWINGS">FIG. 1</figref> thus illustrates one manner in which requesting agents <b>102</b> can gain access to one or more resources depicted as the resource group <b>104</b>. Because one or more of the agents <b>102</b> can be mapped to more than one of the ports <b>110</b>, and because arbitration weighting is dependent on the number of ports to which the agents are mapped, some agents can be accorded a greater arbitration weight than others. For example, a first one of the agents <b>102</b> may be mapped to one of the ports <b>110</b>, while a second of the agents <b>102</b> may be mapped to two of the ports <b>110</b>. The “arbitration weight” accorded to the second agent is therefore twice that of the first agent, as the second agent occupies two of the ports. Because each of the ports <b>110</b> will ultimately be allowed access to the resource group <b>104</b>, the second agent may be granted access to the resource group two times for every one time that the first agent will be granted access to the resource group <b>104</b>. This allows different ones of the agents <b>102</b> to have different resource allocation weightings relative to one another, thereby allowing some agents to be granted access to the resource group <b>104</b> more than others. In addition, the priority ranking module <b>114</b> adjusts the relative rankings of the ports <b>110</b>, to ensure that each of the agents <b>102</b> is granted access to the resource group <b>104</b>.</p>
<p id="p-0030" num="0029"><figref idref="DRAWINGS">FIG. 2</figref> illustrates another embodiment of an arrangement for arbitrating for access to a resource group <b>104</b> by agents <b>102</b>. The agents <b>102</b> include a plurality of agents <b>124</b>, <b>126</b>, <b>128</b>, <b>130</b>, and <b>132</b>, which collectively share access to the resource group <b>104</b>. The arbitration module <b>106</b> determines which of the agents <b>102</b> is allocated access to the resource group <b>104</b> at a particular time. For example, arbitration module <b>106</b> may allocate access to agent-<b>3</b> (<b>128</b>) using arbitration handshake signal on line <b>120</b>, and in response agent-<b>3</b> (<b>128</b>) may issue a transaction on line (<b>122</b>) to resource group <b>104</b>. For purposes of the example shown in <figref idref="DRAWINGS">FIG. 2</figref>, agent-<b>2</b> (<b>126</b>) and agent-<b>3</b> (<b>128</b>) are currently requesting access to the resource group <b>104</b>, while agent-<b>1</b> (<b>124</b>), agent-<b>4</b> (<b>130</b>), and agent-m (<b>132</b>) are not currently requesting access to the resource group <b>104</b>.</p>
<p id="p-0031" num="0030">The mapping module <b>108</b> associated with the arbitration module <b>106</b> maps the various agents <b>102</b> and corresponding arbitration handshake, such as arbitration handshake signal <b>120</b> for agent-<b>3</b> (<b>128</b>), to particular ones of the arbitration ports <b>110</b>. The ports <b>110</b> of <figref idref="DRAWINGS">FIG. 2</figref> include ports <b>142</b>, <b>144</b>, <b>146</b>, <b>148</b>, <b>150</b>, <b>152</b>, <b>154</b>, and <b>156</b>. The priority ranking module <b>114</b> assigns a priority rank to each of the ports <b>110</b>.</p>
<p id="p-0032" num="0031">The mapping module <b>108</b> maps agent-<b>1</b> (<b>124</b>) to port-<b>2</b> (<b>144</b>) and correspondingly maps port-<b>2</b> (<b>144</b>) to agent-<b>1</b> (<b>124</b>). Agent-<b>1</b> (<b>124</b>) has a weight of one because agent-<b>1</b> (<b>124</b>) is mapped to one port. Agent-<b>2</b> (<b>126</b>) is mapped to two ports, namely port-<b>1</b> (<b>142</b>) and port-<b>3</b> (<b>146</b>), and therefore has a weight of two. Agent-<b>3</b> (<b>128</b>) is mapped to three ports, namely port-<b>4</b> (<b>148</b>), port-<b>5</b> (<b>150</b>), and port-<b>6</b> (<b>152</b>), and therefore has a weight of three. Agent-<b>4</b> (<b>130</b>) is mapped to port-<b>7</b> (<b>154</b>) and agent-m (<b>132</b>) is mapped to port-n (<b>156</b>), whereby each of these agents has a weight of one because each is mapped to only one port.</p>
<p id="p-0033" num="0032">The following is a description of an operational example of the arbitration module <b>106</b> in accordance with one embodiment of the invention. As seen in <figref idref="DRAWINGS">FIG. 2</figref>, the priority ranking module <b>114</b> associates a priority ranking with each of the various ports <b>110</b>. These priorities indicate which of the ports <b>110</b> will be granted access to the resource group <b>104</b> relative to the other ports <b>110</b>. For example, the priority-<b>1</b> (<b>160</b>) block represents the top priority, priority-<b>2</b> (<b>162</b>) represents the next highest priority, and so forth through priority-n (<b>166</b>) which represents the lowest priority. The priority ranking changes during the arbitration procedure, which is described in greater detail below.</p>
<p id="p-0034" num="0033">According to one embodiment of the invention, the arbitration module <b>106</b> first considers the top priority port provided by priority ranking <b>114</b> as priority-<b>1</b> (<b>160</b>) of port-<b>7</b> (<b>154</b>). Mapping module <b>108</b> maps this port to agent-<b>4</b> (<b>130</b>) which is not requesting access to the resource group <b>104</b>. Because agent-<b>4</b> (<b>130</b>) is not requesting access, it is not allocated access. The arbitration module <b>106</b> instead considers the next highest priority port provided by priority ranking module <b>114</b> as priority-<b>2</b> (<b>162</b>) of port-n (<b>156</b>) which has been mapped by mapping module <b>108</b> to agent-m (<b>132</b>). Agent-m (<b>132</b>) is also not currently requesting access to the resource group <b>104</b>, so the arbitration module <b>106</b> next considers the next highest priority port of priority-<b>3</b> (<b>164</b>) of port-<b>5</b> (<b>150</b>) which is mapped to agent-<b>3</b> (<b>128</b>). Agent-<b>3</b> (<b>128</b>) is requesting access so it is allocated access to the resource group <b>104</b> by arbitration module <b>106</b>.</p>
<p id="p-0035" num="0034">The resource group <b>104</b> includes at least one resource. An example of the resource group is a computer bus. The computer bus may have multiple agents, such as several processors, a memory controller, and an I/O controller that may need to issue transactions on the computer bus. Assume for purposes of example that performance studies have determined that system performance is optimized when each processor is allocated one share of access to the computer bus, the memory controller is allocated three shares, and the I/O controller is allocated two shares. An embodiment of the invention permits access to the computer bus to be weighted in such a manner to optimize system performance. It will be appreciated that arbitration weighting is not necessarily the same as utilization weighting. For the computer bus there may be transactions of various lengths. An agent with a low arbitration weighting that issues only long transactions on the bus may utilize more bus cycles than an agent with a high arbitration weighting that issues only short transactions.</p>
<p id="p-0036" num="0035">The resource group <b>104</b> may represent other resources, such as a cache control pipeline. For example, the agents sharing access to the cache control pipeline may include two front side busses and a memory controller. Memory read operations issued from processors and I/O controllers on either of the front side busses are entered into the cache control pipeline to check whether the memory read can be completed by way of the cache instead of by slower memory. Memory read operations in the cache control pipeline may spawn speculative memory reads by the cache control pipeline. Memory write operations issued from processors and I/O controllers on either of the front side busses are entered into the cache control pipeline to check whether stale data must be evicted from the cache upon writing the data to memory. Data responses from the memory controller for speculative memory reads are entered into the cache control pipeline to write the data returned into cache. The cache control pipeline may have several pipeline stages. The first stage may involve a tag read stage where the cache tag is read and checked for a matching hit with the address of the transaction. The second stage may be a data access stage. For memory read operations resulting in a cache hit, the data is read from the cache in the data access stage. For data responses for speculative memory reads from the memory controller, the data response is written into the cache in the data access stage. The third pipeline stage may be a tag access stage where either the tag is written for data responses or evictions, or the tag is read at the location for a speculative read. In the forth and last pipeline stage, any speculative read is issued. There can be up to four distinct transactions in such an exemplary cache control pipeline at any moment. Arbitration for access to the cache control pipeline involves arbitration for entry into the pipeline at the first stage. Allocation of entry into the first stage of the pipeline inherently allocates access to later stages of the pipeline at later time steps. Each of the stages of the pipeline can be considered a resource, and collectively the stages form a resource group <b>104</b>. Therefore, arbitrating for access to such a cache control pipeline may involve arbitrating for a resource group <b>104</b>.</p>
<p id="p-0037" num="0036">The agents <b>102</b> are shown with each having a direct connection to the resource group <b>104</b> as is often the case for a computer bus. For a pipeline such as a cache control pipeline, the agents may instead access the pipeline through a selector that is steered to allow the selected agent to supply the transaction to enter the pipeline. Some pipelines may temporarily block the acceptance of new transactions. It will be appreciated that such blockage temporarily suspends arbitration for the pipeline by the arbitration module <b>106</b>.</p>
<p id="p-0038" num="0037"><figref idref="DRAWINGS">FIG. 3</figref> shows an embodiment of the arbitration module <b>106</b> where one of the agents is mapped to two ports, and this agent is selected by the arbitration module <b>106</b>. The mapping module <b>108</b> maps the agents <b>174</b>, <b>176</b>, and <b>178</b> to the arbitration ports <b>180</b>, <b>182</b>, <b>184</b>, and <b>186</b>. Table <b>188</b> shows the state of the arbitration module <b>106</b> before arbitration and table <b>190</b> shows the state of the arbitration module <b>106</b> after arbitration.</p>
<p id="p-0039" num="0038">The mapping module <b>108</b> maps agent-<b>1</b> (<b>174</b>) to two ports port-a (<b>180</b>) and port-c (<b>184</b>), agent-<b>2</b> (<b>176</b>) maps to port-b (<b>182</b>), and agent-<b>3</b> (<b>178</b>) maps to port-d (<b>186</b>). A request and an acknowledge signal are associated with each agent <b>174</b>, <b>176</b>, <b>178</b> and each port <b>180</b>, <b>182</b>, <b>184</b>, and <b>186</b>. Agent-<b>1</b> (<b>174</b>) is requesting access on its request signal and this access request is mapped to both port-a (<b>180</b>) and port-c (<b>184</b>). Agent-<b>2</b> (<b>176</b>) is not requesting access, so port-b (<b>182</b>) is not requesting access. Agent-<b>3</b> (<b>178</b>) is requesting access, so port-d (<b>186</b>) is requesting access. Table <b>188</b> shows that the top ranking port is port-b (<b>182</b>), mapped to agent-<b>2</b> (<b>176</b>) which is not requesting access. So access is not allocated to port-b (<b>182</b>) and agent-<b>2</b> (<b>176</b>). The next highest ranking port at priority rank <b>2</b> is port-c (<b>184</b>), mapped to agent-<b>1</b> (<b>174</b>) which is requesting access. So access is allocated to port-c (<b>184</b>) and agent-<b>1</b> (<b>174</b>) as communicated over the acknowledgement signals of port-c (<b>184</b>) and agent-<b>1</b> (<b>174</b>).</p>
<p id="p-0040" num="0039">After allocating access to agent-<b>1</b> (<b>174</b>) via port-c (<b>184</b>), the state before arbitration shown in table <b>188</b> is modified to yield the state after arbitration shown in table <b>190</b>. The row of the port selected by the arbitration module <b>106</b>, port-c (<b>184</b>), is row <b>192</b> in table <b>188</b>. The rows of table <b>188</b> above selection row <b>192</b> are unmodified in table <b>190</b>. Selection row <b>192</b> of table <b>188</b> is moved to the lowest priority rank of row <b>194</b> in table <b>190</b>. The rows of table <b>188</b> below selection row <b>192</b> are moved up one priority rank in table <b>190</b>. From table <b>190</b> note for the next arbitration that if agent-<b>1</b> (<b>174</b>) and agent-<b>3</b> (<b>178</b>) are still the only agents requesting access then access is again allocated to agent-<b>1</b> (<b>174</b>) via port-a (<b>180</b>). This illustrates that mapping module agent-<b>1</b> (<b>174</b>) to two ports <b>180</b> and <b>184</b> results in agent-<b>1</b> receiving an arbitration weighting of two. While agent-<b>1</b> (<b>174</b>) and agent-<b>3</b> (<b>178</b>) remain the only agents continuously requesting access, agent-<b>1</b> (<b>174</b>) is allocated two accesses for every one access allocated to agent-<b>3</b> (<b>178</b>).</p>
<p id="p-0041" num="0040">While individual arbitration acknowledge signals are shown for each agent <b>174</b>, <b>176</b>, <b>178</b>, it will be appreciated that a single arbitration acknowledge bus encoding an identifier for the selected agent is an equivalent means of providing the function of arbitration acknowledge.</p>
<p id="p-0042" num="0041"><figref idref="DRAWINGS">FIG. 4</figref> shows an embodiment of the arbitration module <b>106</b> illustrating a mapping module <b>108</b> with a null agent <b>204</b>. Table <b>206</b> shows the state before arbitration of the arbitration module <b>106</b> and table <b>208</b> shows the state after arbitration of the arbitration module <b>106</b>. The null agent <b>204</b> is an agent that never requests access to the resource group and is usually internal to the arbitration module <b>106</b>. It will be appreciated that an agent external to the arbitration module <b>106</b> may be a null agent. An internal null agent <b>204</b> is created by a mapping module <b>108</b> that maps no external agent to one or more of the ports. Port-d (<b>210</b>) is mapped by mapping module <b>108</b> to no external agents so port-d (<b>210</b>) is mapped to the null agent <b>204</b>, so requests for access are never made via port-d (<b>210</b>). In this example only agent-<b>3</b> is requesting access via request signal req-<b>3</b> (<b>212</b>) mapped to port-c (<b>214</b>), so only port-c (<b>214</b>) is requesting access via request signal req-c (<b>216</b>). From table <b>206</b> the highest priority ranking port requesting access is the only port requesting access of port-c (<b>214</b>) at priority rank <b>4</b>. So port-c (<b>214</b>) and mapped agent-<b>3</b> is allocated access as communicated via signals ack-c (<b>218</b>) and ack-<b>3</b> (<b>220</b>). The state before arbitration of the arbitration module <b>106</b> shown in table <b>206</b> is modified after allocation to yield the state after arbitration shown in table <b>208</b>. The selection row <b>222</b> of port-c (<b>214</b>) which is allocated access is moved to the lowest priority row <b>224</b>—the same row—and the rows above the selection row <b>222</b> are not modified.</p>
<p id="p-0043" num="0042">In one embodiment the mapping module <b>108</b> is programmable to allow system performance to be improved after manufacture. The null agent <b>204</b> increases the flexibility of a programmable mapping module <b>108</b>. For an arbitration module with 3 agents and 4 arbitration ports that did not allow a null agent, one of the agents must be assigned a weight of 2 while the remaining agents should be assigned a weight of 1. The arbitration module <b>106</b> allowing the null agent <b>204</b> permits an additional weighting possibility of all agents assigned a weight of 1 as shown.</p>
<p id="p-0044" num="0043"><figref idref="DRAWINGS">FIG. 5</figref> is a flow chart of a process for allocating a sequence of accesses to a resource group in accordance with various embodiments of the invention. At step <b>230</b>, a programmable map that maps agents to arbitration ports is programmed. The programming of the map sets the respective weight for each agent, with the weight for each agent being the number of ports to which the agent is mapped. At step <b>232</b>, each agent is mapped to a respective one or more of the ports according to the programmable map. At step <b>234</b>, a priority ranking of the arbitration ports is used to fairly determine an allocation of the sequence of accesses among the arbitration ports. The priority ranking may assign one of the rank values from 1 to n to each of the ports where n is the number of ports. At step <b>236</b>, the priority ranking is dynamically updated for each access. The priority ranking may be updated for an access by moving the port allocated access to the lowest priority. At step <b>238</b>, the allocation of the sequence of access is mapped back to the agents according to the programmable map. For an access allocated to a particular port, the access is allocated to the agent that is mapped to the particular port. At step <b>239</b>, the resource group is accessed according to the allocation of the sequence of accesses.</p>
<p id="p-0045" num="0044"><figref idref="DRAWINGS">FIG. 6</figref> shows the flow chart of an embodiment of a process for the invention. At step <b>240</b>, the agents collectively provide zero or more arbitration requests. If no agent makes an arbitration request then access is not allocated to the resource group. At step <b>242</b>, each arbitration request from an agent is mapped to one or more port requests according to the weighting assigned to the agent. The values of the mapping registers <b>244</b> may be used to determine the mapping of arbitration requests to port requests, and hence the weighting. At step <b>246</b>, the requesting port with the highest priority rank is selected by and a port acknowledge is generated for that port. The priority ranks of each port may be provided by the priority registers <b>248</b>. At step <b>250</b>, the selected port is moved to the lowest priority rank in the priority registers <b>248</b>, the ports with priority rank above the rank of the selected port, if any, are not modified in the priority registers <b>248</b>, the ports with priority rank below rank of the selected port, if any, are moved up one priority level in the priority registers <b>248</b>. At step <b>252</b>, the port acknowledge for the port selected in step <b>246</b> is mapped back to an arbitration acknowledge. At step <b>254</b>, the arbitration acknowledge is sent to the appropriate agent to allocate access to the resource group to that agent.</p>
<p id="p-0046" num="0045"><figref idref="DRAWINGS">FIG. 7</figref> is a top level schematic diagram of an embodiment of the invention. The top level schematic diagram includes the request mapping logic <b>260</b>, the priority selection logic <b>262</b>, and the acknowledge mapping logic <b>264</b>. The request mapping logic <b>260</b> maps arbitration requests <b>266</b> from agents to port requests <b>268</b>. The priority selection logic <b>262</b> selects the one of the port requests <b>268</b> with highest priority to acknowledge with a port acknowledge <b>270</b>. The acknowledge mapping logic <b>264</b> maps the port acknowledge <b>270</b> to an arbitration acknowledge <b>272</b> for an agent, and that agent is allocated access to the resource group. The mapping registers <b>274</b> may control the mapping between agents and ports for both the mapping of requests by the request mapping logic <b>260</b> and the mapping of acknowledges by the acknowledge mapping logic <b>264</b>. The mapping registers <b>274</b> are shown internal to the request mapping logic <b>260</b>, although they may be located elsewhere. It will be appreciated that separate mapping registers may be provided for the request mapping logic <b>260</b> and the acknowledge mapping logic <b>264</b> having values that are kept consistent with an overall mapping between agents and ports. The priority selection logic <b>262</b> may use the priority registers <b>276</b> to determine the selected port.</p>
<p id="p-0047" num="0046"><figref idref="DRAWINGS">FIG. 8</figref> shows an embodiment of the request mapping logic. The request mapping logic maps arbitration requests req-<b>1</b> (<b>300</b>), req-<b>2</b> (<b>302</b>), and req-<b>3</b> (<b>304</b>) from agents to port requests req-a (<b>306</b>), req-b (<b>308</b>), req-c (<b>310</b>), and req-d (<b>312</b>). There is a respective selector for each port sel-a (<b>314</b>), sel-b (<b>316</b>), sel-c (<b>318</b>), and sel-d (<b>320</b>) controlled respectively by mapping registers a-map <b>322</b>, b-map <b>324</b>, c-map <b>326</b>, and d-map <b>328</b>. The registers a-map <b>322</b> and c-map <b>326</b> both contain the selector value of ‘1’ for arbitration request req-<b>1</b> (<b>300</b>) so this arbitration request is mapped to both req-a (<b>306</b>) and req-c (<b>310</b>). Because agent-<b>1</b> is requesting access with a req-<b>1</b> (<b>300</b>) value of ‘1’, both req-a (<b>306</b>) and req-c (<b>310</b>) are given active port requests with a value of ‘1’. Arbitration request req-<b>2</b> (<b>302</b>) is mapped to port request req-b (<b>308</b>) by selection sel-b (<b>316</b>) because mapping register b-map <b>324</b> contains the value ‘2’ for req-<b>2</b> (<b>302</b>). Because agent-<b>2</b> is not requesting access with a req-<b>2</b> (<b>302</b>) value of ‘0’, req-b (<b>308</b>) has an inactive port request with a value of ‘0’. Arbitration request req-<b>3</b> <b>304</b> is mapped to port request req-d (<b>312</b>) by selection sel-d (<b>320</b>) because mapping register d-map <b>328</b> contains the value ‘3’ for req-<b>3</b> (<b>304</b>). Because agent-<b>3</b> is requesting access with a req-<b>3</b> (<b>304</b>) value of ‘1’, req-d (<b>312</b>) has an active port request with a value of ‘1’.</p>
<p id="p-0048" num="0047">It will be appreciated that the selectors <b>314</b>, <b>316</b>, <b>318</b>, and <b>320</b> may use the value of ‘0’ from the respective mapping register <b>322</b>, <b>324</b>, <b>326</b>, and <b>328</b> to specify using the null agent for the respective port request <b>306</b>, <b>308</b>, <b>310</b>, and <b>312</b>.</p>
<p id="p-0049" num="0048"><figref idref="DRAWINGS">FIG. 9</figref> shows an embodiment of the priority selection logic including port selector module <b>112</b> and priority ranking module <b>114</b>. Port requests req-a (<b>350</b>), req-b (<b>352</b>), req-c (<b>354</b>), and req-d (<b>356</b>) from the request mapping logic are input into the port selector module <b>112</b> which generates port acknowledges ack-a (<b>360</b>), ack-b (<b>362</b>), ack-c (<b>364</b>), and ack-d (<b>366</b>). Port selector module <b>112</b> uses the priority values in priority registers priority-<b>1</b> (<b>368</b>), priority-<b>2</b> (<b>370</b>), priority-<b>3</b> (<b>372</b>), and priority-<b>4</b> (<b>374</b>) to determine which of the active requests have priority. The port selector module <b>112</b> first checks priority register priority-<b>1</b> (<b>368</b>) containing the value of ‘b’ indicating that req-b (<b>352</b>) from port-b has the top priority rank of one. The port selector module <b>112</b> determines that req-b (<b>352</b>) is not active with a value of ‘0’, so port-b is not selected with ack-b (<b>362</b>) given the value of ‘0’. The port selector module <b>112</b> next checks priority register priority-<b>2</b> (<b>370</b>) containing the value of ‘c’ indicating that req-c (<b>354</b>) from port-c has the next highest priority rank of two. The port selector module <b>112</b> determines that req-c (<b>354</b>) is active with a value of ‘1’, so port-c is selected with ack-c (<b>364</b>) given the value of ‘1’. The remaining active requests of req-a (<b>350</b>) and req-d (<b>356</b>) are ignored at this time and ack-a (<b>360</b>) and ack-d (<b>36</b>)<b>6</b> are each given a value of ‘0’.</p>
<p id="p-0050" num="0049">The priority ranking module <b>114</b> comprises the priority registers priority-<b>1</b> (<b>368</b>), priority-<b>2</b> (<b>370</b>), priority-<b>3</b> (<b>372</b>), and priority-<b>4</b> (<b>374</b>) and the selectors sel-<b>1</b> (<b>376</b>), sel-<b>2</b> (<b>378</b>), sel-<b>3</b> (<b>380</b>), and sel-<b>4</b> (<b>382</b>). The port selector module <b>112</b> steers the selectors sel-<b>1</b> (<b>376</b>), sel-<b>2</b> (<b>378</b>), sel-<b>3</b> (<b>380</b>), and sel-<b>4</b> (<b>382</b>) to update priority register values in priority-<b>1</b> (<b>368</b>), priority-<b>2</b> (<b>370</b>), priority-<b>3</b> (<b>372</b>), and priority-<b>4</b> (<b>374</b>). Because the selected port was at priority rank two, the priority registers above rank two should not be modified, so sel-<b>1</b> (<b>376</b>) is steered to re-circulate the value of priority-<b>1</b> (<b>368</b>). Because the priority registers below rank two should move up one priority level, sel-<b>2</b> (<b>378</b>) is steered to move the value from priority-<b>3</b> (<b>372</b>) to priority-<b>2</b> (<b>370</b>) and sel-<b>3</b> (<b>380</b>) is steered to move the value from priority-<b>4</b> (<b>374</b>) to priority-<b>3</b> (<b>372</b>). Because the priority register at rank two should be moved to the lowest priority rank of four, sel-<b>4</b> (<b>382</b>) is steered to move the value from priority-<b>2</b> (<b>370</b>) to priority-<b>4</b> (<b>374</b>).</p>
<p id="p-0051" num="0050">This embodiment shows a register <b>368</b>, <b>370</b>, <b>372</b>, and <b>374</b> for each priority level with the value contained in each register being a port identifier. It will be appreciated that an equivalent function may be obtained by an embodiment having a register for each port with the value contained in each register being the priority rank for the port.</p>
<p id="p-0052" num="0051"><figref idref="DRAWINGS">FIG. 10</figref> shows an embodiment of the acknowledgement mapping logic. The port acknowledges ack-a (<b>400</b>), ack-b (<b>402</b>), ack-c (<b>404</b>), and ack-d (<b>406</b>) from the priority selection logic are inputs to the acknowledgment mapping logic and the outputs are the arbitration acknowledgements ack-<b>1</b> (<b>408</b>), ack-<b>2</b> (<b>410</b>), and ack-<b>3</b> (<b>412</b>). The acknowledgement mapping logic may use the values of the request mapping registers a-map <b>322</b>, b-map <b>324</b>, c-map <b>326</b> and d-map <b>328</b> input from the request mapping logic to steer the selectors sel-<b>1</b> (<b>422</b>), sel-<b>2</b> (<b>424</b>) and sel-<b>3</b> (<b>426</b>). Using the request mapping registers to control the acknowledgement mapping has the advantage that the request mapping and acknowledgement mapping are consistent with each other. The selectors sel-<b>1</b> (<b>422</b>), sel-<b>2</b> (<b>424</b>) and sel-<b>3</b> (<b>426</b>) should not be multiplexers. Because the selector sel-<b>1</b> (<b>422</b>) has two mapping register inputs with value ‘1’, a-map <b>322</b> and c-map <b>326</b>, selector sel-<b>1</b> (<b>422</b>) generates an active ack-<b>1</b> (<b>408</b>) when either ack-a (<b>400</b>) or ack-c (<b>404</b>) are active. In this example, only ack-c (<b>404</b>) is active with a value of ‘1’ so ack-<b>1</b> (<b>408</b>) is given a value of ‘1’ by selector sel-<b>1</b> (<b>422</b>). Generally, only one active port acknowledgement is generated by the priority selection logic. The remaining selectors, sel-<b>2</b> (<b>424</b>) and sel-<b>3</b> (<b>426</b>) respectively steer the remaining inactive port acknowledgements ack-b (<b>402</b>) and ack-d (<b>406</b>) to the remaining arbitration acknowledgements ack-<b>2</b> (<b>410</b>) and ack-<b>3</b> (<b>412</b>). It will be appreciated that when a null agent is mapped by the request mapping to a particular request port, the corresponding port acknowledge is not steered by any of the selectors in the acknowledgement mapping logic.</p>
<p id="p-0053" num="0052"><figref idref="DRAWINGS">FIG. 11</figref> shows is a schematic diagram of an alternative embodiment of the arbitration module that merges the logic for mapping and priority selection. The arbitration requests req-<b>1</b> (<b>450</b>), req-<b>2</b> (<b>452</b>) and req-<b>3</b> (<b>454</b>) are inputs and the arbitration acknowledgements ack-<b>1</b> (<b>456</b>), ack-<b>2</b> (<b>458</b>) and ack-<b>3</b> (<b>460</b>) are outputs. A priority encoder <b>462</b> is used for priority selection. In contrast to previously discussed priority selection logic, priority encoder <b>462</b> has port request inputs req-w (<b>464</b>), req-x (<b>466</b>), req-y (<b>468</b>), and req-z (<b>470</b>) that have fixed priority ranks, such that req-w (<b>464</b>) is always the highest priority port request input at rank one, req-w (<b>466</b>) is the rank two input, req-y (<b>468</b>) is the rank three input, and req-z (<b>470</b>) is the rank four input. The priority encoder <b>462</b> generates the port acknowledgements ack-w (<b>472</b>), ack-x (<b>474</b>), ack-y (<b>476</b>), and ack-z (<b>478</b>). The active port acknowledgement generated by the priority encoder <b>462</b> corresponds to the highest priority port request, if any. In this example, req-w (<b>464</b>) is not active so ack-w (<b>472</b>) is given an inactive value of ‘0’ by the priority encoder <b>462</b>. In this example, req-x (<b>466</b>) is active so ack-x (<b>474</b>) is given an active value of ‘1’ by the priority encoder <b>462</b>. The remaining port requests req-y (<b>468</b>), req-z (<b>470</b>) are ignored by the priority encoder <b>462</b> at this time and the remaining port acknowledgements ack-y (<b>476</b>) and ack-z (<b>478</b>) are hence given an inactive value by the priority encoder <b>462</b>.</p>
<p id="p-0054" num="0053">The AND/OR gates <b>480</b> are request mapping selectors and the AND/OR gates <b>482</b> are acknowledgement mapping selectors. The mappings by the AND/OR gates <b>480</b> and AND/OR gates <b>482</b> is controlled by the mapping/priority registers <b>484</b>. Each of the mapping/priority registers <b>484</b> stores one control bit. The mapping/priority registers <b>484</b> are arranged in a logical array of rows and columns. Each row of the mapping/priority registers <b>484</b> controls the steering of a respective request mapping selector <b>480</b>. Each row of the mapping/priority registers <b>484</b> corresponds roughly to one of the previously discussed request mapping registers, but with decoded values. The decoded values in the mapping/priority registers <b>484</b> often have exactly one active bit in each row, but may instead have no active bits when a null agent is mapped to the port request of that row. Each column of the mapping/priority registers <b>484</b> controls the steering of a respective acknowledgement mapping selector <b>482</b>. A column of the mapping/priority registers <b>484</b> does contain more than one active bit for an arbitration acknowledgment selector <b>482</b> corresponding to an agent that is mapped to multiple ports.</p>
<p id="p-0055" num="0054">The rows of the mapping/priority registers <b>484</b> also correspond roughly to the previously discussed priority registers. Each row of the mapping/priority registers <b>484</b> corresponds to an absolute priority rank with the top rank one being the top row. In this example arbitration request req-<b>1</b> (<b>450</b>) is active and is mapped to the rank two port request of req-x (<b>466</b>) by row two of the mapping/priority registers <b>484</b>. Because req-x (<b>466</b>) at rank two is selected by the priority encoder <b>462</b>, the mapping/priority registers <b>484</b> are updated by not modifying the values of the rows above row two, moving the values of the rows below row two up one row, and by moving the values of row two to the bottom row. The movement of values for the mapping/priority registers <b>484</b> is performed by a respective selector <b>486</b> in front of each mapping/priority register <b>484</b>. The selectors <b>486</b> are controlled by logic in the priority encoder <b>462</b> with the control paths not shown.</p>
<p id="p-0056" num="0055"><figref idref="DRAWINGS">FIG. 12</figref> is shows a schematic diagram of an alternative embodiment of the request mapping logic illustrating the programming paths for the request mapping logic. In this embodiment, the mapping registers a-map <b>500</b>, b-map <b>502</b>, c-map <b>504</b>, and d-map <b>506</b> can have programmed values. These programmed values may be set statically upon system power-up or the values may be dynamically determined during system operation.</p>
<p id="p-0057" num="0056">A programmable value for the mapping allows the arbitration weight of each agent to be modified. The arbitration weights of each agent may be modified for reasons such as improving system performance. It may be known that the transaction mix for one customer of a system is optimized by a particular weighting while the transaction mix for another customer of the same system is optimized by a different weighting. The performance optimizing weights for each customer may be established by statically programming the mapping register values on system power-up. For another embodiment characteristics of the transaction mix may be dynamically measured by performance monitor <b>512</b> and operating system software <b>514</b>, or some other performance measurement technique may be used to dynamically modify the arbitration weight of each agent by programming the values of the mapping registers <b>500</b>, <b>502</b>, <b>504</b>, and <b>506</b>.</p>
<p id="p-0058" num="0057">Statically programmed values may be set by a serial scan that is performed upon system power-up by maintenance processor <b>516</b>. The serial scan shifts data from the scan-in input <b>508</b> through a scan chain of each of the mapping registers a-map <b>500</b>, b-map <b>502</b>, c-map <b>504</b>, and d-map <b>506</b>. It will be appreciated that the individual bits of the mapping registers may occur in any order in the scan chain and that these bits may be mixed with bits from other scannable registers. In addition, dynamically programmed values may be set by a parallel load into mapping registers a-map <b>500</b>, b-map <b>502</b>, c-map <b>504</b>, and d-map <b>506</b> from the maps bus input <b>510</b>. It will be appreciated that either path of serial scan from scan-in <b>508</b> or parallel load from the maps bus <b>510</b> may be used to set up either statically or dynamically programmed values for the mapping registers a-map <b>500</b>, b-map <b>502</b>, c-map <b>504</b>, and d-map <b>506</b>.</p>
<p id="p-0059" num="0058">The foregoing description of the exemplary embodiment of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. For example arbitration for a resource group of a cache control pipeline with 5 agents mapped to 8 ports where the agents comprise 2 Intel front side buses and a memory controller and where the mapping is statically programmable by serial scan on power-up to optimize performance for the transaction mix of the customer. It is intended that the scope of the invention be limited not with this detailed description, but rather defined by the claims appended hereto.</p>
<?DETDESC description="Detailed Description" end="tail"?>
</description>
<us-claim-statement>What is claimed is:</us-claim-statement>
<claims id="claims">
<claim id="CLM-00001" num="00001">
<claim-text>1. An apparatus for arbitrating for access to a resource group between a plurality of agents, comprising:
<claim-text>a programmable mapping module that, for each of the agents, selectively couples a respective arbitration handshake signal of the agent to one or more of a plurality of arbitration ports responsive to a respective programmable weight for the agent, wherein the one or more arbitration ports to which the agent is coupled corresponds in number to the respective programmable weight;</claim-text>
<claim-text>a selection module coupled to the arbitration ports of the mapping module, wherein the selection module selects one of the arbitration ports in response to a priority ranking of the arbitration ports, and one of the agents having the respective arbitration handshake signal that is selectively coupled by the programmable mapping module to the selected one of the arbitration ports is granted access to the resource group; and</claim-text>
<claim-text>a ranking module coupled to the selection module, wherein the ranking module provides the priority ranking of the arbitration ports and updates the priority ranking in response to the selection module selecting the one of the arbitration ports.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00002" num="00002">
<claim-text>2. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the arbitration ports are greater in number than the agents are in number.</claim-text>
</claim>
<claim id="CLM-00003" num="00003">
<claim-text>3. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the resource group is a pipeline that executes a sequence that includes a plurality of transactions, and for each transaction, the selection module selects one of the arbitration ports, and one of the agents coupled to the selected one of the arbitration ports is granted access to issue the transaction to the pipeline.</claim-text>
</claim>
<claim id="CLM-00004" num="00004">
<claim-text>4. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the programmable mapping module is programmable to selectively couple the respective arbitration handshake signal of each agent to each of the arbitration ports.</claim-text>
</claim>
<claim id="CLM-00005" num="00005">
<claim-text>5. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the programmable mapping module includes a request-mapping module and an acknowledgement-mapping module, the request-mapping module configured to map the respective request for each of the agents to a request of each of the at least one of the arbitration ports for the agent, and the acknowledgement-mapping module configured to map the respective acknowledgement signal for each of the agents from a combination of an acknowledgement signal from each of the at least one of the arbitration ports for the agent.</claim-text>
</claim>
<claim id="CLM-00006" num="00006">
<claim-text>6. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein each of the arbitration ports indicates whether the arbitration port is requesting access to the resource group, and, in response to at least one of the arbitration ports requesting access to the resource group, the selection module selects the one of the arbitration ports that is highest in the priority ranking among the at least one of the arbitration ports that is requesting access to the resource group.</claim-text>
</claim>
<claim id="CLM-00007" num="00007">
<claim-text>7. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein each of the arbitration ports indicates whether the arbitration port is granting access to the resource group, and the selection module indicates the one of the arbitration ports is granting access to the resource group and each arbitration port other than the one of the arbitration ports is not granting access to the resource group.</claim-text>
</claim>
<claim id="CLM-00008" num="00008">
<claim-text>8. The apparatus of <claim-ref idref="CLM-00001">claim 1</claim-ref>, wherein the ranking module updates the priority ranking of the arbitration ports and assigns a lowest priority ranking to the selected one of the arbitration ports.</claim-text>
</claim>
<claim id="CLM-00009" num="00009">
<claim-text>9. A method for programmable allocation of a sequence including a plurality of accesses to a resource group among a plurality of agents, comprising:
<claim-text>mapping each agent to at least one of a plurality of arbitration ports according to a programmable map that includes a respective programmable weight for each agent, wherein the one or more arbitration ports to which the agent is mapped corresponds in number to the respective programmable weight, and the arbitration ports are greater in number than the agents are in number;</claim-text>
<claim-text>determining an allocation of the sequence of the accesses to the resource group among the arbitration ports using a priority ranking of the arbitration ports;</claim-text>
<claim-text>dynamically determining the priority ranking of the arbitration ports, and updating the priority ranking for each of the accesses to the resource group of the sequence; and</claim-text>
<claim-text>reverse mapping the allocation of the sequence of the accesses from the arbitration ports to the agents according to the programmable map.</claim-text>
</claim-text>
</claim>
<claim id="CLM-00010" num="00010">
<claim-text>10. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising accessing the resource group by the agents as specified by the reverse mapping of the allocation of the sequence of the accesses from the arbitration ports to the agents.</claim-text>
</claim>
<claim id="CLM-00011" num="00011">
<claim-text>11. The method of <claim-ref idref="CLM-00010">claim 10</claim-ref>, wherein the resource group is a pipeline and the accessing the resource group includes, for each access of the sequence, issuing a transaction to the pipeline by one of the agents specified by the reverse mapping of an arbitration port of the access for the allocation.</claim-text>
</claim>
<claim id="CLM-00012" num="00012">
<claim-text>12. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the mapping each agent to at least one of the arbitration ports according to the programmable map includes mapping a null requester that never requests access to the resource group to at least one of the arbitration ports.</claim-text>
</claim>
<claim id="CLM-00013" num="00013">
<claim-text>13. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the mapping includes mapping a respective request for access to the resource group from each agent to a corresponding request for access to the resource group for each of the at least one of the arbitration ports, and the determining the allocation of the sequence of the accesses to the resource group includes allocating equal portions of the sequence of the accesses to each of the arbitration ports requesting access to the resource group.</claim-text>
</claim>
<claim id="CLM-00014" num="00014">
<claim-text>14. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the equal portions of the sequence of the accesses are equal numbers of the accesses of the sequence, with each access of the sequence having a duration of accessing the resource group that is dependent on a type of the access.</claim-text>
</claim>
<claim id="CLM-00015" num="00015">
<claim-text>15. The method of <claim-ref idref="CLM-00013">claim 13</claim-ref>, wherein the determining the allocation of the sequence of the accesses to the resource group further includes successively allocating each access of the sequence to one of the arbitration ports that is highest in the priority ranking among all of the arbitration ports requesting access to the resource group, and the dynamically determining the priority ranking of the arbitration ports includes updating the priority ranking to make the one of the arbitration ports have the lowest priority in the priority ranking.</claim-text>
</claim>
<claim id="CLM-00016" num="00016">
<claim-text>16. The method of <claim-ref idref="CLM-00015">claim 15</claim-ref>, wherein, for each access of the sequence, the reverse mapping of the one of the arbitration ports specifies a corresponding one of the agents having the access to the resource group and in response the one of the agents updates the respective request for access to the resource group.</claim-text>
</claim>
<claim id="CLM-00017" num="00017">
<claim-text>17. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, further comprising programming the programmable map and thereby setting the respective programmable weight for each agent.</claim-text>
</claim>
<claim id="CLM-00018" num="00018">
<claim-text>18. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the programming the programmable map is done one of statically for an expected behavior of the sequence of the accesses to the resource group and dynamically in response to a measured behavior from a performance analyzer of the sequence of the accesses to the resource group.</claim-text>
</claim>
<claim id="CLM-00019" num="00019">
<claim-text>19. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the programming the programmable map includes setting the respective programmable weight for each agent by a maintenance processor using scan registers.</claim-text>
</claim>
<claim id="CLM-00020" num="00020">
<claim-text>20. The method of <claim-ref idref="CLM-00017">claim 17</claim-ref>, wherein the programming the programmable map includes setting the respective programmable weight for each agent by software executing on a system that includes the resource group.</claim-text>
</claim>
<claim id="CLM-00021" num="00021">
<claim-text>21. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the dynamically determining the priority ranking of the arbitration ports includes maintaining a register for each of a plurality of priority levels, each register storing a respective number of one of the arbitration ports having a corresponding one the priority levels.</claim-text>
</claim>
<claim id="CLM-00022" num="00022">
<claim-text>22. The method of <claim-ref idref="CLM-00009">claim 9</claim-ref>, wherein the dynamically determining the priority ranking of the arbitration ports includes maintaining a register for each of the arbitration ports, each register storing a respective one of a plurality of priority levels for the corresponding arbitration port.</claim-text>
</claim>
<claim id="CLM-00023" num="00023">
<claim-text>23. A system for arbitrating for access to a resource group between a plurality of agents according to a respective programmable weight for each of the agents, the system comprising:
<claim-text>means for programmably mapping each agent to at least one of a plurality of arbitration ports, wherein the respective programmable weight for the agent determines a number of the at least one of the arbitration ports to which the agent is mapped;</claim-text>
<claim-text>means for allocating a sequence of accesses to the resource group among the arbitration ports using a priority ranking of the arbitration ports;</claim-text>
<claim-text>means for dynamically updating the priority ranking of the arbitration ports for each access to the resource group of the sequence; and</claim-text>
<claim-text>means for reverse mapping the allocating of the sequence of the accesses from the arbitration ports to the agents.</claim-text>
</claim-text>
</claim>
</claims>
</us-patent-grant>
